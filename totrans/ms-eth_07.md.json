["```\nbrew update && brew upgrade\nbrew tap ethereum/ethereum\nbrew install ethereum\n```", "```\nsudo apt-get install software-properties-common\nsudo add-apt-repository -y ppa:ethereum/ethereum \nsudo apt-get update && sudo apt-get upgrade\nsudo apt-get install ethereum\n```", "```\ntruffle init\n```", "```\nnpm i -g npm@latest\n```", "```\nnpm i -S webpack webpack-cli\n```", "```\nnpm i -S @babel/core @babel/preset-env @babel/preset-react babel-loader\n```", "```\nnpm i -S react react-dom\n```", "```\nconst path = require('path')\n\nmodule.exports = {\n    entry: './src/index.js',\n    output: {\n        filename: 'bundle.js',\n        path: path.join(__dirname, 'dist')\n    },\n    module: {\n        rules: [\n            {\n                test: /\\.js$/,\n                exclude: /node_modules/,\n                use: {\n                    loader: 'babel-loader'\n                }\n            }\n        ]\n    }\n}\n```", "```\nnpm i -S html-webpack-plugin html-loader\n```", "```\nconst html = require('html-webpack-plugin')\nconst path = require('path')\n\nmodule.exports = {\n    entry: './src/index.js',\n    output: {\n        filename: 'bundle.js',\n        path: path.join(__dirname, 'dist')\n    },\n    module: {\n        rules: [\n            {\n                test: /\\.js$/,\n                exclude: /node_modules/,\n                use: {\n                    loader: 'babel-loader'\n                }\n            }\n        ]\n    },\n    plugins: [\n        new html({\n            template: './src/index.html',\n            filename: './index.html'\n        })\n    ]\n}\n```", "```\n<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\">\n    <head>\n        <meta charset=\"utf-8\">\n        <title>Startup</title>\n    </head>\n    <body>\n        <div id=\"root\"></div>\n    </body>\n</html>\n```", "```\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nclass Main extends React.Component {\n    constructor() {\n        super()\n    }\n\n    render() {\n        return (\n            <div>The project has been setup.</div>\n        )\n    }\n}\n\nReactDOM.render(<Main />, document.querySelector('#root'))\n```", "```\nwebpack -p\n```", "```\nnpm i -g http-server\n```", "```\nhttp-server dist/\n```", "```\ngit config remote.origin.url https://<YOUR-USERNAME>:<YOUR-PASSWORD>@github.com/<YOUR-USERNAME>/dapp\n```", "```\ngit pull\n```", "```\npragma solidity 0.5.0;\n\ncontract SocialMusic {\n\n}\n```", "```\npragma solidity 0.5.0;\n\ncontract SocialMusic {\n    struct User {\n        bytes32 name;\n        uint256 age;\n        string state; // A short description of who they are or how they feel\n        string[] musicRecommendations;\n        address[] following;\n    }\n    mapping(address => User) public users;\n}\n```", "```\npragma solidity 0.5.0;\n\ncontract SocialMusic {\n struct User {\n bytes32 name;\n uint256 age;\n string state; // A short description of who they are or how they feel\n string[] musicRecommendations;\n address[] following;\n }\n mapping(address => User) public users;\n\n    // To add a new musical recommendation\n    function addSong(string memory _songName) public {\n        require(bytes(_songName).length > 0 && bytes(_songName).length <= 100);\n        users[msg.sender].musicRecommendations.push(_songName);\n    }\n}\n```", "```\npragma solidity 0.5.0;\n\ncontract SocialMusic {\n    struct User {\n        bytes32 name;\n        uint256 age;\n        string state; // A short description of who they are or how they feel\n        string[] musicRecommendations;\n        address[] following;\n    }\n    mapping(address => User) public users;\n\n    // To add a new musical recommendation\n    function addSong(string memory _songName) public {\n        require(bytes(_songName).length > 0 && bytes(_songName).length <= 100);\n        users[msg.sender].musicRecommendations.push(_songName);\n    }\n\n    // To setup user information\n    function setup(bytes32 _name, uint256 _age, string memory _state) public {\n        require(_name.length > 0);\n        User memory newUser = User(_name, _age, _state, users[msg.sender].musicRecommendations, users[msg.sender].following);\n        users[msg.sender] = newUser;\n    }\n}\n```", "```\n// To follow new users\nfunction follow(address _user) public {\n    require(_user != address(0));\n    users[msg.sender].following.push(_user);\n}\n```", "```\n    ropsten: {\n      provider: () => new HDWalletProvider(mnemonic, `https://ropsten.infura.io/${infuraKey}`),\n      network_id: 3, // Ropsten's id\n      gas: 5500000, // Ropsten has a lower block limit than mainnet\n      confirmations: 2, // # of confs to wait between deployments. (default: 0)\n      timeoutBlocks: 200, // # of blocks before a deployment times out (minimum/default: 50)\n      skipDryRun: true // Skip dry run before migrations? (default: false for public nets )\n    },\n```", "```\nconst HDWalletProvider = require('truffle-hdwallet-provider');\nconst infuraKey = \"fj4jll3k.....\";\n\nconst fs = require('fs');\nconst mnemonic = fs.readFileSync(\".secret\").toString().trim();\n```", "```\nconst infuraKey = \"v3/8e12dd4433454738a522d9ea7ffcf2cc\";\n```", "```\nnpm i -S truffle-hdwallet-provider\n```", "```\nconst SocialMusic = artifacts.require(\"./SocialMusic.sol\")\n\nmodule.exports = function(deployer) {\n  deployer.deploy(SocialMusic)\n}\n```", "```\ntruffle deploy --network ropsten --reset\n```", "```\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nclass Main extends React.Component {\n    constructor() {\n        super()\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Welcome to Decentralized Social Music!</h1>\n                <p>Setup your account, start adding musical recommendations for your friends and follow people that may interest you</p>\n                <div className=\"buttons-container\">\n                    <button>Setup Account</button>\n                    <button>Add Music</button>\n                    <button>Follow People</button>\n                </div>\n                <h3>Latest musical recommendations from people using the dApp</h3>\n                <div ref=\"general-recommendations\"></div>\n            </div>\n        )\n    }\n}\n\nReactDOM.render(<Main />, document.querySelector('#root'))\n```", "```\n{\n    test: /\\.css$/,\n    exclude: /node_modules/,\n    use: [\n        {loader: 'style-loader'},\n        {loader: 'css-loader'}\n    ]\n}\n```", "```\nnpm i -S style-loader css-loader\n```", "```\nbody {\n    margin: 0;\n    font-family: sans-serif;\n    text-align: center;\n}\n\nbutton {\n    border-radius: 10px;\n    padding: 20px;\n    color: white;\n    border: none;\n    background-color: rgb(69, 115, 233);\n    cursor: pointer;\n}\n\nbutton:hover {\n    opacity: 0.7;\n}\n\n.buttons-container button:not(:last-child){\n    margin-right: 5px;\n}\n```", "```\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\n\nclass Main extends React.Component {\n    constructor() {\n        super()\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Welcome to Decentralized Social Music!</h1>\n                <p>Setup your account, start adding musical recommendations for your friends and follow people that may interest you</p>\n                <div className=\"buttons-container\">\n                    <button>Setup Account</button>\n                    <button>Add Music</button>\n                    <button>Follow People</button>\n                </div>\n                <h3>Latest musical recommendations from people using the dApp</h3>\n                <div ref=\"general-recommendations\">\n                    <Recommendation\n                        name=\"John\"\n                        address=\"0x5912d3e530201d7B3Ff7e140421F03A7CDB386a3\"\n                        song=\"Regulate - Nate Dogg\"\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nclass Recommendation extends React.Component {\n    constructor() {\n        super()\n    }\n\n    render() {\n        return (\n            <div className=\"recommendation\">\n                <div className=\"recommendation-name\">{this.props.name}</div>\n                <div className=\"recommendation-address\">{this.props.address}</div>\n                <div className=\"recommendation-song\">{this.props.song}</div>\n            </div>\n        )\n    }\n}\n\nReactDOM.render(<Main />, document.querySelector('#root'))\n```", "```\n.recommendation {\n    width: 40%;\n    margin: auto;\n    background-color: whitesmoke;\n    border-radius: 20px;\n    margin-bottom: 10px;\n    padding: 40px;\n}\n\n.recommendation-name, .recommendation-address {\n    display: inline-block;\n    color: #444444;\n    font-style: italic;\n}\n\n.recommendation-name {\n    margin-right: 10px;\n}\n\n.recommendation-address {\n    color: rgb(156, 156, 156);\n}\n\n.recommendation-song {\n    font-weight: bolder;\n    font-size: 16pt;\n    margin-top: 10px;\n}\n```", "```\nnpm i -S web3\n```", "```\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport web3 from 'web3'\nimport './index.css'\n```", "```\nclass Form extends React.Component {\n    constructor() {\n        super()\n    }\n\n    render() {\n        return (\n            <form className={this.props.className}>\n                <input type=\"text\" ref=\"form-name\" placeholder=\"Your name\" />\n                <input type=\"number\" ref=\"form-age\" placeholder=\"Your age\" />\n                <textarea ref=\"form-state\" placeholder=\"Your state, a description about yourself\"></textarea>\n                <div>\n                    <button>Cancel</button>\n                    <button>Submit</button> \n                </div>\n            </form>\n        )\n    }\n}\n```", "```\nclass Main extends React.Component {\n    constructor() {\n        super()\n\n        this.state = {\n            isFormHidden: true\n        }\n    }\n}\n```", "```\nrender() {\n  return (\n      <div>\n          <h1>Welcome to Decentralized Social Music!</h1>\n          <p>Setup your account, start adding musical recommendations for your friends and follow people that may interest you</p>\n          <div className=\"buttons-container\">\n              <button>Setup Account</button>\n              <button>Add Music</button>\n              <button>Follow People</button>\n          </div>\n\n          <Form className={this.state.isFormHidden ? 'hidden' : ''} />\n\n          <h3>Latest musical recommendations from people using the dApp</h3>\n          <div ref=\"general-recommendations\">\n              <Recommendation\n                  name=\"John\"\n                  address=\"0x5912d3e530201d7B3Ff7e140421F03A7CDB386a3\"\n                  song=\"Regulate - Nate Dogg\"\n              />\n              <Recommendation\n                  name=\"Martha\"\n                  address=\"0x1034403ad2f8e9da55272CEA16ec1f2cBdae0E5c\"\n                  song=\"X - Xzibit\"\n              />\n          </div>\n      </div>\n  )\n}\n```", "```\n.hidden {\n    display: none;\n}\n```", "```\n<button onClick={() => {\n    if(this.state.isFormHidden) this.setState({isFormHidden: false})\n    else this.setState({isFormHidden: true})\n}}>Setup Account</button>\n```", "```\n<form className={this.props.className}>\n    <input className=\"form-input\" type=\"text\" ref=\"form-name\" placeholder=\"Your name\" />\n    <input className=\"form-input\" type=\"number\" ref=\"form-age\" placeholder=\"Your age\" />\n    <textarea className=\"form-input form-textarea\" ref=\"form-state\" placeholder=\"Your state, a description about yourself\"></textarea>\n\n    <div>\n        <button className=\"cancel-button\">Cancel</button>\n        <button>Submit</button>\n    </div>\n</form>\n```", "```\n.form-input {\n    display: block;\n    width: 200px;\n    border-radius: 20px;\n    padding: 20px;\n    border: 1px solid #444444;\n    margin: 10px auto;\n}\n\n.form-textarea {\n    height: 200px;\n}\n\n.cancel-button {\n    margin-right: 10px;\n}\n```", "```\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport web3 from 'web3'\nimport './index.css'\nimport ABI from './SocialMusic.json'\n```", "```\nclass Main extends React.Component {\n    constructor() {\n        super()\n\n        const contractAddress = '0x0217ED41bC271a712f91477c305957Da44f91068'\n        const abi = ABI.abi\n\n        this.state = {\n            isFormHidden: true\n        }\n    }\n    ...\n}\n```", "```\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport myWEB3 from 'web3'\nimport './index.css'\nimport ABI from './SocialMusic.json'\n\nclass Main extends React.Component {\n    constructor() {\n        super()\n\n        window.myWeb3 = new myWEB3(myWEB3.givenProvider)\n        const contractAddress = '0x0217ED41bC271a712f91477c305957Da44f91068'\n        const abi = ABI.abi\n\n        this.state = {\n            isFormHidden: true\n        }\n    }\n...\n```", "```\nnpm i -S babel-polyfill\n```", "```\nrequire('babel-polyfill')\nconst html = require('html-webpack-plugin')\nconst path = require('path')\n\nmodule.exports = {\n    entry: ['babel-polyfill', './src/index.js'],\n    output: {\n        filename: 'bundle.js',\n        path: path.join(__dirname, 'dist')\n    },\n...\n```", "```\nconstructor() {\n    super()\n\n    window.myWeb3 = new myWEB3(myWEB3.givenProvider)\n    this.state = {\n        isFormHidden: true\n    }\n\n    this.setContractInstance()\n}\n```", "```\nasync getAccount() {\n return (await myWeb3.eth.getAccounts())[0]\n}\n\nasync setContractInstance() {\n    const contractAddress = '0x0217ED41bC271a712f91477c305957Da44f91068'\n    const abi = ABI.abi\n    const contractInstance = new myWeb3.eth.Contract(abi, contractAddress, {\n        from: await this.getAccount(),\n        gasPrice: 2e9\n    })\n    await this.setState({contractInstance: contractInstance})\n}\n\nasync setupAccount(name, age, status) {\n    await this.state.contractInstance.methods.setup(this.fillBytes32WithSpaces(name), age, status).send({from: '0x2f6ccd575FA71e2912a31b65F7aFF45C8bf91155'})\n}\n\nfillBytes32WithSpaces(name) {\n    let nameHex = myWeb3.utils.toHex(name)\n    for(let i = nameHex.length; i < 66; i++) {\n        nameHex = nameHex + '0'\n    }\n    return nameHex\n}\n```", "```\nrender() {\n    return (\n        <div>\n            <h1>Welcome to Decentralized Social Music!</h1>\n            <p>Setup your account, start adding musical recommendations for your friends and follow people that may interest you</p>\n            <div className=\"buttons-container\">\n                <button onClick={() => {\n                    if(this.state.isFormHidden) this.setState({isFormHidden: false})\n                    else this.setState({isFormHidden: true})\n                }}>Setup Account</button>\n                <button>Add Music</button>\n                <button>Follow People</button>\n            </div>\n\n            <Form\n                className={this.state.isFormHidden ? 'hidden' : ''}\n                cancel={() => {\n                    this.setState({isFormHidden: true})\n                }}\n                setupAccount={(name, age, status) => {\n                    this.setupAccount(name, age, status)\n                }}\n            />\n\n            <h3>Latest musical recommendations from people using the dApp</h3>\n            <div ref=\"general-recommendations\">\n                <Recommendation\n                    name=\"John\"\n                    address=\"0x5912d3e530201d7B3Ff7e140421F03A7CDB386a3\"\n                    song=\"Regulate - Nate Dogg\"\n                />\n                <Recommendation\n                    name=\"Martha\"\n                    address=\"0x1034403ad2f8e9da55272CEA16ec1f2cBdae0E5c\"\n                    song=\"X - Xzibit\"\n                />\n            </div>\n        </div>\n    )\n}\n```", "```\nclass Form extends React.Component {\n    constructor() {\n        super()\n    }\n\n    render() {\n        return (\n            <form className={this.props.className}>\n                <input className=\"form-input\" type=\"text\" ref=\"form-name\" placeholder=\"Your name\" />\n                <input className=\"form-input\" type=\"number\" ref=\"form-age\" placeholder=\"Your age\" />\n                <textarea className=\"form-input form-textarea\" ref=\"form-state\" placeholder=\"Your state, a description about yourself\"></textarea>\n                <div>\n                    <button onClick={event => {\n                        event.preventDefault()\n                        this.props.cancel()\n                    }} className=\"cancel-button\">Cancel</button>\n                    <button onClick={event => {\n                        event.preventDefault()\n                        this.props.setupAccount(this.refs['form-name'].value, this.refs['form-age'].value, this.refs['form-state'].value)\n                    }}>Submit</button>\n                </div>\n            </form>\n        )\n    }\n}\n```", "```\n.send({from: '0x2f6ccd575FA71e2912a31b65F7aFF45C8bf91155'})\n```", "```\n.send()\n```", "```\nconstructor() {\n    super()\n\n    window.myWeb3 = new myWEB3(myWEB3.givenProvider)\n    this.state = {\n        isFormHidden: true,\n        isAddMusicHidden: true\n    }\n\n    this.setContractInstance()\n}\n```", "```\nasync addMusic(music) {\n    await this.state.contractInstance.methods.addSong(music).send({from: '0x2f6ccd575FA71e2912a31b65F7aFF45C8bf91155'})\n}\n```", "```\nrender() {\n    return (\n        <div>\n            <h1>Welcome to Decentralized Social Music!</h1>\n            <p>Setup your account, start adding musical recommendations for your friends and follow people that may interest you</p>\n            <div className=\"buttons-container\">\n                <button onClick={() => {\n                    if(this.state.isFormHidden) this.setState({isFormHidden: false})\n                    else this.setState({isFormHidden: true})\n                }}>Setup Account</button>\n                <button onClick={() => {\n                    if(this.state.isAddMusicHidden) this.setState({isAddMusicHidden: false})\n                    else this.setState({isAddMusicHidden: true})\n                }}>Add Music</button>\n                <button>Follow People</button>\n            </div>\n\n            <Form\n                className={this.state.isFormHidden ? 'hidden' : ''}\n                cancel={() => {\n                    this.setState({isFormHidden: true})\n                }}\n                setupAccount={(name, age, status) => {\n                    this.setupAccount(name, age, status)\n                }}\n            />\n\n            <AddMusic\n                className={this.state.isAddMusicHidden ? 'hidden': ''}\n                cancel={() => {\n                    this.setState({isAddMusicHidden: true})\n                }}\n                addMusic={music => {\n                    this.addMusic(music)\n                }}\n            />\n\n            <h3>Latest musical recommendations from people using the dApp</h3>\n            <div ref=\"general-recommendations\">\n                <Recommendation\n                    name=\"John\"\n                    address=\"0x5912d3e530201d7B3Ff7e140421F03A7CDB386a3\"\n                    song=\"Regulate - Nate Dogg\"\n                />\n                <Recommendation\n                    name=\"Martha\"\n                    address=\"0x1034403ad2f8e9da55272CEA16ec1f2cBdae0E5c\"\n                    song=\"X - Xzibit\"\n                />\n            </div>\n        </div>\n    )\n}\n```", "```\nclass AddMusic extends React.Component {\n    constructor() {\n        super()\n    }\n\n    render() {\n        return(\n            <div className={this.props.className}>\n                <input type=\"text\" ref=\"add-music-input\" className=\"form-input\" placeholder=\"Your song recommendation\"/>\n                <div>\n                    <button onClick={event => {\n                        event.preventDefault()\n                        this.props.cancel()\n                    }} className=\"cancel-button\">Cancel</button>\n                    <button onClick={event => {\n                        event.preventDefault()\n                        this.props.addMusic(this.refs['add-music-input'].value)\n                    }}>Submit</button>\n                </div>\n            </div>\n        )\n    }\n}\n```", "```\nhideAllSections() {\n    this.setState({\n        isFormHidden: true,\n        isAddMusicHidden: true\n    })\n}\n```", "```\n<button onClick={() => {\n    this.hideAllSections()\n    if(this.state.isFormHidden) this.setState({isFormHidden: false})\n    else this.setState({isFormHidden: true})\n}}>Setup Account</button>\n<button onClick={() => {\n    this.hideAllSections()\n    if(this.state.isAddMusicHidden) this.setState({isAddMusicHidden: false})\n    else this.setState({isAddMusicHidden: true})\n}}>Add Music</button>\n```", "```\npragma solidity 0.5.0;\n\ncontract SocialMusic {\n    struct User {\n        bytes32 name;\n        uint256 age;\n        string state; // A short description of who they are or how they feel\n        string[] musicRecommendations;\n        address[] following;\n    }\n    mapping(address => User) public users;\n    address[] public userList;\n\n    // To add a new musical recommendation\n    function addSong(string memory _songName) public {\n        require(bytes(_songName).length > 0 && bytes(_songName).length <= 100);\n        users[msg.sender].musicRecommendations.push(_songName);\n    }\n\n    // To setup user information\n    function setup(bytes32 _name, uint256 _age, string memory _state) public {\n        require(_name.length > 0);\n        User memory newUser = User(_name, _age, _state, users[msg.sender].musicRecommendations, users[msg.sender].following);\n        users[msg.sender] = newUser;\n        userList.push(msg.sender);\n    }\n\n    // To follow new users\n    function follow(address _user) public {\n        require(_user != address(0));\n        users[msg.sender].following.push(_user);\n    }\n\n    // Returns the array of users\n    function getUsersList() public view returns(address[] memory) {\n        return userList;\n    }\n}\n```", "```\ntruffle deploy --network ropsten --reset\n```", "```\nimport ABI from '../build/contracts/SocialMusic.json'\n\n...\nasync setContractInstance() {\n    const contractAddress = ABI.networks['3'].address\n    const abi = ABI.abi\n    const contractInstance = new myWeb3.eth.Contract(abi, contractAddress, {\n        from: await this.getAccount(),\n        gasPrice: 2e9\n    })\n    await this.setState({contractInstance: contractInstance})\n}\n...\n```", "```\nclass FollowPeopleContainer extends React.Component {\n    constructor() {\n        super()\n    }\n\n    render() {\n        let followData = this.props.followUsersData\n        // Remove the users that you already follow so that you don't see em\n        for(let i = 0; i < followData.length; i++) {\n            let indexOfFollowing = followData[i].following.indexOf(this.props.userAddress)\n            if(indexOfFollowing != -1) {\n                followData = followData.splice(indexOfFollowing, 1)\n            }\n        }\n        return (\n            <div className={this.props.className}>\n                {followData.map(user => (\n                    <FollowPeopleUnit\n                        key={user.address}\n                        address={user.addres}\n                        age={user.age}\n                        name={user.name}\n                        state={user.state}\n                        recommendations={user.recommendations}\n                        following={user.following}\n                        followUser={() => {\n                            this.props.followUser(user.address)\n                        }}\n                    />\n                ))}\n            </div>\n        )\n    }\n}\n\nclass FollowPeopleUnit extends React.Component {\n    constructor() {\n        super()\n    }\n\n    render() {\n        return (\n            <div className=\"follow-people-unit\">\n                <div className=\"follow-people-address\">{this.props.address}</div>\n                <div className=\"follow-people-name\">{myWeb3.utils.toUtf8(this.props.name)}</div>\n                <div className=\"follow-people-age\">{this.props.age}</div>\n                <div className=\"follow-people-state\">\"{this.props.state}\"</div>\n                <div className=\"follow-people-recommendation-container\">\n                    {this.props.recommendations.map((message, index) => (\n                        <div key={index} className=\"follow-people-recommendation\">{message}</div>\n                    ))}\n                </div>\n                <button\n                    className=\"follow-button\"\n                    onClick={() => {\n                        this.props.followUser()\n                    }}\n                >Follow</button>\n            </div>\n        )\n    }\n}\n```", "```\nawait this.state.contractInstance.methods.follow(address).send({from: '0x2f6ccd575FA71e2912a31b65F7aFF45C8bf91155'})\n```", "```\nawait this.state.contractInstance.methods.follow(address).send({from: this.state.userAddress})\n```", "```\npragma solidity 0.5.0;\n\ncontract SocialMusic {\n    struct User {\n        bytes32 name;\n        uint256 age;\n        string state; // A short description of who they are or how they feel\n        string[] musicRecommendations;\n        address[] following;\n    }\n    mapping(address => User) public users;\n    address[] public userList;\n\n    // To add a new musical recommendation\n    function addSong(string memory _songName) public {\n        require(bytes(_songName).length > 0 && bytes(_songName).length <= 100);\n        users[msg.sender].musicRecommendations.push(_songName);\n    }\n\n    // To setup user information\n    function setup(bytes32 _name, uint256 _age, string memory _state) public {\n        require(_name.length > 0);\n        User memory newUser = User(_name, _age, _state, users[msg.sender].musicRecommendations, users[msg.sender].following);\n        users[msg.sender] = newUser;\n        userList.push(msg.sender);\n    }\n\n    // To follow new users\n    function follow(address _user) public {\n        require(_user != address(0));\n        users[msg.sender].following.push(_user);\n    }\n\n    // Returns the array of users\n    function getUsersList() public view returns(address[] memory) {\n        return userList;\n    }\n\n    // Returns the music recommendations\n    function getUsersMusicRecommendation(address _user, uint256 _recommendationIndex) public view returns(string memory) {\n        return users[_user].musicRecommendations[_recommendationIndex];\n    }\n\n    // Returns how many music recommendations that user has\n    function getUsersMusicRecommendationLength(address _user) public view returns(uint256) {\n        return users[_user].musicRecommendations.length;\n    }\n\n    // Returns the addresses of the users _user is following\n    function getUsersFollowings(address _user) public view returns(address[] memory) {\n        return users[_user].following;\n    }\n}\n```", "```\nbody {\n    margin: 0;\n    font-family: sans-serif;\n    text-align: center;\n}\n\nbutton {\n    border-radius: 10px;\n    padding: 20px;\n    color: white;\n    border: none;\n    background-color: rgb(69, 115, 233);\n    cursor: pointer;\n}\n\nbutton:hover {\n    opacity: 0.7;\n}\n\n.hidden {\n    display: none;\n}\n\n.buttons-container button:not(:last-child){\n    margin-right: 5px;\n}\n\n.recommendation {\n    width: 40%;\n    margin: auto;\n    background-color: whitesmoke;\n    border-radius: 20px;\n    margin-bottom: 10px;\n    padding: 40px;\n}\n\n.follow-people-unit {\n    width: 40%;\n    background-color: whitesmoke;\n    border-radius: 20px;\n    margin: 10px auto;\n    padding: 20px;\n}\n\n.recommendation-name, .recommendation-address, .follow-people-address, .follow-people-name, .follow-people-age {\n    display: inline-block;\n    color: #444444;\n    font-style: italic;\n}\n\n.recommendation-name, .follow-people-name {\n    margin-right: 10px;\n}\n\n.recommendation-address, .follow-people-address {\n    color: rgb(156, 156, 156);\n}\n\n.recommendation-song, .follow-people-recommendation {\n    font-weight: bolder;\n    font-size: 16pt;\n    margin-top: 10px;\n}\n\n.form-input {\n    display: block;\n    width: 200px;\n    border-radius: 20px;\n    padding: 20px;\n    border: 1px solid #444444;\n    margin: 10px auto;\n}\n\n.form-textarea {\n    height: 200px;\n}\n\n.cancel-button {\n    margin-right: 10px;\n}\n\n.follow-people-state {\n    font-style: italic;\n    font-weight: bolder;\n    color: #444444;\n}\n\n.follow-button {\n    margin-top: 10px;\n}\n```"]