- en: Designing the Solution Architecture
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设计解决方案架构
- en: 'In this chapter, we''ll review the architecture of our IoT- and blockchain-based
    solution for the food logistics network, exploring the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将审查我们基于物联网和区块链的食品物流网络解决方案的架构，探讨以下主题：
- en: '**The business side**: We''ll review the business components and the main actors
    on the business side of things, as well as the processes that take place between
    production and the consumer.'
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**商业方面**：我们将审查商业组件和商业方面的主要参与者，以及生产和消费者之间发生的过程。'
- en: '**The technology**: We''ll present a diagram of the technological solutions
    that we''ll be engineering.'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**技术**：我们将呈现我们将要设计的技术解决方案的图表。'
- en: '**Software**: We''ll present a diagram detailing the solution at the software
    level, examining layers and integration.'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**软件**：我们将呈现一个详细描述软件层次和集成的解决方案图表。'
- en: We'll also review some concepts and architecture involved in our IoT- and blockchain-based
    solution in more detail.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将更详细地审查一些涉及到我们基于物联网和区块链的解决方案的概念和架构。
- en: The business of food
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 食品业务
- en: The modern food chain is very large and complex. There are numerous actors involved
    that influence the making of the product and its delivery, whether directly or
    indirectly.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 现代食品链非常庞大且复杂。有许多参与者参与影响产品的制造和交付，无论是直接还是间接的。
- en: 'We''ll be looking at this modern food production process, learning about the
    challenges of the modern chain and proposing a new one based on blockchain and
    IoT:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将研究这种现代食品生产过程，了解现代链条的挑战，并基于区块链和物联网提出一个新的链条：
- en: '![](img/b6ef5203-faa7-4e12-bf09-9434e292eb37.png)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b6ef5203-faa7-4e12-bf09-9434e292eb37.png)'
- en: The business process shown in the preceding diagram is a simplified version
    of the modern food chain. The chain can be much bigger than the one represented
    here. For example, many supermarkets have their own distribution centers. However,
    since our main goal is simplification, we didn't represent other factors, such
    as ports and customs.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在上图中显示的业务流程是现代食品链的简化版本。该链可能比此处所代表的要复杂得多。例如，许多超市都有自己的配送中心。然而，由于我们的主要目标是简化，我们没有代表其他因素，例如港口和海关。
- en: For our use case, we'll seek to account for the product from the time it's delivered
    to the manufacturer. This product could be any item, but we'll use chicken drumsticks
    for our example.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的用例，我们将试图从制造商交付的时间开始考虑产品。这个产品可以是任何物品，但我们将用鸡腿作为例子。
- en: 'The asset to be managed in our chain will be a box full of chicken drumsticks,
    and our other asset will be a pallet full of boxes containing chicken drumsticks.
    In the food chain, we''ll be looking at the processes of the following actors:
    the manufacturer, distribution center, and retailers.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我们链条中要管理的资产将是一箱装满鸡腿的箱子，我们的另一个资产将是一托盘装满装有鸡腿的箱子。在食品链中，我们将研究以下参与者的流程：制造商、配送中心和零售商。
- en: As stated previously, there are a lot of actors in the modern food chain. Remember
    that we're following a more simplified process, not necessarily the actual process
    followed in real life. Our goal Here's understanding how IoT and blockchain can
    help the parties and processes inside the food chain.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，现代食品链中有很多参与者。请记住，我们遵循的是更简化的流程，不一定是实际生活中遵循的流程。我们的目标是理解物联网和区块链如何帮助食品链内的各方和流程。
- en: Challenges of the process
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 过程的挑战
- en: 'The part of the food chain we have chosen to focus on has many challenges.
    We''re listing them briefly here:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们选择关注的食品链的一部分面临着许多挑战。我们在这里简要列出了它们：
- en: '**Challenges from the farmer''s perspective**: Securing documentation of key
    information on raw materials, such as product descriptions, dates of inspections,
    date of abatement, and stock information'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**从农民的角度来看的挑战**：确保关于原材料的关键信息的文件化，例如产品描述、检验日期、屠宰日期和库存信息'
- en: '**Challenges from the manufacturer''s perspective**: Ensuring product origin
    and safe delivery and receipt of products, packaging products with electronics,
    using barcode/QR code informational labeling for regulators and consumers, and
    aggregating products into packages'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**制造商的挑战**：确保产品来源和产品的安全交付和接收，将产品与电子产品包装在一起，为监管机构和消费者使用条形码/二维码信息标签，以及将产品聚合成包装'
- en: '**Challenges from the retailer''s perspective**: Checking package integrity
    and maintaining visibility of product packages across the transport lines with
    dates, warehouse validation, and quality control'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**零售商的挑战：**检查包装完整性，并通过日期、仓库验证和质量控制，保持产品包装在整个运输线上的可见性'
- en: '**Challenges from the consumer''s perspective**: Having confidence in the origin
    of the product and the information contained in its packaging, as well as identifying
    goods quickly and, if necessary, removing suspect products from the shelves and
    consumption'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**消费者的挑战：**对产品的来源以及包装中的信息有信心，快速识别商品，并在必要时从货架上移除可疑产品以及消费'
- en: The process at the food factory
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 食品工厂的过程
- en: Let's start from the beginning of our target process. In our use case, the product
    arrives at the factory in large pieces, where it'll be cut, packed, and put in
    boxes for sale. This product is stored and the boxes are put onto pallets before
    delivery.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从我们的目标过程开始。在我们的用例中，产品以大块形式到达工厂，在那里将被切割、包装，并放入销售用箱子中。这些产品被储存，并在交付之前装到托盘上。
- en: 'A pallet is a wooden, metallic, or plastic platform used for moving goods,
    as we can see in the following diagram:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 托盘是用于移动货物的木质、金属或塑料平台，如下图所示：
- en: '![](img/9159aa57-6758-47a5-b3c6-afb9d0eca173.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![图](img/9159aa57-6758-47a5-b3c6-afb9d0eca173.png)'
- en: 'Next, we''ll see the important data that must be registered about the product
    before it proceeds to the next stage. When the product arrives, the following
    data is captured and recorded:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将看到产品在转到下一阶段之前必须注册的重要数据。当产品到达时，捕获并记录以下数据：
- en: '**Stock Keeping Unit** (**SKU**)'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**库存管理单位（SKU）**'
- en: Animal origin
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 动物来源
- en: Name of producer
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 制造商名称
- en: Animal information
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 动物信息
- en: Quality control
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 质量控制
- en: Date of abatement
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 淘汰日期
- en: Freezing
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 冷冻
- en: Technical supervisor details
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 技术监督员详细信息
- en: Shipment date
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发货日期
- en: Temperature and transport details
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 温度和运输细节
- en: 'The following details are captured during the registration of a box or pallet:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在注册箱子或托盘时捕获以下细节：
- en: SKU
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SKU
- en: Date
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日期
- en: Factory address
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工厂地址
- en: Freezing temperature
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 冷冻温度
- en: Quality record
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 质量记录
- en: Pallet code
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 托盘代码
- en: Now let's check the process for the next actor in the chain.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们检查链条中下一环节的过程。
- en: The process at the distribution center
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配送中心的过程
- en: 'After being cut, packed, and delivered, the product arrives at the distribution
    center, where it''s received and checked for storage. Depending on the process,
    it might go to a bigger pallet that suits it better for transportation, which
    could be by train or truck:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 产品在被切割、包装和运送后，到达配送中心，被接收并检查以供存储。根据过程的不同，产品可能会放在更适合运输的更大托盘上，可以通过火车或卡车运输：
- en: '![](img/d2ebc4d1-c38a-4149-9875-e0bc670bd3ca.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![图](img/d2ebc4d1-c38a-4149-9875-e0bc670bd3ca.png)'
- en: 'To avoid any issues with the product, the distribution center reviews the data
    sent by the factory. If there''s any additional movement, such as pallet transfer,
    new information needs to be added to the package:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 为了避免产品出现任何问题，配送中心会审核工厂发送的数据。如果有任何额外的移动，如托盘转移，需要将新的信息添加到包装中：
- en: 'For the product, it''s the following:'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于产品，如下：
- en: Received date
  id: totrans-48
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 收货日期
- en: Pallet number
  id: totrans-49
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 托盘编号
- en: Temperature received at
  id: totrans-50
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 收到的温度
- en: Temperature for storage
  id: totrans-51
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储温度
- en: Transport company
  id: totrans-52
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运输公司
- en: Quality seal
  id: totrans-53
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 质量封条
- en: For the pallet, it's the following**:**
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于托盘，如下：
- en: Destination code
  id: totrans-55
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目的地代码
- en: Pallet code
  id: totrans-56
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 托盘代码
- en: Date
  id: totrans-57
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日期
- en: Temperature for dispatch
  id: totrans-58
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发货温度
- en: Transport company
  id: totrans-59
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运输公司
- en: After inspection, the products are sent to the retailers.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 检查后，产品被发送给零售商。
- en: The process at supermarkets and stores
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 超市和商店的过程
- en: 'The store will receive the product and check the goods to see whether they
    fit the requirements. If they do, the pallets are disassembled and the boxes are
    opened. This concludes the monitoring of our assets:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 商店将会接收产品并检查商品是否符合要求。如果符合，托盘被拆卸并箱子被打开。这结束了我们对资产的监控：
- en: '![](img/77ca5156-5ff6-463d-84e9-1d486e7d9bac.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![图](img/77ca5156-5ff6-463d-84e9-1d486e7d9bac.png)'
- en: 'The following important data must be registered at this stage for the product
    to reach the consumer:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 必须在这个阶段注册以下重要数据，产品才能到达消费者：
- en: Received date
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 收货日期
- en: Pallet number
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 托盘编号
- en: Temperature received at
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 收到的温度
- en: Temperature for storage
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储温度
- en: Transport company
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运输公司
- en: Quality seal
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 质量封条
- en: Now it's the store's responsibility to put a label on the product, after which,
    it may or may not be taken straight to the shelf.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 现在轮到商店负责给产品贴标签了，之后可能会直接放到货架上，也可能不会。
- en: The technological approach
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术方法
- en: 'Now that we have a better understanding of our process and potential problems,
    let''s see how technology can be useful to us. Here''s a representation of a standard
    blockchain Hyperledger Fabric architecture:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们对我们的流程和潜在问题有了更好的理解，让我们看看技术如何对我们有用。以下是标准区块链 Hyperledger Fabric 架构的表示：
- en: '![](img/6b953461-f3fd-45fa-a64b-fbf7a238022e.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/6b953461-f3fd-45fa-a64b-fbf7a238022e.png)'
- en: 'The preceding diagram shows us three important layers: frontend applications
    (on the left), API/SDK (in the center), and Hyperledger Fabric and the IoT platforms
    (on the right).'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 前述图表向我们展示了三个重要层次：前端应用程序（左侧）、API/SDK（中心）、以及 Hyperledger Fabric 和物联网平台（右侧）。
- en: Let's review each layer in more detail.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更详细地审查每一层。
- en: Frontend applications
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前端应用程序
- en: 'This layer is responsible for data input and can be a packet, such as one from
    SAP, Salesforce, or Siebel, or a custom application. It can also interact with
    IoT devices, collecting data and registering in the blockchain ledger. The modern
    architecture for developing frontend applications consists of these layers:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 此层负责数据输入，可以是来自 SAP、Salesforce 或 Siebel 的数据包，也可以是自定义应用程序。它还可以与物联网设备交互，收集数据并在区块链分类帐中注册。开发前端应用程序的现代架构包括以下层次：
- en: '![](img/7af24390-1421-4556-ae81-32d546279b76.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/7af24390-1421-4556-ae81-32d546279b76.png)'
- en: Okay, I know there are a lot of other tools for each layer than those presented
    here, but I just used the ones I'm more familiar with.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，我知道每一层都有很多其他工具，而不仅仅是这里介绍的，但我只是用我更熟悉的那些。
- en: This type of frontend architecture allows us to separate our services from a
    single interface. By doing so, we can expand the **User Experience** (**UX**) to
    several platforms without the need to rebuild the whole application.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 这种前端架构允许我们将服务从单一界面中分离出来。通过这样做，我们可以将**用户体验**（**UX**）扩展到多个平台，而无需重建整个应用程序。
- en: IoT-based asset tracking
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基于物联网的资产追踪
- en: IoT plays an important role in the food chain. IoT devices can track assets,
    and there's an arsenal of models available that can do that. There are sensors
    for measuring temperature, and location can be determined using GPS, beacons,
    SigFox, Wi-Fi, 4G, and Sub1Ghz. These devices and networks can be used by farms,
    factories, transportation companies, distribution centers, and retail outlets,
    covering all actors in the food chain.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 物联网在食品链中发挥着重要作用。物联网设备可以跟踪资产，有大量可用的模型可以做到这一点。有用于测量温度的传感器，位置可以使用 GPS、信标、SigFox、Wi-Fi、4G
    和 Sub1Ghz 来确定。这些设备和网络可以被农场、工厂、运输公司、分销中心和零售店使用，覆盖食品链中的所有参与者。
- en: The major challenge in the food chain is transportation. Many foods require
    special care, and temperature is one of the most important concerns. Since many
    foods are perishable, and temperature control is vital for preventing contamination
    and damage.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 食品链中的主要挑战是运输。许多食品需要特殊关照，温度是最重要的关注点之一。由于许多食品易腐，温度控制对于防止污染和损坏至关重要。
- en: 'Let''s take a look at how we can mitigate this challenge using an IoT-enabled
    device. The Particle Electron Asset Tracker (pictured in the following diagram)
    can be used to collect temperature and environmental data and identify GPS location
    and cellular triangulation, among other things:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何利用物联网设备来缓解这一挑战。 [粒子电子资产追踪器](https://example.org/particle_electron_asset_tracker)（如下图所示）可用于收集温度和环境数据，并识别
    GPS 位置和蜂窝三角测量等信息：
- en: '![](img/5ae745ea-7620-488f-ace3-90f52b6db786.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/5ae745ea-7620-488f-ace3-90f52b6db786.png)'
- en: This tracker allows us to connect with a u-blox M8 GNSS GPS receiver and Adafruit
    LIS3DH Triple-Axis Accelerator. We can connect Grove sensors to it as well.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 此追踪器允许我们连接到 u-blox M8 GNSS GPS 接收器和 Adafruit LIS3DH 三轴加速度计。我们也可以连接 Grove 传感器。
- en: 'Let''s look at a high-level architecture of this kind of IoT solution:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看这种物联网解决方案的高层架构：
- en: '![](img/1eb010e8-a5e7-4851-949b-ae1eba26fb37.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/1eb010e8-a5e7-4851-949b-ae1eba26fb37.png)'
- en: 'This diagram shows us some important components of the solution. Let''s see
    what they are:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 此图表向我们展示了解决方案的一些重要组件。让我们看看它们是什么：
- en: '**Message Queuing Telemetry Transport** (**MQTT**): This refers to a publish-subscribe-based
    messaging protocol that works over TCP. It''s designed for connections with remote
    locations where a small code footprint is required or the network bandwidth is
    limited. The publish-subscribe messaging pattern requires a message broker.'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**消息队列遥测传输（MQTT）**：这是一种基于发布-订阅的消息传输协议，通过TCP工作。它专为需要小代码占用空间或网络带宽有限的远程连接设计。发布-订阅消息传输模式需要一个消息代理。'
- en: '**Node-RED**: Node-RED is a programming tool for wiring together hardware devices,
    APIs, and online services in an easy way using a flow editor that can create JavaScript
    functions.'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Node-RED**：Node-RED是一种用于在易于使用的流程编辑器中简单地连接硬件设备、API和在线服务的编程工具。'
- en: '**IBM Cloud**: This is a set of cloud computing services for business.'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**IBM Cloud**：这是一套面向企业的云计算服务。'
- en: '**Bosch IoT Rollouts**: This is a cloud service in the Bosch IoT Suite that
    enables users to manage the rollout of software updates to edge devices, controllers,
    and gateways.'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Bosch IoT Rollouts**: 这是Bosch IoT Suite中的一个云服务，可以让用户管理边缘设备、控制器和网关的软件更新的推出。'
- en: 'So, how do these components come together to assist in the various processes
    in the food chain? Here''s how:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，这些组件如何组合在一起以帮助食品供应链中的各种流程？以下是：
- en: The Node-RED control panel dashboard enables us to select an asset tracker and
    check the location, data, device status, and other information
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Node-RED控制面板仪表板使我们能够选择资产跟踪器，并检查位置、数据、设备状态和其他信息
- en: The asset tracker device can be either activated or updated over a cellular
    network
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 资产跟踪设备可以通过蜂窝网络进行激活或更新
- en: Geolocation data can be transmitted periodically and can be followed by a dashboard
    in Node-RED, for example
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 地理位置数据可以定期传输，并且可以在Node-RED中的仪表板上进行跟踪
- en: The asset tracker device queries the temperature data and then may query for
    location or velocity data
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 资产跟踪设备查询温度数据，然后可能查询位置或速度数据
- en: Node-RED can write the temperature, location, and velocity data to Hyperledger
    Fabric
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Node-RED可以将温度、位置和速度数据写入Hyperledger Fabric
- en: The Node-RED dashboard queries Hyperledger Fabric for various tasks and information,
    such as transaction histories, date and time data, and geo-sensor data
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Node-RED仪表板查询Hyperledger Fabric以获取各种任务和信息，例如交易历史记录、日期和时间数据和地理传感器数据
- en: API/SDK
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: API/SDK
- en: The SDK or API is an integration layer responsible for connection in the blockchain
    network. It's normally developed using Node.js and plays an important role in
    the calling of smart contracts. Today, we can find API/SDK documentation covering
    Go and Java, with documentation for Python on the horizon.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: SDK或API是一个负责在区块链网络中建立连接的集成层。通常使用Node.js开发，并在调用智能合约中起着重要作用。今天，我们可以找到覆盖Go和Java的API/SDK文档，并且Python的文档正在制定中。
- en: You can refer to this link for more information on how to use APIs/SDKs to integrate
    your application with a blockchain network: [https://hyperledger-fabric.readthedocs.io/en/release-1.3/fabric-sdks.html](https://hyperledger-fabric.readthedocs.io/en/release-1.3/fabric-sdks.html).
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以参考此链接以获取有关如何使用API/SDK将您的应用程序与区块链网络集成的更多信息：[https://hyperledger-fabric.readthedocs.io/en/release-1.3/fabric-sdks.html](https://hyperledger-fabric.readthedocs.io/en/release-1.3/fabric-sdks.html)。
- en: 'The following diagram shows an application integrated with an API/SDK that
    interacts with Hyperledger Fabric:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图示显示了一个与通过API/SDK与Hyperledger Fabric交互的应用程序集成：
- en: '![](img/590b546a-02ee-460b-b83e-d139031123a0.png)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![](img/590b546a-02ee-460b-b83e-d139031123a0.png)'
- en: Composer JavaScript SDK is derived from Node.js, and it allows developers to
    integrate your application with their business networks.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: Composer JavaScript SDK源自Node.js，允许开发人员将您的应用程序与他们的业务网络集成。
- en: 'There are two npm modules:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 有两个npm模块：
- en: '`composer-client`: This module is usually installed as a local dependency of
    an application. It provides the API that''s used by business applications to connect
    to a business network in order to access assets and participants and submit transactions.
    When in production, this is the only module that needs to be added as a direct
    dependency of the application.'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`composer-client`：这个模块通常作为应用程序的本地依赖项安装。它提供了业务应用程序用来连接业务网络以访问资产和参与者并提交交易的API。在生产中，这是需要作为应用程序的直接依赖项添加的唯一模块。'
- en: '`composer-admin`: This module is usually installed as a local dependency of
    administrative applications. This API permits the creation and deployment of business
    network definitions.'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`composer-admin`：此模块通常作为管理应用程序的本地依赖项安装。此 API 允许创建和部署业务网络定义。'
- en: Now let's move on to the last layer in our solution.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们继续到我们解决方案的最后一层。
- en: Hyperledger Composer – a high-level overview
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Hyperledger Composer – 高级概览
- en: Hyperledger Composer is an easy way to create your blockchain network, integrated with
    a full-stack working solution, as provided by the Hyperledger Composer architecture
    site.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: Hyperledger Composer 是创建您的区块链网络的简单方法，与 Hyperledger Composer 架构站点提供的全栈工作解决方案集成在一起。
- en: 'At a high level, Hyperledger Composer is made up of the following components:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 从高层次来看，Hyperledger Composer 由以下组件组成：
- en: Execution runtimes
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行运行时
- en: JavaScript SDK
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JavaScript SDK
- en: '**Command Line Interface** (**CLI**)'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**命令行界面**（**CLI**）'
- en: REST server
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: REST 服务器
- en: LoopBack connector
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: LoopBack 连接器
- en: Playground web user interface
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 游乐场 Web 用户界面
- en: Yeoman code generator
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Yeoman 代码生成器
- en: VS Code and Atom editor plugins
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VS Code 和 Atom 编辑器插件
- en: It would be outside the scope of this book to review each of these in detail.
    You can visit this link to explore these components briefly: [https://hyperledger.github.io/composer/latest/introduction/solution-architecture](https://hyperledger.github.io/composer/latest/introduction/solution-architecture).
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书范围之外详细审查这些内容将超出范围。您可以访问此链接简要探索这些组件：[https://hyperledger.github.io/composer/latest/introduction/solution-architecture](https://hyperledger.github.io/composer/latest/introduction/solution-architecture)。
- en: Software components
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 软件组件
- en: Now we'll look at the software components of our solution for an architect's
    perspective. This is a good way to get familiarized with all of the components
    and have a better understanding of how they are integrated.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将从架构师的角度查看我们解决方案的软件组件。这是一个熟悉所有组件并更好地了解它们如何集成的好方法。
- en: 'To start, let''s explore one of the most important components: the authentication
    process.'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们探索一下最重要的组件之一：身份验证过程。
- en: 'How we can guarantee that each member of the blockchain has the correct access
    permission in our frontend application? After answering this question, we''ll
    delve into the most important components of Hyperledger Composer: the modeling
    language and the transaction processor functions.'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 我们如何确保区块链的每个成员在我们的前端应用程序中具有正确的访问权限？在回答这个问题之后，我们将深入研究 Hyperledger Composer 的最重要的组件：建模语言和事务处理器函数。
- en: Composer REST server
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Composer REST 服务器
- en: To authenticate clients, we'll need to set up a REST server. With this option
    available, the clients should be authenticated before they are permitted a call
    in the REST API.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 要验证客户端，我们将需要设置一个 REST 服务器。在这个选项可用之后，客户端在被允许调用 REST API 之前应该被验证。
- en: The REST server uses an open source software named PASSPORT, an authentication
    middleware for Node.js. It's flexible and modular and supports authentication
    via username and password, Facebook, Twitter, Google, and **Lightweight Directory
    Access Protocol **(**LDAP**), among others. In [Chapter 7](d067a20b-616f-49da-9614-ae0631a7e4f8.xhtml),
    *Creating Your Blockchain and IoT Solution*, we'll have more details about this.
    For now, let's review how the components will work.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: REST 服务器使用一个名为 PASSPORT 的开源软件，这是一个用于 Node.js 的身份验证中间件。它灵活且模块化，支持通过用户名和密码、Facebook、Twitter、Google
    和**轻量级目录访问协议**（**LDAP**）等方式进行身份验证。在[第7章](d067a20b-616f-49da-9614-ae0631a7e4f8.xhtml)中，*创建您的区块链和物联网解决方案*，我们将有关于此的更多细节。现在，让我们回顾一下这些组件将如何工作。
- en: 'In the following diagram, we can see a high-level authentication architecture
    using a Composer REST server:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在下图中，我们可以看到使用 Composer REST 服务器的高级认证架构：
- en: '![](img/3e2e08c9-dc65-4f1d-bcbc-fc815d3a98ab.png)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3e2e08c9-dc65-4f1d-bcbc-fc815d3a98ab.png)'
- en: 'The following components have been described in the diagram: a frontend application,
    a composer REST server, LDAP, and Cloudant, a NoSQL database.'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 下图描述了以下组件：一个前端应用程序、一个 Composer REST 服务器、LDAP 和 Cloudant，一个 NoSQL 数据库。
- en: If you're working on a test or need to create a proof of concept quickly, I
    strongly recommend using Facebook, Google, or Twitter for authentication. It'll
    be easier and faster than other methods.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在进行测试或需要快速创建概念验证，我强烈建议使用 Facebook、Google 或 Twitter 进行身份验证。这比其他方法更容易更快。
- en: 'To use the previous approach to use the composer REST server as custom implementation,
    we need to do some customization. Perform the following steps:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用先前的方法将 Composer REST 服务器用作自定义实现，我们需要进行一些自定义。执行以下步骤：
- en: 'There''s a following line the `composer-rest-server` installation that needs
    to be executed before the line:'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`composer-rest-server`安装中有一行需要在该行之前执行的：
- en: '[PRE0]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Make sure you have a clean environment before using this approach by cleaning
    all previous installations.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用此方法之前，请确保您有一个干净的环境，清理所有先前的安装。
- en: 'To customize our composer REST server Dockerfile, add the following command in
    the RUN statements:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要自定义我们的 composer REST 服务器 Dockerfile，在 RUN 语句中添加以下命令：
- en: '[PRE1]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Create the following environment variables:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建以下环境变量：
- en: '[PRE2]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'If you''re checking the API call and receive `404`, it means you''re not logged
    on:'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你检查 API 调用并收到 `404`，意味着你未登录：
- en: '[PRE3]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Check whether we have an API in our Wallet:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查我们的钱包中是否有 API：
- en: '[PRE4]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'To understand the process authentication better, let''s explore this execution
    flow:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地理解过程认证，让我们探索这个执行流程：
- en: '![](img/38e6605e-aa2b-46cd-8116-95d0f833490f.png)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![](img/38e6605e-aa2b-46cd-8116-95d0f833490f.png)'
- en: Each API call of `composer-rest-server` must include `access_token`, which is
    brought back by the authentication. For more information, see [https://hyperledger.github.io/composer/v0.16/integrating/enabling-rest-authentication](https://hyperledger.github.io/composer/v0.16/integrating/enabling-rest-authentication).
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 每个`composer-rest-server`的 API 调用必须包含`access_token`，这是由身份验证带回的。有关更多信息，请参阅[https://hyperledger.github.io/composer/v0.16/integrating/enabling-rest-authentication](https://hyperledger.github.io/composer/v0.16/integrating/enabling-rest-authentication)。
- en: 'Some examples using `curl` are:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `curl` 的一些例子包括：
- en: '[PRE5]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Here''s another example:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 这是另一个例子：
- en: '[PRE6]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'This is the final step in setting up your `composer-rest-server`: creating
    a business card with Cloudant.'
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这是设置你的`composer-rest-server`的最后一步：使用Cloudant创建一个名片。
- en: 'Create member cards with the following attributes:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 创建具有以下属性的成员卡：
- en: '**ID**: `wallet-data/admin@system name`'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ID**：`wallet-data/admin@system name`'
- en: '**Key**: `wallet-data/admin@system name`'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**密钥**：`wallet-data/admin@system name`'
- en: '**Value**: `{"rev" : "5-1af3gs53gwh...."}`'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**值**：`{"rev" : "5-1af3gs53gwh...."}`'
- en: 'Upload the attachment as shown in the following screenshot:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 根据以下截图上传附件：
- en: '![](img/9e5250b5-5054-4fb1-b0c7-d59820f2f9ec.png)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9e5250b5-5054-4fb1-b0c7-d59820f2f9ec.png)'
- en: In [Chapter 7](d067a20b-616f-49da-9614-ae0631a7e4f8.xhtml), *Creating Your Blockchain
    and IoT Solution*, we'll deploy this implementation.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第七章](d067a20b-616f-49da-9614-ae0631a7e4f8.xhtml)，*创建您的区块链和物联网解决方案*中，我们将部署此实现。
- en: Hyperledger Composer model
  id: totrans-162
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Hyperledger Composer 模型
- en: 'There are many ways to identify a blockchain use case. Let''s remember some
    important indicators of a good use case described in [Chapter 3](fe11e1f3-8540-4126-ace5-2c877b06d6bf.xhtml),
    *Explaining Blockchain Technology and Working with Hyperledger*:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多方法来识别区块链用例。让我们记住[第三章](fe11e1f3-8540-4126-ace5-2c877b06d6bf.xhtml)中描述的一些重要指标，*解释区块链技术并使用
    Hyperledger 工作*：
- en: Is there a business network involved?
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是否涉及业务网络？
- en: If yes, is there a transaction that needs validation and is auditable?
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果有，是否有需要验证和审计的交易？
- en: Are transparency and data immutability important?
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 透明度和数据不可变性是否重要？
- en: After determining the answers to these questions, brainstorm sessions are also
    a good way to detail the solution and identify the best solution platform (such
    as IBM Food Safety), or to start creating a custom development for the use case.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 确定了这些问题的答案后，头脑风暴也是详细解决方案和确定最佳解决方案平台（如 IBM 食品安全）的良好方式，或者开始为用例创建自定义开发。
- en: Using Hyperledger Composer Modeling Language can be an easy way to define the
    structure of the resource that'll be processed as a transaction and stored on
    the ledger.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Hyperledger Composer 建模语言可以很容易地定义将作为交易进行处理并存储在分类账上的资源的结构。
- en: 'The CTO file creates the domain model for a business network definition with
    three major elements:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: CTO 文件创建了具有三个主要元素的业务网络定义的域模型：
- en: A single namespace that contains all resource declarations within the file
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包含文件中所有资源声明的单个命名空间
- en: A set of resource definitions encompassing assets, transactions, participants,
    and events
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包含资产、交易、参与者和事件的一组资源定义
- en: Optional import declarations that import resources from other namespaces
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可选的导入声明，导入来自其他命名空间的资源
- en: 'In [Chapter 7](d067a20b-616f-49da-9614-ae0631a7e4f8.xhtml), *Creating Your
    Blockchain and IoT Solution*, we created a business network. Let''s explore the
    code we used in more detail:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第七章](d067a20b-616f-49da-9614-ae0631a7e4f8.xhtml)，*创建您的区块链和物联网解决方案*中，我们创建了一个业务网络。让我们更详细地探讨我们在代码中使用的代码：
- en: 'A namespace is the base definition of an asset, event, participant, and transaction,
    as you can see here:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 命名空间是资产、事件、参与者和交易的基本定义，如下所示：
- en: '[PRE7]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The declaration of resources and enumerated types is shown in the following
    code:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 资源和枚举类型的声明如下所示：
- en: '[PRE8]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Transaction process functions are automatically invoked by the runtime when
    transactions are submitted using the Business Network Connection API:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 事务处理函数是通过使用业务网络连接 API 提交事务时由运行时自动调用的：
- en: '[PRE9]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'For more information about Hyperledger Composer Modeling Language, you can
    visit the following links:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 有关 Hyperledger Composer 建模语言的更多信息，请访问以下链接：
- en: '[https://hyperledger.github.io/composer/v0.16/reference/cto_language.html](https://hyperledger.github.io/composer/v0.16/reference/cto_language.html)'
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://hyperledger.github.io/composer/v0.16/reference/cto_language.html](https://hyperledger.github.io/composer/v0.16/reference/cto_language.html)'
- en: '[https://hyperledger.github.io/composer/v0.16/reference/js_scripts.html](https://hyperledger.github.io/composer/v0.16/reference/js_scripts.html)'
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://hyperledger.github.io/composer/v0.16/reference/js_scripts.html](https://hyperledger.github.io/composer/v0.16/reference/js_scripts.html)'
- en: The Hyperledger Composer access control language
  id: totrans-183
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Hyperledger Composer 访问控制语言
- en: Hyperledger Composer has an access control file (`.acl`) with which you can
    program business access control and network access control. Business access control
    is for resources within a business network, whereas network access control refers
    to control over administrative network changes.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: Hyperledger Composer 有一个访问控制文件（`.acl`），您可以使用它来编程业务访问控制和网络访问控制。业务访问控制适用于业务网络内的资源，而网络访问控制则是指对管理网络更改的控制。
- en: 'Here''s an example of network access control being granted:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个授予网络访问控制的例子：
- en: '[PRE10]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Here''s another example:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是另一个例子：
- en: '[PRE11]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: You can get further information about the Hyperledger Composer access control
    language by accessing the following link: [https://hyperledger.github.io/composer/v0.16/reference/acl_language.html](https://hyperledger.github.io/composer/v0.16/reference/acl_language.html).
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过访问以下链接了解有关 Hyperledger Composer 访问控制语言的更多信息：[https://hyperledger.github.io/composer/v0.16/reference/acl_language.html](https://hyperledger.github.io/composer/v0.16/reference/acl_language.html)。
- en: Hyperledger Composer transaction processor functions
  id: totrans-190
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Hyperledger Composer 事务处理函数
- en: A Hyperledger Composer business network definition is composed of a set of model
    files and a set of scripts. The scripts may contain transaction processor functions
    that implement the transactions defined in the business network definition's model
    files.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: Hyperledger Composer 业务网络定义由一组模型文件和一组脚本组成。脚本可以包含实现业务网络定义模型文件中定义的事务的事务处理函数。
- en: 'Here''s an example of a script file with a transaction:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一个带有事务的脚本文件的示例：
- en: '[PRE12]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: As we can see, transaction processor functions are automatically invoked by
    the runtime when transactions are submitted using the `BusinessNetworkConnection`
    API. Decorators within documentation comments are used to annotate the functions
    with the metadata required for runtime processing, and each transaction type has
    an associated registry for storing the transactions.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所看到的，当使用 `BusinessNetworkConnection` API 提交事务时，事务处理函数会由运行时自动调用。文档注释内的装饰器用于为函数提供运行时处理所需的元数据，并且每种事务类型都有一个关联的注册表用于存储事务。
- en: Summary
  id: totrans-195
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: The architecture described in this chapter involves many components, and the
    implementation may seem a little complex. By now, we've established that the combination
    of IoT and blockchain can mitigate several issues and transform the workings of
    the modern food chain. For example, such an implementation can bring transparency
    between members, allowing them to control data more efficiently; increase their
    security; make the process automatic and dynamic; remove middlemen; and make the
    chain less complex overall.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 本章描述的架构涉及许多组件，实现可能看起来有点复杂。到目前为止，我们已经确定了物联网和区块链的组合可以缓解多个问题并转变现代食品链的运作方式。例如，这样的实现可以在成员之间带来透明度，使他们更有效地控制数据；增加他们的安全性；使流程自动化和动态化；移除中间人；并且整体上使链条变得不那么复杂。
- en: We also saw that IoT works as the extension of computing and network capabilities
    for devices and sensors, enabling them to make machine-to-machine interactions
    with minimal or no human input. These technological components bring advantages
    such as unprecedented automation, cost reduction for provisioning, energy savings,
    value-added services, and efficient management.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还看到物联网作为设备和传感器的计算和网络功能的延伸工作，使它们能够以最少或没有人类输入的方式进行机器对机器的交互。这些技术组件带来了诸如前所未有的自动化、为供应提供成本削减、节能、增值服务和高效管理等优势。
- en: Blockchain's integration with IoT will make possible data exchange between edge
    devices such as sensors, barcode and QR code scan events, and RFID-based assets.
    Assets connected with sensors will be able to record sensitive information, such
    as the location and temperature of a particular warehouse, and this information
    could be automatically logged or updated on a blockchain.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链与物联网的整合会使传感器、条形码和二维码扫描事件以及基于射频识别（RFID）的资产等边缘设备之间的数据交换成为可能。连接传感器的资产将能够记录敏感信息，例如特定仓库的位置和温度，并且这些信息可以自动记录或更新在区块链上。
- en: With a better understanding of the architecture and the elements that comprise
    its technical components, we'll be able to fully implement a solution with IoT
    and blockchain for the modern food chain.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 通过更好地理解架构以及构成其技术组件的要素，我们将能够充分实施用于现代食品链的物联网和区块链解决方案。
- en: In the next chapter, we'll see how to create our own blockchain with IoT.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将看到如何使用物联网创建自己的区块链。
- en: Questions
  id: totrans-201
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: Q. How can a lack of IoT security compromise data in a blockchain network?
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: Q. 物联网安全不足如何威胁区块链网络中的数据？
- en: A. Sometimes, companies don't focus on security when they work with IoT. Perhaps
    because it's a new technology, they don't believe it comes with imminent risk.
    The fact is, however, that businesses are bringing insecure devices into their
    networks and then failing to update the software. Not applying security patches
    isn't a new phenomenon, but insecure IoT devices with a connection to the internet
    is a disaster waiting to happen; think hackers and DDoS attacks. A strong security
    plan should be developed for IoT devices, similar to the one for internet services.
    Strong device identification and updates can help mitigate most problems.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: A. 有时，公司在使用物联网时并不关注安全性。也许因为这是一项新技术，他们并不认为会带来立即的风险。事实是，企业正在将不安全的设备引入其网络，然后未能及时更新软件。不应用安全补丁并非新现象，但是带有互联网连接的不安全物联网设备是一场灾难等待发生；想想黑客和分布式拒绝服务（DDoS）攻击。应为物联网设备制定强有力的安全计划，类似于互联网服务的安全计划。强大的设备识别和更新可以帮助减轻大多数问题。
- en: Q.Is blockchain technology mature enough for this application?
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: Q. 区块链技术对于这种应用已经足够成熟了吗？
- en: A. Today, there're a number of blockchain platform providers available on the
    market. Carrefour, Walmart, and others are already members of these platforms.
    So, this indicates that big companies are already running their businesses on
    a blockchain platform, and that such a platform is suited to this kind of application.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: A. 如今，市面上有许多区块链平台供应商。家乐福、沃尔玛等已经是这些平台的成员。因此，这表明大公司已经在区块链平台上经营业务，而这样的平台适用于这类应用。
- en: Q. How complex is it to implement a solution using IoT and blockchain?
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: Q. 使用物联网和区块链实施解决方案有多复杂？
- en: A. Most of the technologies described in this chapter are open source and are
    used by a huge number of companies. This shows that we're not talking about something
    that's that complicated, but something that can be used by most developers.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: A. 本章描述的大多数技术都是开源的并被许多公司使用。这表明我们讨论的不是什么复杂的东西，而是大多数开发人员可以使用的东西。
- en: Q. How complex is it to have a solution that covers the entire food chain?
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: Q. 有多复杂的方案能够覆盖整个食物链？
- en: A. Yes, it's not an easy task. You can start by validating the use case; a good
    use case is essential. Also, check whether there's a business network involved;
    remember, IoT also plays an important role in tracking the assets, and you should
    have a security plan for asset tracking as well.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: A. 是的，这并不是一项容易的任务。您可以通过验证用例来开始；一个好的用例是至关重要的。此外，检查是否涉及业务网络；记住，物联网也在追踪资产方面发挥着重要作用，并且您应该为资产追踪制定安全计划。
- en: Q. Should I be concerned about using an open source tool such as Hyperledger
    Fabric or Composer?
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: Q. 使用 Hyperledger Fabric 或 Composer 等开源工具是否需要担心？
- en: A. Hyperledger is part of the Linux Foundation, which has more than 250 companies
    as members, including leaders in finance, banking, supply chain, manufacturing, and
    technology. For example, IBM, Cisco, American Express, Fujitsu, Intel, and JP
    Morgan all use technology by the Linux Foundation. In other words, these tools
    are safe to use provided you employ standard security measures on your devices.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: A. 超级账本是 Linux 基金会的一部分，拥有250多家公司作为成员，包括金融、银行、供应链、制造和技术领域的领导者。例如，IBM、思科、美国运通、富士通、英特尔和摩根大通都在使用
    Linux 基金会的技术。换句话说，只要在设备上采用标准的安全措施，这些工具就是安全的。
- en: Further reading
  id: totrans-212
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: A better description of Hyperledger Composer can be found on the Composer website:[ https://hyperledger.github.io/composer/v0.19/introduction/solution-architecture](https://hyperledger.github.io/composer/v0.19/introduction/solution-architecture).
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关Hyperledger Composer的更好描述可以在Composer网站上找到：[https://hyperledger.github.io/composer/v0.19/introduction/solution-architecture](https://hyperledger.github.io/composer/v0.19/introduction/solution-architecture)。
- en: The main focus in this chapter was Hyperledger Composer. If you want to explore
    the architecture of Hyperledger Fabric, you can find further information here: [https://hyperledger-fabric.readthedocs.io/en/release-1.3/arch-deep-dive.html](https://hyperledger-fabric.readthedocs.io/en/release-1.3/arch-deep-dive.html).
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本章的主要焦点是Hyperledger Composer。如果你想探索Hyperledger Fabric的架构，可以在这里找到更多信息：[https://hyperledger-fabric.readthedocs.io/en/release-1.3/arch-deep-dive.html](https://hyperledger-fabric.readthedocs.io/en/release-1.3/arch-deep-dive.html)。
- en: Yeoman is an open source framework that creates your frontend structure. For
    further information, visit [https://yeoman.io/](https://yeoman.io/).
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Yeoman是创建您的前端结构的开源框架。有关更多信息，请访问[https://yeoman.io/](https://yeoman.io/)。
- en: Passport is an authentication middleware for Node.js. For further information,
    go to [http://www.passportjs.org/](http://www.passportjs.org/).
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Passport是用于Node.js的身份验证中间件。有关更多信息，请访问[http://www.passportjs.org/] (http://www.passportjs.org/)。
- en: You can have further information about the Hyperledger Composer access control
    language by accessing the following link: [https://hyperledger.github.io/composer/v0.16/reference/acl_language.html](https://hyperledger.github.io/composer/v0.16/reference/acl_language.html).
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以通过访问以下链接了解有关Hyperledger Composer访问控制语言的更多信息：[https://hyperledger.github.io/composer/v0.16/reference/acl_language.html](https://hyperledger.github.io/composer/v0.16/reference/acl_language.html)。
- en: 'You can have further information about Hyperledger Composer Modeling Language
    by accessing the following links:'
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以通过以下链接获取有关Hyperledger Composer建模语言的更多信息：
- en: '[https://hyperledger.github.io/composer/v0.16/reference/cto_language.html](https://hyperledger.github.io/composer/v0.16/reference/cto_language.html)'
  id: totrans-219
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://hyperledger.github.io/composer/v0.16/reference/cto_language.html](https://hyperledger.github.io/composer/v0.16/reference/cto_language.html)'
- en: '[https://hyperledger.github.io/composer/v0.16/reference/js_scripts.html](https://hyperledger.github.io/composer/v0.16/reference/js_scripts.html)'
  id: totrans-220
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://hyperledger.github.io/composer/v0.16/reference/js_scripts.html](https://hyperledger.github.io/composer/v0.16/reference/js_scripts.html)'
- en: Information about composer-rest-server can be found at [https://hyperledger.github.io/composer/v0.16/integrating/enabling-rest-authentication](https://hyperledger.github.io/composer/v0.16/integrating/enabling-rest-authentication).
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关composer-rest-server的信息可以在此找到：[https://hyperledger.github.io/composer/v0.16/integrating/enabling-rest-authentication](https://hyperledger.github.io/composer/v0.16/integrating/enabling-rest-authentication)。
