- en: 'Five Forces of Bitcoin - #4 P2P Network'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we will continue our journey through the world of Bitcoin.
    We'll cover the fourth force that powers Bitcoin—its **peer-to-peer** (**P2P**)
    network. We have covered cryptography, mining, blockchain, and many more features
    in the preceding chapters. Ever wondered how all these features work efficiently?
    This chapter will answer all your questions regarding the P2P network.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following topics will be covered in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Introduction to P2P networks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nodes of the network
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Structure of the P2P network
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction to P2P networks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The web has become pretty centralized over the years with gigantic corporations
    holding enormous market power in e-commerce, web search, social networks, and
    many other areas. Besides market power, they control their users' private data
    too, such as identity information, credit card details, addresses, contact details,
    and so on. This is a very important privacy issue that users should pay attention
    to.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are two types of approaches for network architecture of distributed applications:'
  prefs: []
  type: TYPE_NORMAL
- en: P2P model
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Client-server model
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: P2P model versus client-server model
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The P2P and client-server models are two different approaches to address the
    network architecture of distributed applications. Distributed applications are
    systems whose components are located on different networked computers. These computers
    communicate and coordinate with each other over a network in order to run the
    distributed application.
  prefs: []
  type: TYPE_NORMAL
- en: 'The client-server model represents a centralized architecture where the server
    computer runs programs and shares its resources with client computers. Clients
    don''t share any of their resources but send requests to the server for content,
    storage or processing:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/77a169b7-5a3d-4ea3-a961-05d8df4924f7.png)'
  prefs: []
  type: TYPE_IMG
- en: Examples of the client-server model include the email services, networked printing,
    and the World Wide Web.
  prefs: []
  type: TYPE_NORMAL
- en: 'On the other hand, P2P networks have no central server and each computer on
    the network shares its resources with the others. Such resources can include processing
    power, disk storage or network bandwidth. Interaction among peers is direct without
    the need for coordination by a central server. Peer network nodes are both consumers
    and suppliers of resources, as opposed to the client-server model where consumption
    and supply of resources are run separately. The architecture of P2P networks is
    as shown in the following diagram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/7c6af3fc-294d-4169-bf2a-8947d353ebdb.png)'
  prefs: []
  type: TYPE_IMG
- en: P2P systems gained popularity with the file sharing application Napster, which
    was released in 1999\. Since then, the concept has evolved beyond the networks
    of peers doing similar things to systems with diverse peers bringing unique resources
    together to achieve superior results beyond the capabilities of individual peers.
    The original vision for the World Wide Web was close to a P2P network assuming
    that each user of the web would be an active editor and contributor, creating
    and linking content to form an interlinked web of links, but it has subsequently
    evolved to be dominated by the client-server model. The emergence of blockchain
    technology has given rise to the vision for Web 3.0, which should be based on
    more P2P interaction and decentralized services.
  prefs: []
  type: TYPE_NORMAL
- en: Financial transactions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Here's a tricky question for you. What are financial transactions nowadays?
  prefs: []
  type: TYPE_NORMAL
- en: The answer to that question would be that they are messages transmitted over
    a communication network. That's the way every bank transfer and credit card payment
    works. In fact, bank transfers are commonly referred to as **wire transfers**.
    You may have been wondering where this term comes from. Interestingly, it comes
    from telegraph networks, which are probably the oldest type of long-distance communication
    infrastructure. They transmit text messages over a wire. This is what Western
    Union started using in 1872 to transmit messages about payments. After a message
    with payment instructions was received at the destination, the local office made
    the payment to the designated person. That's how the concept of **wiring** money
    started.
  prefs: []
  type: TYPE_NORMAL
- en: This process has evolved through multiple steps until the present day, but at
    its core it continues to be based on transmitting messages. Financial networks
    are essentially communication networks.
  prefs: []
  type: TYPE_NORMAL
- en: How Bitcoin differs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now, you may be thinking what's different and unique about the Bitcoin network
    compared to such financial networks?
  prefs: []
  type: TYPE_NORMAL
- en: The main difference is that Bitcoin is structured as a P2P network on top of
    the internet. Decentralization of control is a core design principle that is achieved
    and maintained by a flat P2P network architecture.
  prefs: []
  type: TYPE_NORMAL
- en: The Bitcoin P2P network is a collection of nodes or peers that run the Bitcoin
    protocol. The Bitcoin protocol is a piece of software engineering similar to the
    **Internet Protocol** (**IP**). Everyone has heard of IP addresses nowadays, which
    are used for communication over the internet. Just like the World Wide Web with
    its websites, domain names, and other applications, the Bitcoin network is a layer
    operating on top of the internet.
  prefs: []
  type: TYPE_NORMAL
- en: 'Bitcoin and other public blockchain network protocols can bypass the web. In
    fact, in some areas, they can provide a viable and superior alternative. Beyond
    payments, there are other game-changing blockchain applications, which we''ll
    cover in detail later in [Chapter 11](586d0708-8581-4903-8aaf-1e9cd736cb5a.xhtml),
    *Blockchains Focused on Specific Sectors and Use Cases*. The following are some
    of the areas where Bitcoin can be a viable alternative:'
  prefs: []
  type: TYPE_NORMAL
- en: E-commerce
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Web search
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Social networks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ID authentication
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nodes of the Bitcoin network
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now, let's take a look at the various functions that participants on the Bitcoin
    network perform. These network peers (participants in the network) are referred
    to as nodes. All nodes can verify transactions, send their own transactions across
    the network, and keep a full or partial copy of the blockchain database.
  prefs: []
  type: TYPE_NORMAL
- en: 'In addition to the aforementioned functions, nodes on the network are sometimes
    involved with the mining function, which we discussed in [Chapter 6](e7fab0bd-e3c6-45d3-9c59-147010110267.xhtml),
    *Five Forces of Bitcoin – #3 Consensus Algorithm*. This involves calculating the
    Proof-of-Work algorithm and creating new blocks.'
  prefs: []
  type: TYPE_NORMAL
- en: Not all nodes on the Bitcoin network do mining, as it requires substantial resources
    and specialized equipment.
  prefs: []
  type: TYPE_NORMAL
- en: Types of nodes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: It's important to distinguish between nodes that keep a full copy of the blockchain,
    referred to as **full nodes**, and nodes that keep only a partial copy, referred
    to as **lightweight nodes**, or **Simplified Payment Verification** (**SPV**)
    nodes.
  prefs: []
  type: TYPE_NORMAL
- en: Full nodes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Full nodes can autonomously verify transactions without external reference.
    They use a bottom-up verification approach. This means that they can track each
    and every coin from the moment of its creation through all transactions it''s
    been involved in. In doing so, they start from the **genesis block** and go up
    the chain of blocks to get to the **current transaction** that needs to be verified.
    This can be better visualized using the following diagram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/80d8661c-66e9-4e4d-93c9-a657a3f9a784.png)'
  prefs: []
  type: TYPE_IMG
- en: In this way, they know which coins have been spent and when, and who is the
    rightful owner of each coin at all times. Maintaining a full node comes with its
    own resource requirements in terms of storage capacity, as the size of the Bitcoin
    blockchain currently stands at 160 gigabytes.
  prefs: []
  type: TYPE_NORMAL
- en: SPV nodes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Alternatively, nodes can store only a part of the blockchain and still be able
    to verify transactions. Such nodes are called lightweight nodes and they use SPV.
    This is a top-down approach.
  prefs: []
  type: TYPE_NORMAL
- en: 'SPV nodes keep just the block headers of all blocks, which takes a small fraction
    of the storage space required for the full blockchain. To verify a transaction,
    they check the blocks to find out where the specific transaction belongs and then
    make sure there are at least six blocks built on top of that block. In this way,
    lightweight nodes rely on the work done by full nodes as a proof that the transaction
    being verified is in order and has not been double spent. Lightweight nodes effectively
    verify transactions by checking the Proof-of-Work in the chain of blocks these
    transactions belong to. Many Bitcoin wallets, especially those on smartphones,
    are lightweight nodes. The process can be further illustrated using the following
    diagram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/34d8cded-60a7-4c24-b652-aa7e71347f0b.png)'
  prefs: []
  type: TYPE_IMG
- en: The Bitcoin P2P network
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Bitcoin P2P network contains a vast array of nodes spread all over the
    internet working in tandem. There are two main parts of the Bitcoin network:'
  prefs: []
  type: TYPE_NORMAL
- en: The mainnet
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The testnet
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The mainnet
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The mainnet is the core Bitcoin network hosted on the internet where all the
    real-life transactions take place. All the Bitcoin activity that we see on the
    internet occurs on the mainnet.
  prefs: []
  type: TYPE_NORMAL
- en: The mainnet contains all the vital information that's used in Bitcoin transactions
    around the world. So, a question you might be asking yourself is what if there
    is some new upgrade? How will it affect the Bitcoin network? The solution to this
    question is the testnet.
  prefs: []
  type: TYPE_NORMAL
- en: The testnet
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Besides the main Bitcoin network, called the mainnet, there is also a testnet
    where new projects and protocol features are tested. The testnet is an alternative
    blockchain used for testing and research. The testnet is a security measure to
    ensure that the main Bitcoin network is never jeopardized in the process of experimentation. In
    this network, we use Testnet coins.
  prefs: []
  type: TYPE_NORMAL
- en: Testnet coins are separate and distinct from the actual mainnet Bitcoins. They
    aren't supposed to have any value. This allows application developers or testers
    to experiment, without having to use real Bitcoins or putting the main blockchain
    at risk of faulty software.
  prefs: []
  type: TYPE_NORMAL
- en: Additional entities
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In addition to the main Bitcoin network, there are other entities running full
    nodes to interface with the mainnet. Such entities provide specific services to
    the network. The following are some of the entities used:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Mining pools**: Mining pools can be structured as a server running a full
    node, and many other computers will be connected to it and running Proof-of-Work
    calculations, but without needing to store the full blockchain.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Exchanges**: Exchanges are places where Bitcoin and other cryptocurrencies
    are traded on a daily basis.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Blockchain explorers**: Blockchain explorers are basically search engines
    for blockchain transactions.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we learned that Bitcoin is the first ever implementation of
    a decentralized P2P network for payments and value transfers. The system works
    smoothly and efficiently without any need for third-party interference. We learned
    about decentralization of control, the different types of nodes in the Bitcoin
    network, and the structure of the Bitcoin network.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will learn about the software code base that powers
    Bitcoin.
  prefs: []
  type: TYPE_NORMAL
