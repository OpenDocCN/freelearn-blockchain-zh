- en: Engage in Business Case on Blockchain Platform
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在区块链平台上进行业务案例的参与
- en: 'The preceding chapter explored Hyperledger''s architecture and showed you how
    to assemble an example Hyperledger-based business network. It provided an explanation
    of founder-based and consortium-based business networks. It illustrated business
    network components, adding peers to channels, and working with chaincode and smart
    contracts. It also covered identity, security, privacy, membership services, channels,
    ledgers, and transaction flow. In this chapter, we''ll learn how to design the
    solution in line with the constructs of the **Oracle Blockchain Platform** (**OBP**).
    This chapter has two parts: the first part focuses on defining a use case around
    certificate issuance and sharing certificates with trusted parties on a Blockchain
    network. The second part covers the **Blockchain-as-a-Service** (**BaaS**) platform,
    which offers an effective, efficient, and economical avenue to realize the potential
    of blockchain technology.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 上一章探讨了Hyperledger的架构，并向您展示了如何组装一个基于Hyperledger的示例业务网络。它提供了基于创建者和基于财团的业务网络的解释。它阐述了业务网络组件，向通道添加对等体，并处理链码和智能合约。它还涵盖了身份、安全性、隐私、会员服务、通道、分类账和交易流。在本章中，我们将学习如何设计与**Oracle区块链平台**（**OBP**）构造一致的解决方案。本章分为两部分：第一部分重点介绍围绕证书发行和与信任方共享证书在区块链网络上的使用案例。第二部分涵盖了**区块链即服务**（**BaaS**）平台，该平台为实现区块链技术的潜力提供了一条有效、高效和经济的途径。
- en: BaaS is a catalyst for blockchain adoption. BaaS provider ensures the installation
    and maintenance of your blockchain network, allowing your business and IT to focus
    on chaincode and dApps. The entire blockchain ecosystem will be managed, administered,
    maintained, and supported by the cloud service provider. Many top vendors, such
    as Oracle, have a managed **Platform-as-a-Service** (**PaaS**) product for BaaS
    because BaaS allows customers to take their SaaS, **business process management**
    (**BPM**) processes, custom applications, and so on, to harness the power of blockchain
    in a cost-effective and efficient way. This chapter also explores Oracle's BaaS by
    exploring a use case in the education sector, showing you the ease of using the
    blockchain platform.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: BaaS是区块链采用的催化剂。BaaS提供者确保安装和维护您的区块链网络，使您的业务和IT能够专注于链码和dApps。整个区块链生态系统将由云服务提供商管理、管理、维护和支持。许多顶级供应商，如Oracle，都有一个用于BaaS的托管**平台即服务**（**PaaS**）产品，因为BaaS允许客户以经济高效的方式将其SaaS、**业务流程管理**（**BPM**）流程、自定义应用程序等带入区块链的能力。本章还通过探索教育部门的一个使用案例来探索Oracle的BaaS，向您展示如何轻松使用区块链平台。
- en: Understanding the business scenario
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解业务场景
- en: 'Education is the foundation-building sector of human society. It also facilitates
    continuous upskilling of the workforce with new knowledge areas as per the needs
    of the changing times. Despite being one of the oldest sectors, it is still plagued
    with inefficiencies:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 教育是人类社会的基础建设部门。它还促进了劳动力不断根据时代变化的需要进行新知识领域的持续技能提升。尽管它是最古老的行业之一，但仍然存在效率低下的问题：
- en: Multiple manual processes cause administration delays
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多个手动流程导致管理延迟
- en: Administration delays cause verification delays
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理延迟导致验证延迟
- en: Manual processes always introduce some doubt over the authenticity of a student's credentials
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 手动流程总是会对学生的证书的真实性产生一些怀疑
- en: To construct a solution implemented on OBP, we have chosen a scenario in this
    business process that deals with the approval of qualification certificates, issuing
    them to students in a secure manner, and sharing them with other stakeholders
    (such as employers and other educational institutions) in a trusted manner.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在OBP上构建一个解决方案，我们在这个业务流程中选择了一个场景，涉及到资格证书的批准、以安全方式向学生颁发证书，并以可信的方式与其他利益相关者（如雇主和其他教育机构）共享证书。
- en: Introduction to the use case
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 引入使用案例
- en: 'The use case includes a typical setup of the interactions and process flow
    associated with the life cycle of the educational credentials/qualifications of
    an individual. In this book, we will consider the aspects of the use case that
    involve the following scenarios:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这个使用案例包括与个人的教育资格/学历的生命周期相关的互动和流程的典型设置。在这本书中，我们将考虑涉及以下情景的使用案例方面：
- en: Issue/approval of certificates by a competent authority
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主管机关发布/批准证书
- en: Availability of certificates to the owner (that is, the student)
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 证书对所有者（即学生）的可用性
- en: Verification of certificate by third parties such as employers or other educational
    institutions
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第三方（如雇主或其他教育机构）对证书的验证
- en: 'In a real-life scenario, there are too many stakeholders involved in this scenario,
    such as specific school of studies, examination controller, the issuing institution,
    students, other institutions, and employers. For the sake of simplicity, we will
    consider the following stakeholders:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在现实生活中，有太多利益相关者参与此场景，例如特定的学习学校、考试控制机构、发行机构、学生、其他机构和雇主。为了简单起见，我们将考虑以下利益相关者：
- en: '**Oracle Red School** (**ORS**): Certificate creator (school of studies)'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Oracle Red School**（**ORS**）：证书创建者（学习学校）'
- en: '**Oracle Empire University** (**OEU**): Certificate approver and issuer (university)'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Oracle Empire University**（**OEU**）：证书审批者和颁发者（大学）'
- en: '**Student, employer, other universities**: Certificate viewer/verifier'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**学生、雇主、其他大学**：证书查看者/验证者'
- en: 'Let''s take a quick look at an existing real-life process in this use case:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们快速看一下这个用例中现有的真实流程：
- en: '![](img/063e4b9c-52ae-43d9-87ee-391be2dbe37e.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](img/063e4b9c-52ae-43d9-87ee-391be2dbe37e.png)'
- en: Certificate Creation, Approval, Issuing, and Review Flow
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 证书创建、审批、颁发和审查流程
- en: 'The existing process has the following inefficiencies:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 现有流程存在以下效率问题：
- en: The manual process of verification makes it slow
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 手工验证流程使其变慢。
- en: The verification process is slow at ascertaining fraudulent claims
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 验证过程在确定欺诈性声明方面很慢。
- en: It requires external background verification services
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它需要外部背景验证服务。
- en: Paper-based certificates are prone to loss or damage
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于纸张的证书容易丢失或损坏。
- en: Faking paper certificates and gaps in the verification process makes certificates
    trustworthiness questionable
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 伪造纸质证书和验证流程中的差距使证书的可信度成问题。
- en: Criteria for use case qualification
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用例资格标准
- en: Before proposing a blockchain-based solution to our business scenario, let's
    first evaluate and see whether it qualifies for a blockchain solution. How can
    we be sure that the application of a blockchain-based solution for a use case
    would really solve the challenges facing the current process?
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在向我们的业务场景提出基于区块链的解决方案之前，让我们首先评估并看看它是否符合区块链解决方案的资格。我们如何确信基于区块链的解决方案应用于某一用例会真正解决当前流程面临的挑战？
- en: Let's ponder over some of the characteristic aspects and constraints of the
    use case that blockchain technologies can overcome. The following considerations
    are not exhaustive; instead, it's an indicative approach toward trying to come
    up with a blockchain solution.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们思考一下区块链技术可以克服的用例的特征方面和限制方面。以下考虑并非详尽无遗；而是一种试图提出区块链解决方案的指示性方法。
- en: 'The following are some of the characteristic aspects and constraints of the
    use case that blockchain technologies can overcome:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是区块链技术可以克服的用例的特征方面和限制方面：
- en: 'Could the use case be solved with a centralized solution? A centralized solution
    managed by OEU would speed up certain aspects compared to a purely manual process
    (if it exists), but it would impose other challenges without providing a solution
    that overcomes all the existing inefficiencies. The challenges of a centralized
    solution are as follows:'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用中心化解决方案可以解决该用例吗？由OEU管理的中心化解决方案会加速某些方面，与纯手工流程（如果存在）相比，但它会带来其他挑战，并不能解决所有现有的效率问题。中心化解决方案的挑战如下：
- en: A centralized solution would not guarantee synergy of the business processes
    at ORS and OEU. Hence, the disconnect between the offline and online processes
    would not provide much improvement in system efficiency.
  id: totrans-32
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 中心化解决方案不能保证ORS和OEU的业务流程协同。因此，离线和在线流程之间的断裂不会提供系统效率的太多改进。
- en: There would be a single point of failure from a system or trust perspective.
  id: totrans-33
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从系统或信任的角度来看，将存在单一故障点。
- en: It requires other parties to trust one single entity (OEU) with no validation
    or mandate from other stakeholders.
  id: totrans-34
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它要求其他方信任一个单一实体（OEU），而不需要其他利益相关者的验证或授权。
- en: It does not provide an effective solution for fake certificates being issued.
  id: totrans-35
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它没有提供防止发放虚假证书的有效解决方案。
- en: Is there a digital asset that multiple stakeholders share? Considering that
    the educational certificate is the digital asset in this use case, it will indeed
    be shared between ORS and OEU for generation, processing, and granting, as well
    as for validation.
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是否有多个利益相关者共享的数字资产？考虑到在此用例中，教育证书是数字资产，它确实将在ORS和OEU之间共享，用于生成、处理、授予以及验证。
- en: 'Does the digital asset need to be stored and accessed in a secure manner? As
    the certificates will be shared assets and will be accessed by different stakeholders,
    a secure mechanism is of prime importance. Considering the nature of the asset,
    security is very important for the following:'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数字资产需要以安全方式存储和访问吗？由于证书将成为共享资产，并将由不同的利益相关者访问，因此安全机制至关重要。考虑到资产的性质，安全对于以下方面非常重要：
- en: Any kind of access to it should be appropriately tracked
  id: totrans-38
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对其任何访问都应适当进行跟踪
- en: Any updates to certificate data should have the endorsement of both ORS and
    OEU
  id: totrans-39
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对证书数据的任何更新都应得到 ORS 和 OEU 的认可
- en: Certificates should be protected against any kind of tampering and unauthorized
    access
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 证书应受到任何篡改和未经授权访问的保护
- en: Are there trust issues between the organizations potentially involved in the
    use case? It is the establishment of trust among ORS, OEU, and certificate viewers
    that is needed. The solution for the use case should ensure the automatic establishment
    of trust by design.
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 组织间可能存在信任问题吗？需要建立 ORS、OEU 和证书查看者之间的信任。用例的解决方案应通过设计确保自动建立信任。
- en: Blockchain solution benefits
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 区块链解决方案的好处
- en: 'The use case necessitates a need for a digital asset (education credentials)
    that should be shared among stakeholders and exhibits the following characteristics:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 用例需要一个数字资产（教育证书），应该在利益相关者之间共享，并具有以下特征：
- en: Shared asset state
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 共享资产状态
- en: Mutually endorsed and validated data workflow
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 互相认可和验证的数据工作流程
- en: Transparent yet secure access to all authorized stakeholders
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有授权的利益相关者透明而安全地访问
- en: Untampered, perpetual proof of existence, and proof of approval
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 未篡改的、永久的存在证明和批准证明
- en: Considering the required characteristics of the solution, a blockchain-based
    solution is an apt fit. With its inherent support for immutability, a shared ledger,
    secure access, and transaction endorsement properties, a blockchain-based solution
    would be able to fulfill all the use case requirements. Additionally, it would
    open up possibilities for further automation and process efficiency by way of
    involving more stakeholders and the application of smart contracts.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到解决方案的所需特征，基于区块链的解决方案是一个合适的选择。凭借其固有的支持不可变性、共享账本、安全访问和交易认可属性，基于区块链的解决方案将能够满足所有用例要求。此外，它还将通过涉及更多利益相关者和智能合约的应用，开启进一步的自动化和流程效率的可能性。
- en: 'The following key benefits would be realized by a blockchain-based solution
    for our use case:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是基于区块链的解决方案对我们的用例带来的关键好处：
- en: A trusted, tamper-proof digital repository for educational certificates
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个可信、防篡改的教育证书数字存储库
- en: Eliminates the risk of loss or damage
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 消除丢失或损坏的风险
- en: Streamlined (almost real-time) verification procedure, because the educational
    credentials are persisted on a trusted, immutable, shared ledger with appropriate
    authorization
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 流程简化（几乎实时）的验证程序，因为教育证书存储在受信任的、不可变的、共享账本上，并具有适当的授权
- en: 'Further possibilities are as follows:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 进一步的可能性如下：
- en: Large-scale, collaborated, complete educational credential history of an individual
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 个人大规模协作完成的完整教育资格历史
- en: Using a source of truth such as this as a prerequisite for any further approval,
    such as research grants and industrial collaboration
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将此类真实来源作为进一步批准（例如研究资助和工业合作）的先决条件
- en: Tokenizing educational qualifications as a common, industry-accepted representation
    (for example, EduCoin)
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将教育资格作为一种普遍且业界认可的表示进行标记（例如，EduCoin）
- en: Designing the solution
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设计解决方案
- en: Now that we have qualified our use case for a blockchain-based solution, let's
    get down to designing the solution in line with the constructs of OBP.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经为基于区块链的解决方案合格，让我们开始根据 OBP 结构设计解决方案。
- en: There is no fixed sequence of steps for the design process. It is up to the
    solution designer's discretion. The primary objective should be to achieve clarity
    on various aspects of an OBP solution, from a logical view to deployment aspects.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 设计过程没有固定的步骤顺序。这取决于解决方案设计者的自主选择。主要目标应该是明确 OBP 解决方案的各个方面，从逻辑视图到部署方面。
- en: Business network topology
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 业务网络拓扑
- en: 'As we mentioned previously, for our use case, we are considering three stakeholders.
    These are OEU, ORS, and **certificate viewers**/**verifiers** (let''s give this
    an acronym of **CVs**). We need to determine the roles of each of these stakeholders
    based on their function:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前提到的，对于我们的用例，我们考虑三种利益相关者。它们分别是 OEU、ORS 和**证书查看者**/**验证者**（让我们简称为**CVs**）。我们需要根据他们的功能确定每个利益相关者的角色：
- en: OEU is the university or governing body with which different schools (colleges)
    are affiliated. It is this entity that has the final authority to approve an educational
    credential of a student submitted by their school.
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OEU 是大学或控制机构，其下设有不同的学校（学院）。正是这个实体最终有权批准学生提交给他们学校的教育证书。
- en: ORS is one of the schools where a student is enrolled and completes their education.
    On completion, ORS would evaluate and submit the student's educational credential
    to OEU. In the larger context, ORS could be categorized as part of a representative
    blockchain entity called *schools*. It depends on the business requirements and
    the implementation context.
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ORS 是其中一个学校，学生在该学校注册并完成他们的教育。完成后，ORS 将评估并提交学生的教育证书给 OEU。在更广泛的背景下，ORS 可以被归类为代表性区块链实体*学校*的一部分。这取决于业务需求和实现环境。
- en: CVs such as students, employers, and job agencies are primarily the consumers
    of the data (educational credentials) and hence would have read-only access to
    the network.
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 诸如学生、雇主和职业机构的 CVs 主要是数据（教育证书）的使用者，因此只能对网络进行只读访问。
- en: 'Based on this premise, the following table provides a depiction of the entities:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 基于这一前提，以下表格描述了实体：
- en: '| **Organization** | **Entity Type** | **Access Type** |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| **组织** | **实体类型** | **访问类型** |'
- en: '| OEU | Founder | Read/write |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| OEU | 创始人 | 读/写 |'
- en: '| ORS | Endorsing participant | Read/write |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| ORS | 受权参与者 | 读/写 |'
- en: '| CVs | Participant | Read |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| CVs | 参与者 | 读取 |'
- en: Channel association
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通道关联
- en: In our use case, a single type of asset will be shared with all stakeholders,
    that is, certificate data. This necessitates everyone to have access to the same
    ledger data. Hence, it will be a single channel network organization where all
    stakeholders will be connected with varied access roles, as listed previously.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的用例中，一种类型的资产将与所有利益相关者共享，即证书数据。这需要每个人都能够访问相同的账本数据。因此，这将是一个单一通道网络组织，所有利益相关者将以前面列出的各种访问角色连接在一起。
- en: 'The following diagram depicts a logical view of how the OBP nodes will be created
    for the solution:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图示逻辑地展示了解决方案中 OBP 节点将如何被创建：
- en: '![](img/62bdecb4-ac91-4c3f-b0ff-8b3e213344cb.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](img/62bdecb4-ac91-4c3f-b0ff-8b3e213344cb.png)'
- en: Network topology and channel association
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 网络拓扑和通道关联
- en: This diagram shows the association of the various stakeholders with the single
    channel.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 该图示展示了各个利益相关者与单一通道的关联。
- en: Network artifacts
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网络构件
- en: After determining the network topology and stakeholders, let's define the shared
    asset and operations that will be performed on it over the network.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 确定网络拓扑和利益相关者后，让我们定义在网络上共享的资产和对其执行的操作。
- en: Asset model
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 资产模型
- en: 'For the given use case, we primarily have two types of object to store on the
    ledger:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 对于给定的用例，我们主要在账本上存储两种类型的对象：
- en: '**Student** (**Receiver**): Basic information'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**学生**（**接收者**）：基本信息'
- en: '**Certificate**: Certificate data'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**证书**：证书数据'
- en: 'The following diagram depicts the asset structure and the relations between
    them at a high level:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图示是资产结构及其高层次之间的关系：
- en: '![](img/5c064f83-b9d4-4713-b92f-646a1ff2a7ba.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5c064f83-b9d4-4713-b92f-646a1ff2a7ba.png)'
- en: Asset model
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 资产模型
- en: Chaincode transactions
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 链码交易
- en: 'The use case requires the following transactions to be performed by the stakeholders
    at various stages of a certificate''s life cycle:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 该用例要求各个阶段的利益相关者执行以下交易：
- en: '| **Transactions** | **Actor** | **Description** |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| **交易** | **执行者** | **描述** |'
- en: '| `CreateReceiver` | ORS | Create a new receiver or student |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| `CreateReceiver` | ORS | 创建新的接收者或学生 |'
- en: '| `AddCertificate` | ORS | Insert a certificate for a receiver |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| `AddCertificate` | ORS | 为接收者插入证书 |'
- en: '| `ApproveCertificate` | OEU | Approve a certificate |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| `ApproveCertificate` | OEU | 批准证书 |'
- en: '| **Search operations** |  |  |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| **搜索操作** |  |  |'
- en: '| `QueryByCert_id` | All | Query a certificate |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| `QueryByCert_id` | 所有 | 查询证书 |'
- en: '| `QueryByRecev_id` | All | Query a receiver by ID |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| `QueryByRecev_id` | 所有 | 按 ID 查询接收者 |'
- en: '| `GetCertificateHistory` | OEU/ORS/receiver | Query history of one key for
    the record |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| `GetCertificateHistory` | OEU/ORS/接收者 | 查询记录的一个关键字的历史 |'
- en: '| `QueryAllCerts` | OEU/ORS | Query all certificates of all students |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| `QueryAllCerts` | OEU/ORS | 查询所有学生的所有证书 |'
- en: Solution operational flow
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解决方案运营流程
- en: So far, we've identified the OBP stakeholders, their associations, the ledger
    data model, and chaincode transactions. This section will help you visualize the
    changes that an OBP-based solution can make to the existing business process and
    consequently overcome the inefficiencies and challenges currently faced.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经确定了OBP项目相关者，他们的关联，账本数据模型以及链码交易。本节将帮助您可视化基于OBP的解决方案对现有业务流程所带来的改变，从而克服当前面临的低效和挑战。
- en: 'The following diagram shows the solution flow of the qualified use case:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表显示了符合条件的使用情形的解决方案流程：
- en: '![](img/86a763d2-2668-4e95-b4ed-71a8a936b2b6.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](img/86a763d2-2668-4e95-b4ed-71a8a936b2b6.png)'
- en: Solution flow
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案流程
- en: Solution architecture
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解决方案架构
- en: As part of the solution architecture, this section covers a holistic high-level
    component view and a run-time deployment view of the OBP based solution, its components
    and instances.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 作为解决方案架构的一部分，本节涵盖了OBP解决方案的整体高级组件视图和运行时部署视图，以及其组件和实例。
- en: High–level architecture
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 高级架构
- en: 'Let''s determine the solution''s components and the interactions between them
    that are required to implement the OBP-based solution. The following diagram depicts
    the high-level solution architecture:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们确定实施基于OBP的解决方案所需的解决方案组件和它们之间的交互。以下图表描述了高级解决方案架构：
- en: '![](img/b0967741-56ed-4487-81b0-9c1fe762fa7b.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b0967741-56ed-4487-81b0-9c1fe762fa7b.png)'
- en: Solution architecture - high-level
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案架构 - 高级层次
- en: 'These are the solution''s components:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是解决方案的组件：
- en: '**OBP Dashboard** provides an interface for OEU and ORS administrators/operators
    to perform OBP administration and configuration tasks.'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OBP 仪表板**为OEU和ORS管理员/操作员提供一个接口，以执行OBP管理和配置任务。'
- en: 'Different sets of client applications would be needed for each of the stakeholders:'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不同的客户端应用程序集将为每个利益相关方而需要：
- en: '**ORS**:'
  id: totrans-110
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ORS**：'
- en: To create a student entry and insert certificate data for the student on the
    ledger
  id: totrans-111
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建学生条目，将证书数据插入账本中
- en: To be able to search student and certificate data
  id: totrans-112
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 能够搜索学生和证书数据
- en: '**OEU**:'
  id: totrans-113
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OEU**：'
- en: To be able to search student and certificate data
  id: totrans-114
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 能够搜索学生和证书数据
- en: To approve/reject students' certificate data
  id: totrans-115
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 批准/拒绝学生的成绩证明数据
- en: '**Student** (**CV**):'
  id: totrans-116
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**学生** (**CV**)：'
- en: To be able to view their approved certificates
  id: totrans-117
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 能够查看已批准的证书
- en: Generate a token for a certificate verifier to verify their academic credentials
    stored on an OBP ledger
  id: totrans-118
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为证书验证器生成一个标记，以验证存储在OBP账本上的他们的学术资格
- en: '**Certificate verifier**:'
  id: totrans-119
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**证书验证器**：'
- en: To be able to verify a student's academic credentials using the token generated
    by the student using the OBP solution
  id: totrans-120
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 能够使用学生使用OBP解决方案生成的标记来验证学生的学术资格
- en: Deployment architecture
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署架构
- en: 'The following diagram depicts how all the pieces of OBP and the constituent
    solution components would run on top of an Oracle Cloud instance. Oracle Cloud
    bundles OBP services and solutions on top of its robust and scalable **Oracle
    Cloud Infrastructure** (**OCI**) availability domains. The whole cloud apparatus
    is secured through the integrated Oracle **Identity Cloud Service** (**IDCS**):'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表显示了OBP所有部件和组成解决方案组件如何在Oracle Cloud实例上运行。 Oracle Cloud通过集成的Oracle **Identity
    Cloud Service**（IDCS）保证整个云设备通过其强大且可扩展的**Oracle Cloud Infrastructure**（OCI）可用性域：
- en: '![](img/0d7f43e6-e523-4d5d-89e3-69243cf60b55.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0d7f43e6-e523-4d5d-89e3-69243cf60b55.png)'
- en: Deployment architecture [Oracle Image]
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 部署架构 [Oracle镜像]
- en: Document storage – recommended approach with OBP
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文档存储 - 推荐与OBP一起使用的方法
- en: Like our use case, many scenarios relating to today's enterprise business processes
    involve the exchange of a document object. In terms of practicality, for many
    cases, the document in itself is just a direct adoption of a physical process.
    It primarily provides a perception of the trusted physical asset in the hands
    of transacting stakeholders. Technically, it is a logical grouping of data values
    related to business transactions such as agreed terms and conditions, contracts,
    and transaction data.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 就像我们的用例一样，今天企业业务流程相关的很多情景涉及文档对象的交换。就实用性而言，对于许多情况，文档本身仅仅是对实体流程的直接采纳。它主要提供了一个对交易相关持有人手中可信实体资产的感知。技术上，这是与商业交易相关的数据值的逻辑分组，例如已经达成的条款和条件、合同和交易数据。
- en: With blockchain-based trusted solutions such as the one we're building on OBP,
    we can in fact do away with many such needs of a document object. Still, for the
    sake of practicality, documents could co-exist and may gradually fade away into
    irrelevance (not necessarily in all cases) as the adoption increases.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 借助基于区块链的可信解决方案，比如我们正在OBP上构建的解决方案，实际上我们可以摆脱许多文档对象的需求。然而，出于实际性考虑，文档可能会共存，并且随着采用程度的增加而逐渐变得不相关（并非在所有情况下都是如此）。
- en: 'Currently, the following approach can be adopted for storing business documents
    along with core OBP solution (ledger) data:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，可以采用以下方法来存储企业文档以及核心OBP解决方案（分类帐）数据：
- en: 'During write transactions on the OBP ledger:'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在OBP分类帐上进行写入事务时：
- en: Generate a hash of the document, record the hash on the ledger (on-chain) and
    store the document off-chain
  id: totrans-130
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生成文档的哈希值，将哈希值记录在分类帐上（链上），并将文档存储在链下
- en: Off-chain storage of documents could either the cloud-based Oracle Content and
    Experience Service or other Oracle Cloud storage options, such as object storage
    or file storage
  id: totrans-131
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文档的链下存储可以是基于云的Oracle内容和体验服务，或其他Oracle云存储选项，如对象存储或文件存储
- en: Hashing logic should be agreed by transacting stakeholders and must be secured
    appropriately
  id: totrans-132
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 哈希逻辑应由交易参与者协商达成一致，并且必须得到适当的保护。
- en: Performing hashing and document storage operation outside the smart contract
    would reduce its execution time
  id: totrans-133
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在智能合约之外执行哈希和文档存储操作可以减少其执行时间。
- en: 'During read transactions (that is, while fetching a document asset):'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在读取交易时（即在获取文档资产时）：
- en: Fetch the document from the chosen document storage.
  id: totrans-135
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从所选的文档存储获取文档。
- en: Get a hash of the document and send it to a smart contract for comparison and
    validation.
  id: totrans-136
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取文档的哈希并发送给智能合约进行比较和验证。
- en: On a positive match, the document can be read. Otherwise, an unexpected situation
    should be reported.
  id: totrans-137
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在匹配成功时，可以阅读文档。否则，应报告意外情况。
- en: For more details on this aspect, please refer to the document storage section
    in the previous chapter.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 有关此方面的更多详情，请参考上一章节中的文档存储部分。
- en: So far, we have walked through the business scenario and defined the use case.
    We have analyzed the use case to justify the need for a blockchain solution by
    walking through the use case qualifications. Once we decided that the use case
    qualifies for a blockchain solution, we covered designing the blockchain-based
    solution. The next half of the chapter concentrates on exploring OBP and its architecture,
    and setting up an OBP network instance.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经通过了业务场景并定义了用例。我们通过分析用例来证明需要区块链解决方案，并通过符合用例资格来了解用例。一旦我们决定用例适合区块链解决方案，我们就对基于区块链的解决方案进行了设计。本章的后半部分集中在探索OBP及其架构，并设置OBP网络实例。
- en: Exploring OBP
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索OBP
- en: 'As we already know, OBP is based on the open source Hyperledger Fabric. But
    for enterprise, Fabric is not enough because it is not pre-assembled. Here are
    some of the high-level requirements for building a working blockchain network
    for an enterprise from the ground up:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们已经知道的，OBP基于开源的Hyperledger Fabric。但是对于企业来说，Fabric并不够，因为它并非预安装。以下是从零开始为企业构建工作区块链网络所需的一些高级要求：
- en: Set up all the prerequisites, configurations, and containers.
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置所有先决条件、配置和容器。
- en: Set up container life cycle management to manage all the containers of peers,
    channels, chain codes, and so on.
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置容器生命周期管理以管理节点、通道、链码等所有容器。
- en: Install security such as user management, which is one of the most important
    components for enterprise.
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装用户管理等安全性，这是企业中最重要的组件之一。
- en: Manage the system upgrade plans and patches to align with the rapid changes.
    As Hyperledger Fabric is open source, there will be continuous evolution in technology,
    so you need to continually manage the system upgrade plans and patches.
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理系统升级计划和补丁，以便与快速变化保持一致。由于Hyperledger Fabric是开源的，技术将不断演变，因此您需要不断管理系统升级计划和补丁。
- en: Ensure high availability and scalability of all the resources.
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保所有资源的高可用性和可伸缩性。
- en: Offer security to data and provide integration endpoints such as REST APIs to
    connect with other products, such as SaaS applications, ERP, or any third-party
    applications.
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为数据提供安全性并提供集成端点，例如REST API，以与其他产品连接，比如SaaS应用程序、ERP或任何第三方应用程序。
- en: Work with various tools for monitoring and handling operational tasks, such
    as checking the health and utilization of the nodes, channel activities, peer
    activities, channel management, peer management, chain code management, and network
    management.
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与各种工具一起监视和处理运营任务，如检查节点的健康状况和利用率、通道活动、对等方活动、通道管理、对等方管理、链码管理和网络管理。
- en: To structure a blockchain network from foundation to production, you need skills,
    resources, and time (maybe months) to set up and maintain all of these requirements.
    Oracle takes responsibility for all of these requirements and provides a service
    in terms of OBP. In this section, we will delve into OBP's architecture and will
    learn to set up an OBP instance and blockchain network.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 要从基础到生产组织一个区块链网络，您需要技能、资源和时间（也许需要几个月）来设置和维护所有这些需求。Oracle 对所有这些需求负责，并提供了 OBP
    服务。在本节中，我们将深入探讨 OBP 的架构，并学习如何设置 OBP 实例和区块链网络。
- en: Overview of OBP's architecture
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OBP 架构概览
- en: OBP provides a pre-assembled platform for building a blockchain network, deploying
    and running smart contracts, and maintaining a distributed ledger. Once the service
    has been provisioned with a few clicks, administrators can use the web console
    to dynamically update blockchain configuration and monitor its operation. Developers
    can deploy smart contracts and integrate applications using REST APIs or client
    SDKs. OBP enables distributed P2P transactions in real-time and allows applications
    (new or existing) to transact and share data between trusted business partners
    over a blockchain network.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: OBP 提供了一个预组装的平台，用于构建区块链网络、部署和运行智能合约以及维护分布式账本。一旦通过几次点击进行服务配置，管理员便可以使用 Web 控制台动态更新区块链配置并监视其运行。开发人员可以部署智能合约并使用
    REST API 或客户端 SDK 集成应用程序。OBP 实现了实时的分布式点对点交易，并允许应用程序（新的或现有的）在区块链网络上进行交易和共享数据。
- en: For the latest updates from OBP product perspective, please refer to [https://www.oracle.com/cloud/blockchain/](https://www.oracle.com/cloud/blockchain/).
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 欲了解 OBP 产品的最新更新，请参考 [https://www.oracle.com/cloud/blockchain/](https://www.oracle.com/cloud/blockchain/)。
- en: 'Because OBP is part of the Oracle Cloud platform, it''s pre-assembled with
    underlying cloud services, including containers, compute, storage, identity cloud
    services for authentication, object storage for embedded archiving, and management
    and log analytics for operations and troubleshooting. You can configure multiple
    peer nodes and channels for availability, scalability, and confidentiality, and
    Oracle Cloud will automatically handle the underlying dependencies. The following
    diagram explains the architecture at a high level and explains how OBP adds value
    to the open source Hyperledger Fabric:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 因为 OBP 是 Oracle 云平台的一部分，它预先与底层云服务组件配套，包括用于身份验证的身份云服务、用于嵌入式归档的对象存储、操作和故障排除的管理和日志分析等。用户可以配置多个对等节点和通道以实现可用性、扩展性和保密性，Oracle
    云将自动处理底层依赖关系。以下图表对架构进行了高级解释，并说明了 OBP 如何为开源Hyperledger Fabric增加价值：
- en: '![](img/03272745-ea05-48c6-aaf1-0238c3b8cb93.png)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![](img/03272745-ea05-48c6-aaf1-0238c3b8cb93.png)'
- en: OBP high-level architecture
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: OBP 高级架构
- en: 'OBP is a permissioned blockchain, and it leverages the built-in Oracle IDCS
    to the Hyperledger Fabric to provide the following:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: OBP 是一种权限区块链，并且利用内置的 Oracle IDCS 到 Hyperledger Fabric 来提供以下功能：
- en: User and role management
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户和角色管理
- en: Authentication for the OBP console, REST proxies, and **certificate authority**
    (**CA**)
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OBP 控制台、REST 代理和**证书颁发机构**（**CA**）的身份验证
- en: Identity federation and third-party client certificate support to enable consortia
    formation and simplify member onboarding
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 身份联合和第三方客户端证书支持以启用财团形成并简化成员入职流程
- en: 'OBP is running on the OCI and it is a PaaS service. Hence, storage, scalability,
    high availability, and infrastructure will be taken care of by Oracle. Using the
    adapters of Oracle Integration Cloud Service, it can be integrated with Oracle
    SaaS, PaaS, and on-premise applications with blockchain transactions, events,
    and queries. As OBP is based on Hyperledger Fabric, it also allows us to connect
    external member nodes that use Hyperledger Fabric. These external members can
    be in customer data centers or third-party cloud services. The following diagram
    depicts the OBP service-level architecture on OCI:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: OBP 运行在 OCI 上，它是一个 PaaS 服务。因此，存储、可扩展性、高可用性和基础架构将由 Oracle 负责。使用 Oracle 集成云服务的适配器，可以将其与
    Oracle SaaS、PaaS 和本地应用程序集成，实现区块链交易、事件和查询。由于 OBP 基于 Hyperledger Fabric，它还允许我们连接使用
    Hyperledger Fabric 的外部成员节点。这些外部成员节点可以位于客户数据中心或第三方云服务中。下图显示了 OCI 上 OBP 服务级架构：
- en: '![](img/cb931ff9-ace0-4904-bbff-4318f4101440.png)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cb931ff9-ace0-4904-bbff-4318f4101440.png)'
- en: OBP service-level architecture
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: OBP 服务级架构
- en: Oracle has made many enhancements to Hyperledger Fabric to make OBP an enterprise-grade
    service. Each blockchain instance contains managed containers, virtual machines,
    identity management, block and object storage, and Oracle Event Hub cloud service,
    which is a dedicated Kafka connect.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: Oracle 已经对 Hyperledger Fabric 进行了许多增强，使 OBP 成为企业级服务。每个区块链实例都包含托管容器、虚拟机、身份管理、区块和对象存储以及
    Oracle 事件中心云服务，这是一个专用的 Kafka 连接。
- en: Blockchain instance
  id: totrans-164
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 区块链实例
- en: An OBP instance (aka blockchain instance for this book) is a collection of containers
    that includes peer nodes, an orderer, an operation console, a CA, a REST proxy,
    and chaincodes. OBP instance is integrated with identity management to manage
    users and roles. It also integrates with Oracle object storage to dynamically
    back up configuration changes and the ledger and restore when required. The Oracle
    object storage takes a backup of all the components in the blockchain instance,
    which includes all the block files of a ledger, which also includes the data in
    the system channel and customer channel, the list of channels, the latest checkpoints,
    the source code of chaincodes, configuration files, and the provisioning files
    of the nodes and log files. This backup and restore process will be done automatically
    in OBP without giving the user notice. So, there is no need for the user to worry
    about data backup. OBP uses Oracle Event Hub cloud service as dedicated Kafka
    for the orderers. Default REST proxies are available to integrate OBP with any
    other applications, such as SaaS, PaaS, on-premise, or other third-party applications.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: OBP 实例（本书中称为区块链实例）是包含对等节点、排序器、操作控制台、CA、REST 代理和链码的容器集合。OBP 实例与身份管理集成以管理用户和角色。它还集成了
    Oracle 对象存储以动态备份配置更改和分类帐，并在需要时进行恢复。Oracle 对象存储将备份区块链实例中的所有组件，包括分类帐中的所有块文件，其中还包括系统通道和客户通道中的数据、通道列表、最新检查点、链码的源代码、配置文件和节点的配置文件和日志文件。此备份和恢复过程将在
    OBP 中自动完成，而无需用户注意。OBP 使用 Oracle 事件中心云服务作为排序器的专用 Kafka。默认的 REST 代理可用于将 OBP 与任何其他应用程序集成，例如
    SaaS、PaaS、本地或其他第三方应用程序。
- en: By now, you should know that blockchain is very resource intensive because it
    requires many containers with lots of storage. Since OBP is running on the Oracle
    Cloud, the storage, scalability, and high availability of the services will be
    taken care of by Oracle.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 到现在为止，你应该知道区块链需要大量容器和大量存储资源，因此资源密集型。由于 OBP 在 Oracle 云上运行，Oracle 将负责存储、可扩展性和服务的高可用性。
- en: OBP is available in two ways. One is by installing a pre-built VM provided by
    Oracle, and the other option is to create an account in Oracle cloud and provision
    the blockchain platform from the portfolio of services. Except for the initial
    steps to access and create a blockchain instance, all other features and navigation
    are the same. Let's see each one these ways of provisioning OBP.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: OBP 有两种方式可用。一种是通过安装 Oracle 提供的预构建虚拟机，另一种选项是在 Oracle 云中创建帐户，并从服务组合中提供区块链平台。除了访问和创建区块链实例的初始步骤外，所有其他功能和导航都是相同的。让我们看看这两种
    OBP 配置方式。
- en: Setting up the OBP SDK
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置 OBP SDK
- en: This section shows how to set up the OBP SDK in a in a laptop or local machine.
    This is just for reference; however, there are alternative ways, such as setting
    up in cloud infrastructure such as OCI. Here is the process of setting up the
    OBP SDK.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 本节展示了如何在笔记本电脑或本地机器上设置 OBP SDK。这仅供参考；然而，还有其他方法，如在 OCI 等云基础设施中设置。以下是设置 OBP SDK
    的流程。
- en: Prerequisites
  id: totrans-170
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 先决条件
- en: 'These are the prerequisites for setting up the OBP SDK:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是设置 OBP SDK 的先决条件：
- en: Oracle Linux version 7.3 or higher (OBP runs on any Linux with Docker, but Oracle
    Linux is recommended) with internet access, and the Linux kernel version must
    be greater than 3.10.
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Oracle Linux 版本 7.3 或更高（OBP 在任何带有 Docker 的 Linux 上运行，但推荐使用 Oracle Linux），并且必须具有互联网访问权限，并且
    Linux 内核版本必须大于 3.10。
- en: Disk space depends on the number of instances planned to deploy.
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 磁盘空间取决于计划部署的实例数量。
- en: For the application, 4 GB memory per instance is recommended.
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于应用程序，推荐每个实例使用 4 GB 内存。
- en: There are multiple Docker containers running after provisioning, and each container's
    access to the host machine's CPU cycles should be unlimited. To ensure that each
    container runs smoothly, two CPUs are the recommended minimum.
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在配置完成后，有多个 Docker 容器在运行，并且每个容器对主机机器的 CPU 周期的访问应该是无限制的。为了确保每个容器运行顺畅，推荐至少使用两个
    CPU。
- en: A hostname is required.
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要主机名。
- en: An Oracle user is needed because the processes run in Docker containers (such
    as peer and orderer).
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要 Oracle 用户，因为进程在 Docker 容器中运行（例如 peer 和 orderer）。
- en: Hostname should be a resolvable name when accessed from the browser. In case
    of setting up OBP locally, the hostname must be the name of your VM runtime. When
    creating multiple organization within the same OBP VM, the hostname will remain
    the same (i.e. the VM name) but the port range for each organization will be different
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 当从浏览器访问时，主机名应该是一个可解析的名称。在本地设置 OBP 的情况下，主机名必须是您的 VM 运行时的名称。在同一 OBP VM 中创建多个组织时，主机名将保持不变（即
    VM 名称），但每个组织的端口范围将不同。
- en: '[PRE0]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Prepare the Docker environment
  id: totrans-180
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备 Docker 环境
- en: 'To build and install OBP SDK, the latest Docker Engine and Docker Compose need
    to be installed:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 要构建和安装 OBP SDK，需要安装最新的 Docker 引擎和 Docker Compose：
- en: 'Docker Engine installation: The OBP SDK requires the latest version of Docker
    Engine. Execute the following command to find out the Docker Engine version:'
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Docker 引擎安装：OBP SDK 需要最新版本的 Docker 引擎。执行以下命令查找 Docker 引擎版本：
- en: '[PRE1]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: If the version is not `Docker version 17.05.0-ce` or higher, then install/update
    the latest version of Docker with the following instructions.
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果版本不是 `Docker version 17.05.0-ce` 或更高，则按以下说明安装/更新 Docker 的最新版本。
- en: 'Use the following command to replace OS (operating system) version with your
    specific OS version using docker `yum` repo command :'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令使用 docker `yum` 仓库命令替换 OS（操作系统）版本为您的特定 OS 版本：
- en: '[PRE2]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Install Docker Engine:'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装 Docker 引擎：
- en: '[PRE3]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Check the Docker Engine version:'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查 Docker 引擎版本：
- en: '[PRE4]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The following screenshot shows the version:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示版本：
- en: '![](img/09829dcf-41cf-4690-9944-fb899de70285.png)'
  id: totrans-192
  prefs: []
  type: TYPE_IMG
  zh: '![](img/09829dcf-41cf-4690-9944-fb899de70285.png)'
- en: Docker version
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: Docker 版本
- en: 'Start Docker Engine:'
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动 Docker 引擎：
- en: '[PRE5]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Authenticate the user to the Docker daemon:'
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对 Docker 守护进程的用户进行身份验证：
- en: '[PRE6]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Unpackage and deploy the **blockchain cloud service** (**BCS**) SDK and unpack
    it with the help of the following code fragment:'
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解包并部署 **区块链云服务**（**BCS**）SDK，并借助以下代码片段解压缩它：
- en: '[PRE7]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Copy the OBP SDK from the web or a local source.
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从网络或本地来源复制 OBP SDK。
- en: 'Unzip the build package to the `bcssdk` directory by executing the following
    command:'
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行以下命令将构建包解压到 `bcssdk` 目录：
- en: '[PRE8]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: This book used OBP SDK version 19.1.3 in which the Hyperledger Fabric version
    is 1.3.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 本书使用 OBP SDK 版本 19.1.3，其中 Hyperledger Fabric 版本为 1.3。
- en: 'Now we need to install images and start provisioning the console. As **root**
    user, run the `build` command to load and install Docker images:'
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们需要安装图像并开始配置控制台。作为 **root** 用户，运行 `build` 命令以加载和安装 Docker 图像：
- en: '[PRE9]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The following screenshot shows the output of `build.sh`:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了 `build.sh` 的输出：
- en: '![](img/85a2ba89-150a-44c0-8eca-ebf4371d5fb1.png)'
  id: totrans-207
  prefs: []
  type: TYPE_IMG
  zh: '![](img/85a2ba89-150a-44c0-8eca-ebf4371d5fb1.png)'
- en: run build.sh
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 运行 build.sh
- en: 'Wait until the docker loads:'
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 等待 Docker 加载：
- en: '![](img/c23f73e9-2c61-4458-82b3-e6c62e789335.png)'
  id: totrans-210
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c23f73e9-2c61-4458-82b3-e6c62e789335.png)'
- en: docker load
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: docker load
- en: 'Confirm with `Y`, then the console will be started automatically after the
    images are installed:'
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确认使用 `Y`，然后图像安装完成后控制台将自动启动：
- en: '![](img/e4910cb2-3b45-4d8f-b5a6-e053c4039490.png)'
  id: totrans-213
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e4910cb2-3b45-4d8f-b5a6-e053c4039490.png)'
- en: Starting provisioning
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 开始配置
- en: 'There are certain points that you need to keep in mind:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些你需要记住的要点：
- en: If the firewall is active, `build.sh` will prompt the user to stop the firewall
    and restart the Docker daemon.
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果防火墙处于活动状态，`build.sh` 将提示用户停止防火墙并重新启动 Docker 守护程序。
- en: Please use `build.sh` to start provisioning the console. If the user doesn't
    choose to stop the firewall, there will be problems when provisioning or after
    provisioning. So, in this case, we recommend using the root user.
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请使用 `build.sh` 开始配置控制台。如果用户选择不停止防火墙，则在配置或配置后可能会出现问题。因此，在这种情况下，我们建议使用根用户。
- en: If the firewall is down, user `oracle` already exists, and the non-root user
    has Docker access permission, we can use this user to run this command.
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果防火墙关闭，用户 `oracle` 已存在，并且非根用户具有 Docker 访问权限，则可以使用此用户运行此命令。
- en: Provisioning
  id: totrans-219
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置
- en: As the OBP SDK is only for development purposes, each provisioned instance can
    live for only 60 days. Once expired, the instance will not work anymore. You need
    to provision a new instance to continue your testing or prototype if you need
    to.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 OBP SDK 仅用于开发目的，每个已提供的实例只能存在 60 天。一旦过期，实例将不再工作。如果需要继续测试或原型制作，则需要提供新实例。
- en: 'Perform the following steps for provisioning:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤进行配置：
- en: 'Please use the following command line to start provisioning the console (if
    it''s not started yet):'
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 请使用以下命令行开始配置控制台（如果尚未启动）：
- en: '[PRE10]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The following message will be observed:'
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将会观察到以下消息：
- en: '![](img/ed9283ab-734c-437e-abde-000e4495571f.png)'
  id: totrans-225
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ed9283ab-734c-437e-abde-000e4495571f.png)'
- en: OBP console URL
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: OBP 控制台 URL
- en: 'Now you are able to access the console from your local machine using `ssh`
    and port forwarding. On a Linux/mac system, open a Terminal window and enter the
    following:'
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，您可以从本地机器使用 `ssh` 和端口转发访问控制台。在 Linux/mac 系统上，打开终端窗口并输入以下内容：
- en: '[PRE11]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Then, from your local web browser, just enter `http://localhost:3000` and you
    should see the console''s UI:'
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，从本地的 Web 浏览器中，只需输入 `http://localhost:3000`，您就可以看到控制台的用户界面：
- en: '![](img/d859b0f8-7895-4737-83a7-a85575bff194.png)'
  id: totrans-230
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d859b0f8-7895-4737-83a7-a85575bff194.png)'
- en: OBP console
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: OBP 控制台
- en: Creating blockchain instance using the SDK
  id: totrans-232
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 SDK 创建区块链实例
- en: 'The process of creating blockchain instances using the OBP SDK is as follows:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 OBP SDK 创建区块链实例的过程如下：
- en: Open the login URL of the VM, for example, `http://studentvm2:3000/`.
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 VM 的登录 URL，例如，`http://studentvm2:3000/`。
- en: The Oracle Sign In page will be opened. A user needs to be created for the first
    time.
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将打开 Oracle 登录页面。首次需要创建用户。
- en: Enter the **Username** and **Password** (remember these credentials for future
    use).
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入**用户名**和**密码**（记住这些凭据以备将来使用）。
- en: Click on Sign In.
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“登录”。
- en: 'If the user doesn’t exist, a dialog window with the title Create User will
    be opened, as shown in the following screenshot:'
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果用户不存在，将打开一个标题为“创建用户”的对话框窗口，如下截图所示：
- en: '![](img/8697e65e-719e-45e5-9dcf-c0dde9276a14.png)'
  id: totrans-239
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8697e65e-719e-45e5-9dcf-c0dde9276a14.png)'
- en: OBP SDK login
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: OBP SDK 登录
- en: Click OK to create the user.
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“确定”创建用户。
- en: 'Once the user is created, the OBP Instances page will be opened, as shown in
    the following screenshot. Use this page to create an instance and list all the
    created instances:'
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建用户后，将打开 OBP 实例页面，如下截图所示。使用此页面创建实例并列出所有已创建的实例：
- en: '![](img/3c28d7bc-ef28-4f55-a68b-9957c84b9d69.png)'
  id: totrans-243
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3c28d7bc-ef28-4f55-a68b-9957c84b9d69.png)'
- en: OBP SDK console
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: OBP SDK 控制台
- en: Creating a founder instance in the OBP SDK
  id: totrans-245
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 OBP SDK 中创建创始人实例
- en: 'To create a founder instance, provide details in the Create Instance section
    and make sure the Founder checkbox is ticked:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建创始人实例，请在“创建实例”部分提供详细信息，并确保选中“创始人”复选框：
- en: 'Name: As shown in the following screenshot, the name of the instance to be
    created can be set, for example, `detroitauto`.'
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 名称：如下截图所示，可以设置要创建的实例的名称，例如，`detroitauto`。
- en: 'Host Address: As shown in the following screenshot, enter the host address
    of the VM for which the SDK is set up. The instance will only be accessed using
    this host address.'
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 主机地址：如下截图所示，输入已设置了 SDK 的 VM 的主机地址。只能使用此主机地址访问实例。
- en: '**Start Port**: Referring to the screenshot, enter a port (or a range of ports)
    to access the console once the instance has been created:'
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**起始端口**：参考截图，在实例创建后输入一个端口（或一系列端口）以访问控制台：'
- en: '![](img/6292d3fd-f3ca-4800-8cfd-22375986cef0.png)'
  id: totrans-250
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6292d3fd-f3ca-4800-8cfd-22375986cef0.png)'
- en: OBP sdk founder 1
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: OBP SDK 创始人 1
- en: Click on the **Create** button and wait for some time to see the created instance
    as multiple containers and VMs have to be created and make them up and running.
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“创建”按钮，等待一段时间以查看已创建的实例，因为必须创建多个容器和虚拟机，并使其运行起来。
- en: 'When the instance has been created, it will be visible under Instances on the
    left-hand side:'
  id: totrans-253
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当实例创建完成后，将在左侧的“实例”下可见：
- en: '![](img/40f323d7-7f0a-4cb8-ac38-1d139a3f8d94.png)'
  id: totrans-254
  prefs: []
  type: TYPE_IMG
  zh: '![](img/40f323d7-7f0a-4cb8-ac38-1d139a3f8d94.png)'
- en: OBP SDK founder
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: OBP SDK 创始人
- en: On clicking the instance name, the blockchain console of the instance will be
    opened.
  id: totrans-256
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击实例名称后，将打开该实例的区块链控制台。
- en: Let's now create a participant instance in the OBP SDK.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们在 OBP SDK 中创建一个参与者实例。
- en: Creating a participant instance in the OBP SDK
  id: totrans-258
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 OBP SDK 中创建参与者实例
- en: 'To create a participant, follow the previous procedure, but uncheck Founder:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建参与者，请按照上述步骤操作，但取消选中“创始人”：
- en: 'Check the following screenshot for reference:'
  id: totrans-260
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 请参考以下截图：
- en: '![](img/3d3d9dcc-2e5c-4fc1-ae3e-21deef7545d1.png)'
  id: totrans-261
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3d3d9dcc-2e5c-4fc1-ae3e-21deef7545d1.png)'
- en: OBP SDK participant
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: OBP SDK 参与者
- en: 'Click on Create and wait for few minutes (in my case, it was 4 mins); then
    you will see that a new participant instance has been added to the Instances list,
    as shown:'
  id: totrans-263
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“创建”，等待几分钟（在我的情况下，是 4 分钟）；然后您将看到新的参与者实例已添加到实例列表中，如下所示：
- en: '![](img/9694ff93-18d6-49bf-adc4-a5285610d012.png)'
  id: totrans-264
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9694ff93-18d6-49bf-adc4-a5285610d012.png)'
- en: OBP SDK participant
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: OBP SDK 参与者
- en: Refer to the *Features and components of OBP* section to find out what the OBP
    console looks like and explore its features.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 参考*OBP 的特性和组件*部分，了解 OBP 控制台的外观并探索其功能。
- en: Provisioning OBP on Oracle Cloud
  id: totrans-267
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Oracle Cloud 上进行 OBP 规划
- en: 'The procedure to access OBP in the Oracle cloud is as follows:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 访问 Oracle 云中的 OBP 的流程如下：
- en: Open [https://cloud.oracle.com](https://cloud.oracle.com/).
  id: totrans-269
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 [https://cloud.oracle.com](https://cloud.oracle.com/)。
- en: Click Sign In in the top-right corner.
  id: totrans-270
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击右上角的“登录”。
- en: Enter your **Cloud Account Name** and click Next.
  id: totrans-271
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入您的**Cloud Account Name**，然后单击“下一步”。
- en: Enter your username and password and click on the Sign In button.
  id: totrans-272
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入您的用户名和密码，然后单击“登录”按钮。
- en: The Cloud My Services page will open.
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将打开“云我的服务”页面。
- en: 'Click on the hamburger icon in the top-left and expand the Services menu. Then
    you will see Blockchain Platform in the list, as shown in the following screenshot:'
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击左上角的汉堡图标，展开“服务”菜单。然后，您将在列表中看到“区块链平台”，如下所示：
- en: '![](img/bfd23d87-1912-435d-a3fc-3631954fdc4d.png)'
  id: totrans-275
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bfd23d87-1912-435d-a3fc-3631954fdc4d.png)'
- en: OBP cloud my services
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: OBP 云我的服务
- en: 'Click on Blockchain Platform. It will open the OBP console. This is where you
    can create a new OBP instance or see the list of instances created in an account.
    You can also see the history of the activities of the instances:'
  id: totrans-277
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“区块链平台”。将打开 OBP 控制台。这是您可以创建新的 OBP 实例或查看帐户中创建的实例列表的位置。您还可以查看实例活动的历史记录：
- en: '![](img/2f0dd2c0-5aaa-420d-a3fa-279fd489b9e2.png)'
  id: totrans-278
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2f0dd2c0-5aaa-420d-a3fa-279fd489b9e2.png)'
- en: OBP cloud console
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: OBP 云控制台
- en: Creating a founder instance on Oracle Cloud
  id: totrans-280
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Oracle Cloud 上创建创始人实例
- en: 'Once you open the OBP console as shown in the previous section, click on Create
    Instance:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您按照前一节所示打开 OBP 控制台，请单击“创建实例”：
- en: 'The Create Instance page will open:'
  id: totrans-282
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将打开“创建实例”页面：
- en: '![](img/993fed13-570c-4c20-85e1-1198cfa23f88.png)'
  id: totrans-283
  prefs: []
  type: TYPE_IMG
  zh: '![](img/993fed13-570c-4c20-85e1-1198cfa23f88.png)'
- en: OBP cloud founder
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: OBP 云创始人
- en: Fill detail in the form as shown in the preceding diagram.
  id: totrans-285
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照上图中显示的表单填写详细信息。
- en: Make sure that the Create a new Network checkbox is enabled. This is very important
    when creating a founder.
  id: totrans-286
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保“创建新网络”复选框已启用。这在创建创始人时非常重要。
- en: 'Click on Next. A page with the details you have provided will appear for confirmation,
    as shown in the following screenshot:'
  id: totrans-287
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“下一步”。将显示包含您提供的详细信息的页面以供确认，如以下截图所示：
- en: '![](img/5f709bc2-5f0f-4531-9e39-7df8804fcfcb.png)'
  id: totrans-288
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5f709bc2-5f0f-4531-9e39-7df8804fcfcb.png)'
- en: OBP cloud founder
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: OBP 云创始人
- en: Verify all the details and click on Create.
  id: totrans-290
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证所有详细信息，然后单击“创建”。
- en: 'Wait for a while. The following screen will appear after successful creation
    of the instance. An email confirmation will be sent to the email addressed provided:'
  id: totrans-291
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 稍等片刻。成功创建实例后，将显示以下屏幕。将发送电子邮件确认到提供的电子邮件地址：
- en: '![](img/d3afa668-e905-477b-9ddc-41a4dca87bc4.png)'
  id: totrans-292
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d3afa668-e905-477b-9ddc-41a4dca87bc4.png)'
- en: OBP cloud founder
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: OBP 云创始人
- en: Next to the instance name, click on the hamburger icon. A menu will be shown.
    If you click on the Blockchain Console option, the console of the instance will
    open.
  id: totrans-294
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在实例名称旁边，单击汉堡图标。将显示一个菜单。如果单击“区块链控制台”选项，则将打开该实例的控制台。
- en: Creating a participant instance on Oracle Cloud
  id: totrans-295
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Oracle Cloud 上创建参与者实例。
- en: 'To create a participant, follow the earlier procedure mentioned in *Creating
    a founder instance on Oracle Cloud* section but uncheck Create a new network:'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建参与者，请按照之前在 *在 Oracle Cloud 上创建创建者实例* 部分提到的步骤，但取消选中创建新网络：
- en: 'Check the following screenshot for reference:'
  id: totrans-297
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 请参考以下截图：
- en: '![](img/e4538b35-100f-46b1-a15a-2f3890555f23.png)'
  id: totrans-298
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e4538b35-100f-46b1-a15a-2f3890555f23.png)'
- en: OBP cloud participant
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: OBP 云参与者。
- en: 'After the participant instance has been created, you can see the list of instances
    on the Instances tab in the OBP console, as shown in the following screenshot:'
  id: totrans-300
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建参与者实例后，您可以在 OBP 控制台的“实例”选项卡中看到实例列表，如以下截图所示：
- en: '![](img/23098017-a837-4b11-b60e-661aac218686.png)'
  id: totrans-301
  prefs: []
  type: TYPE_IMG
  zh: '![](img/23098017-a837-4b11-b60e-661aac218686.png)'
- en: OBP cloud instances
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: OBP 云实例。
- en: Features and components of OBP
  id: totrans-303
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OBP 的功能和组件。
- en: 'In this section, we will see how an Oracle blockchain instance console looks
    and examine its features. If you create the blockchain instance using the OBP
    SDK or through Oracle Cloud, the console of an OBP instance will be the same,
    as shown in the following screenshot:'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将看到 Oracle 区块链实例控制台的外观，并检查其功能。如果您使用 OBP SDK 或通过 Oracle Cloud 创建区块链实例，则
    OBP 实例的控制台将与以下截图中显示的相同：
- en: '![](img/555260f4-f8fc-4688-a05d-22e941d2a9ea.png)'
  id: totrans-305
  prefs: []
  type: TYPE_IMG
  zh: '![](img/555260f4-f8fc-4688-a05d-22e941d2a9ea.png)'
- en: OBP instance dashboard
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: OBP 实例仪表板。
- en: The console has multiple tabs, and we will explore each of them in the following
    sections.
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台有多个选项卡，在接下来的部分中我们将逐个探讨它们。
- en: Dashboard
  id: totrans-308
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 仪表板。
- en: 'This is the first tab, which shows the summary of the following:'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 这是第一个选项卡，显示以下内容的摘要：
- en: The number of channels the instance has created or is part of
  id: totrans-310
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实例已创建或参与的通道数量。
- en: The number of peers the instance is using
  id: totrans-311
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实例正在使用的对等方数量。
- en: The number of chain codes deployed and running on the instance
  id: totrans-312
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署和运行在实例上的链代码数量。
- en: Activities of channels, such as the number of blocks created and number of user
    transactions on the channels
  id: totrans-313
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通道的活动，例如通道上创建的区块数量和通道上的用户交易数量。
- en: Activities of peers, such as endorsements and commits
  id: totrans-314
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对等方的活动，例如背书和提交。
- en: The health of the instance, such as the number of nodes running and stopped
  id: totrans-315
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实例的健康状况，例如正在运行和停止的节点数量。
- en: Metrics of CPU, memory, and disk utilization
  id: totrans-316
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CPU、内存和磁盘利用率的指标。
- en: Along with these data on the dashboard, if the instance is a founder, then it
    also shows the order and the number of organizations participating in the network.
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 在仪表板上显示这些数据的同时，如果实例是创建者，则还会显示参与网络的顺序和组织的数量。
- en: There will be only one orderer per blockchain network, and it will be with the
    founder in OBP.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 每个区块链网络只会有一个排序者，并且在 OBP 中它将与创建者一起。
- en: Network topology
  id: totrans-319
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网络拓扑结构。
- en: 'This tab shows everyone who is participating in the network. Also, it shows
    a topology view of the network:'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 此选项卡显示参与网络的所有人。此外，它还显示了网络的拓扑视图：
- en: '![](img/3b1bd386-cdde-4f4d-be7d-a5ffe00b3b57.png)'
  id: totrans-321
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3b1bd386-cdde-4f4d-be7d-a5ffe00b3b57.png)'
- en: OBP network topology
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: OBP 网络拓扑结构。
- en: The preceding diagram shows the network's structure and the relationship between
    organizations and nodes.
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 上图显示了网络的结构以及组织和节点之间的关系。
- en: Nodes topology
  id: totrans-324
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 节点拓扑结构。
- en: 'This tab shows all the peers, including self peers and remote peers, who are
    all part of the network, and a CA node. If it is the founder, it can see an extra
    node for orderer. It also shows a topology view of the nodes and peers of the
    network:'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 此选项卡显示所有对等方，包括自身对等方和远程对等方，他们都是网络的一部分，以及一个 CA 节点。如果是创建者，可以看到一个额外的用于排序的节点。它还显示了网络的节点和对等方的拓扑视图：
- en: '![](img/6130964b-930f-4011-8437-4289e5710a73.png)'
  id: totrans-326
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6130964b-930f-4011-8437-4289e5710a73.png)'
- en: OBP nodes topology
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: OBP 节点拓扑结构。
- en: The preceding diagram shows the relationship between peers and channels.
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 上图显示了对等方和通道之间的关系。
- en: Channels
  id: totrans-329
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通道。
- en: This tab is for managing the channels of the instance. It will list all the
    channels that the instance is part of. A new channel also can be created from
    here. Channel-level policies can be managed, new peers can be added to the channel,
    and organizations can be added to or removed from the channel. Each channel will
    have its own ledger and it will show all the blocks and transactions of a ledger.
    Once a channel has been created, it cannot be deleted.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 此选项卡用于管理实例的通道。它将列出实例所属的所有通道。还可以从这里创建新通道。可以管理通道级别的策略，可以向通道添加新对等点，以及可以向通道添加或删除组织。每个通道都将有自己的分类帐，并显示分类帐的所有区块和交易。一旦创建了通道，就无法删除。
- en: Chaincodes
  id: totrans-331
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 链码。
- en: This tab is for managing the chaincodes and lists all the chaincodes of all
    the networks in the instance. The deployment, initiation, and instantiation of
    a chaincode can be done here. This chaincode can write to and update the ledger
    of the channel. Once the chaincode is deployed, it cannot be updated. A chaincode
    can be instantiated in multiple channels. Only one instantiation of a chaincode
    is allowed per version per chaincode in a channel, which means that if a chaincode
    is instantiated on a node in a channel, then the other nodes in the channel need
    only to deploy the chaincode, and instantiation will be reflected automatically
    on them. Each chaincode has its own logs and private data collections, which are
    also accessible from this tab.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 此标签用于管理链码，并列出实例中所有网络的所有链码。这里可以进行链码的部署、启动和实例化。该链码可以写入并更新渠道的分类账。一旦部署链码，它不能被更新。链码可以在多个渠道中实例化。每个链码在一个渠道中每个版本只能实例化一次，这意味着如果在一个渠道的节点上实例化了链码，那么渠道中的其他节点只需部署链码，实例化将自动反映在它们上面。每个链码都有其自己的日志和私有数据集合，这些数据也可以从此标签访问。
- en: Developer tools
  id: totrans-333
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开发者工具。
- en: This tab allows us to visit the OBP documentation and provides the download
    links for SDKs, tools, and pre-built sample chaincodes from Oracle.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 此标签允许我们访问 OBP 文档，并提供来自 Oracle 的 SDK、工具和预构建示例链码的下载链接。
- en: We will see how to create a blockchain network and invite organizations to participate
    in the network, create and deploy chaincodes, use chaincodes, test the ledger,
    use REST proxy, and more, in the coming chapters.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将了解如何创建区块链网络并邀请组织参与网络，创建和部署链码，使用链码，测试分类账，使用 REST 代理等等。
- en: Rich history database with OBP
  id: totrans-336
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 与 OBP 一起使用丰富历史数据库。
- en: OBP uses the Hyperledger Fabric history database to manage the ledger and present
    ledger transaction information in the console. Only chaincodes can access this
    history database and it cannot be exposed to any external applications to query
    for analytics. Analytics cannot be ignored in any business, even if they provide
    blockchain services. Hence, OBP integrates the rich history database to fulfill
    this requirement.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: OBP 使用 Hyperledger Fabric 历史数据库来管理分类账，并在控制台中呈现分类账交易信息。只有链码可以访问这个历史数据库，不能向任何外部应用程序公开查询分析数据。即使它们提供区块链服务，分析也不能被忽略。因此，OBP
    集成了丰富的历史数据库以满足这一要求。
- en: The rich history database is external to OBP and contains data about the blockchain
    ledger's transactions on the channels you select. You can integrate the rich history
    database into the OBP instance console and select the channels whose data needs
    to be captured in the database. Once the rich history database is enabled on a
    channel, then all the transactions on the channel sync to the database. This level
    of data collection makes the rich history database an excellent data source to
    generate analytics and visualization reports of the ledger activities. You can
    use any analytics tool, such as Oracle Analytics Cloud or Oracle Data Visualization
    Cloud Service, to access the rich history database and create analytics reports
    or data visualizations.
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 丰富历史数据库是 OBP 外部的，并包含您选择的渠道中区块链账本交易的数据。您可以将丰富的历史数据库集成到 OBP 实例控制台中，并选择需要在数据库中捕获数据的渠道。一旦在一个渠道上启用丰富历史数据库，该渠道的所有交易都将同步到数据库中。这种级别的数据收集使丰富历史数据库成为生成分类账活动分析和可视化报告的绝佳数据源。您可以使用任何分析工具，例如
    Oracle Analytics Cloud 或 Oracle Data Visualization Cloud Service，访问丰富历史数据库并创建分析报告或数据可视化。
- en: OBP only supports an Oracle database such as Oracle Autonomous Data Warehouse or
    **Oracle Database Cloud Service** (**ODCS**) with OCI to create your rich history
    database.
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: OBP 只支持 Oracle 数据库，例如 Oracle Autonomous Data Warehouse 或 **Oracle Database Cloud
    Service**（**ODCS**），使用 OCI 创建丰富的历史数据库。
- en: Create the ODCS connection string
  id: totrans-340
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建 ODCS 连接字符串。
- en: OBP can be integrated with ODCS in OCI as a rich history database. However,
    it must also be enabled access to the database through port `1521`.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: OBP 可以在 OCI 中与 ODCS 集成为丰富历史数据库。然而，还必须通过端口 `1521` 启用对数据库的访问。
- en: Fetching ODCS information
  id: totrans-342
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取 ODCS 信息。
- en: 'The process of creating a connection to ODCS in the OCI console is as follows:'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 在 OCI 控制台中创建与 ODCS 连接的过程如下：
- en: Log in to Oracle Cloud, andthe My Services page will open.
  id: totrans-344
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录 Oracle Cloud，My Services 页面将会打开。
- en: Click on the hamburger icon in the top-left corner, expand the Services menu,
    and select the Database option.
  id: totrans-345
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击左上角的汉堡菜单图标，展开“服务”菜单，选择“数据库”选项。
- en: Under DB Systems, locate the database to be connected and record its public
    IP address.
  id: totrans-346
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在DB系统下，找到要连接的数据库并记录其公共IP地址。
- en: 'Click on the name of the database and capture the values of the following fields:'
  id: totrans-347
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击数据库的名称并捕获以下字段的值：
- en: Database Unique Name
  id: totrans-348
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据库唯一名称
- en: Host Domain Name
  id: totrans-349
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主机域名
- en: Port
  id: totrans-350
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 端口
- en: Find the username and password of a database user with read permissions for
    this database.
  id: totrans-351
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查找具有对此数据库的读取权限的数据库用户的用户名和密码。
- en: Enabling port 1521 to access the database
  id: totrans-352
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启用端口1521以访问数据库
- en: 'The procedure to enable port `1521` on the ODCS is as follows:'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 在ODCS上启用端口`1521`的过程如下：
- en: As shown earlier, navigate to DB Systems and click the database to be connected.
  id: totrans-354
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如前所示，导航至DB系统并单击要连接的数据库。
- en: Click on Virtual Cloud Network.
  id: totrans-355
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“虚拟云网络”。
- en: Under Security Lists, navigate to the corresponding subnet.
  id: totrans-356
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在安全性列表下，导航到相应的子网。
- en: Click Default Security List For <Target Database>. The security list page will
    be displayed.
  id: totrans-357
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“<目标数据库>的默认安全列表”。将显示安全列表页面。
- en: Click on Edit All Rules.
  id: totrans-358
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“编辑所有规则”。
- en: 'Add an ingress rule to allow any incoming traffic from the public internet
    to reach port `1521` on this database node with the following settings:'
  id: totrans-359
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加一个入口规则，允许来自公共互联网的任何流量到达此数据库节点的端口`1521`，设置如下：
- en: 'SOURCE CIDR: `0.0.0/0`'
  id: totrans-360
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 源CIDR：`0.0.0/0`
- en: IP PROTOCOL: `TCP`
  id: totrans-361
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: IP协议：`TCP`
- en: SOURCE PORT RANGE: `All`
  id: totrans-362
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 源端口范围：`全部`
- en: DESTINATION PORT RANGE: `1521`
  id: totrans-363
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标端口范围：`1521`
- en: 'Allows: TCP traffic for ports: `1521`'
  id: totrans-364
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许：端口为`1521`的TCP流量
- en: Creating a connection string
  id: totrans-365
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建连接字符串
- en: 'After enabling access to the Oracle database, use the information collected
    to build the connection string in the Configure Rich History dialog. Construct
    the connection string as follows:'
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 启用对Oracle数据库的访问后，请使用收集的信息在“配置丰富历史记录”对话框中构建连接字符串。构建连接字符串如下：
- en: '[PRE12]'
  id: totrans-367
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The following example shows what a connection string looks like:'
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例显示了连接字符串的样式：
- en: '[PRE13]'
  id: totrans-369
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Configuring the rich history database in OBP
  id: totrans-370
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置OBP中的丰富历史数据库
- en: 'Each blockchain network instance can configure its own rich history database,
    and here is the procedure to do this:'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 每个区块链网络实例都可以配置自己的丰富历史数据库，以下是执行此操作的步骤：
- en: Open the console of the blockchain network instance.
  id: totrans-372
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开区块链网络实例的控制台。
- en: 'Click on the option button (the hamburger icon in the top-right corner) and
    click on Configure Rich History. A configuration dialog will open:'
  id: totrans-373
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击选项按钮（右上角的汉堡图标），然后点击“配置丰富历史记录”。将打开配置对话框：
- en: '![](img/a77a4ece-9258-4729-b4f0-6cc69f6f4e3e.png)'
  id: totrans-374
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a77a4ece-9258-4729-b4f0-6cc69f6f4e3e.png)'
- en: Configure rich history
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 配置丰富的历史记录
- en: Enter the **User Name** and **Password** of the database to be connected.
  id: totrans-376
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入数据库的**用户名**和**密码**。
- en: 'In the Connection String field, enter the connection string of the database
    in which the rich history data will be stored. This input depends on the Oracle
    database being used:'
  id: totrans-377
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“连接字符串”字段中，输入将存储丰富历史数据的数据库的连接字符串。此输入取决于正在使用的Oracle数据库：
- en: If the database is Oracle Autonomous Warehouse, then the connection string is
    like `<username>adw_high`.
  id: totrans-378
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果数据库是Oracle自主仓库，则连接字符串类似于`<用户名>adw_high`。
- en: If the database is ODCS with OCI, get the connection string as discussed in
    the *Create the ODCS connection string* section.
  id: totrans-379
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果数据库是OCI的ODCS，请按照“创建ODCS连接字符串”部分讨论的步骤获取连接字符串。
- en: If you are using a non-autonomous database and want to use the `sys` user to
    connect the database, then you must append `?as=sys[dba|asm|oper]` to the connection
    string, for example, `123.123.123.123:1521/example.oraclevcn.com?as=sysdba`.
  id: totrans-380
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您使用的是非自治数据库，并且想要使用`sys`用户连接数据库，则必须在连接字符串后面附加`?as=sys[dba|asm|oper]`，例如，`123.123.123.123:1521/example.oraclevcn.com?as=sysdba`。
- en: If you are using Oracle Autonomous Database, then instead of connection string,
    you can also use wallet file. This file contains client credentials and is generated
    from the Oracle autonomous database.
  id: totrans-381
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您使用的是Oracle自主数据库，则可以使用钱包文件而不是连接字符串。该文件包含客户端凭据，并且是从Oracle自主数据库生成的。
- en: Click on the Save button.
  id: totrans-382
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“保存”按钮。
- en: To update this configuration, repeat the same procedure.
  id: totrans-383
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要更新此配置，请重复相同的步骤。
- en: 'The following screenshot is for your reference:'
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图供参考：
- en: '![](img/77bf71f6-e907-4ef2-a69b-cfe5e0f04fdf.png)'
  id: totrans-385
  prefs: []
  type: TYPE_IMG
  zh: '![](img/77bf71f6-e907-4ef2-a69b-cfe5e0f04fdf.png)'
- en: Configure Rich History
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 配置丰富历史记录
- en: Enabling channels that write data to the rich history database
  id: totrans-387
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启用将数据写入丰富历史数据库的通道
- en: 'Before enabling a rich history database on channels, it must be configured
    in the instance. Follow these steps:'
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 在启用通道将数据写入丰富历史数据库之前，必须在实例中配置它。请按照以下步骤操作：
- en: Open the console of the blockchain instance and go to the Channels tab
  id: totrans-389
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开区块链实例的控制台，转到通道选项卡
- en: Locate the channel and click on the More Options icon
  id: totrans-390
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定位通道并单击 More Options 图标
- en: To add the channel to the rich history database, click on the Configure Rich
    History option from the menu
  id: totrans-391
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要将通道添加到富历史数据库中，请从菜单中单击配置富历史选项
- en: A Configure Rich History dialog will open with an Enable Rich History checkbox
  id: totrans-392
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将打开一个配置富历史对话框，里面有一个启用富历史的复选框
- en: Click on the checkbox to add the channel, and uncheck it to remove the channel
  id: totrans-393
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击复选框以添加通道，取消选中以删除通道
- en: Click on the Save button
  id: totrans-394
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击保存按钮
- en: Rich history database tables and columns
  id: totrans-395
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 富历史数据库的表格和列
- en: 'When the rich history database is configured on a channel, three tables will
    be created in the database for the channel: history, state, and latest height.
    To create analytic reports, the history and state tables will be queried:'
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 当富历史数据库配置在一个通道上时，将在数据库中创建三张表格：历史表、状态表和最新高度。为了创建分析报告，将进行历史和状态表的查询：
- en: '![](img/8ef5bf92-7cbc-4b48-870c-23f3f806e63f.png)'
  id: totrans-397
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8ef5bf92-7cbc-4b48-870c-23f3f806e63f.png)'
- en: Rich history tables
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 富历史表格
- en: Let's see each table and its columns.
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看每一个表格及其列。
- en: History table
  id: totrans-400
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 历史表
- en: The name of this table is similar to `<instance name>_<channel name>_hist`.
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 此表的名称类似于 `<instance name>_<channel name>_hist`。
- en: 'This table contains the history of the ledger of the channel. Here is the list
    of columns and their datatypes:'
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 该表包含了通道分类账的历史。以下是列及其数据类型的列表：
- en: '| **Column** | **Datatype** |'
  id: totrans-403
  prefs: []
  type: TYPE_TB
  zh: '| **列** | **数据类型** |'
- en: '| --- | --- |'
  id: totrans-404
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `chaincodeId` | `VARCHAR2 (256)` |'
  id: totrans-405
  prefs: []
  type: TYPE_TB
  zh: '| `chaincodeId` | `VARCHAR2 (256)` |'
- en: '| `key` | `VARCHAR2 (1024)` |'
  id: totrans-406
  prefs: []
  type: TYPE_TB
  zh: '| `key` | `VARCHAR2 (1024)` |'
- en: '| `txnIsValid` | `NUMBER (1)` |'
  id: totrans-407
  prefs: []
  type: TYPE_TB
  zh: '| `txnIsValid` | `NUMBER (1)` |'
- en: '| `value` | `VARCHAR2 (4000)` |'
  id: totrans-408
  prefs: []
  type: TYPE_TB
  zh: '| `value` | `VARCHAR2 (4000)` |'
- en: '| `valueJson` | `CLOB` |'
  id: totrans-409
  prefs: []
  type: TYPE_TB
  zh: '| `valueJson` | `CLOB` |'
- en: '| `blockNo` | `NUMBER NOT NULL` |'
  id: totrans-410
  prefs: []
  type: TYPE_TB
  zh: '| `blockNo` | `NUMBER NOT NULL` |'
- en: '| `txnNo` | `NUMBER NOT NULL` |'
  id: totrans-411
  prefs: []
  type: TYPE_TB
  zh: '| `txnNo` | `NUMBER NOT NULL` |'
- en: '| `txnId` | `VARCHAR2 (128)` |'
  id: totrans-412
  prefs: []
  type: TYPE_TB
  zh: '| `txnId` | `VARCHAR2 (128)` |'
- en: '| `txnTimestamp` | `TIMESTAMP` |'
  id: totrans-413
  prefs: []
  type: TYPE_TB
  zh: '| `txnTimestamp` | `TIMESTAMP` |'
- en: '| `txnIsDelete` | `NUMBER (1)` |'
  id: totrans-414
  prefs: []
  type: TYPE_TB
  zh: '| `txnIsDelete` | `NUMBER (1)` |'
- en: Note that the `value` and `valueJson` columns are used in a mutually exclusive
    way. That is, when a key value is valid JSON, then the value is set into the `valueJson` column.
    Otherwise, the value is set in the `value` column. The `valueJson` column is set
    up as a JSON column in the database, which means that users can query that column
    using the usual Oracle JSON-specific extensions.
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意 `value` 和 `valueJson` 列以相互排斥的方式使用。也就是说，当键值为有效 JSON 时，该值会被设定到 `valueJson` 列中。否则，该值会被设定到 `value` 列中。 `valueJson` 列在数据库中被设置为
    JSON 列，这意味着用户可以使用通常的 Oracle JSON 特定扩展查询该列。
- en: State table
  id: totrans-416
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 状态表
- en: The name of this table is similar to `<instance name>_<channel name>_state`.
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: 此表的名称类似于 `<instance name>_<channel name>_state`。
- en: 'This table replicates data from the state database. Here is the list of columns
    and their datatypes:'
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: 该表从状态数据库复制数据。以下是列及其数据类型的列表：
- en: '| **Column** | **Datatype** |'
  id: totrans-419
  prefs: []
  type: TYPE_TB
  zh: '| **列** | **数据类型** |'
- en: '| --- | --- |'
  id: totrans-420
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `chaincodeId` | `VARCHAR2 (256)` |'
  id: totrans-421
  prefs: []
  type: TYPE_TB
  zh: '| `chaincodeId` | `VARCHAR2 (256)` |'
- en: '| `key` | `VARCHAR2 (1024)` |'
  id: totrans-422
  prefs: []
  type: TYPE_TB
  zh: '| `key` | `VARCHAR2 (1024)` |'
- en: '| `value` | `VARCHAR2 (4000)` |'
  id: totrans-423
  prefs: []
  type: TYPE_TB
  zh: '| `value` | `VARCHAR2 (4000)` |'
- en: '| `valueJson` | `CLOB` |'
  id: totrans-424
  prefs: []
  type: TYPE_TB
  zh: '| `valueJson` | `CLOB` |'
- en: '| `blockNo` | `NUMBER` |'
  id: totrans-425
  prefs: []
  type: TYPE_TB
  zh: '| `blockNo` | `NUMBER` |'
- en: '| `txnNo` | `NUMBER` |'
  id: totrans-426
  prefs: []
  type: TYPE_TB
  zh: '| `txnNo` | `NUMBER` |'
- en: The `value` and `valueJson` columns are used in a mutually exclusive way, as
    in the history table.
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: '`value` 和 `valueJson` 列在历史表格中是相互排斥使用的。'
- en: Latest height table
  id: totrans-428
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最新高度表
- en: The name of this table is similar to `<instance name>_<channel name>_last`.
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: 此表的名称类似于 `<instance name>_<channel name>_last`。
- en: This table is used by OBP internally to track the block height recorded in the
    rich history database. This table cannot be queried for analytics.
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: 此表由 OBP 内部用于跟踪富历史数据库中记录的块高度。这张表格无法用于分析查询。
- en: 'Here''s a screenshot for your reference to see these earlier tables when the
    rich history database is connected to the **SQL Developer** tool:'
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一个屏幕截图，当富历史数据库连接到 **SQL Developer** 工具时，您可以参考以查看先前的表格：
- en: '![](img/dec50c32-ce32-464e-993a-702dbb00f8d2.png)'
  id: totrans-432
  prefs: []
  type: TYPE_IMG
  zh: '![](img/dec50c32-ce32-464e-993a-702dbb00f8d2.png)'
- en: Rich history tables with columns
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: 含有列的富历史表格
- en: Summary
  id: totrans-434
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Businesses are constantly looking for effective and efficient ways to leverage
    blockchain technology, along with their SaaS, BPM, and other applications. BaaS
    allows them to realize it. This chapter offered a glimpse at OBP. This chapter
    was focused on designing a solution in line with the constructs of OBP. This chapter
    covered the sample business network topology, network artifacts, and solution
    and deployment architecture. This chapter also delved into defining and creating
    an instance of a founder-based business network and adding participants to it.
    The knowledge gained through this chapter will help you manage the blockchain
    network in the next chapter, and acts as a foundational milestone for developing
    solutions on OBP, as described in the previous chapter. The following chapter
    allows you to deep dive into the administration aspects of OBP and teaches you
    to translate network topology on OBP. It delves into peers, orders, and channel
    configurations. It also provides details on REST configuration and the administration
    of REST interfaces. Subsequent chapters will cover more on OBP and highlight the
    power of Oracle BaaS Platform.
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: 企业不断寻找有效和高效的方法来利用区块链技术，以及它们的SaaS、BPM和其他应用。BaaS使他们能够实现这一目标。本章提供了对OBP的一瞥。本章重点介绍了与OBP构造相一致的解决方案的设计。本章涵盖了示例业务网络拓扑、网络构件以及解决方案和部署架构。本章还深入探讨了定义并创建基于创始人的业务网络实例以及向其中添加参与者。通过本章获得的知识将帮助您在下一章中管理区块链网络，并作为在上一章中描述的OBP解决方案开发的基础性里程碑。接下来的章节将让您深入了解OBP的管理方面，并教您在OBP上翻译网络拓扑。它深入探讨了对等体、排序和通道配置。它还提供了有关REST配置和REST接口管理的详细信息。随后的章节将更多地涵盖OBP，并突出了Oracle
    BaaS平台的强大功能。
