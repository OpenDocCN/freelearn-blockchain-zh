- en: Hyperledger – Blockchain for Businesses
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Hyperledger – 企业级区块链
- en: After understanding the architecture, core components, and the process of blockchain
    technology, it is important to explore the possibilities in regards to fulfilling
    business needs. Blockchain is responsible for running distributed networks without
    third-party regulator. It is now becoming an essential component to consider and
    this will shape the next-generation financial technology and governance model.
    However, blockchains used for cryptocurrency are highly focused on rewards and
    giving incentives to their participants, such as Bitcoin and Ethereum. To overcome
    this challenge, The Linux Foundation and industry leaders have collaborated to
    form a distributed ledger-based project named the Hyperledger project. In this
    chapter, you will learn about how the Hyperledger project is different from existing
    blockchain technologies, its core components, transaction flow, and turning up
    an application with Hyperledger technology.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在了解了区块链技术的架构、核心组件和流程之后，探索满足业务需求的可能性至关重要。区块链负责在没有第三方监管机构的情况下运行分布式网络。现在，它正在成为必须考虑的重要组成部分，并将塑造下一代金融技术和治理模式。然而，用于加密货币的区块链非常专注于奖励并为参与者提供激励，例如比特币和以太坊。为了克服这一挑战，Linux
    Foundation 和行业领导者合作成立了一个基于分布式账本的项目，名为 Hyperledger 项目。在本章中，您将了解 Hyperledger 项目与现有区块链技术的不同之处，其核心组件、交易流程以及如何使用
    Hyperledger 技术启动应用程序。
- en: 'You will learn the following topics in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 您将在本章中学习以下主题：
- en: Hyperledger overview
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Hyperledger 概述
- en: Blockchain as a service
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 区块链即服务
- en: Architecture and core components
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 架构和核心组件
- en: Hyperledger Fabric model
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Hyperledger Fabric 模型
- en: Bitcoin versus Etherum versus Hyperledger
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 比特币对以太坊对 Hyperledger
- en: Hyperledger Fabric capabilities
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Hyperledger Fabric 的功能
- en: Lab using the Tuna application
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Tuna 应用程序的实验室
- en: Technical requirements
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: This chapter consists of a lab to demonstrate the Hyperledger application to
    solve real-life challenges in supply chain management. It is required that you
    have the source code from the following link at [https://github.com/hyperledger/education.git](https://github.com/hyperledger/education.git).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本章包括一个实验室，演示了将 Hyperledger 应用于解决供应链管理中的真实挑战。需要你从以下链接获取源代码：[https://github.com/hyperledger/education.git](https://github.com/hyperledger/education.git)。
- en: Hyperledger overview
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Hyperledger 概述
- en: Hyperledger is an open source initiative focused on covering core industry needs
    with distributed ledger technologies. It's a group program hosted by The Linux
    Foundation in collaboration with several industry giants in information technology,
    banking, logistics, transportation, finance, manufacturing, and IoT.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Hyperledger 是一个专注于满足核心行业需求的分布式账本技术的开源倡议。这是一个由 Linux Foundation 主办的团体计划，与信息技术、银行业、物流、交通运输、金融、制造业和物联网等几家行业巨头合作。
- en: Although cryptocurrency is still struggling to gain trust with several government
    and corporate bodies, blockchain is being adopted as a key to secure business
    operations and management technology. Because of the rigid and static nature of
    Bitcoin, it can't be used for business application purposes. Although Ethereum
    has the capability of turning up business applications with its smart contracts,
    because of its permissionless use cases, financial institutes and other critical
    business operations have hesitated to try the Ethereum blockchain.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管加密货币仍在努力赢得几个政府和企业机构的信任，但区块链正在被采用作为保障业务运营和管理技术的关键。由于比特币的刚性和静态性质，它不能用于业务应用目的。尽管以太坊具有使用智能合约启动业务应用程序的能力，但由于其无许可使用案例，金融机构和其他关键业务操作已经犹豫尝试以太坊区块链。
- en: Hyperledger is the only distributed ledger technology framework that was built
    to be granular for businesses that were in need of permissioned blockchains to
    achieve better control over an entire system. Hyperledger does not support  any
    cryptocurrency platform or related system, as it is more about solving critical
    business problems.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Hyperledger 是唯一一个专为需要许可区块链以实现对整个系统更好控制的企业而构建的分布式账本技术框架。Hyperledger 不支持任何加密货币平台或相关系统，因为它更多关注解决关键业务问题。
- en: Founded in December 2015, Hyperledger has been appreciated and adopted by several
    industry leaders such as Accenture, Airbus, American Express, Cisco, Fujitsu,
    Hitachi, IBM, Intel, SAP, NEC, BBVA, Bitmark, Bosch, CA Technologies, Capgemini,
    EY, Factom, H3C, NSE, Oracle, PwC, Redhat, Samsung, Ripple, Thales, Wipro, the
    Cloud Security Alliance, and many more.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 成立于2015年12月，Hyperledger 被许多行业领导者所赞赏和采用，例如埃森哲、空中客车、美国运通、思科、富士通、日立、IBM、英特尔、SAP、NEC、西班牙经济银行、Bitmark、博世、CA科技、卡普吉米尼、安永、Factom、H3C、印度国家证券交易所、甲骨文、普华永道、红帽、三星、瑞波、泰利斯、威睿普罗和云安全联盟等等。
- en: The Hyperledger project is also planned for collaboration between every blockchain
    enthusiast, blockchain communities, corporates, and nonprofit organizations with
    a single and comprehensive standard of building distributed ledger applications.
    In the way that WordPress revolutionized the method and turn-up time for a website,
    Hyperledger is on its way to reducing the cost and overall time in turning up
    a distributed ledger application.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Hyperledger 项目还计划通过一个单一和全面的标准，促进区块链爱好者、区块链社区、企业和非营利组织之间的合作，用于构建分布式账本应用程序。就像
    WordPress 革新了网站的制作方法和上线时间一样，Hyperledger 正在努力降低构建分布式账本应用程序的成本和总体时间。
- en: Blockchain-as-a-service (BaaS)
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 区块链即服务（BaaS）
- en: Since the birth of cloud computing, one of the hottest terms that has changed
    the way a product or a service can be delivered or deployed is *X (anything) as
    a service,* where *X* is any form of software or application. After the world
    recognized the immersive power of blockchain, industry leaders began to explore
    various possibilities of using blockchain with their existing cloud infrastructure
    models such as supply chain management, identity and access control, database
    management, and many more. Hyperledger resembles to the distributed ledger technology
    however blockchain technology has been taken a special focus in the ecosystem.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 自从云计算问世以来，一个改变产品或服务交付或部署方式的热门术语是 *X（任何东西）即服务*，其中 *X* 是任何形式的软件或应用。在世界认识到区块链的沉浸式力量后，行业领导者开始探索使用区块链与其现有云基础架构模型（例如供应链管理、身份和访问控制、数据库管理等）结合的各种可能性。Hyperledger
    类似于分布式账本技术，但区块链技术在该生态系统中受到了特别关注。
- en: With the Azure Blockchain service, Microsoft became the first software vendor
    to launch BaaS in 2015\. Microsoft, in close collaboration with ConsenSys, announced
    that it was going to develop an Ethereum BaaS on the Microsoft Azure platform.
    SAP launched its own BaaS platform and named it *Leonardo*, which is a Hyperledger-based
    cloud service.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 Azure 区块链服务，微软成为2015年首家推出 BaaS 的软件供应商。微软与 ConsenSys 密切合作，宣布将在 Microsoft Azure
    平台上开发基于以太坊的 BaaS。SAP 推出了自己的 BaaS 平台，并命名为 *Leonardo*，这是一个基于 Hyperledger 的云服务。
- en: Deloitte, the largest consulting firm, has come up with a blockchain-based business
    solution and named it Rubix Core. It is an architecture designed for building
    private and customized networks for their clients.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 德勤是最大的咨询公司，提出了一种基于区块链的业务解决方案，并将其命名为 Rubix Core。这是一个为他们的客户构建私有和定制网络的架构。
- en: Program goal
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编程目标
- en: 'The Hyperledger project has been widely appreciated for its upfront effort
    to develop cross-industry frameworks for platform collaboration. The financial
    industry has been the most active in collaborating with Hyperledger platforms
    to achieve a seamless move. Let''s understand the goals of the Hyperledger project
    to get the sense of its roadmap:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: Hyperledger 项目因其为平台协作开发跨行业框架而付出的努力而受到广泛赞赏。金融行业一直是与 Hyperledger 平台合作实现无缝转移的最活跃行业。让我们了解
    Hyperledger 项目的目标，以了解其路线图：
- en: '**Community-driven infrastructure**: As the Hyperledger project is supported
    by several private and government institutions, it presents a highly efficient
    and open community-driven environment'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**社区驱动的基础设施**：由于 Hyperledger 项目得到了几家私营和政府机构的支持，它呈现出一个高效、开放的社区驱动环境。'
- en: '**Enterprise-grade framework**: Unlike the cryptocurrency blockchain, Hyperledger
    was developed to support businesses to perform secure and reliable transactions
    over distributed ledger networks'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**企业级框架**：与加密货币区块链不同，Hyperledger 的开发目的是支持企业在分布式账本网络上执行安全可靠的交易。'
- en: '**Building technical communities**: The project is also aimed at building a
    more effective and larger technical community to innovate and develop blockchain
    smart contacts and other related codes'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**建立技术社区**：该项目还旨在建立一个更有效、更大的技术社区，以创新和开发区块链智能合约和其他相关代码。'
- en: '**Awareness**: It''s a great way to spread awareness to businesses and other
    institutions about blockchain technology and its business use cases'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**意识**：这是向企业和其他机构传播有关区块链技术及其商业用例的重要途径。'
- en: Architecture and core components
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 架构和核心构件
- en: 'Hyperledger is an open source framework that allows businesses to build enterprise-grade
    solutions based on distributed ledger technology. This framework consists of the
    following building blocks:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: Hyperledger是一个开源框架，允许企业基于分布式分类账技术构建企业级解决方案。该框架由以下构件组成：
- en: '**Shared ledger**: It is an append-only ledger, and it stores the blocks in
    chronological order'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**共享账本**：这是一个只追加账本，按照时间顺序存储区块。'
- en: '**Consensus algorithm**: It''s a method to achieve a common agreement over
    a change in distributed ledger'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**共识算法**：这是一种实现分布式分类账变更的共识方法。'
- en: '**Privacy**: The main purpose of building the Hyperledger was to achieve a
    permissioned network for secure and reliable transactions in mission-critical
    business environment'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**隐私**：构建Hyperledger的主要目的是在关键业务环境中实现安全可靠的受许可网络进行交易。'
- en: '**Smart contract**: This is a granular method to plan and process the transaction
    requests'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**智能合约**：这是一种粒度细的方法，用于规划和处理交易请求。'
- en: 'Let''s understand the Hyperledger architecture:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们了解Hyperledger架构：
- en: '**Consensus layer**: This is majorly responsible for generating an agreement
    on each order and validating transactions based on a predefined set of rules'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**共识层**：这主要负责根据预定义的一组规则就每个订单达成一致，并验证交易。'
- en: '**Smart contract layer**: This takes care of transaction requests and applying
    business logic'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**智能合约层**：这负责处理交易请求并应用业务逻辑。'
- en: '**Communication layer**: This facilitates a platform that allows nodes to communicate
    over peer-to-peer transport'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**通信层**：这提供了一个允许节点通过点对点传输进行通信的平台。'
- en: '**Data store abstraction**: This allows various data sources to be used by
    other modules'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据存储抽象**：这允许其他模块使用各种数据源。'
- en: '**Crypto abstraction**: This allows different crypto algorithms to be used
    without impacting other modules'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**加密抽象化**：这允许使用不同的加密算法而不影响其他模块。'
- en: '**Identity services**: This enables the deployment of root of trust during
    the blockchain setup with additional authentication and authorization cover'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**身份服务**：这在区块链设置期间启用信任根，并提供额外的身份验证和授权保障。'
- en: '**Policy services**: This is responsible for managing several policies, such
    as the consensus policy, endorsement policy, and the group management policy'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**策略服务**：这负责管理多个策略，如共识策略、背书策略和群组管理策略。'
- en: '**APIs**: This enables clients and applications to talk to blockchain modules'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**APIs**：这使得客户端和应用可以与区块链模块进行交流。'
- en: '**Interoperation**: This provides interoperability among different blockchain
    instances'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**互操作性**：这在不同的区块链实例之间提供互操作性。'
- en: 'Let''s understand various Hyperledger frameworks, which are mentioned as follows:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们了解各种Hyperledger框架，具体如下所述：
- en: '![](img/5f879b72-5af3-40bf-aa8a-c6b135b33859.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/5f879b72-5af3-40bf-aa8a-c6b135b33859.png)'
- en: '**Iroha**: Hyperledger Iroha is a blockchain framework contributed by Soramitsu,
    Hitachi, NTT DATA, and Colu. It is designed to be used by mobile application developers
    under Android and iOS packages. It has a simple design with the C++ programming
    package along with the YAC consensus algorithm.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Iroha**：Hyperledger Iroha是由Soramitsu、日立、NTT DATA和Colu贡献的区块链框架。旨在供Android和iOS包下的移动应用程序开发人员使用。采用C++编程包和YAC共识算法进行简单设计。'
- en: '**Sawtooth**: It is contributed to by Intel and is built to use several consensus
    algorithms based on the size of the network. By default, Hyperledger Sawtooth
    uses **Proof of Elapsed Time** (**PoET**) to achieve consensus among nodes. It
    is designed for versatility to support both permissioned and permissionless implementations.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Sawtooth**：它由英特尔投入，并根据网络规模使用多种共识算法构建。默认情况下，Hyperledger Sawtooth使用**时间过证明**（**PoET**）来实现节点之间的共识。旨在灵活支持受权限和无许可实施。'
- en: '**Indy**: Hyperledger Indy is a distributed ledger to achieve business solutions
    for decentralized identities and provides interoperability across several supporting
    **Distributed Ledger Technologies** (**DLT**). It is designed to achieve privacy
    across the nodes and throughout the transactions.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Indy**：Hyperledger Indy是一个分布式分类账，用于实现分散身份的企业解决方案，并提供对多种支持的**分布式分类账技术**（**DLT**）的互操作性。旨在在节点和整个交易过程中实现隐私。'
- en: '**Burrow**: Hyperledger Burrow is a permissionable smart contract that provides
    a modular blockchain client with a permissioned smart contract interpreter built
    with **Ethereum Virtual Machine** (**EVM**).'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Burrow**：Hyperledger Burrow是一个可许可的智能合约，提供了带有Ethereum虚拟机（EVM）的可许可的智能合约解释器的模块化区块链客户端。 '
- en: Hyperledger Fabric model
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Hyperledger Fabric模型
- en: The Hyperledger Fabric project is powered by the IBM blockchain platform and
    is hosted with The Linux Foundation, with its key highlight over confidential
    transactions being a permissioned network, programmable business login, and no
    need for cryptocurrency computational methods.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: Hyperledger Fabric项目由IBM区块链平台提供支持，并由Linux基金会托管，其主要亮点是机密交易的权限网络、可编程的商业逻辑和无需加密货币计算方法。
- en: We're seeing great results and actively preparing for the transition to 1.1.0\.
    Our latest offering, the IBM Blockchain Platform Starter Plan, will be among one
    of the first products in the market to deliver on this new release—Jerry Cuomo,
    VP of IBM blockchain technology.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我们正在看到了很好的结果，并积极准备过渡到1.1.0版本。我们的最新产品，IBM区块链平台入门计划，将是市场上首批推出这一新版本的产品之一——IBM区块链技术副总裁Jerry
    Cuomo。
- en: After getting an insight into Hyperledger Fabric and other projects under the
    Hyperledger project umbrella, it's time to understand the technology practically
    and also some of the challenges during its deployment steps.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在了解Hyperledger Fabric和Hyperledger项目的其他项目之后，现在是时候了解这项技术的实际情况，以及在部署步骤中遇到的一些挑战。
- en: Hyperledeger Fabric core components
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Hyperledger Fabric核心组件
- en: 'After understanding the transaction flow, it is important to get insight into
    how communication is established and maintained among several nodes of the network:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在理解交易流程之后，重要的是了解网络中多个节点之间的通信是如何建立和维护的：
- en: '**Nodes: **There are the following three roles in the Hyperledger network:'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**节点：**在Hyperledger网络中存在以下三种角色：'
- en: '**Clients**: Clients propose the transaction request on the network. It has
    to be connected to a peer to participate in blockchain. The client has the right
    to connect the desired peer to the network.'
  id: totrans-57
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**客户端**：客户端在网络上提出交易请求。它必须连接到对等方才能参与区块链。客户端有权将所需的对等方连接到网络。'
- en: '**Peers**: Peers listen to the ledger update and keep a copy of it. Based on
    their nature, there could be two further types:'
  id: totrans-58
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**对等方**：对等方监听账本更新并保存其副本。根据其性质，可能存在两种进一步的类型：'
- en: '**Endorsing peers**: Endorsers simulate and endorse transactions'
  id: totrans-59
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**认可对等方**：认可者模拟和认可交易'
- en: '**Committing peers**: Committers validate transactions before committing transactions
    in the network'
  id: totrans-60
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**提交对等方**：在网络中提交交易之前，提交者验证交易'
- en: '**Ordering service**: The ordering service accepts endorsed transactions, arranges
    and orders them into a block, and finally delivers it to committing peers. The
    ordering service also provides a shared and secure communication channel for clients
    and peers. It acts as a medium for broadcasting transactions and helps us deliver
    this to peers.'
  id: totrans-61
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**排序服务**：排序服务接受认可的交易，将其排列并排序为一个区块，最终交付给提交对等方。排序服务还为客户端和对等方提供了一个共享和安全的通信渠道。它作为广播交易的媒介，帮助我们将其交付给对等方。'
- en: '**Ledger**: Just like with Bitcoin and Ethereum, Hyperledger ledger provides
    a verified list of all valid and invalid transactions throughout the system''s
    operation. It is created by an ordering service and is kept with all the peers
    in the network.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分类账**：就像比特币和以太坊一样，Hyperledger分类账提供了系统运行期间所有有效和无效交易的经过验证的列表。它由一个排序服务创建，并保存在网络中的所有对等方那里。'
- en: '**Channel**: The Hyperledger Fabric channel is a restricted communication medium
    for nodes to conduct confidential transactions. A channel is specific for a member,
    a shared ledger, a chaincode application, and the ordering service node. Each
    peer who joins the channel has to get a grant from the **Membership Service Provider**
    (**MSP**), which verifies each peer to its respective channel peers and services.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**通道**：Hyperledger Fabric通道是节点之间进行机密交易的受限通信媒介。通道对于成员、共享账本、链码应用程序和排序服务节点是特定的。加入通道的每个对等方都必须从**成员服务提供商**（MSP）那里获得许可，MSP验证每个对等方与其各自的通道对等方和服务。'
- en: '**The world state: **This reflects the current state of data about all the
    assets in the network. The data is securely stored in the following format:'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**世界状态：**这反映了网络中所有资产的当前数据状态。数据以以下格式安全地存储：'
- en: '**LevelDB**: This is the default database for Hyperledger Fabric, and it simply
    stores key/value pairs.'
  id: totrans-65
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**LevelDB**：这是 Hyperledger Fabric 的默认数据库，简单地存储键/值对。'
- en: '**CouchDB**: This is best suited for web and native applications and it speaks
    JSON natively. It supports binary for all data storage needs.'
  id: totrans-66
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CouchDB**：这非常适合 Web 和本机应用程序，它以原生 JSON 进行通信。它支持所有数据存储需求的二进制。'
- en: '**Chaincode: **Chaincode manages the business logic agreed and created by members
    in the network. It is a program written in GO—Node.js:'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**链码：**链码管理网络中成员同意并创建的业务逻辑。它是用 GO—Node.js 编写的程序：'
- en: '**LevelDB**: This is a default programming language that runs over a secured
    Docker container and manages the ledger state.'
  id: totrans-68
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**LevelDB**：这是在受保护的 Docker 容器上运行的默认编程语言，管理账本状态。'
- en: '**CouchDB**: This is another database programming language that stores JSON
    objects. It also supports key range, composite, and full data-rich queries.'
  id: totrans-69
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CouchDB**：这是另一种存储 JSON 对象的数据库编程语言。它还支持键范围、复合和完整的数据丰富查询。'
- en: '**Consensus: **Consensus is the process of achieving an agreement on a set
    of transactions to be added to the ledger. In Hyperledger Fabric, consensus is
    achieved with the following three steps:'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**共识：**共识是就要添加到账本的一组交易达成一致的过程。在 Hyperledger Fabric 中，共识是通过以下三个步骤实现的：'
- en: Transaction endorsement
  id: totrans-71
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 交易背书
- en: Ordering
  id: totrans-72
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 订购
- en: Validation and commitment
  id: totrans-73
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 验证和承诺
- en: Now, let's understand these consensus components and how they work with Hyperledger
    and its transaction processing methods.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们了解这些共识组件以及它们如何与 Hyperledger 和其交易处理方法配合工作。
- en: Working of Hyperledger and transaction processing
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Hyperledger 和交易处理的工作
- en: 'The working of Hyperledger and transaction processing can be explained as follows:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: Hyperledger 和交易处理的工作可以解释如下：
- en: '**Transaction proposal**: In Hyperledger Fabric, the process starts with the
    client application sending transaction proposals:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**交易提案**：在 Hyperledger Fabric 中，该过程始于客户端应用程序发送交易提案：'
- en: '![](img/fed4bbc4-2f6b-48a9-bedf-77b9fb7de204.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fed4bbc4-2f6b-48a9-bedf-77b9fb7de204.png)'
- en: Each client application proposes transactions to endorse peers for the simulation
    and endorsement process.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 每个客户端应用程序向背书对等方提出交易以进行模拟和背书过程。
- en: '**Endorsers send RW sets to the client**: Each endorsing peer simulates the
    proposed transaction and stores the set of read and written data named **RW sets**.
    These sets are signed by endorsing peers and are returned to the client application:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**背书人将 RW 集发送给客户端**：每个背书对等方都模拟提议的交易，并存储一组被命名为**RW 集**的读取和写入数据。这些集合由背书对等方签名，并返回给客户端应用程序：'
- en: '![](img/013da4e5-5aee-408e-b563-8685516477fe.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](img/013da4e5-5aee-408e-b563-8685516477fe.png)'
- en: '**Transaction endorsement**: This is a signed response which results from the
    simulated transaction. There are several ways a transaction endorsement can be
    defined through policy chaincode, which is similar to a smart contract. One transaction
    endorsement policy resembles one defined chaincode.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '**交易背书**：这是模拟交易的签名响应。可以通过策略链码定义几种方式的交易背书，它类似于智能合约。一个交易背书策略类似于一个已定义的链码。'
- en: '**Client application service**: Once a client application receives the RW set
    and endorsed transactions, it has to submit these to the ordering service. This
    method keeps working, regardless of the transaction endorsement and RW set submitted
    by other client applications:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**客户端应用程序服务**：一旦客户端应用程序接收到 RW 集和背书交易，就必须将这些提交给订购服务。无论其他客户端应用程序提交的交易背书和 RW 集如何，该方法都会继续运行：'
- en: '![](img/0c8d6a9b-41a4-41c8-8386-965a2f8f4bcd.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0c8d6a9b-41a4-41c8-8386-965a2f8f4bcd.png)'
- en: '**An orderer sends transactions in blocks to committing peers**: The ordering
    service accepts both RW sets and endorsed transactions and arranges them into
    blocks and forwards them to committing peers:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**订购者将交易以块的形式发送给提交对等方**：订购服务接受 RW 集和背书交易，并将它们排列成块，然后将它们转发给提交对等方：'
- en: '![](img/73e84167-f6be-43b1-8d7e-88ef7b41fb17.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](img/73e84167-f6be-43b1-8d7e-88ef7b41fb17.png)'
- en: The ordering service is responsible for organizing all the transactions and
    then commits them to the ledger. By default, the ordering service for Hyperledger
    Fabric is Kafka, which is an open source, stream-processing platform developed
    by the **Apache Software Foundation** (**ASF**).
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 订购服务负责组织所有交易，然后将它们提交到分类账中。默认情况下，Hyperledger Fabric 的订购服务是 Kafka，这是一个由**Apache
    Software Foundation**（**ASF**）开发的开源流处理平台。
- en: 'Now, let''s understand the workings of the ordering service in more detail.
    It is important to divide this into core parts:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们更详细地了解订购服务的工作原理。将这分为核心部分是很重要的：
- en: '**Part 1 of the ordering service**: A block is created once a certain number
    of transactions is ready in a specified time frame and these transactions are
    committed in chronological order. Unlike the Bitcoin blockchain, Hyperledger Fabric
    provides the best-suited ordering mechanism, and this helps organizations to design
    a granular, flexible, and scalable decentralized network.'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**订购服务的第一部分**：一旦在指定的时间段内准备好了一定数量的交易，就会创建一个区块，并且这些交易会按照时间顺序提交。与比特币区块链不同，Hyperledger
    Fabric提供了最适合的订购机制，这有助于组织设计一个粒度细致、灵活、可扩展的去中心化网络。'
- en: '**Part 2 of the ordering service**: Hyperledger Fabric supports three ordering
    service mechanisms—SOLO, Kafka, and **Simplified Byzantine Fault Tolerance** (**SBFT**):'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**订购服务的第二部分**：Hyperledger Fabric支持三种订购服务机制——SOLO、Kafka和**简化拜占庭容错**（**SBFT**）：'
- en: '**SOLO**: This is best suited for software developers for research and testing
    purposes, and this has only one ordering node.'
  id: totrans-91
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SOLO**：这对于软件开发人员进行研究和测试目的最合适，并且只有一个订购节点。'
- en: '**Kafka**: This is another Hyperledger Fabric ordering mechanism that is production
    ready. It is developed by ASF and provides a unified, highly efficient, and low-latency
    software platform to handle real-time feeds. In Hyperledger Fabric, Kafka handles
    RW sets and endorsed transactions.'
  id: totrans-92
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Kafka**：这是另一种Hyperledger Fabric订购机制，已经准备就绪。它由ASF开发，并提供了一个统一的、高效的、低延迟的软件平台来处理实时数据流。在Hyperledger
    Fabric中，Kafka处理读写集和背书交易。'
- en: '**SBFT**: This is similar to the PoW consensus mechanism of the Bitcoin blockchain.
    This solution is designed to overcome Byzantine failure, allowing the system to
    work even if there is a malicious node or a group of malicious nodes in the network.'
  id: totrans-93
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SBFT**：这类似于比特币区块链的PoW共识机制。此解决方案旨在克服拜占庭故障，即使网络中存在恶意节点或一组恶意节点，系统也可以正常工作。'
- en: '**Committing peers validates each transaction in the block**: The committing
    peer validates the transactions to ensure the RW set is matching with the current
    world state. Once the committing peer validates the transaction, the transaction
    is updated to the ledger and the world state is automatically updated with write
    data from the RW set:'
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**提交的对等方验证区块中的每个交易**：提交的对等方验证交易，以确保读写集与当前世界状态匹配。一旦提交对等方验证了交易，交易就会被更新到总账上，并且世界状态会自动使用读写集中的写入数据进行更新：'
- en: '![](img/a2bbd034-ba15-4339-89ff-00fce399722c.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a2bbd034-ba15-4339-89ff-00fce399722c.png)'
- en: In the end, the committing peer has to notify the client application on the
    success or failure of the transaction.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，提交的对等方必须通知客户端应用程序交易成功或失败。
- en: '**Ident****i****ty verification**: At each step of the transaction flow, from
    endorsement to version check, identity verification remains a continuous process.'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**身份验证**：在交易流程的每个步骤中，从背书到版本检查，身份验证始终是一个持续进行的过程。'
- en: Bitcoin versus Ethereum versus Hyperledger
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 比特币与以太坊与Hyperledger
- en: 'Blockchain is the most exciting innovation, and it is still popular in the
    cryptocurrency space. In the past few years, the industry has also recognized
    the impact of blockchain on their business model''s operation and management.
    Although blockchain technology works seamlessly in its native form, most of its
    business needs never fit the one-stop-shop solution. Hence, we have several versions
    of the blockchain network. Let''s first understand the characteristics so that
    we can understand the comparison among some of the popular blockchain models in
    detail:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链是最激动人心的创新，仍然在加密货币领域中广受欢迎。在过去的几年里，该行业也认识到了区块链对其商业模式运营和管理的影响。尽管区块链技术在其原生形式下运行得很顺畅，但大多数业务需求从未适合一站式解决方案。因此，我们有了几个版本的区块链网络。让我们首先了解一下其特性，以便我们能够详细了解一些流行区块链模型之间的比较：
- en: '**Permission restrictions**: This defines the eligibility of transaction processors
    to create or block the existing ledger. In this context, the following two models
    exist:'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**权限限制**：这定义了事务处理器的资格，以创建或阻止现有账本。在这个背景下，存在以下两种模型：'
- en: '**Permissioned blockchain**: In this model, transactions processing can only
    be performed by preselected users. Hyperledger Fabric is an example of this.'
  id: totrans-101
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**权限区块链**：在此模型中，只有预选用户可以进行交易处理。Hyperledger Fabric就是这样一个例子。'
- en: '**Permissionless blockchain**: This model doesn''t restrict the transaction
    processor from creating or adding a new block. Ethereum and Bitcoin are some of
    the most popular examples of the same.'
  id: totrans-102
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**无需许可的区块链**：该模型不限制交易处理器创建或添加新区块。以太坊和比特币是其中最受欢迎的例子之一。'
- en: '**Restricted access to data**: This specifies about the read rights across
    the blockchain network. There are the two following models:'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**对数据的受限访问**：这指明了区块链网络上的读取权限。以下是两种模型：'
- en: '**Public blockchain**: There is no restriction while reading the ongoing transactions.
    Anyone can download the updated blockchain ledger with the blockchain node client.'
  id: totrans-104
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**公共区块链**：在读取正在进行的交易时没有限制。任何人都可以使用区块链节点客户端下载更新的区块链账本。'
- en: '**Private blockchain**: In this model, access to the blockchain ledger is restricted
    to only preselected users.'
  id: totrans-105
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**私有区块链**：在此模型中，只有预选用户可以访问区块链账本。'
- en: '**The consensus mechanism**: In the distributed network, it is critical to
    achieve trustless networks and determine consensus for all the transactions. This
    ensures that only valid and legitimate transactions are added to the blockchain.
    PoW, PoS, and PBFT are some examples of the consensus algorithm.'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**共识机制**：在分布式网络中，实现无需信任的网络和确定所有交易的共识至关重要。这确保只有有效和合法的交易被添加到区块链中。PoW、PoS 和 PBFT
    是一些共识算法的例子。'
- en: '**Scalability**: Scalability depends on two factors—**nodes** and **performance**.
    Node scalability is the extent that nodes that can be added in the network without
    impacting the overall performance, and scalability depends on the number of transactions
    per seconds.'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可扩展性**：可扩展性取决于两个因素——**节点**和**性能**。节点可扩展性是指可以添加到网络中而不影响整体性能的节点数量，而可扩展性取决于每秒交易数。'
- en: '**Anonymity**: This refers to the identity of users in the blockchain that
    are made open or hidden.'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**匿名性**：这指的是区块链中用户的身份是公开还是隐藏的。'
- en: '**Governance**: This is the level of decision-making power distributed in the
    blockchain community. The blockchain platform has to be maintained by either the
    core developer team or other stakeholders.'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**治理**：这是分布在区块链社区中的决策权的级别。区块链平台必须由核心开发团队或其他利益相关者维护。'
- en: '**Native currency**: This refers to the currency valid within the blockchain
    such as Bitcoin with the Bitcoin blockchain.'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**原生货币**：这指的是区块链内有效的货币，例如比特币与比特币区块链。'
- en: '**Scripting**: This refers to the level of programming supported by the **decentralized
    application** (**dApp**):'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**脚本化**：这指的是**去中心化应用程序**（**dApp**）支持的编程水平：'
- en: '| **Characteristics** | **Bitcoin** | **Ethereum** | **Hyperledger** |'
  id: totrans-112
  prefs: []
  type: TYPE_TB
  zh: '| **特征** | **比特币** | **以太坊** | **Hyperledger** |'
- en: '| Permission restrictions | Permissionless | Permissionless | Permissioned
    |'
  id: totrans-113
  prefs: []
  type: TYPE_TB
  zh: '| 权限限制 | 无需许可 | 无需许可 | 许可 |'
- en: '| Restricted public access to data | Public | Public or private | Private |'
  id: totrans-114
  prefs: []
  type: TYPE_TB
  zh: '| 对数据的受限公开访问 | 公开 | 公开或私有 | 私有 |'
- en: '| Consensus | PoW | PoW | PBFT |'
  id: totrans-115
  prefs: []
  type: TYPE_TB
  zh: '| 共识 | PoW | PoW | PBFT |'
- en: '| Scalability | High node scalability, low performance scalability | High node
    scalability, low performance scalability | Low node scalability, high performance
    scalability |'
  id: totrans-116
  prefs: []
  type: TYPE_TB
  zh: '| 可伸缩性 | 高节点可伸缩性，低性能可伸缩性 | 高节点可伸缩性，低性能可伸缩性 | 低节点可伸缩性，高性能可伸缩性 |'
- en: '| Centralized regulation (governance) | Low, decentralized decision making
    by community/miners | Medium, core developer group, but EIP process | Low, open
    governance model based on the Linux model |'
  id: totrans-117
  prefs: []
  type: TYPE_TB
  zh: '| 中央化监管（治理） | 低，由社区/矿工去中心化决策 | 中等，核心开发者团队，但 EIP 流程 | 低，基于 Linux 模型的开放治理模式 |'
- en: '| Anonymity | Pseudonymity, no encryption of transaction data | Pseudonymity,
    no encryption of transaction of data | Pseudonymity, encryption of transaction
    data |'
  id: totrans-118
  prefs: []
  type: TYPE_TB
  zh: '| 匿名性 | 假名性，不加密交易数据 | 假名性，不加密交易数据 | 假名性，加密交易数据 |'
- en: '| Native currency | Yes, Bitcoin | Yes, ether | No |'
  id: totrans-119
  prefs: []
  type: TYPE_TB
  zh: '| 原生货币 | 是，比特币 | 是，以太坊 | 否 |'
- en: '| Scripting | Limited possibility stack-based scripting | High possibility,
    tuning complete virtual machine, high-level language support—Solidarity | High
    possibility, tuning complete scripting of chaincode, high-level Go language |'
  id: totrans-120
  prefs: []
  type: TYPE_TB
  zh: '| 脚本化 | 有限的基于堆栈的脚本化可能性 | 高可能性，调整完备的虚拟机，高级语言支持—Solidity | 高可能性，调整完备的链码脚本化，高级
    Go 语言 |'
- en: Hyperledger Fabric capabilities
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Hyperledger Fabric 的能力
- en: 'Hyperledger has come with a full-stack, enterprise-grade business solution
    to deliver secure and scalable value with added security, confidentiality, and
    performance. Hyperledger Fabric delivers the following functionalities and core
    capabilities:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: Hyperledger 提供了一套全套的企业级业务解决方案，以提供带有增加的安全性、保密性和性能的安全且可伸缩的价值。Hyperledger Fabric
    提供以下功能和核心能力：
- en: '**Identity management**: To turn a permissioned network, Hyperledger Fabric
    provides a membership identity service that maintains user IDs and then authenticates
    each of one of them in the network. One user ID can be allowed to invoke a chaincode
    application, but can be blocked to turn up a new chaincode.'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**身份管理**：为了成为一个有权限的网络，Hyperledger Fabric 提供了一个维护用户ID并在网络中对每个用户进行身份验证的会员身份服务。一个用户ID可以被允许调用一个链码应用程序，但可以被阻止启动一个新的链码。'
- en: '**Efficient processing**: Hyperledger assigns a role for each node based on
    transaction ordering and commitment. The overall performance improves as the concurrent
    execution increases and improves the time to deliver each order.'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**高效处理**：Hyperledger 根据交易排序和承诺为每个节点分配角色。随着并发执行的增加以及提高交付每个订单的时间，整体性能得到提高。'
- en: '**Privacy and confidentiality**: Private channels restrict the messaging paths
    to provide transaction privacy and confidentiality for specific network members.
    The entire data, including member information, transactions, and channel details,
    remains invisible and inaccessible to other network members.'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**隐私和保密性**：私人频道限制消息传递路径，为特定网络成员提供交易隐私和保密性。整个数据，包括成员信息、交易和频道细节，对其他网络成员来说都是不可见且无法访问的。'
- en: '**Chaincode functionality:** This regards chaincode applications and is the
    business logic of the Hyperledger Fabric. Chaincode ensures that all transactions
    that transfer ownership are subject to its rules and requirements. The operating
    parameters of the channel are usually defined by the system chaincode, whereas
    validation system chaincode defines the requirements for endorsing and validating
    transactions.'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**链码功能**：这涉及链码应用程序，是 Hyperledger Fabric 的业务逻辑。链码确保所有转移所有权的交易受其规则和要求约束。通道的操作参数通常由系统链码定义，而验证系统链码定义了背书和验证交易的要求。'
- en: Lab
  id: totrans-127
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实验室
- en: After understanding the insights of Hyperledger Fabric with its architecture,
    components, transaction flow, and chaincode, it is now time to arrange each of
    these pieces to perform a lab. In order to keep the lab accessible, we are going
    to run a lab environment from GitHub hosted under: [https://fabric-sdk-node.github.io/](https://fabric-sdk-node.github.io/).
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在了解 Hyperledger Fabric 的架构、组件、交易流程和链码的洞见后，现在是时候整合这些部分进行实验室了。为了保持实验室的可访问性，我们将从GitHub托管的实验室环境中运行实验室，网址为：[https://fabric-sdk-node.github.io/](https://fabric-sdk-node.github.io/)。
- en: Tuna application
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Tuna 应用
- en: 'The tuna application is about the transfer of tuna fish shipments between different
    parties in the supply chain. This entire application is written in Node.js, and
    gRPC is used to interact with the chaincode:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: Tuna 应用是关于在供应链中不同方之间转移金枪鱼货物。整个应用程序都是用 Node.js 编写的，使用 gRPC 与链码进行交互：
- en: '**Aim**: Using Fabric Node SDK, establish a connection with the Hyperledger
    blockchain. The peer will be configured to communicate to its application-specific
    chaincode container. By the end of this exercise, we will get familiar with how
    to use the Node.js SDK to communicate with the network. We will also gather an
    understanding of how an application chaincode network and ledger all interact
    with one another.'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**目标**：使用 Fabric Node SDK，与 Hyperledger 区块链建立连接。对等节点将被配置为与其特定应用程序的链码容器通信。在这个练习结束后，我们将熟悉如何使用
    Node.js SDK 与网络进行通信。我们还将了解应用程序链码网络和账本如何相互交互。'
- en: '**Basic installation**: In case you haven''t downloaded the `education` repository
    for this course, follow these directions in your Terminal window:'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基本安装**：如果你还没有为这门课程下载`education`仓库，可以在终端窗口中按照以下说明操作：'
- en: '[PRE0]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Make sure that you have Docker running on your machine before you run the next
    command. We need to make sure that we have completed the installation of the Hyperledger
    Fabric section in this chapter before moving on to this application section, as
    we will likely experience errors. First, remove any pre-existing containers, as
    they may conflict with commands in this tutorial:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行下一个命令之前，请确保您的计算机上正在运行Docker。我们需要确保我们已经完成了本章中的Hyperledger Fabric部分的安装，然后再继续进行本应用程序部分，因为我们可能会遇到错误。首先，删除任何现有的容器，因为它们可能与本教程中的命令冲突：
- en: '[PRE1]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Now, let''s start the Hyperledger Fabric network with the following command:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们使用以下命令启动Hyperledger Fabric网络：
- en: '[PRE2]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Troubleshooting**: If after running the previous command you are getting
    an error similar to the following:'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**故障排除**：如果在运行前一个命令后，您收到类似以下错误：'
- en: '[PRE3]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Then try running the following command:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 然后尝试运行以下命令：
- en: '[PRE4]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Install the required libraries from the `package.json` file, register the admin
    and user components of our network, and start the client application with the
    following commands:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 从`package.json`文件安装所需的库，注册我们网络的管理员和用户组件，并使用以下命令启动客户端应用程序：
- en: '[PRE5]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Load the client by simply opening `localhost:8000` in any browser window of
    your choice, and you should see the user interface for our simple application
    at this URL, as shown in the following screenshot:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在任选的浏览器窗口中简单地打开`localhost:8000`即可加载客户端，你将在此URL看到我们简单应用的用户界面，如下截图所示：
- en: '![](img/a0bbd400-95c5-4e18-a2b1-5ba97230b948.png)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a0bbd400-95c5-4e18-a2b1-5ba97230b948.png)'
- en: '**Troubleshooting**: If the client fails to connect the Tuna server, we need
    to execute following commands:'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**故障排除**：如果客户端无法连接金枪鱼服务器，则需要执行以下命令：'
- en: '[PRE6]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Try running the following commands:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试运行以下命令：
- en: '[PRE7]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Then, run the previous commands starting with:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，从上一条命令开始运行之前的命令：
- en: '[PRE8]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'This is the chaincode file that contains all our business logic for the sample
    tuna app:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 这是包含我们样本金枪鱼应用程序所有业务逻辑的链码文件：
- en: '`tuna-app/app.js`: This is a JavaScript client code in `app.js` that manipulates
    HTML elements for the user interface'
  id: totrans-153
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tuna-app/app.js`：这是一个JavaScript客户端代码，位于`app.js`中，用于操作用户界面的HTML元素'
- en: '`tuna-app/index.html`: This is an HTML file containing the UI for the client
    application'
  id: totrans-154
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tuna-app/index.html`：这是一个HTML文件，包含客户端应用程序的UI'
- en: '`src`: This is a folder containing code that uses **Software Development Kit**
    (**SDK**) to connect a client request to network and chaincode functions'
  id: totrans-155
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`src`：这是一个包含使用**软件开发工具包**（**SDK**）连接客户端请求到网络和链码函数的代码的文件夹'
- en: '`tuna-app/src/controller.js`: This contains functions that perform operations
    and interrogates data'
  id: totrans-156
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tuna-app/src/controller.js`：其中包含执行操作和查询数据的函数'
- en: '`tuna-app/src/server.js`: `server.js` is used to view the UI at `localhost:8000`'
  id: totrans-157
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tuna-app/src/server.js`：`server.js`用于在`localhost:8000`上查看UI'
- en: '**Verification**: Now, let’s query our database, where there should be some
    sample entries, since our chaincode smart contract initiated the ledger with 10
    previous catches this function takes no arguments. As we can see on line 6, it
    takes an empty array.'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**验证**：现在，让我们查询我们的数据库，在那里应该有一些样本条目，因为我们的链码智能合约使用10个先前捕获的函数初始化了分类帐，该函数不带任何参数。正如我们在第6行所见，它接受一个空数组。'
- en: '[PRE9]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The code comes from `..src/queryAllTuna.js`.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 该代码来自`..src/queryAllTuna.js`。
- en: 'Now, let''s query our database, where there should be some sample entries already,
    since our chaincode smart contract initiated the ledger with the ten previous
    catches. This function takes no arguments, as we can see on Line 6 in the preceding
    code. Instead, it takes an empty array. The query response that can be seen in
    the user interface is ten prepopulated entries with the attributes for each catch:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们查询我们的数据库，在那里应该已经有一些样本条目，因为我们的链码智能合约使用了十个先前的捕获来初始化分类帐。该函数不带任何参数，正如我们在前面的代码中的第6行所看到的。相反，它接受一个空数组。可以在用户界面中看到的查询响应是十个预填充的条目，每个条目都有其捕获的属性：
- en: '![](img/ef1bd04e-218d-4388-9e2b-67e923c0bd81.png)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ef1bd04e-218d-4388-9e2b-67e923c0bd81.png)'
- en: 'The following code is to query a specific tuna that''s been recorded:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码是用于查询记录的特定金枪鱼：
- en: '[PRE10]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The code comes from `..src/queryTuna.js`.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 该代码来自`..src/queryTuna.js`。
- en: 'Now, let''s query for a specific tuna catch. This function takes one argument,
    as you can see in Line 6 of the code. An example would be `[''1'']`. In this example,
    we are using the key to query for catches. You should see the following query
    response, detailing the attributes recorded for one particular catch:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们查询特定的金枪鱼捕获情况。此函数需要一个参数，正如您在代码的第 6 行中所看到的。例如 `['1']`。在此示例中，我们正在使用密钥查询捕获情况。您应该会看到以下查询响应，详细说明了记录在一个特定捕获中的属性：
- en: '![](img/36b1fde4-563f-40cd-a943-a9a6ff63cbba.png)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
  zh: '![](img/36b1fde4-563f-40cd-a943-a9a6ff63cbba.png)'
- en: 'The following code is to change the tuna holder:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码是用于更改金枪鱼持有者的：
- en: '[PRE11]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The code comes from `..src/changeHolder.js`.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 代码来自 `..src/changeHolder.js`。
- en: 'Now, let''s change the name of the person in possession of a given tuna. This
    function takes two arguments—the key for the particular catch and the new holder
    as we can see on Line 5 in the preceding code. For example, `args: [''1'', ''Alex'']`.
    You may be able to see a similar success response in your Terminal window:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '现在，让我们更改持有给定金枪鱼的人的名称。此函数需要两个参数-特定捕获的键和新持有者，正如我们在前述代码的第 5 行中所看到的。例如，`args: [''1'',
    ''Alex'']`。您可能会在您的终端窗口中看到类似的成功响应：'
- en: '[PRE12]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'This indicates that we have sent a proposal from our application through the
    SDK, and that the peer has been endorsed and committed and the ledger has been
    updated:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 这表明我们已通过 SDK 从我们的应用程序发送了提案，并且对等方已被认可和提交，账本已被更新：
- en: '![](img/70fb0c60-f82b-416c-bcbe-3a2049bd3039.png)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![](img/70fb0c60-f82b-416c-bcbe-3a2049bd3039.png)'
- en: 'You should see that the holder has indeed been changed by querying for key
    `1` again. Now, the holder attribute has been changed from `Miriam` to `Alex`:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该看到通过再次查询键 `1` 确实已更改持有者。现在，持有者属性已从 `Miriam` 更改为 `Alex`：
- en: '![](img/c636d74d-221b-4140-a197-49874899a7c2.png)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c636d74d-221b-4140-a197-49874899a7c2.png)'
- en: '**Finishing up**: Remove all the Docker containers and images that we created
    in this tutorial with the following commands in the `tuna-app` folder:'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**结束**: 使用以下命令在 `tuna-app` 文件夹中移除我们在本教程中创建的所有 Docker 容器和镜像：'
- en: '[PRE13]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Summary
  id: totrans-179
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: We explored a new breed of blockchain Hyperledger project, built to focus on
    business challenges and overcoming the distributed ledger technology. Hyperledger
    is the only group project led and hosted by The Linux Foundation that is on a
    continuous roadmap to revolutionize the business with the distributed ledger-as-a-service
    model. This project helps the industry to avoid difficulties in deploying blockchains,
    just like WordPress solved the difficulty of turning up a website and Apache solved
    the problem of turning up a database.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 我们探索了一种新的区块链 Hyperledger 项目类型，旨在解决业务挑战和克服分布式账本技术。 Hyperledger 是由 Linux Foundation
    领导和托管的唯一的团队项目，该项目持续进行路线图，以分布式账本即服务模型改革业务。该项目帮助行业避免部署区块链的困难，就像 WordPress 解决了建立网站的困难一样，Apache
    解决了建立数据库的问题一样。
- en: In the next chapter, we will understand how blockchain technology can impact
    on the existing and traditional security models named **Confidentiality, Integrity,
    and Availability** (**CIA**) triad models.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将了解区块链技术如何影响现有和传统的安全模型，即**机密性、完整性和可用性**（**CIA**）三元模型。
- en: Questions
  id: totrans-182
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: 'With the tuna application, we have been successful enough to understand the
    working and testing of Hyperledger Fabric. However, to solve the cyber security
    challenges, it is important that we explore the existing solutions and how they
    can be made much better with distributed ledger technology or generic blockchains,
    or maybe even with Hyperledger projects. Therefore, it is important to cover the
    following points:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 通过金枪鱼应用程序，我们已经成功地理解了 Hyperledger Fabric 的工作原理和测试。然而，要解决网络安全挑战，重要的是我们探索现有解决方案以及它们如何能够通过分布式账本技术或通用区块链甚至是
    Hyperledger 项目得到改进。因此，重要的是涵盖以下几点：
- en: Can Hyperledger Fabric be considered for public blockchain ?
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Hyperledger Fabric 是否可以用于公共区块链？
- en: Can Hyperledger be connected with traditional database?
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Hyperledger 能与传统数据库连接吗？
