["```\npragma solidity ^0.4.23;\n\ncontract SpecialClub {\n    // Centralized owner of this application\n    address public owner;\n    // we set members to true if they are a member, false otherwise.\n    mapping(address => bool) public members;\n    mapping(address => bool) internal requests; \n\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner() {\n      require(msg.sender == owner);\n      _;\n    }\n\n    function approveMembership(address _address) onlyOwner external {\n        members[_address] = true;\n        requests[_address] = false;\n        emit GrantedMembership(_address);\n    } \n\n    function requestOwnership() external {\n        requests[msg.sender] = true;\n        emit RequestToJoin(msg.sender);\n    }\n\n    event RequestToJoin(address _address);\n    event GrantedMembership(address _address);\n}\n\n```", "```\npragma solidity ^0.4.23;\n\ncontract SpecialClub {\n    address public owner;\n    // we set members to true if they are a member, false otherwise.\n    mapping(address => bool) public members;\n    mapping(address => bool) internal requests;\n    mapping(address => mapping(address => bool)) votedOn;\n    mapping(address => uint8) votes;\n\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner() {\n      require(msg.sender == owner);\n      _;\n    }\n\n    modifier onlyMember() {\n        require(members[msg.sender] == true);\n        _;\n    }\n\n    function approveMembership(address _address) onlyOwner external {\n        members[_address] = true;\n        requests[_address] = false;\n        emit GrantedMembership(_address);\n    } \n\n    function requestOwnership() external {\n        requests[msg.sender] = true;\n        emit RequestToJoin(msg.sender);\n    }\n\n    function voteInMember(address _address) onlyMember external {\n        //don't allow re-votes\n        require(!votedOn[_address][msg.sender]);\n        votedOn[_address][msg.sender] = true;\n        votes[_address] = votes[_address] + 1;\n        if (votes[_address] >= 5) {\n            members[_address] = true;\n            requests[_address] = false;\n            emit GrantedMembership(_address);\n        }\n    }\n\n    event RequestToJoin(address _address);\n   event GrantedMembership(address _address);\n}\n```"]