- en: When Shouldn't We Use Blockchain?
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: So far in this book, we've learned about a number of blockchain concepts in
    order to understand blockchain's basic functionalities. We've also, throughout
    the previous chapters, dived deep into the technology in order to get familiar
    with decentralized applications. However, as we are looking at the foundations
    of blockchain technology that can help us build applications in a decentralized
    network, it's important for us to ask ourselves the question, *why blockchain?*
    It's only useful to use blockchain in a use case if that case requires the characteristics
    of a blockchain.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we'll explore the characteristics of blockchain and analyze
    how they influence the implementation of a blockchain use case. We'll also be
    looking into some of the frameworks you can use to analyze a blockchain use case.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we''ll be covering the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: Distributed databases versus **distributed ledger technology** (**DLT**)
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What to store on a blockchain
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The differences between a centralized versus decentralized architecture
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The properties of blockchain
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Frameworks that we can use to evaluate use cases
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Blockchain is an evolving technology that is continuously implemented by enthusiasts
    in every possible use case. Some of the characteristics of blockchain have attracted
    the attention of a lot of communities who have decided to build their applications
    in decentralized networks. In addition to this, the availability of numerous blockchain
    platforms has catalyzed this attraction to the technology. A number of researchers,
    enthusiasts, and even enterprises have started building applications in decentralized
    networks. Some of them propose new solutions, whereas others are trying to solve
    problems with traditional solutions.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: But not all the proposed blockchain solutions are necessarily acceptable; in
    fact, a number of them are heading in the wrong direction by unnecessarily decentralizing
    applications. It's important to understand what blockchain has to offer to before
    it is adopted.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain offers many features that facilitate the building of a trustless
    network. However, it has its own set of limitations. Naval Ravikant, the co-founder
    of AngelList, who was also in the 2017 list of CoinDesk's most influential people
    in blockchain, said in an interview that, *"blockchain is incredibly inefficient,
    it's worth paying the cost when you need the decentralization, but it's not when
    you don't"*, addressing the concern of blockchain technology being used to build
    applications without proper evaluation. Most projects of this type are misguided
    due to the lack of a universally accepted definition of the blockchain.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: In spite of the depth of knowledge of blockchain technology, we need to understand
    and weigh several parameters before undertaking any blockchain project. There
    are several evaluation models that will justify the use of a decentralized blockchain
    over traditional centralized systems. In this chapter, we will look into some
    of the parameters and also the evaluation strategy that will help us answer the
    question, *when shouldn't we use blockchain?*
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们对区块链技术有很深的了解，但在进行任何区块链项目之前，我们需要了解和衡量几个参数。有几种评估模型将证明使用分散的区块链而不是传统的集中式系统。在本章中，我们将研究一些参数以及能够帮助我们回答“何时不应该使用区块链？”的评估策略。
- en: Distributed databases versus distributed ledger technology (DLT)
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分布式数据库与分布式分类账技术（DLT）
- en: The first question that pops up when we think of implementing blockchain is,
    *how is blockchain-powered ledger technology different from traditional databases?*
    Traditional databases are centralized, and most blockchain platforms use databases
    to store transactions locally on each node. So, the actual comparison should be
    between the DLT-powered by blockchain and the distributed databases, and this
    is what we'll focus on in this section.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们考虑实施区块链时，第一个冒出来的问题是，“区块链动力分类账技术与传统数据库有何不同？”传统数据库是集中式的，而大多数区块链平台使用数据库在每个节点上本地存储交易。因此，实际的比较应该是由区块链驱动的DLT与分布式数据库之间的比较，这将是我们在本节中重点关注的。
- en: Although databases are distributed in the case of distributed databases, there
    is still centralization involved as the databases are managed by a central trusted
    entity, whereas the ledger in a DLT is maintained by trustless nodes in the network.
    So, distributed databases don't guarantee decentralization and still promote a
    centralized architecture with a trusted authority. The architecture difference
    is clearly depicted in *Figure 11.1*.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管在分布式数据库的情况下数据库是分布式的，但仍然涉及中心化，因为数据库由中央受信任的实体管理，而DLT中的分类账由网络中的不可信节点维护。因此，分布式数据库不能保证去中心化，仍然提倡具有受信任的权威的集中式架构。架构差异清晰地描绘在*图11.1*中。
- en: 'The business use case that is trying to adopt blockchain as a storage technology
    has to understand the benefits and pitfalls of each of these storage technologies.
    Blockchain has a set of characteristics that may or may not favor the use case.
    We will be pointing out some of the characteristics of blockchain-based DLTs that
    will help us analyze the suitability of the technology for any use case under
    discussion:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 正在试图将区块链作为存储技术采用的业务用例必须了解每种存储技术的优势和缺点。区块链具有一系列特性，这些特性可能有利于或不利于使用案例。我们将指出一些基于区块链的DLT的特性，这将有助于我们分析技术在讨论的任何用例中的适用性：
- en: '![](img/2fe80380-f5f9-4f77-9b77-0d7ec9e65f98.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2fe80380-f5f9-4f77-9b77-0d7ec9e65f98.png)'
- en: 'Figure 11.1: Database versus DLT architecture'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.1：数据库与DLT架构的对比
- en: Decentralized control of information
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 信息的去中心化控制
- en: 'DLT decentralizes the control of information by enabling data to be shared
    across the boundaries of trust. Traditional databases are usually controlled by
    an entity, and they cannot be easily shared with the other trustless entities.
    One way to share the information stored on each entity''s database is through
    an intermediary. Each entity will share information that needs to be communicated
    with another entity; this will be done through a central authority trusted by
    everyone. *Figure 11.2* shows four entities communicating with an intermediary
    database in order to fetch and send sharable information:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: DLT通过实现数据跨信任边界共享，去中心化信息控制。传统数据库通常由实体控制，无法轻易与其他不受信任的实体共享。在每个实体数据库中共享信息的一种方法是通过中间人。每个实体将与另一个实体通信所需的信息共享；这将通过每个人信任的中央管理机构完成。*图11.2*
    显示了四个实体通过中介数据库进行通信以获取和发送可共享的信息：
- en: '![](img/78dc4c22-9cac-4bd8-8c51-7f1520679f63.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](img/78dc4c22-9cac-4bd8-8c51-7f1520679f63.png)'
- en: 'Figure 11.2: Trustless entities sharing data through an intermediary database'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.2：不受信任的实体通过中间人数据库共享数据
- en: 'On the other hand, the decentralization of a DLT allows each entity to share
    data, while the blockchain will maintain all of the information and will be trusted
    by every node in the network. Each entity can verify the data on the blockchain
    and make sure that the information is unmodified without the need for a central
    trusted authority. Each entity will maintain a copy of the shared information,
    which is synced across the network, as shown in *Figure 11.3*:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/98b23c43-1226-4a5a-b851-bf58b2c7121e.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
- en: 'Figure 11.3: Trustless entities sharing data with each other without an intermediary'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: The decentralization achieved by a DLT helps to share information without trusting
    on a central entity. Removing the need for a central database helps to eliminate
    all the processes involved in maintaining it. The processes may include hiring
    staff to set up the infrastructure, auditing, backup, migration, and so on. The
    DLT eliminates the dependency on human organizations and creates a completely
    decentralized autonomous organization. In summary, decentralization makes perfect
    sense when information needs to be shared across boundaries of trust.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: Confidentiality of information
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Databases that are managed by centralized entities maintain the confidentiality
    of information by setting up authentication and authorization mechanisms. Only
    authenticated users who are authorized to access the resources will be able to
    perform operations on that information.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: The security of data on the database is enhanced by using encryption techniques
    so that confidentiality is maintained even if the database is compromised.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: A DLT is a public ledger that can be accessed by anyone without any authentication.
    A completely permissionless DLT doesn't enforce access control, and data will
    be accessible to everyone in the network. Data that is in the form of transactions
    has to be transparent in a decentralized network so that every node can verify
    them. The openness of the data stored on a blockchain is what makes decentralization
    possible. Bitcoin, or any other public blockchain platform (such as Ethereum),
    provides complete transparency for the transactions embedded in the blocks. Since
    identities created in the blockchain network are not mapped to real-world identities,
    participants are able to stay anonymous even though the transactions are public.
    But that may not be ideal for use cases that need complete or partial privacy.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: Some advanced techniques, such as **zero-knowledge proofs** (**zk-SNARKS**)
    or encryption, can be used to preserve the privacy of the users. Payment channels
    such as the *Lightning Network*, which was discussed in [Chapter 9](35b56abd-53ae-479b-81b7-857a5baebcbc.xhtml),
    *Blockchain Optimizations and Enhancements*, can be used to commit only the desired
    transactions to the blockchain while performing rest of the transactions off-chain.
    There are other solutions, such as storing the state changes in a secure vault
    and storing only the reference address in the blockchain. The resources in the
    secure vault can only be accessed by authorized entities.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: DLTs provide solutions to preserve the privacy of the entities. However, these
    solutions will make the implementation complex and inefficient. The proposed solutions
    will be against the principles of DLT. So, any use case where privacy is the primary
    concern would be better off using traditional databases to store information.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: Robustness
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: DLTs will be heavily exposed to the public due to the decentralized nature of
    the technology. DLTs become more resilient the more they get exposed to the public
    network. The immutability achieved by the ledger ensures that the information
    cannot be easily tampered with by the intruders. The decentralization helps to
    achieve redundancy of information across the network, which will ensure a fault-tolerant
    system. The overall health of the system doesn't depend on any particular entity
    that will make the system robust.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: Traditional databases can be replicated and partitioned. Replicating the database
    records will make the database fault-tolerant. The replication strategy is not
    an inherent feature of most databases. Although a distributed database system
    will replicate the records in several nodes, they are not as decentralized as
    a DLT.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: There will be delays and synchronization issues among the nodes in the network.
    So, they are not as fault-tolerant as DLTs and disaster recovery mechanisms need
    to be employed for databases, especially for those that are centralized. A blockchain-based
    DLT is the preferred choice for storing records when a use case needs to achieve
    a fault-tolerant and robust system.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: Performance
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We concluded in the previous section that DLTs are more robust than traditional
    databases. But this fault-tolerant system comes with the cost of reduced performance.
    We have already come across the scalability issues faced by blockchain technology.
    This is due to the verification and other consensus mechanisms that are required
    to achieve decentralization. Bitcoin uses a **Proof of Work**  (**PoW**) algorithm
    to achieve the consensus, which restricts the block creation time to 10 minutes.
    This will limit the rate at which transactions are added to the blockchain. Databases
    don't have any such restrictions with record insertions. Creating records in database
    tables is much faster than inserting transactions into blockchain.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: Several blockchain platforms have solutions to improve the transaction speed.
    However, they cannot reach the performance achieved by traditional databases.
    Databases can achieve higher performance by choosing a specific type of database
    for a specific application. Relational database, as well as a wide range of non-relational
    databases such as key-value stores, tabular databases, and graphs, can be used
    based on the requirements of the application. Furthermore, databases can increase
    the performance of read operations by using in-memory storage techniques.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 几个区块链平台都有解决方案来提高交易速度。然而，它们无法达到传统数据库所达到的性能水平。数据库可以通过为特定应用选择特定类型的数据库来实现更高的性能。关系数据库以及各种非关系数据库，如键值存储、表格数据库和图形数据库，可以根据应用的需求使用。此外，数据库可以通过使用内存存储技术来增加读操作的性能。
- en: Databases are well suited to achieving high transaction throughput. When a use
    case needs fast read and write operations, databases should be the preferred choice
    of technology.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库非常适合实现高交易吞吐量。当一个用例需要快速读写操作时，数据库应该是首选的技术选择。
- en: What can we store on a blockchain?
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我们可以在区块链上存储什么？
- en: We previously compared blockchains with databases and analyzed their respective
    properties to evaluate their suitability before selecting one as our storage mechanism.
    We have assumed that a blockchain can store similar information that can be inserted
    into a database. Although it is possible to insert any data into a blockchain,
    it is not the preferred storage mechanism for static data. In this section, we
    will list out a few of the constraints on storing data on a blockchain.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我们之前将区块链与数据库进行了比较，并分析了它们的各自属性，以评估它们作为存储机制的适用性，然后选择了其中一个。我们假设区块链可以存储与可以插入数据库中的类似信息。尽管可以将任何数据插入区块链，但它不是静态数据的首选存储机制。在本节中，我们将列出在区块链上存储数据的一些约束。
- en: Storing data as transactions
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将数据存储为交易
- en: The data on a blockchain is stored in the form of atomic events called transactions.
    In a cryptocurrency such as Bitcoin, transactions contain scripts that help to
    transfer assets. However, they could also contain arbitrary information such as
    executable programs that act as smart contracts. A transaction should also ensure
    that it has an optimized set of instructions that will decide the current state
    of the blockchain.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链上的数据以称为交易的原子事件的形式存储。在比特币等加密货币中，交易包含帮助转移资产的脚本。但它们也可以包含诸如充当智能合约的可执行程序等任意信息。交易还应确保具有一组经过优化的指令，这些指令将决定区块链的当前状态。
- en: Storing minimal data
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 存储最小数据
- en: Although arbitrary information can be stored in blockchain transactions, it
    is never recommended to dump bulky data on a blockchain. A blockchain is not a
    decentralized storage solution. There are several other distributed file sharing
    protocols, such as IPFS, that are better for storing hypermedia.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管可以在区块链交易中存储任意信息，但不建议在区块链上存储大量数据。区块链不是分散式存储解决方案。还有其他几种分布式文件共享协议，例如 IPFS，更适合存储超媒体。
- en: Since the transaction fee is calculated based on the size of the data in the
    transaction, you should try to keep the transaction as small as it needs to be
    in order to get the job done.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 由于交易费是根据交易中数据的大小计算的，所以您应该尽量保持交易的大小足够小，以完成任务。
- en: Storing data that requires minimal changes
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 存储需要最小更改的数据
- en: Though the blockchain doesn't allow data to be modified, previously stored data
    can be updated by creating a new transaction. It's important to note that transactions
    are not processed quickly in blockchain networks, and it's recommended to wait
    for a certain number of block confirmations even after the transaction is included
    in the block. If a particular data item needs to be updated very often, it will
    take a considerable amount of time before all the interrelated transactions are
    processed. Many nodes might even reject such transactions that reference other
    unconfirmed transactions. So, it's recommended to store and process such data
    off-chain.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管区块链不允许修改数据，但可以通过创建新的交易来更新以前存储的数据。重要的是要注意，交易在区块链网络中不会快速处理，建议在交易被包含在区块中后甚至等待一定数量的区块确认。如果特定的数据项需要经常更新，那么在所有相关交易被处理之前需要花费相当长的时间。许多节点甚至可能拒绝引用其他未确认交易的交易。因此，建议将这些数据存储和处理在链下。
- en: Centralized versus decentralized application architecture
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 集中式与分散式应用架构
- en: We have compared DLTs and databases by analyzing their properties. But it's
    also important to analyze the architecture of the application before implementation.
    We will describe the architecture for both centralized and decentralized applications
    so that there will be more clarity about the components and the way in which they
    communicate with each other.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过分析其特性比较了DLT和数据库。 但在实施之前分析应用程序架构也很重要。 我们将描述集中式和分散式应用程序的架构，以便更清楚地了解组件及其相互通信的方式。
- en: In an application that uses a basic centralized server architecture, there will
    only be a single instance of all the components involved. *Figure 11.4* shows
    the architecture diagram of a web server application. The user can communicate
    with the web server through the user interface provided by the web application.
    A web application is programmed using a combination of scripting languages, such
    as JavaScript, and markup languages, such as HTML. A simple web application will
    have a web server that hosts the application. However, the web server can interact
    with the database, file, or any other servers required for the application. Since
    centralized servers have a single physical address, they are mapped to domain
    addresses. The user can reach the **Domain Name System** (**DNS**) servers to
    find the physical address of the web server and then communicate using application
    protocols, such as HTTP.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用基本集中式服务器架构的应用程序中，所有涉及的组件只有一个单一实例。 *图11.4*显示了Web服务器应用程序的架构图。 用户可以通过Web应用程序提供的用户界面与Web服务器通信。
    Web应用程序是使用脚本语言（如JavaScript）和标记语言（如HTML）的组合进行编程的。 一个简单的Web应用程序将有一个托管应用程序的Web服务器。
    但是，Web服务器可以与数据库、文件或应用程序所需的任何其他服务器进行交互。 由于集中式服务器具有单个物理地址，它们会映射到域地址。 用户可以访问**域名系统**（**DNS**）服务器以查找Web服务器的物理地址，然后使用应用程序协议（如HTTP）进行通信。
- en: 'In a centralized architecture, any number of components can function independently
    and communicate with each other whenever required. A typical web application will
    have a database, storage, and web servers as their components, as shown in *Figure
    11.4*:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在集中式架构中，任何数量的组件可以独立运作并在需要时相互通信。 一个典型的Web应用程序将具有数据库、存储和Web服务器作为它们的组件，如*图11.4*所示：
- en: '![](img/d272e927-60a6-4c65-a1bf-e542242bfd68.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d272e927-60a6-4c65-a1bf-e542242bfd68.png)'
- en: 'Figure 11.4: Architecture diagram of a centralized application'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.4：集中式应用程序的架构图
- en: A decentralized application will communicate with a network of nodes that perform
    similar functions. A client that uses a decentralized application can communicate
    with any of the nodes in the network to perform any action. Unlike centralized
    servers, a decentralized architecture doesn't use DNS servers as there is no single
    server.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 分散式应用将与执行类似功能的节点网络通信。 使用分散式应用程序的客户端可以与网络中的任何节点通信以执行任何操作。 与集中式服务器不同，分散式架构不使用DNS服务器，因为不存在单个服务器。
- en: '*Figure 11.5* shows a node that is part of the blockchain network. The user
    communicates directly with this node to use any of the functionality of the application.
    As we have seen with several blockchain platforms, every node will expose a port
    to enable the communication using the **Remote Procedure Call** (**RPC**) protocol.
    JavaScript libraries are used to set up RPC connections if the client wants to
    communicate using the web application. Some blockchain platforms provide a bridge
    to facilitate communication with the decentralized network. MetaMask is a bridging
    application used in Ethereum.'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '*图11.5*展示了区块链网络中的一个节点。 用户直接与此节点通信以使用应用程序的任何功能。 正如我们在几个区块链平台中看到的那样，每个节点都会暴露一个端口以使用**远程过程调用**（**RPC**）协议进行通信。
    如果客户端希望使用Web应用程序进行通信，JavaScript库可以用于建立RPC连接。 一些区块链平台提供桥梁以便与分散网络通信。 MetaMask是以太坊中使用的桥接应用程序。'
- en: 'It can be seen in the diagram of a centralized application''s architecture
    that the infrastructure design is flexible since a single entity is responsible
    for maintaining the infrastructure. In a decentralized architecture, nodes don''t
    have much flexibility when it comes to the design. A pure decentralized architecture
    doesn''t integrate with any other centralized components as it would be against
    the decentralization model. An application that requires several components to
    be integrated would form a complex architecture, and such an architecture is not
    desired by a decentralized network:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6c7b1ceb-1f0a-4564-bbc6-847e234100d1.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
- en: 'Figure 11.5: Architecture diagram of a decentralized application'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: As we can see in *Figure 11.5*, a client will communicate with the decentralized
    network without an intermediary. But there are several use cases that will require
    integration of centralized trusted entities with a decentralized network where
    functionalities are defined in smart contracts. A hybrid architecture can be created
    by deploying trusted entities in the form of middleware, as shown in *Figure 11.6*.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: Middleware is often used as an intermediary between the client and the blockchain
    network. It could be a web server that can communicate with a blockchain node
    and create and forward the transaction whenever required. The middleware is basically
    a trusted entity that provides trusted data to the blockchain. The Ethereum platform
    makes use of special trusted entities called **oracles**. These oracles can provide
    trusted external information to contracts in blockchain nodes.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: 'A hybrid architecture is often implemented by enterprises in situations where
    blockchain alone isn''t suitable:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/989bc760-0584-40a3-b71e-6b6a07f3b557.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
- en: 'Figure 11.6: Architecture diagram of a decentralized application with middleware'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: Properties of blockchain
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: So far, we've discussed a few of the properties of blockchain while comparing
    DLTs with databases. But due to its decentralized nature, blockchain has a number
    of inherent properties that will greatly benefit some use cases while not adding
    value to others. In this section, we'll discuss these properties so that you are
    able to properly evaluate whether blockchain would be suitable in your own use
    case.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: Immutability
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Blockchain is a ledger that doesn't allow you to update or delete existing records.
    The data recorded on the blockchain is supposed to remain for eternity. This makes
    a blockchain an immutable data structure. Unlike with traditional record-keeping
    technologies, a record cannot be erased once it is included in the blockchain.
    The only way to update a record is by creating a new record that will undo the
    effect of the previous record. Update operations are expensive in blockchain because
    each record insertion consumes time and fees.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
- en: Immutability is one of the key characteristics of blockchain, so it's essential
    that the selected use case can make use of the immutable nature of blockchain.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: Non-repudiation
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Each transaction stored in a blockchain is created by an entity that signs the
    transaction. It is infeasible to remove a transaction once it has been added to
    the blockchain due to the immutability of blockchain. Due to this, the entity
    that signed the transaction cannot deny the existence of the transaction. Repudiation
    can be observed in centralized systems due to their mutability, but it is highly
    unlikely in decentralized systems.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 存储在区块链中的每笔交易均由签署交易的实体创建。一旦添加到区块链中，就不可能删除交易，这是由于区块链的不可变性。因此，签署交易的实体无法否认交易的存在。在集中式系统中由于其可变性可以观察到否认，但在分散式系统中是非常不可能的。
- en: Security
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安全性
- en: One of the main advantages of decentralization is enhanced security. We have
    already discussed the level of security provided by blockchain technology in [Chapter
    10](53dc28ad-de3d-463a-8244-e48d0d19d616.xhtml), *Blockchain Security*. The decentralization
    of the blockchain network will make the system resistant to many of the traditional
    attacks that can be performed on the centralized systems.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 分散化的主要优势之一是增强的安全性。我们已经讨论了区块链技术在 [第10章](53dc28ad-de3d-463a-8244-e48d0d19d616.xhtml)
    中提供的安全级别，*区块链安全*。区块链网络的分散化将使系统对许多可以针对集中系统执行的传统攻击具有抵抗力。
- en: Any use case implemented using a blockchain doesn't have to worry about protection
    of the system against many of the traditional attacks.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 使用区块链实施的任何用例都不必担心系统受到许多传统攻击的保护。
- en: Redundancy
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 冗余
- en: All of the blockchain records are replicated across all the nodes of the network,
    achieving a high level of decentralization. The redundancy achieved by the network
    ensures that it is a fault-tolerant system. However, redundancy will introduce
    latency in the network, which negatively affects performance. It is important
    to consider the tradeoffs between fault tolerance and performance before implementing
    blockchain in any use case.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 所有区块链记录都复制到网络的所有节点上，实现了高度的分散化。网络实现的冗余确保了它是一个容错系统。然而，冗余将在网络中引入延迟，这对性能产生负面影响。在实施任何用例之前，考虑容错和性能之间的权衡是非常重要的。
- en: Reduced cost
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 降低成本
- en: One of the attractive features of creating applications in a decentralized network
    is eliminating the costs involved in managing the organization, creation, and
    maintenance of the infrastructure. It is ideal to implement use cases where there
    is no single entity to bear the functioning cost. **Decentralized Autonomous Organizations**
    (**DAOs**) are a use case where there is no entity responsible for bearing the
    cost incurred.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在分散网络中创建应用程序的一个吸引人的特点是消除了管理组织、创建和维护基础设施所涉及的成本。在没有单一实体承担功能成本的用例中实施是理想的。**分散自治组织**（**DAOs**）是一个没有实体负责承担费用的用例。
- en: Transparency
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 透明度
- en: Every transaction included in the blockchain has to be verified by every node
    in the network. The verification process mandates the transparency of all the
    transactions stored in the blockchain. It is crucial to determine the data to
    be included in the blockchain when implementing a use case. An application where
    confidentiality is a high priority is not a good use case for a public blockchain.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 存储在区块链中的每笔交易均需由网络中的每个节点进行验证。验证过程要求区块链中存储的所有交易的透明性。在实施用例时，决定要包含在区块链中的数据至关重要。保密性是高优先级的应用程序对于公共区块链来说并不是一个好的用例。
- en: Decision models for blockchain
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 区块链的决策模型
- en: Based on the depth of understanding of blockchain technology and its impact
    on real-world problems, many researchers have proposed several decision models
    that will help to quickly assess the suitability of blockchain in any use case.
    These decision models consider all the fundamental principles of the blockchain
    and decide whether the use case is suitable to be implemented in a blockchain-based
    ecosystem.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 基于对区块链技术及其对现实问题的影响的深入理解，许多研究人员提出了几种决策模型，这些决策模型将有助于快速评估任何用例中区块链的适用性。这些决策模型考虑了区块链的所有基本原则，并决定用例是否适合在基于区块链的生态系统中实施。
- en: Karl Wüst and Arthur Gervais
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 卡尔·沃斯特和阿瑟·杰尔韦伊
- en: Two computer science researchers, Karl Wüst and Arthur Gervais, proposed a decision
    model in the paper *Do you need a Blockchain?*, which was published in IACR Cryptology
    ([https://eprint.iacr.org/2017/375](https://eprint.iacr.org/2017/375)). The model
    helps to decide between permissioned and permissionless blockchains when there
    are mutually mistrusting entities in the system.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
- en: '*Figure 11.7* depicts the flowchart for the blockchain decision model, which
    decides upon the suitability of blockchain in the use case and also helps to decide
    upon the type of blockchain. It suggests blockchain as a solution if the use case
    satisfies all of the following conditions:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
- en: It needs to store the state
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There are multiple writers
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There is no online **Trusted Third Party** (**TTP**)
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: All the writers are untrusted
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'It further suggests the use of a permissionless blockchain if all the writers
    are unknown, and recommends a permissioned blockchain otherwise. A permissioned
    blockchain will be public if the transactions are verified by everyone; otherwise,
    the blockchain could be maintained in a private network:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/053fdc95-ea86-451c-a9ac-f5b0860f988c.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
- en: 'Figure 11.7: Flowchart of the blockchain decision model (source: https://eprint.iacr.org)'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: 'They also listed out the different properties of blockchains and databases
    to compare the implementations. *Table 11.1* shows several properties of permissionless
    blockchains, permissioned blockchains, and trusted databases:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
- en: '|  | **Permissionless Blockchain** | **Permissioned Blockchain** | **Central
    Database** |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
- en: '| Throughput | Low | High | Very High |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
- en: '| Latency | Slow | Medium | Fast |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
- en: '| Number of readers | High | High | High |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
- en: '| Number of writers | High | Low | High |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
- en: '| Number of untrusted writers | High | Low | 0 |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
- en: '| Consensus mechanism | Mainly PoW, some PoS | BFT protocols (such as PBFT)
    | None |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
- en: '| Centrally managed | No | Yes | Yes |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
- en: 'Table 11.1: Comparing properties of types of blockchain and central databases'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: Birch-Brown-Parulava model
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'David Birch, Richard Brown, and Salome Parulava proposed an evaluation model
    in the paper *Towards ambient accountability in financial services: Shared ledgers,
    translucent transactions and the technological legacy of the great financial crisis*,
    which was published in the *Journal of Payments Strategy and Systems*. The paper
    proposes a model to explore the application of shared ledgers in financial services.
    They also envision a financial marketplace with translucent transactions.'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
- en: '*Figure 11.8* shows the proposed decision model, which evaluates the application
    of blockchain in financial services. The type of blockchain to go with is classified
    as permissioned or permissionless based on the permissions assigned to the users
    of the ledger. They are also classified in a more granular way based on the level
    of influence of the users on the functionality of the shared ledger:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/1aba712f-0520-405e-85df-2ed33e58c37c.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
- en: 'Figure 11.8: Decision model for the financial services (Source: Birch-Brown-Parulava
    model)'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
- en: Framework to evaluate the suitability of blockchain
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: An evaluation framework was created by several researchers, namely Sin Kuang
    Lo, Xiwei Xu, Yin Kia Chiam, and Qinghua Lu, in a paper titled *Evaluating Suitability
    of Applying Blockchain*. The framework considers many of the properties of the
    blockchain to evaluate whether it matches the requirements of the use case.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: 'The proposed framework consists of seven questions that need to be answered
    before evaluating the use case, as shown in *Figure 11.9*. The framework suggests
    using a blockchain when the following conditions are met:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
- en: The scenario requires multiple entities
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The operation is not centralized
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The integrity of transaction history is required
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance is not the priority
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There is no trusted party involved
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data transparency is desired
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Inserted data shouldn't be modifiable (immutable)
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The framework further evaluates whether some properties of blockchain could
    be retained with alternative solutions. The framework shown in *Figure 11.9* further
    evaluates whether the trusted authority should be decentralized, whether data
    can be protected if transparency is not desired, or whether modifiable, and bulk
    data can be maintained off-chain. This framework is not as stringent as other
    decision models when evaluating the requirements of the use case:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/36de8de0-5d48-4568-a572-3d46c82ced1a.png)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
- en: 'Figure 11.9: Framework for evaluation (source: Evaluating Suitability of Applying
    Blockchain)'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
- en: This framework evaluated a few industrial use cases in the paper. After executing
    each use case requirement in the framework, it concluded that supply chain-and
    identity management-related applications could be easily adapted into a blockchain.
    On the other hand, information-sensitive use cases such as electronic health records
    and stock markets are not suitable to be implemented in a blockchain due to the
    transparency and low throughput of blockchain networks. In the next chapter, we'll
    analyze several use cases after evaluating each of them for their suitability.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
- en: Generalized decision model
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We have seen several decision models proposed by blockchain researchers. Although
    all of them can be used to evaluate the requirements of the use case, there is
    no universally agreed list of conditions to decide when to use conventional technology
    and when to use blockchain. Based on the decision models mentioned earlier and
    all the properties of blockchain discussed in the earlier section, *Properties
    of blockchain*, we have created a generalized decision model, as shown in *Figure
    11.10*:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/4d57660b-755a-449f-84d7-aa263ddaf58f.png)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
- en: 'Figure 11.10: Flowchart of the generalized decision model'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
- en: 'The decision model depicted in *Figure 11.10* considers all the properties
    of blockchain before deciding on the suitability of blockchain for the use case.
    Similar to the earlier decision models, it needs to agree on the following conditions:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
- en: There is no trusted party involved
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有信任方参与
- en: The immutability of transaction data is desired
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 期望交易数据的不可变性
- en: The scenario doesn't need high performance
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 场景不需要高性能
- en: The transaction data isn't confidential or could be protected by encrypting
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 交易数据不是机密的，或者可以通过加密来保护
- en: There are multiple writers
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有多个写入者
- en: The data can be shared and replicated across the network
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据可以在网络上共享和复制
- en: A use case is suitable to be implemented using blockchain technology if all
    the conditions are satisfied. It is also crucial to determine the type of blockchain
    so that a suitable blockchain platform can be selected for the implementation.
    The decision model suggests a permissionless or permissioned based on the nature
    of the writing entities, as shown in *Figure 11.10*. It also suggests a public
    blockchain network if the data can be shared and verified by everyone in the network,
    or a private blockchain if there is a restriction on shared data.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 如果所有条件都满足，使用区块链技术来实现用例是合适的。还需要确定区块链的类型，以便为实施选择合适的区块链平台。决策模型建议基于写入实体的性质选择无许可或有许可的区块链，如*图11.10*所示。如果数据可以被网络中的每个人共享和验证，则还建议使用公共区块链网络，否则使用私有区块链，如果有共享数据的限制。
- en: We will use the decision model in the next chapter to evaluate, analyze, and
    choose the appropriate blockchain platform for a variety of use cases.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在下一章中使用决策模型评估、分析和选择各种用例的适当区块链平台。
- en: Summary
  id: totrans-136
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概要
- en: This chapter has provided insight into the strategies to use when deciding whether
    to develop a decentralized application. A comparison was drawn between distributed
    databases and the blockchain-based DLT to explore the properties of blockchain.
    Centralized and decentralized application architectures were covered in depth
    to explain when a blockchain-based architecture adds value. We also explored several
    key properties of blockchain architectures in order to give the readers the essence
    of blockchain. Finally, we explored some decision models that evaluate the suitability
    of blockchain for certain use cases that were explored.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 本章提供了在决定是否开发分布式应用程序时使用的策略的见解。通过比较分布式数据库和基于区块链的分布式账本，探讨了区块链的属性。深入探讨了集中式和分布式应用程序架构，以解释何时区块链架构增加价值。我们还探讨了几种区块链架构的关键属性，以便读者了解区块链的本质。最后，我们探讨了一些决策模型，评估了区块链是否适用于某些已探索的用例。
- en: Now that we are able to distinguish between a blockchain and a non-blockchain
    use cases with the help of decision models, we'll move on to discuss several financial
    and non-financial blockchain use cases by pointing out the issues in the current
    implementations and justifying the solution provided by blockchain technology.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们能够借助决策模型区分区块链和非区块链用例，我们将继续讨论几个金融和非金融区块链用例，指出当前实施中的问题，并证明区块链技术提供的解决方案。
