- en: Decentralized Applications
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Decentralized Applications** (**DApps**) are applications that run across
    a decentralized network and are not owned or controlled by a centralized authority.
    They differ from distributed applications primarily in terms of ownership. A distributed
    application may run on thousands of computers, but those computers and the management
    of the software running on them are controlled by a central authority—Amazon,
    Microsoft, and so on. A decentralized application runs on what is typically a
    peer-to-peer network and is designed in such a way that no one person or organization
    can control the functioning of the application. A decentralized application does
    not require a blockchain. There were multiple decentralized applications before
    blockchain: BitTorrent, Tor, and Mastodon are all decentralized applications that
    exist without the use of a blockchain.'
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we are going to cover the following:'
  prefs: []
  type: TYPE_NORMAL
- en: The major features of a decentralized application
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The largest decentralized applications in operation today
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Non-blockchain based decentralized applications
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The goal of this chapter is to give you an understanding of decentralized applications
    and their development, as well as making you aware of ecosystems and code that
    already exists. If you are interested in building a decentralized application,
    interoperability with the existing ecosystems out there will greatly improve your
    odds.
  prefs: []
  type: TYPE_NORMAL
- en: Let's start by taking a look at what makes an application decentralized.
  prefs: []
  type: TYPE_NORMAL
- en: What makes an application decentralized
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Earlier in this book, we discussed distributed versus decentralized systems.
    A distributed system is one that is made up of a number of computers, with the
    work of the system distributed across all of these machines. Typically, the computers
    in a distributed network are placed in different geographical regions to protect
    the system from outages such as power failures, natural disasters, or military
    events. A decentralized network is not only distributed geographically, but also
    in terms of authority and control. A distributed system such as the Amazon cloud
    can be worldwide in scope but still under the control of a central authority.
    A decentralized system has no central authority.
  prefs: []
  type: TYPE_NORMAL
- en: Defining a decentralized application
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'A well-known resource to blockchain-based decentralized applications is the
    whitepaper written by David Johnson entitled *The General Theory of Decentralized
    Applications, DApps*. In this whitepaper, he identifies four key criteria to be
    a DApp:'
  prefs: []
  type: TYPE_NORMAL
- en: The application must be completely open source; it must operate autonomously,
    and with no entity controlling the majority of its tokens. The application may
    adapt its protocol in response to proposed improvements and market feedback, but
    all changes must be decided by consensus of its users.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The application's data and records of operation must be cryptographically stored
    in a public, decentralized blockchain, so as to avoid any central points of failure.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The application must use a cryptographic token (Bitcoin or a token native to
    its system) that is necessary for access to the application and any contribution
    of value from miners/farmers should be rewarded with the application's tokens.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The application must generate tokens according to a standard cryptographic algorithm
    acting as proof of the value that the nodes are contributing to the application
    (Bitcoin uses the PoW algorithm).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: However, this definition is very limited. David is thinking only of decentralized
    applications running on a blockchain, and only ones that can be incentivized through
    a token. There are a number of decentralized applications that predate blockchain
    that do not use or require tokens. In this chapter, we will discuss both blockchain
    and non-blockchain decentralized applications, but with a focus on those that
    are relevant to the blockchain ecosystem. We will also discuss blockchain applications
    that are not decentralized, despite running on top of a decentralized network.
  prefs: []
  type: TYPE_NORMAL
- en: 'For this book, we will use the following four criteria to describe a decentralized
    application:'
  prefs: []
  type: TYPE_NORMAL
- en: The application must be completely open source.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It must operate autonomously, with no individual, organization, or organized
    group controlling the functioning of the application. The application may adapt
    its protocol in response to proposed improvements and market feedback, but all
    changes must be decided by consensus of its users.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The application's data must be stored in a public, decentralized way that is
    open to inspection and without a single point of failure.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The application must provide a way of aligning incentives for the use of the
    application across all key user groups.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As you can see, this simplified definition retains all the key principles of
    decentralization without relying on a blockchain or tokens, as there are many
    ways that decentralized applications can be structured or used with or without
    blockchain. As we will see when we look at IPFS, it is entirely possible to have
    a decentralized application without blockchain, and incentives without having
    tokens.
  prefs: []
  type: TYPE_NORMAL
- en: Decentralized apps and blockchain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A decentralized application is a purpose-specific decentralized system. For
    instance, while Ethereum is a decentralized network, because anyone can join and
    the nodes are all peer-to-peer, a decentralized application will run on top of
    the network to provide a specific service or set of services to users. To some
    extent, the distinction is moot—you could see Ethereum as a distributed application
    that provides smart contract services and native token transfers. In any case,
    the key distinction is about power.
  prefs: []
  type: TYPE_NORMAL
- en: Using blockchain does not make an application decentralized
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The more a single entity or small group maintains power over the application,
    the more centralized it is. The less any one group is able to control the fate
    of the application and its functioning, the more decentralized it is. Just as
    decentralized applications do not require a blockchain, running on a blockchain
    does not make an application decentralized. This means that many applications
    running on blockchains today may still not be true decentralized applications.
    This is true, even if the application is entirely open source.
  prefs: []
  type: TYPE_NORMAL
- en: 'To illustrate, let''s consider a small sample application called `SpecialClub`,
    written in Solidity. It is very simple, merely keeping a list of members (stored
    as addresses) that are part of the `Special Club`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Despite being written in Solidity and deployed on a blockchain, this code is
    entirely centralized. It is still distributed, as the list of members will be
    publicly distributed across the entire Ethereum network if deployed. However,
    control remains with a single address—the `owner`. The `owner` address has absolute
    control over who is allowed to be added to the membership list of `SpecialClub`.
    Any further functionality based on this membership list will generally be centralized
    as a result. One advantage that continues to exist over traditional applications
    is transparency—by having both the code and its state written to the blockchain,
    everyone is clear about the rules and the list of members. However, to be a truly
    decentralized application, this app would need to be modified so that, for example,
    existing members could vote on who to accept or reject.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is a very basic example of how that might look:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: This version allows new members to be added if at least five existing members
    vote to make it happen. While such an application would start out centralized,
    after five members, the owner would no longer be able to exert any control over
    the membership list. Over time, the level of decentralization would grow.
  prefs: []
  type: TYPE_NORMAL
- en: Major decentralized blockchain applications
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: It is assumed the reader of this book may be contemplating launching their own
    decentralized application project or contributing to an existing one. When building
    new decentralized applications, it is important to be aware of what already exists
    so that your application can take advantage of the existing functionality. There
    are a number of existing decentralized applications that are running and in production
    and that have already undergone substantial development. In general, these applications
    provide services to help other decentralized applications flourish. In addition,
    these applications are all open source. If you evaluate one of these projects
    and find it is missing something, substantially less effort is likely required
    to either contribute to or for existing functionality.
  prefs: []
  type: TYPE_NORMAL
- en: IPFS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**IPFS** stands for **InterPlanetary File System**. IPFS is designed to be
    a decentralized, peer-to-peer file system that can be accessed from the web. IPFS
    is a decentralized application, but does not involve a blockchain. Instead, it
    works on a related technology called a **Directed Acyclic Graph**, or **DAG**.'
  prefs: []
  type: TYPE_NORMAL
- en: Typical web communications
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To understand IPFS, it is easier to start with the way typical web communications
    work and then establish the differences. In ordinary web communications, there
    are two primary actors: clients and servers. The servers host an application,
    files, and so on, and the clients connect to the server. Clients generally do
    not connect to each other. If two clients communicate at all, they do so by first
    connecting to the server and having it act as an intermediary.'
  prefs: []
  type: TYPE_NORMAL
- en: This approach is simple to understand, and companies have learned how to scale
    it reliably. Businesses turn to services such as Amazon Web Services, or use software
    such as OpenStack, to handle large amounts of traffic by adding server capacity.
  prefs: []
  type: TYPE_NORMAL
- en: However, this approach is also very inefficient. For instance, imagine that
    10 people in a building are all watching the same movie on their laptops. Instead
    of having all 10 clients hit the server and download 10 copies, why not have each
    of the clients download 1/10^(th) of the movie and then share it with the others
    for a dramatic drop in overall bandwidth and a similar increase in speed?
  prefs: []
  type: TYPE_NORMAL
- en: Peer-to-peer file transfer
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This approach of peers downloading different pieces of a single file and then
    sharing it is the core of a technology called BitTorrent. BitTorrent allows peers
    to trade files and file fragments amongst one another. The downside of this is
    that there is little incentive not to download files you desire and then disconnect—preventing
    others from doing the same. To avoid this, IPFS took inspiration from the BitTorrent
    protocol and generalized it into a technology they call **Bitswap**. Bitswap works
    similar to BitTorrent, but with further inspiration from Bitcoin and its proof-of-work
    incentive system. Bitswap has an incentive system of its own where if a client
    downloads and stores rare data—data that isn't already highly available on the
    network—in order to keep global accessibility high.
  prefs: []
  type: TYPE_NORMAL
- en: Value to blockchain projects
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: While blockchains provide a decentralized method of value and data exchange;
    they are not well suited for storing large files or content, such as images and
    videos. Given the expectations of modern customers and web users, this is a real
    issue. Most storage solutions for these types of content are centralized and expensive.
    With IPFS, decentralized applications have a way of storing and accessing this
    content without losing decentralization.
  prefs: []
  type: TYPE_NORMAL
- en: Aragon
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Aragon** is a project oriented around **Distributed Autonomous Organizations**,
    or **DAO**s. Here is an excerpt from the Aragon whitepaper:'
  prefs: []
  type: TYPE_NORMAL
- en: Aragon is a DApp that lets anyone create and manage any kind of organization
    (companies, open source projects, NGOs, foundations, hedge funds...) on the Ethereum
    blockchain.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aragon implements basic features of an organization such as a cap table, token
    transfers, voting, role assignments, fundraising, and accounting. The behavior
    of an Aragon organization is easily customized by changing the bylaws. In addition,
    Aragon organizations are extensible through third-party modules that interact
    with the organizations' contracts.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aragon Core is a set of smart contracts written in Solidity that allow a distributed
    team to self-organize and handle activities that are part of a typical centralized
    organization, easily, for instance, handling payroll, internal arbitration, and
    so on.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The smart contracts in Aragon Core have been used by other projects, such as
    districtOx, as a foundation for more advanced functionality. If your project involves
    any sort of distributed governance, it would make sense to look into Aragon Core.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: district0x
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The districtOx network is built on top of Ethereum, Aragon, and IPFS. It takes
    the capabilities of all of those systems and extends them for more specific functionality.
    In this case, districtOx provides core functionalities that are necessary to operate
    an online marketplace or community in a decentralized manner using the Ethereum
    blockchain and decentralized governance.
  prefs: []
  type: TYPE_NORMAL
- en: What is a district?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'A district is a decentralized marketplace/community that is built on top of
    the districtOx `d0xINFRA` code base. The `d0xINFRA` code base is comprised of
    a set of Ethereum smart contracts and browser-based tools that can interact with
    both Ethereum and IPFS. These two code bases interact and present a set of key
    functionalities necessary for experiences people are used to on the centralized
    web: posting and listing content, searching, reputation management, payments,
    and invoicing.'
  prefs: []
  type: TYPE_NORMAL
- en: Every district build on top of `d0xINFRA` will have these basic functionalities.
    This baseline code base makes it much easier and faster for future projects to
    develop into full-featured products.
  prefs: []
  type: TYPE_NORMAL
- en: Ethereum name service
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Ethereum addresses are usually written as a hexadecimal string, for instance, `0x86fa049857e0209aa7d9e616f7eb3b3b78ecfdb0`.
    This is not very readable for a human and would be very prone to error if you
    had to read it to someone over the phone, type it, and so on. It would also be
    easy to replace with another address without someone knowing. In fact, this is
    what has happened in a few ICO attacks. The Ethereum name service, or ENS, is
    a smart contract based system for resolving human readable names such as `mytoken.ens` to
    addresses. By registering an ENS address, compatible applications and wallets
    on the Ethereum network could map a readable name, such as `MyTokenContract.eth`,
    to an Ethereum address, similar to the way DNS maps domain names to IP addresses
    on the internet.
  prefs: []
  type: TYPE_NORMAL
- en: It is strongly recommended that any project built on Ethereum secures an appropriate
    ENS name. Not only does it look cleaner for users, but it will help to prevent
    hackers from using the name to attempt to steal from your users.
  prefs: []
  type: TYPE_NORMAL
- en: Civic/uPort
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Civic and uPort are both identity provider DApps on Ethereum. Currently, your
    identity information is generally held by a centralized entity: a government,
    Facebook, Google, and so on. On many places throughout the web, you can be asked
    to log in by using Facebook or Google. Behind the scenes, the website reaches
    out to one of these providers, it hands over identity credentials, and then the
    site lets you in. The downside to this is that the information that you relinquish
    is under the control and management of a third-party. If one of these providers
    decided to stop serving you, or provided false information, there would be little
    you could do about it.'
  prefs: []
  type: TYPE_NORMAL
- en: Civic and uPort are both decentralized solutions to identity where the identity
    owner manages their identity on the blockchain and can grant and revoke permissions
    through a provider service under their control.
  prefs: []
  type: TYPE_NORMAL
- en: Many upcoming DApps have a blend of blockchain behavior, web activity, and mobile
    application behaviors. By using one of these providers, you can plug into the
    emerging decentralized identity ecosystem in addition to supporting centralized
    providers.
  prefs: []
  type: TYPE_NORMAL
- en: Gnosis
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Gnosis** was the first major decentralized application to launch on Ethereum.
    Gnosis provides a decentralized prediction market and governance tool. Prediction
    markets can work in various industries, such as stock markets, event betting,
    and so on. By using a decentralized approach to prediction, the hope is that such
    predictions are more accurate because of a greater variety of information entering
    the market to adjust projections.'
  prefs: []
  type: TYPE_NORMAL
- en: As one of the earliest adopters of Ethereum, the Gnosis team also puts a lot
    of energy into various tools such as multi-signature wallets.
  prefs: []
  type: TYPE_NORMAL
- en: Steemit
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Steemit** is a social blogging application, similar to Blogger or Tumblr.
    However, content, comments, and votes are stored and secured on the blockchain
    itself. Steemit is a DApp that has its own blockchain. The core is adapted from
    Bitshares v2.0, but substantially modified to be purpose-suited to the application.'
  prefs: []
  type: TYPE_NORMAL
- en: In Steemit, users are rewarded tokens for submitting and voting on content.
    Each user's vote carries power equal to their shares in the network, called **Steem
    Power**. If a user attracts a large following, or a following of users with a
    large amount of Steem Power, then the rewards can be substantial. Rewards are
    typically small (from pennies to a few dollars), but some authors have been able
    to get payouts in the thousands because they attracted the favor of power users
    referred to as **whales**. In some cases, the vote of a whale can be worth hundreds
    or thousands of dollars on its own.
  prefs: []
  type: TYPE_NORMAL
- en: As mentioned earlier, Steemit is not on Ethereum and cannot be programmed with
    Solidity. It does, however, have a growing ecosystem of apps that talk to the
    Steemit blockchain and are used to curate, display, and monetize Steemit content
    in different ways. Anyone considering blogging, social media, or a similar content
    app, should carefully evaluate Steemit and its code base. It is all open source
    and a few modified clones have already been created, such as Golos (for the Russian
    market) and Serey (for the Cambodian market).
  prefs: []
  type: TYPE_NORMAL
- en: CryptoKitties
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**CryptoKitties** is another Ethereum-based decentralized application. CryptoKitties
    is a virtual pet simulator, where users can buy, trade, and breed kitties on the
    blockchain. CryptoKitties was an important landmark for Ethereum, as the techniques
    developed for CryptoKitties have applications for all video games that may use
    blockchain. Using techniques similar to Cryptokitties, player equipment, characters,
    and so on, can be stored on a blockchain.'
  prefs: []
  type: TYPE_NORMAL
- en: This is important, because many online video games, such as Minecraft, World
    of Warcraft, and so on, have suffered from bugs where certain equipment in the
    games could be duped, and people could make unlimited clones. Using blockchain,
    each item is assigned a unique reference and can be tracked and traded just like
    real goods.
  prefs: []
  type: TYPE_NORMAL
- en: Inspired by CryptoKitties, a number of video games are coming to market using
    these systems to create worlds with genuine scarcity and real economies.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You should now understand the difference between a decentralized application
    and a distributed application. A distributed application is one that is spread
    across many servers and systems, and ideally, the computers involved are also
    spread across multiple geographic regions for purposes of backup, processing,
    and availability. A DApp is one in which no single company, person, or group has
    control over the operation of the application.
  prefs: []
  type: TYPE_NORMAL
- en: While there are many blockchain applications coming to market, not all of them
    are truly decentralized. In many cases, these applications are merely distributed
    differently than prior applications by piggybacking on a public blockchain network.
    If a company or a few key users still control the operation and function of an
    application, then that application is not truly decentralized, even if it runs
    on a decentralized network.
  prefs: []
  type: TYPE_NORMAL
- en: You should now be aware of many of the largest blockchain-oriented decentralized
    applications currently in existence, their interrelationships, and you should
    be able to use this knowledge to inform future projects and avoid the re-invention
    of existing code.
  prefs: []
  type: TYPE_NORMAL
- en: Next, we'll discuss in detail how the two largest blockchain networks—Bitcoin
    and Ethereum—secure the network in [Chapter 18](a8437577-99dc-4620-99d5-7fbd19b12659.xhtml),
    *Mining*.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[1] [https://github.com/DavidJohnstonCEO/DecentralizedApplications](https://github.com/DavidJohnstonCEO/DecentralizedApplications)'
  prefs: []
  type: TYPE_NORMAL
