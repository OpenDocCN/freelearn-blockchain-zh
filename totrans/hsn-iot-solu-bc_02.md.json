["```\nvar mraa = require('mraa');\nvar pin0 = new mraa.Aio(0);\nvar getSoilMoisture = function() {\n  var sensorReading = pin0.read();\n  return sensorReading;\n};\nsetInterval(function() {\n  console.log(\"Current Moisture \" + getSoilMoisture());\n},2000);\n```", "```\nvar mraa = require('mraa');\nvar pin3 = new mraa.Aio(3);\nvar RESISTOR = 100000;\nvar THERMISTOR = 4250;\nvar getTemperature = function() {\n  var sensorReading = pin3.read();\n  var R = 1023 / sensorReading - 1;\n  R = RESISTOR * R;\n  var temperature = 1 / (Math.log(R/RESISTOR)/THERMISTOR+1/298.15)-273.15;\n  return temperature;\n};\nsetInterval(function() {\n  console.log(\"Current Temperature \" + getTemperature());\n},2000);\n```", "```\nvar mraa = require('mraa');\nvar pinD2 = new mraa.Gpio(2);\npinD2.dir(mraa.DIR_OUT);\nsetTimeout(function() {\n  pinD2.write(1);\n  setTimeout(function() {\n    pinD2.write(0);\n  },2000);\n},1000);\n```", "```\nvar iotf = require(\"ibmiotf\");\nvar mraa = require('mraa');\nvar config = require(\"./device.json\");\nvar deviceClient = new iotf.IotfDevice(config);\nvar temperatureSensor = new mraa.Aio(3);\nvar moistureSensor = new mraa.Aio(0);\nvar RESISTOR = 100000;\nvar THERMISTOR = 4250;\nvar getTemperature = function() {\n var sensorReading = temperatureSensor.read();\n var R = 1023 / sensorReading - 1;\n R = RESISTOR * R;\n var temperature = 1 / (Math.log(R/RESISTOR)/THERMISTOR+1/298.15)-273.15;\n return temperature;\n};\nvar getSoilMoisture = function() {\n var sensorReading = moistureSensor.read();\n return sensorReading;\n};\ndeviceClient.connect();\ndeviceClient.on('connect', function(){\nconsole.log(\"connected\");\nsetInterval(function function_name () {\ndeviceClient.publish('status', 'json', '{ \"temperature\": ' + getTemperature() +', \"soilMoisture\": ' + getSoilMoisture() + '}', 2);\n},300000);\n});\n```", "```\nvar iotf = require(\"ibmiotf\");\nvar mraa = require('mraa');\nvar config = require(\"./device.json\");\nvar deviceClient = new iotf.IotfDevice(config);\nvar temperatureSensor = new mraa.Aio(3);\nvar moistureSensor = new mraa.Aio(0);\nvar relayControl = new mraa.Gpio(2);\nvar RESISTOR = 100000;\nvar THERMISTOR = 4250;\n```", "```\nvar getTemperature = function() {\n  var sensorReading = temperatureSensor.read();\n  var R = 1023 / sensorReading - 1;\n  R = RESISTOR * R;\n  var temperature = 1 / (Math.log(R/RESISTOR)/THERMISTOR+1/298.15)-273.15;\n  return temperature;\n};\nvar getSoilMoisture = function() {\n  var sensorReading = moistureSensor.read();\n  return sensorReading;\n};\n```", "```\nvar waterPlant = function(secondsToWater) {\n  relayControl.write(1);\n  setTimeout(function() {\n    pinD2.write(0);\n  },secondsToWater * 1000);\n```", "```\ndeviceClient.connect();\ndeviceClient.on('connect', function(){\n  console.log(\"connected\");\n  setInterval(function function_name () {\n    deviceClient.publish('status', 'json', '{ \"temperature\": ' + getTemperature() +', \"soilMoisture\": ' + getSoilMoisture() + '}', 2);\n  },300000);\n});\n```", "```\ndeviceClient.on(\"command\", function (commandName,format,payload,topic) {\n  if(commandName === \"water\") {\n    var commandPayload = JSON.parse(payload.toString());\n    console.log(\"Watering the plant for \" + commandPayload.duration + \" seconds.\");\n    waterPlant(commandPayload.duration);\n  } else {\n    console.log(\"Command not supported.. \" + commandName);\n  }\n});\n```", "```\nvar express = require(\"express\");\nvar cfenv = require(\"cfenv\");\nvar Client = require(\"ibmiotf\");\nvar minimumMoisture = parseInt(process.env.MINIMUM_MOISTURE);\nvar maximumTemperature = parseInt(process.env.MAXIMUM_TEMPERATURE);\n```", "```\nvar app = express();\nvar appEnv = cfenv.getAppEnv();\nvar iotConfig = appEnv.getService(\"Internet of Things Platform-mf\");\nvar appClientConfig = {\n  \"org\": iotConfig.credentials.org,\n  \"id\": \"hands-on-iot-app\",\n  \"auth-key\": iotConfig.credentials.apiKey,\n  \"auth-token\": iotConfig.credentials.apiToken\n}\n```", "```\nvar appClient = new Client.IotfApplication(appClientConfig);\nappClient.connect();\nappClient.on(\"connect\", function () {\n  appClient.subscribeToDeviceEvents();\n});\nappClient.on(\"deviceEvent\", function (deviceType, deviceId, eventType, format, payload) {\n  var deviceData = JSON.parse(payload);\n```", "```\n  if(deviceData.temperature > maximumTemperature ||\ndeviceData.soilMoisture < minimumMoisture ) {\n    console.log(\"Device, please water the plant for 60 seconds\");\n    var actionData= { duration : 60 };\n    actionData = JSON.stringify(actionData);\n    appClient.publishDeviceCommand(deviceType, deviceId, \"water\", \"json\", actionData);\n  }\n});\n```", "```\nvar port = process.env.PORT;\napp.listen(port, function() {\n console.log(\"App listening!\");\n});\n```", "```\nbluemix login\n\nbluemix target -o <your_cloud_foundry_organization_name> -s <space_where_your_app_will_be_deployed>\n\nbluemix cf push\n```", "```\nbluemix cf logs <your_application_name> \n```"]