- en: Development Life Cycle of a DIApp*“Fast. Good. Cheap. Choose any two.**”**-
    Unknown; used by many software project managers*
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: 一个 DIApp 的开发生命周期*“快。好。便宜。选择其中两个。”*- 未知；被许多软件项目经理使用*
- en: In this chapter, we will explore a broad set of new patterns that can be used
    in the **Software Development Life Cycle** (**SDLC**) of blockchain and AI-enabled
    applications. It will help you to build modern applications addressing the problems
    faced by various industries discussed in the previous chapters. Before introducing
    the SDLC aspects, we will also compare traditional blockchain applications with
    the next wave of intelligent decentralized applications. We will also explore
    the architectural aspects of the new types of applications that can be built under
    the revised SDLC.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨一系列新的模式，可以用于区块链和人工智能启用应用程序的软件开发生命周期（SDLC）。它将帮助您构建现代应用程序，解决前几章讨论的各个行业面临的问题。在介绍
    SDLC 方面之前，我们还将比较传统的区块链应用与下一波智能分散式应用之间的区别。我们还将探讨可以在修订后的 SDLC 下构建的新类型应用程序的架构方面。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Applying SDLC practices in blockchains
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在区块链中应用 SDLC 实践
- en: Introduction to DIApps
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DIApp 简介
- en: Comparing DIApps and DApps
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 比较 DIApp 和 DApps
- en: Designing a DIApp
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设计一个 DIApp
- en: Developing a DIApp
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开发一个 DIApp
- en: Testing a DIApp
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试一个 DIApp
- en: Deploying a DIApp
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署一个 DIApp
- en: Monitoring a DIApp
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 监控一个 DIApp
- en: Technical requirements
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: This chapter requires you to be capable of analyzing the benefits of the application
    of AI techniques along with the application of blockchain technology in the software
    development process across several application domains.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 本章需要您能够分析在软件开发过程中应用 AI 技术以及区块链技术的好处，涉及几个应用领域。
- en: Applying SDLC practices in blockchains
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在区块链中应用 SDLC 实践
- en: With more than 10 years since the advent of blockchain technology, there is
    a need for newer emerging patterns that can apply blockchain technology and AI
    techniques to address the growing demands from the ever-expanding internet, and
    effectively manage the software development practices across various industry
    verticals.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 距区块链技术问世已有十多年，需要新兴模式将区块链技术和人工智能技术应用于不断扩张的互联网中，有效地管理各个行业垂直领域的软件开发实践需求。
- en: Let's now explore all the major aspects of SDLC step by step in the following
    sections.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们逐步探讨 SDLC 的所有主要方面。
- en: Ideation to productization
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从构思到产品化
- en: Many ideas for building new applications on top of blockchain exist. However,
    fewer ideas are converted into designs. Although efforts are made to design decentralized
    applications, only a few designs are practical enough for the real world. This
    is due to the mismatch between product expectations and the readiness of technology
    at the developer’s disposal. In some cases, the technology and features may become
    available, but they may not be supported well enough due to the recent and unstable
    growth of these blockchains. Hence, it is a commonly perceived problem that not
    all ideas in blockchain can be converted into a product.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 存在许多构建新应用程序的想法，但是很少有想法被转化为设计。尽管在设计分散式应用程序方面做出了努力，但只有少数设计实际上对现实世界足够实用。这是由于产品期望与开发者手头可用技术的准备不足之间的不匹配造成的。在某些情况下，技术和功能可能已经可用，但由于这些区块链最近和不稳定的增长，它们可能得不到足够的支持。因此，普遍存在这样一个认识问题，即区块链中并非所有想法都能转化为产品。
- en: Apart from the limitations of the platforms themselves, there is also a tendency
    to **blockchain-ify** every existing solution, due to the **Fear of Missing Out**
    (**FOMO**) on opportunities. Some companies want to try it even when it may be
    unsuitable for their purpose, and this can lead to issues as well.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 除了平台本身的限制之外，还存在一种倾向，即由于害怕错过机会，将每个现有解决方案“区块链化”。一些公司甚至在可能不适合其目的的情况下也想尝试，这也可能导致问题。
- en: 'Based on my experience from the past three years of active development in the
    blockchain and AI spaces, these issues could be resolved by taking some of the
    following steps:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 根据我过去三年在区块链和人工智能领域的积极开发经验，这些问题可以通过采取以下一些步骤来解决：
- en: '**Understand the business process**:'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**理解业务流程**：'
- en: In most of the blockchain-based use cases I have come across, a clear understanding
    of the business process is crucial since a majority of blockchain solutions will
    be affecting the operational as well as financial aspects of a business. Therefore,
    it is important to educate all stakeholders about the business process in greater
    detail before dangerous assumptions can be made on the intricate steps involved
    or the method required.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在我遇到的大部分基于区块链的用例中，对业务流程的清晰理解至关重要，因为大多数区块链解决方案将影响业务的运营和财务方面。因此，在对复杂步骤或所需方法的危险假设之前，重要的是在更大的细节上教育所有利益相关者关于业务流程。
- en: For example, if a new solution is being developed to digitally transform a dairy
    firm using blockchain and AI, everyone on the team must have a comfortable understanding
    of the end-to-end process of bringing milk from the cattle farm to the table.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果正在开发一种使用区块链和人工智能数字化转型乳制品公司的新解决方案，团队中的每个人都必须对将牛奶从牛场带到餐桌的端到端流程有舒适的了解。
- en: '**Establish** **clear requirements**:'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**建立清晰的要求**：'
- en: It is a common observation in any emerging technology that most of the efforts
    are often hyped, thereby lacking the objective clarity needed to build apps. Before
    we can identify potential points of integration, we must have clarity on what
    pain points are being addressed by the application of blockchain or AI in the
    solution. All stakeholders must do their best here to clearly communicate the
    functional and non-functional requirements. This can be helpful in managing expectations
    in the future.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何新兴技术中都很常见的是，大部分努力往往被夸大了，从而缺乏构建应用所需的客观清晰度。在我们能够确定潜在的集成点之前，我们必须明确了解应用区块链或人工智能解决方案时解决了什么问题。所有利益相关者必须尽力在这里清晰地传达功能和非功能需求。这在未来管理期望方面会很有帮助。
- en: For example, the decision makers or owners of the organization may establish
    the need to achieve better transparency and accountability from the local cattle
    centers that produce raw unprocessed milk. The owners may also identify the need
    to analyze the current sales trends for all their dairy products in order to ensure
    that milk is made available for further processing to manufacture the necessary
    dairy products according to demand.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，组织的决策者或所有者可能确定了需要从生产原奶的当地牛场获得更好的透明度和责任制。所有者可能还确定了需要分析所有乳制品的当前销售趋势，以确保根据需求提供牛奶用于进一步加工制造必要的乳制品。
- en: '**Identify** **critical checkpoints in the business processes**:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**识别业务流程中的关键检查点**：'
- en: Once the requirements have been identified and clarified, it is crucial to not
    jump straight into design in the case of blockchain. We must identify the current
    implementations and understand the critical business components and the checkpoints
    where technology must be applied and integrated.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦需求被确定并澄清，对于区块链来说，直接跳入设计是至关重要的。我们必须确定当前的实施情况并理解关键的商业组件以及技术必须应用和集成的检查点。
- en: For example, identifying each cow in the cattle herd could be one of the most
    basic and foundational checkpoints for the team. Also, it is crucial to understand
    whether the volumes of raw milk collected at the local producers are manually
    inputted into the system or automated through a digital weight scale. In the case
    of maintaining a certain amount of milk as a reserve for other dairy products,
    it is important to understand who makes the decision or approves the manufacture
    of dairy goods out of the reserve milk.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在牛群中识别每头牛可能是团队的最基本和根本的检查点之一。另外，理解当地生产商收集的原奶是否是通过数字称重秤手动输入到系统中，还是自动化的。在为其他乳制品保留一定数量的牛奶的情况下，了解是谁决定或批准了从储备牛奶生产乳制品的重要。
- en: '**Check** **whether technology integration is feasible**:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**检查技术集成是否可行**：'
- en: Once the checkpoints are identified, we can now identify various technical approaches
    to solve the problem and check whether the approach fits in the larger process.
    A lot of the time, unlike traditional solutions, blockchain developers are limited,
    either by the infrastructure and platforms, or by the lack of technical stability
    of the features supported by a given blockchain platform.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦确定了检查点，我们现在可以确定解决问题的各种技术方法，并检查其是否适应更大的过程。很多时候，与传统解决方案不同，区块链开发人员受到限制，要么是受到基础设施和平台的限制，要么是受到所给定的区块链平台支持的功能的技术稳定性的限制。
- en: For example, let's assume that we want to identify each cow in the cattle herd
    by a **Radio Frequency Identification** (**RFID**) tag. Now, each cow tagged with
    an RFID tag must be virtually represented in the blockchain through a state variable.
    Here, it is imperative that the developers do not assume that the value of the
    RFID tag will be persistable on a blockchain. Most blockchain platforms have serious
    constraints on the type of data that can be stored. They also impose serious restrictions
    on the length and range of the data types that could be persisted in a blockchain
    through a smart contract, due to the blockchain's decentralized nature. In this
    case, we may want to identify the structure of an RFID tag and try to store it
    in a secondary storage network such as MóiBit to identify all cows in the herd.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，假设我们想通过**射频识别**（**RFID**）标签来识别牛群中的每头牛。现在，每头配有RFID标签的牛必须通过状态变量在区块链中虚拟表示。在这里，开发人员必须不要假设RFID标签的值能够在区块链上持续存在。大多数区块链平台对可以存储的数据类型有严格的限制。它们还对可以通过智能合约在区块链上持久化的数据类型的长度和范围施加严格限制，这是由于区块链的去中心化性质所决定的。在这种情况下，我们可能需要识别RFID标签的结构，并尝试将其存储在诸如MóiBit之类的辅助存储网络中，以识别牛群中的所有牛。
- en: Similarly, in the case of measuring the volume of milk produced, it is imperative
    to identify whether a digital weight scale is capable of making a smart contract
    call in the blockchain. If the milk is collected from very remote areas, it is
    important to identify such operational impediments also.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，在测量产奶量的情况下，有必要确定数字称重秤是否能够在区块链上进行智能合约调用。如果奶牛的奶是从非常偏远的地区收集的，则还必须确定此类操作上的障碍。
- en: Finally, it is also very crucial to identify how the application of AI models
    on the information gathered on the blockchain can be harnessed to address user
    requirements. That is, designers, architects, and developers must be aware of
    the blockchain's transactional information and its data structure. Initial efforts
    must be made to understand that the transactional information can be processed
    in such a way as to ensure that an AI model can be trained sufficiently to predict
    the sales trends and set aside necessary milk reserves for milk-based dairy products.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，确定如何将应用于区块链上收集的信息的AI模型应用于解决用户需求也非常重要。也就是说，设计师、架构师和开发人员必须了解区块链的交易信息及其数据结构。必须首先努力了解交易信息可以以确保AI模型能够充分训练以预测销售趋势并留出必要的奶制品储备的方式进行处理。
- en: '**Establish technical dependency across affected components**:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**建立受影响组件之间的技术依赖**：'
- en: Once we identify potential integration points, we should carefully establish
    the technical dependencies. These dependencies can be either internal dependencies
    or external dependencies. Technical dependencies are internal if the development
    of a solution depends on its design, architecture, user stories, or acceptance
    criteria. The poor design of a given solution or information flow can cause many
    issues. Incomplete architectural decisions can also lead to issues in implementation.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们确定了潜在的集成点，就应仔细建立技术依赖关系。这些依赖关系可以是内部依赖关系或外部依赖关系。如果解决方案的开发取决于其设计、架构、用户故事或验收标准，则技术依赖关系是内部的。给定解决方案的设计不良或信息流的不完整可能会导致许多问题。不完整的架构决策也可能导致实施问题。
- en: 'The following diagram summarizes the need for better clarity in all aspects
    to build the ideal solution using blockchain and AI:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表总结了在所有方面提供更清晰的需要，以利用区块链和人工智能构建理想解决方案：
- en: '![](img/3f86358d-7d13-4528-8f36-6e049aa9281e.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3f86358d-7d13-4528-8f36-6e049aa9281e.png)'
- en: 'Fig 7.1: A diagram representing various outcomes and the quality of solutions'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 'Fig 7.1: 代表各种结果和解决方案质量的图表'
- en: To summarize, as mentioned in the preceding diagram, ideal solutions can be
    achieved only when the requirements are very clear and specific, along with having
    the upper hand in technical capabilities. However, if the requirements are not
    fully documented, understood, nor communicated, the outcome is a partial solution
    that does not propose addressing the complete set of problems. The two other types
    of solutions in the left-side quadrants are poor and ineffective due to the lack
    of technical capabilities in establishing the dependencies with some room for
    ineffective documentation of requirements.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 总结一下，如前面图中所述，只有在需求非常明确和具体，并且具有技术能力优势的情况下，才能实现理想的解决方案。然而，如果需求没有完全记录、理解或传达，则结果是一个部分解决方案，无法提出解决完整问题集的解决方案。左侧四分之一中的另外两种解决方案由于缺乏技术能力而变得贫乏和无效，这些解决方案中有一些没有充分记录需求的地方，以及在建立依赖关系方面存在无效的文档记录。
- en: With a basic understanding of what must be considered before the development
    of blockchain or AI solutions, let's now move forward and understand how these
    solutions are defined.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在了解开发区块链或人工智能解决方案之前必须考虑的基本原则后，现在让我们继续了解这些解决方案是如何定义的。
- en: Introduction to DIApps
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DIApps 介绍
- en: Before understanding what we mean by a **DIApp**, let's first understand what
    a decentralized application really is. **Decentralized applications** or **dApps**
    (also written as **DApp** or **Dapp**) are user applications that run on a platform
    hosted by a number of nodes in a distributed manner. DApps emerged as a solution
    architecture on top of blockchains wherein custom business logic could be programmed
    in a particular language of support. Once the logic is interpreted into code,
    we deploy this code on the respective blockchain platforms. Once the logic is
    deployed on the platform, we further integrate the logical program with frontend
    applications for user interactions.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在了解我们所说的**DIApp**之前，让我们先了解什么是真正的去中心化应用。**去中心化应用**或 **dApps**（也写作 **DApp** 或
    **Dapp**）是在分布式方式下由多个节点托管的平台上运行的用户应用程序。DApps 作为一种解决方案架构出现在区块链之上，其中可以用一种特定支持的语言编写自定义业务逻辑。一旦逻辑被解释为代码，我们就在相应的区块链平台上部署该代码。一旦逻辑部署到平台上，我们就进一步将逻辑程序与前端应用程序集成，以进行用户交互。
- en: In contrast to DApps, a **Decentralized Intelligent Application** (**DIApp**)
    is an enhanced pattern of a DApp that facilitates the application of AI wherever
    applicable, on top of a blockchain platform, in a much more robust manner that
    provides value to all stakeholders. Although the concept of slapping AI on top
    of solutions is not an unusual thing, **DIApps **are an understandable approach
    and a novel pattern that makes more sense for future generations of solutions
    built using both blockchain and AI.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 与 DApps 相比，**去中心化智能应用**（**DIApp**）是 DApp 的增强模式，可以在区块链平台上更加强大地应用人工智能（AI），为所有利益相关者提供价值。虽然在解决方案中加入人工智能的概念并不罕见，但**DIApps **是一种可理解的方法和一种新颖模式，对于使用区块链和人工智能构建的未来解决方案更有意义。
- en: As the name suggests, a DIApp is an application offering both decentralized
    and intelligent capabilities. Since it is a pattern inherited from DApps, it is
    decentralized by default, thanks to the implementation currently followed by all
    the blockchain platforms. However, DIApps have the exclusive capability of being
    more intelligent. This is made possible by an intermediary off-chain database
    that gives DIApps the ability to store big data from an application or the users
    through the application running on the blockchain.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 正如其名称所示，DIApp 是一种提供去中心化和智能功能的应用。由于它是从 DApps 继承的模式，因此默认情况下是去中心化的，这要归功于当前所有区块链平台遵循的实现方式。然而，DIApps 有更智能的独特能力。这是通过一个中间的离线数据库实现的，该数据库赋予
    DIApps 从应用程序或通过运行在区块链上的应用程序的用户那里收集大数据的能力。
- en: 'The following diagram providers a general schematic of a DIApp as explained
    in this section:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表提供了本节中所解释的 DIApp 的一般概要图：
- en: '![](img/929978be-070d-45ab-bc42-b9602ed25403.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](img/929978be-070d-45ab-bc42-b9602ed25403.png)'
- en: 'Fig 7.2: Composite view of the DIApp pattern'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: Fig 7.2：DIApp 模式的综合视图
- en: The preceding diagram depicts the composite view of a DApp within a DIApp pattern.
    The pattern is depicted in this fashion to help you understand the enhancements
    that are made to the existing pattern such that the application of AI can be facilitated.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的图表描述了 DIApp 模式中 DApp 的综合视图。通过这种方式描述模式，帮助您理解对现有模式进行的增强，以便能够应用人工智能。
- en: With a basic understanding of both the DApp and DIApp design patterns, let's
    now contrast them, weighing the pros and cons between the patterns.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 有了对 DApp 和 DIApp 设计模式的基本理解，现在让我们对它们进行对比，权衡模式之间的利弊。
- en: '**Comparing DIApps and DApps**'
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**比较 DIApp 和 DApp**'
- en: In this section, we will outline the issues faced by enterprises in developing
    and using DApps. Further, we will outline the solution architecture of both the
    DApp and DIApp patterns in the enterprise scenario and outline the key differences.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将概述企业在开发和使用 DApps 时面临的问题。此外，我们将概述企业场景中 DApp 和 DIApp 模式的解决方案架构，并概述其主要区别。
- en: Challenges in the enterprise
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 企业面临的挑战
- en: Although several blockchain platforms represented new waves of experimental
    approaches, most of these approaches radically focused on the full disintermediation
    of all the entities involved in a business process, thereby making the solutions
    purely peer-to-peer. The reason for the full disintermediation in most of the
    emerging patterns is due to the maximalist nature of blockchain to decentralize
    the world. In contrast to this ideology, enterprise solutions fundamentally rely
    on maintaining accountability among key stakeholders without full disintermediation.
    Hence, there is a need for an enhanced pattern that is fit for adoption by enterprises.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管几个区块链平台代表了新的实验方法，但这些方法大多基于全面淘汰业务流程中涉及的所有实体，从而使解决方案纯粹成为点对点的。大多数新兴模式全面淘汰的原因是因为区块链的最大化本质是将世界去中心化。与此思想相反，企业解决方案基本上依赖于在关键利益相关者之间保持责任。因此，需要一种增强的模式，适合企业采用。
- en: Solution architecture of a DApp
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DApp 的解决方案架构
- en: 'The solution architecture of a DApp primarily comprises the following key points:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: DApp 的解决方案架构主要包括以下关键点：
- en: The business logic is written in a **Domain-Specific Language** (**DSL**) in
    a smart contract.
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 业务逻辑是用智能合约中的**领域特定语言**（**DSL**）编写的。
- en: The smart contract is deployed on a blockchain network, identified by an address.
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 智能合约部署在区块链网络上，并由一个地址标识。
- en: The smart contract will acquire a new address if the business logic is to be
    updated in a majority of the blockchain platforms.
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要在大多数区块链平台上更新业务逻辑，则智能合约将获得一个新地址。
- en: A web or mobile application is developed as a client to access and carry out
    operations on the business logic.
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开发一个 web 或移动应用程序作为客户端来访问并执行业务逻辑操作。
- en: Almost all the critical data is stored on top of the blockchain, with little
    or no scope for analytical capabilities.
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 几乎所有关键数据都存储在区块链之上，几乎没有分析能力的余地。
- en: Solution architecture of a DIApp
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DIApp 的解决方案架构
- en: 'The solution architecture of a DIApp primarily comprises adding technical capabilities
    to make the pattern more approachable by enterprises. Here are the key highlights:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: DIApp 的解决方案架构主要包括添加技术能力，使该模式更适合企业使用。以下是主要亮点：
- en: Business logic is usually written in any high-level language such as C, Python,
    Java, or Golang, among others supported by the **Low-Level Virtual Machine** (**LLVM**)
    compiler. Also, normal smart contract languages can be used.
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 业务逻辑通常由任何高级语言编写，例如 C、Python、Java 或 Golang，等等，这些语言由**低级虚拟机**（**LLVM**）编译器支持。此外，也可以使用普通的智能合约语言。
- en: The majority of smart contracts are upgradeable, meaning that the code can be
    updated without having to change its address.
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大多数智能合约都是可升级的，这意味着代码可以在不更改地址的情况下更新。
- en: Traditional client applications can also integrate with these types of smart
    contracts as there is less need for integrating it with newer middleware.
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 传统客户端应用程序也可以与这些类型的智能合约集成，因为与新的中间件集成的需求较少。
- en: Critical business data is not only stored in blockchain networks but also in
    decentralized data storage systems to ensure better integrity of the data.
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重要的业务数据不仅存储在区块链网络中，还存储在分散的数据存储系统中，以确保数据的完整性。
- en: Key differences
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 主要区别
- en: With a deeper dive into the aspects of the DIApp pattern, let's now identify
    some of the key differences between the two patterns.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 深入探讨 DIApp 模式的方面后，现在让我们识别一些两种模式之间的主要区别。
- en: 'The following table offers a high-level comparison of both the patterns that
    you must be aware of:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格提供了您必须了解的两种模式的高级比较：
- en: '| **DApp** | **DIApp ** |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| **DApp** | **DIApp ** |'
- en: '| An application deployed on a blockchain platform with all the core logical
    elements. | Core logical elements are deployed on a blockchain platform, but are
    also powered by AI-driven insights in parallel. |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| 在区块链平台上部署了所有核心逻辑元素的应用程序。 | 核心逻辑元素部署在区块链平台上，但同时也由AI驱动的见解并行提供支持。 |'
- en: '| Data is mostly sitting on the blockchain platform, making it costly in terms
    of expense and time for retrieval. | Critical provenance data resides on the blockchain,
    but the remaining data is persisted on a cheaper off-chain storage system. |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| 数据大部分存储在区块链平台上，检索所需的费用和时间较高。 | 重要的溯源数据存储在区块链上，但其余数据存储在更便宜的链下存储系统中。 |'
- en: '| Not all DApps are upgradeable, hence a new address is required for every
    update to the logic. This could break systems. | Most applications can easily be upgraded
    without making changes to the address, hence nothing breaks in the system. |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| 并非所有的DApps都可升级，因此每次更新逻辑都需要新的地址。这可能会破坏系统。 | 大多数应用程序都可以轻松升级而不改变地址，因此系统不会发生任何故障。
    |'
- en: '| Data is rarely analyzed due to the cost of read-writes in a blockchain platform,
    and also due to the lack of structured data required to train AI models. | Data
    can be easily structured in an off-chain storage system and tightly coupled back
    to the blockchain platform as well as the AI models. |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| 由于在区块链平台上读写的成本，以及训练AI模型所需的结构化数据的缺乏，几乎不对数据进行分析。 | 数据可以很容易地在链下存储系统中进行结构化，并与区块链平台以及AI模型紧密耦合。
    |'
- en: With a detailed understanding of both the patterns, let's now explore the life
    cycle of DIApps across the stages of design, development, testing, and deployment.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 对于两种模式的详细了解后，让我们现在探究DIApps在设计、开发、测试和部署阶段的生命周期。
- en: Designing a DIApp
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设计DIApp
- en: The design aspects of DIApps have been often considered to be somewhat challenging
    and dictated by the technical complications introduced in the constant waves of
    change seen in almost all blockchain platforms. It is also a common perception
    that the solution space lacks a common structure to define key components, resulting
    in an inconsistent design strategy for applications.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 对DIApps的设计方面经常被认为是有些具有挑战性的，并且受到不断变化的几乎所有区块链平台引入的技术复杂性的限制。人们普遍认为，解决空间缺乏定义关键组件的共同结构，导致应用程序的设计策略不一致。
- en: For example, the tools required by the user of an Ethereum-based DIApp are very
    distinct from that of Hyperledger Fabric, and subsequently, that of EOS. This
    is due to the distinct design of the respective blockchain’s UI/UX framework,
    which is deeply dependent on its own design paradigms. Hence, it is important
    to identify the design constraints of the application before commencing the future
    steps.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，基于以太坊的DIApp用户所需的工具与Hyperledger Fabric以及EOS的工具非常不同。这是因为各自区块链的UI/UX框架设计迥然不同，深深依赖于其自身的设计范例。因此，在开始未来步骤之前，确定应用程序的设计约束非常重要。
- en: Before carving out a design for the DIApp, we must understand the research efforts
    explained in the following section.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在为DIApp制定设计之前，我们必须了解以下部分中解释的研究工作。
- en: Research
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 研究
- en: 'Before choosing which blockchain technology or platform you will use, it is
    critical to understand the user requirements, analyze them, and perform better
    research at an early stage of design. Instead of asking which blockchain technology
    can help address the requirements, consider these scenarios:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在选择将使用的区块链技术或平台之前，了解用户需求、分析它们，并在设计的早期阶段进行更好的研究至关重要。与其问哪种区块链技术可以帮助满足需求，不如考虑这些情景：
- en: Does the solution demand full decentralization over a public network for peer-to-peer
    interactions?
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解决方案是否要求在对等互动的公共网络上进行完全分散化？
- en: Does the solution need to be implemented in a private network due to the extreme
    sensitivity of the data and minimal exposure of the business logic?
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于数据的极度敏感性和业务逻辑的最小曝光，解决方案是否需要在私有网络中实施？
- en: Can the solution be implemented on a public network with all the sensitive data
    encrypted on a public decentralized storage system?
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解决方案是否可以在公共网络上实施，所有敏感数据都加密在公共分散式存储系统中？
- en: Can the same solution be implemented on a public network with all the sensitive
    data stored in a private virtual decentralized storage service?
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 同样的解决方案是否可以在公共网络上实施，所有敏感数据都存储在私有虚拟分散式存储服务中？
- en: Does the solution require a permissioned network of authorized nodes across
    multiple stakeholders of a consortium?
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解决方案是否需要一个授权节点的权限网络，跨越共同体的多个利益相关者？
- en: Based on the preceding pointers, we can undertake the following analysis. For
    scenario 5 in the preceding list, you are better off choosing a blockchain such
    as Hyperledger Fabric. However, in the cases of scenarios 3 and 4, you will need
    the **InterPlanetary File System** (**IPFS**) or an IPFS-based service provider
    who will encrypt the data and store it in a safe medium, offering security and
    redundancy with a secondary network. In scenario 2, you may be better off again
    with Hyperledger Fabric. Finally, in scenario 1, which might be the majority of
    cases, Ethereum might best fit your solution requirements.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 根据前述指针，我们可以进行以下分析。对于上述列表中的第 5 种情景，最好选择像 Hyperledger Fabric 这样的区块链。然而，在第 3 和第
    4 种情景的情况下，您将需要 IPFS 或基于 IPFS 的服务提供商，他们将加密数据并将其存储在安全介质中，通过辅助网络提供安全性和冗余性。在情景 2 中，您可能再次最适合使用
    Hyperledger Fabric。最后，在情景 1 中，可能是大多数情况，以太坊可能最适合您的解决方案要求。
- en: Conceptualization
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 概念化
- en: Formulating the **Proof of Concept** is an essential step in the development
    of solutions using emerging technologies. The development of proof of concepts
    for decentralized applications is also important, as they ensure alignment between
    the requirements and delivery of the solution. This helps maintain functional
    and design conformity right from the early days of development.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 制定概念验证是利用新兴技术开发解决方案的重要步骤。对于去中心化应用程序的概念验证的开发也很重要，因为它们确保了需求和解决方案的交付之间的一致性。这有助于在开发的早期阶段就保持功能和设计的一致性。
- en: Also, it is notable that the proof of concept specifications may change due
    to the waves of design and architectural change in the blockchain landscape. Hence,
    proof of concepts should focus more on the functional viability of compatible
    patterns available to the developers.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 还值得注意的是，由于区块链领域的设计和架构变化的浪潮，概念验证的规范可能会发生变化。因此，概念验证应更多地关注开发人员可用的兼容模式的功能可行性。
- en: Product-market fit
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 产品市场契合度
- en: Developing the proof of concepts and prototyping the critical aspects of an
    application form a recursive practice until we are able to see a product-market
    fit. The definition and constraints of the product-market fit for DIApps cannot
    be general since each DIApp may target a specific problem in a specific domain.
    However, a few common attributes could help assert the product-market fit of a
    DIApp.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 开发概念验证和原型化应用程序的关键方面形成了一个递归的实践，直到我们能够看到产品市场契合度。DIApp 的产品市场契合度的定义和约束不能是通用的，因为每个
    DIApp 可能针对特定领域的特定问题。然而，一些共同的特征可能有助于确定 DIApp 的产品市场契合度。
- en: 'They are as follows:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 它们如下：
- en: Does the DIApp solve a unique problem faced by various stakeholders in the industry?
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DIApp 是否解决了行业中各种利益相关者面临的独特问题？
- en: Does the DIApp disintermediate a current entity that is inefficient in the current
    process, or bring more order to the process?
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DIApp 是否使当前流程中效率低下的当前实体变得无关，或者为流程带来更多秩序？
- en: Can the benefits of DIApps be achieved only by utilizing the combination of
    blockchain and AI?
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只有利用区块链和人工智能的组合才能实现 DIApp 的好处吗？
- en: Does the DIApp facilitate users to derive insights by using the DIApp with the
    help of AI models?
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DIApp 是否通过使用 AI 模型帮助用户利用 DIApp 获得洞见？
- en: By answering the preceding questions, we may be able to identify whether the
    DIApp has achieved a suitable product-market fit. It is also important for you
    to identify other key indicators apart from the preceding general attributes to
    identify the product-market fit for your DIApp.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 通过回答前面的问题，我们可能能够确定 DIApp 是否已经达到了合适的产品市场契合度。对于您的 DIApp，除了前述的一般属性之外，识别其他关键指标也很重要。
- en: With the basic knowledge and key points on the design aspects under our belts,
    let's now understand the key highlights of the development aspects of the SDLC
    in the next section.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们掌握了设计方面的基本知识和关键要点后，让我们现在在下一节中了解 SDLC 的开发方面的关键亮点。
- en: Developing a DIApp
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开发 DIApp
- en: The development of a DIApp can be tricky. Since AI and blockchain are yet to
    see the limelight in development, some practices in the industry are not yet visible
    to all. In this section, we will highlight the key development aspects of a DIApp.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: DIApp 的开发可能会棘手。由于人工智能和区块链尚未在开发中受到广泛关注，行业中的一些做法尚未被所有人看到。在本节中，我们将重点介绍 DIApp 的关键开发方面。
- en: Before exploring the technical aspects, let's understand a fundamental aspect
    of development capabilities in an organization. As blockchain and AI are on the
    bleeding edge of innovation, it is an open truth that many organizations are still
    in the process of building combined expertise in the respective technologies.
    Having said that, it is also essential to set up a team of members with complementary
    skill sets in smart contract development, web or mobile application development,
    and finally AI or data science modeling. The following section provides an overview
    of an ideal DIApp team.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在探讨技术细节之前，让我们了解组织中开发能力的一个基本方面。由于区块链和人工智能处于创新的最前沿，一个公开的事实是许多组织仍在努力建立各自技术的综合专业知识。话虽如此，建立一个由智能合约开发、Web
    或移动应用程序开发以及人工智能或数据科学建模等技能互补的团队成员组成的团队也是至关重要的。以下部分概述了理想的 DIApp 团队。
- en: Team formation
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 团队组建
- en: 'In a corporate setup, I recommend the following team format for proof of concept
    development. It is assumed that the team members are enabled with regular technical
    and solution expertise:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在企业设置中，我建议为概念验证开发采用以下团队格式。假设团队成员具备定期的技术和解决方案专业知识：
- en: Two smart contract developers with good hands-on knowledge of the Solidity,
    Rust, and Golang programming languages are essential. Knowledge of Haskell is
    also preferred, since a few blockchains offer smart contracts based on functional
    programming languages. One smart contract developer may be able to focus on feature
    development and another smart contract developer could work on bug fixes, internal
    auditing, code quality reviews, and so on.
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两名具有良好的 Solidity、Rust 和 Golang 编程语言实践知识的智能合约开发者至关重要。由于一些区块链基于函数式编程语言提供智能合约，因此也更倾向于具备
    Haskell 知识。其中一位智能合约开发者可能专注于功能开发，而另一位可以负责故障修复、内部审计、代码质量审查等工作。
- en: One full-stack web developer with basic knowledge of blockchain to develop the
    frontend web application. If the target audience is on mobile, you might choose
    a mobile application developer accordingly.
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个具备基本区块链知识的全栈 Web 开发者用于开发前端 Web 应用程序。如果目标受众是移动端用户，可能需要相应选择一位移动应用程序开发者。
- en: One SMACK-stack developer may be required to set up the analytics platform needed
    for building AI capabilities in the solution.
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可能需要一位 SMACK-stack 开发者来搭建所需的分析平台，以构建解决方案中的人工智能功能。
- en: One machine learning or deep learning engineer may be required to build the
    required models. If an application requires deep learning or a neural network,
    you should make your choice accordingly.
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可能需要一位机器学习或深度学习工程师来构建所需的模型。如果应用程序需要深度学习或神经网络，则应相应做出选择。
- en: Finally, you may need one DevOps engineer to orchestrate the infrastructure
    and deploy all the necessary components across vendors or cloud platforms through
    a well-defined **Continuous Integration/Continuous Delivery** (**CI/CD**) pipeline.
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，您可能需要一位 DevOps 工程师来编排基础架构，并通过明确定义的持续集成/持续交付（CI/CD）管道在供应商或云平台上部署所有必要组件。
- en: An all-star team of six members with complementary skill sets can help develop
    the proof of concept and establish the needed technical features. The two smart
    contract developers can be replaced by one senior smart contract developer with
    end-to-end experience.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 一支由六名具备互补技能的全明星团队可以帮助开发概念验证并建立所需的技术功能。两名智能合约开发者可以由一名具有端到端经验的高级智能合约开发者取代。
- en: With a proper team setup, we shall discuss one of the best project management
    practices for delivering the proof of concept in the following section.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 通过适当的团队设置，我们将在下一节讨论一种最佳的项目管理实践，以交付概念验证。
- en: Agile development
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 敏捷开发
- en: Once the team is set up and the requirements are neatly documented, I recommend
    establishing a clear release plan for the proof of concept and the subsequent
    builds as much as possible. As mentioned earlier in the *Designing a DIApp *section,
    the technical aspects of blockchain technologies change very frequently. In order
    to match the pace of change, it is important to manage client expectations. Otherwise,
    it could lead to another level of complication on top of technical issues.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦团队建立并且需求清晰记录，我建议尽可能为概念验证和随后的构建制定清晰的发布计划。如前所述，在 DIApp 设计部分，区块链技术的技术方面变化非常频繁。为了跟上变化的步伐，管理客户期望非常重要。否则，可能会在技术问题之上导致另一层复杂性。
- en: 'Let''s look at the following diagram:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一下以下图表：
- en: '![](img/62732ef4-0ca0-489f-8e38-0fe577a316b3.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/62732ef4-0ca0-489f-8e38-0fe577a316b3.png)'
- en: 'Fig 7.3: Schematic of breaking down the release plan into workable tasks for
    the team'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.3：将发布计划分解为团队可行任务的示意图
- en: As shown in the preceding diagram, the requirements need to be documented very
    specifically and broken down into items across three levels. Managers and product
    owners both work on features in a release plan, whereas the product owner alone
    specifies the requirements for each aspect of the proof of concept or any release
    in the form of a user story. Once the user story is documented with an expected
    output, the team can collectively break it down into many work items or tasks.
    You can also break down the task into multiple sub-tasks for a large project beyond
    the proof of concept release for a better and more granular documentation of efforts.
    The tasks can be assigned to individuals and can be either blockchain-related
    or AI-related.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 如前图所示，需求需要非常具体地记录并分解成三个层次的项目。经理和产品所有者都会在发布计划中处理功能，而产品所有者独自指定每个概念验证或任何发布的要求，以用户故事的形式。一旦用户故事以期望的输出记录下来，团队就可以共同将其分解成许多工作项目或任务。您还可以将任务分解为多个子任务，以便在概念验证发布之外的大型项目中更好地记录努力。任务可以分配给个人，可以是与区块链相关或与人工智能相关。
- en: If the requirements are documented clearly, you can organize **sprint planning**.
    As per agile development, you can organize a sprint for at least 2 to 3 weeks.
    A proof of concept release can be planned across one or many sprints. At the end
    of each sprint, the team must organize a **retrospective meeting** to review the
    progress and reflect on the current practices.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需求清楚地记录下来，您可以组织**迭代计划**。根据敏捷开发，您可以组织至少 2 到 3 周的迭代。概念验证发布可以规划在一个或多个迭代中。在每个迭代结束时，团队必须组织一次**回顾会议**，以审查进展并反思当前的实践。
- en: Compared to retrospectives of traditional apps, you could also identify the
    risks or issues created by the components. Since the ecosystem is still under
    development, the observed deficiencies can be converted into issues. The issues
    can be segregated and filed at the repositories on the respective dependencies.
    Most of the dependencies reside on GitHub. So, the developers must have sufficient
    awareness of the platform to navigate it, collaborate with others, and resolve
    the issues.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 与传统应用的回顾相比，您还可以识别组件产生的风险或问题。由于生态系统仍在发展中，观察到的不足之处可以转化为问题。这些问题可以被分离并在相应依赖项的存储库中进行归档。大多数依赖项都驻留在
    GitHub 上。因此，开发人员必须对该平台有足够的了解，以便浏览平台、与他人合作并解决问题。
- en: The process repeats across many sprints until all the features, requirements,
    and bug fixes have been addressed in alignment with the release plan.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 这个流程会在多个迭代中重复进行，直到所有功能、需求和错误修复都按照发布计划得到解决。
- en: With a basic understanding and overview of the key aspects of developing a DIApp,
    let's now consider testing DIApps.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 了解了开发 DIApp 的关键方面的基本概念和概述后，现在考虑测试 DIApps。
- en: Testing a DIApp
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试 DIApp
- en: Since these applications will most likely manage high-value assets and sensitive
    information, testing DIApps is a crucial step in the process before and after
    the deployment of all the modules in the network. Ensuring the correctness and
    lasting service of the application is critical for businesses and hence, it is
    a very important aspect of the development life cycle to bring back rigorous testing
    practices into the process.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这些应用很可能管理高价值资产和敏感信息，测试 DIApps 在部署所有网络模块之前和之后都是流程中的一个至关重要的步骤。确保应用程序的正确性和持久性对企业至关重要，因此，将严格的测试实践重新引入到开发生命周期中成为了非常重要的一个方面。
- en: Let's now go through the key highlights of the testing and deployment processes
    for a DIApp.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们现在来看一下 DIApp 的测试和部署过程的重点亮点。
- en: Authoring the test cases
  id: totrans-125
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 撰写测试用例
- en: Before the software can be deployed, we can try to ensure the correctness of
    the software and also confirm the fitness of the runtime environment by running
    a few crucial tests. Usually, these tests are implemented within the source code, in
    the form of unit test files containing dummy input values being passed to the
    functions, later checked through assertion to ensure the correctness of the software
    in the relatively new environment. Each test case represents a scenario for the
    logic to perform and provide a predetermined output scenario. We will explore
    more about the generation of unit test cases in [Chapter 8](2642decc-1e7e-44f4-84a4-4b7a42ddda25.xhtml), *Implementing
    DIApps*, in a hands-on practical.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在软件部署之前，我们可以尝试确保软件的正确性，同时通过运行一些关键测试来确认运行时环境的适应性。通常，这些测试是在源代码中实现的，以单元测试文件的形式，其中包含将虚拟输入值传递给函数，然后通过断言来检查软件在相对新的环境中的正确性。每个测试用例都代表了一个逻辑执行和提供预定输出场景的场景。我们将在[第8章](2642decc-1e7e-44f4-84a4-4b7a42ddda25.xhtml)，*实现
    DIApp*，中进行更多关于单元测试用例生成的实践。
- en: 'Test cases are executed across two levels of testing: unit testing and integration
    testing.'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 测试用例在两个测试级别上执行：单元测试和集成测试。
- en: Unit testing
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 单元测试
- en: Each component in the DIApp pattern delivers an exclusive value to the solution.
    Hence, it is important to ensure the correctness of each component in the solution.
    This can be made possible by performing **unit testing**. Under unit testing,
    we can test the core functionalities of each module before integrating it with
    the other modules. Unit testing helps in formally verifying the correctness of
    these modules by comparing the real output to the desired output. This process
    repeats for each change made to the module, thereby preserving the correctness
    of the module each time a change has been made.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: DIApp 模式中的每个组件都为解决方案提供独特的价值。因此，确保解决方案中每个组件的正确性至关重要。通过执行**单元测试**可以实现这一点。在单元测试下，我们可以在将其与其他模块集成之前测试每个模块的核心功能。单元测试通过将实际输出与期望输出进行比较，有助于正式验证这些模块的正确性。每次对模块进行更改时，该过程都会重复，从而在每次更改模块时保持模块的正确性。
- en: Once the modules are unit tested and integrated, we can perform integration
    testing, as explained in the following section.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦模块经过单元测试和集成，我们就可以执行集成测试，如下一节所述。
- en: Integration testing
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 集成测试
- en: As explained in the previous sections, a DIApp is a hybrid composition of many
    technologies. Hence, it is important to test the behavior of each heterogeneous
    component in order to ensure that they provide accurate results. This is achieved
    by performing **integration testing**. Once the components are integrated, we
    can run a few test cases that can formally verify the correctness of a few critical
    components that rely upon one or more heterogeneous components to provide output.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 如前面所述，DIApp 是许多技术的混合体。因此，测试每个异构组件的行为以确保它们提供准确的结果至关重要。这通过执行**集成测试**来实现。一旦组件集成完成，我们可以运行一些测试用例，正式验证依赖一个或多个异构组件提供输出的一些关键组件的正确性。
- en: Testing AI models
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测试 AI 模型
- en: Although traditional software can be tested by unit tests and integrations tests,
    we need different measures and methods to test AI systems. Testing AI models and
    capabilities can be split into two phases. One phase of the testing is before
    the model reaches production. The other phase of the testing is applied post-production.
    Before bringing the AI model to production, testing can be performed by verifying
    the correctness and completeness of the training data. Similarly, once the AI
    models are deployed, we can test them frequently for accuracy and availability.
    Turing tests can also be performed to understand whether the AI model has sufficiently
    been able to replace a human response to the task.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管传统软件可以通过单元测试和集成测试进行测试，但我们需要不同的措施和方法来测试 AI 系统。测试 AI 模型和能力可以分为两个阶段。测试的一个阶段是在模型进入生产之前。另一个测试阶段是应用于生产后。在将
    AI 模型投入生产之前，可以通过验证训练数据的正确性和完整性来进行测试。同样，一旦部署了 AI 模型，我们可以经常测试其准确性和可用性。还可以进行图灵测试，以了解
    AI 模型是否已能够充分替代人类对任务的响应。
- en: With a fundamental understanding of testing in DIApp development under our belts,
    let's now go through the deployment process for a DIApp.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 通过对 DIApp 开发中测试的基本理解，现在让我们来了解一下 DIApp 的部署过程。
- en: Deploying a DIApp
  id: totrans-136
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署 DIApp
- en: In this section, we will discuss the common practices for deploying blockchain-based
    applications in hybrid environments. Unlike other emerging technologies, blockchain
    platforms demand a relatively larger stretch of time to set up the network and
    make the whole ecosystem functional. Accordingly, several blockchain platforms
    have understood the need for DevOps as an integral part of developing those platforms.
    Hence, it is also important to note that DevOps knowledge is also essential in
    using these platforms for developing applications and deploying solutions.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论在混合环境中部署基于区块链的应用程序的常见做法。与其他新兴技术不同，区块链平台需要相对更长的时间来设置网络并使整个生态系统运行起来。因此，几个区块链平台已经意识到
    DevOps 作为开发这些平台的一个组成部分的必要性。因此，值得注意的是，DevOps 知识在使用这些平台开发应用程序和部署解决方案时也是必不可少的。
- en: Scaling the application for production
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为了投入生产环境，需要对 DIApp 进行扩展。
- en: Deployment of the DIApp is the final crucial step in the life cycle. Apart from
    correctness, it is imperative that the application is designed, architected, and
    developed in a manner supportive for the deployment of the application in a scalable
    manner. The scale is not only measured in terms of the number of users, but also
    depends on the cost, form factors, and other economic attributes that may directly
    affect the operations.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: DIApp 的部署是生命周期中的最后关键步骤。除了正确性外，还必须确保应用程序在设计、架构和开发上支持以可伸缩的方式部署应用程序。规模不仅仅是以用户数量来衡量，还取决于成本、形式因素和可能直接影响运营的其他经济属性。
- en: Several tools such as Docker, Kubernetes, Ansible, Terraform, and Mesos are
    available for deploying DIApps and their dependencies. We will be exploring DevOps
    tools further in [Chapter 8](2642decc-1e7e-44f4-84a4-4b7a42ddda25.xhtml), *Implementing
    DIApps*, with some examples.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种工具可用于部署 DIApps 及其依赖项，例如 Docker、Kubernetes、Ansible、Terraform 和 Mesos。我们将在[第
    8 章](2642decc-1e7e-44f4-84a4-4b7a42ddda25.xhtml)，*实施 DIApps*中进一步探讨 DevOps 工具，并提供一些示例。
- en: Monitoring a DIApp
  id: totrans-141
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 监控 DIApp
- en: In this section, we will discuss the common practices used by many to monitor
    transactions of applications in blockchains.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论许多人用于监视区块链应用程序交易的常见做法。
- en: Explorers
  id: totrans-143
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 浏览器
- en: Most of the decentralized solutions are deployed on a public blockchain network
    or digital ledger. In most of the public networks, blockchain explorers are available
    to look up information concerning a transaction or block. However, if the DIApp solution
    is implemented in a private or permissioned environment, these public blockchain
    explorers may not be able to provide information on transactions belonging to
    a private network or private ledgers. Hence, we must be able to deploy existing
    blockchain explorers and plug them into the endpoints of a private service. This
    is the only way to facilitate users' monitoring of their transactions in a private
    environment. Several open source implementations of blockchain explorers are available,
    which could be downloaded and connected to private services.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数去中心化解决方案部署在公共区块链网络或数字账本上。在大多数公共网络中，都可以使用区块链浏览器查找有关交易或区块的信息。然而，如果 DIApp 解决方案在私有或许可环境中实施，这些公共区块链浏览器可能无法提供有关属于私有网络或私有账本的交易的信息。因此，我们必须能够部署现有的区块链浏览器，并将它们连接到私有服务的端点。这是在私有环境中方便用户监视其交易的唯一方法。有几个开源的区块链浏览器实现可供下载，并可连接到私有服务。
- en: Some examples of public blockchain explorers include Etherscan, EthStats, and
    BlockScout. We will discuss them in our next chapter. For example, BlockScout
    is an open source explorer that you can use to create a specific explorer for
    your private Ethereum network.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 公开区块链浏览器的一些示例包括 Etherscan、EthStats 和 BlockScout。我们将在下一章中讨论它们。例如，BlockScout 是一个开源的浏览器，您可以使用它创建一个针对您的私有以太坊网络的特定浏览器。
- en: Summary
  id: totrans-146
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we explored the basic definition of a DApp and a DIApp. We
    also contrasted both the solution architectures and design patterns of these two
    technologies. Based on the advantages of DIApps, we further explored the SDLC
    aspects of DIApps from ideation to release or deployment. The new economy of blockchain
    and AI requires a redefined SDLC that is inclusive of the new technologies involved.
    We have outlined the steps and processes to be considered before developing a
    DIApp.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了DApp和DIApp的基本定义。我们还对比了这两种技术的解决方案架构和设计模式。基于DIApp的优势，我们进一步探讨了从构思到发布或部署的DIApp的SDLC方面。区块链和人工智能的新经济需要重新定义的SDLC，包括涉及的新技术。我们已经概述了在开发DIApp之前需要考虑的步骤和流程。
- en: In the next chapter, we will focus on applying the development aspects of the
    SDLC by developing sample applications on various blockchain platforms, along
    with common AI techniques.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将专注于应用SDLC的开发方面，通过在各种区块链平台上开发示例应用程序，以及常见的人工智能技术。
