- en: Introduction to Blockchain Technology
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 区块链技术介绍
- en: 'In this chapter, we give an overview of blockchain, along with its key concepts
    such as cryptography and hash algorithms, the distributed ledger, transactions,
    blocks, proof of work, mining, and consensus. We cover Bitcoin, the mother of
    blockchain technology, in detail. We briefly introduce Ethereum by pointing out
    some limitations of Bitcoin and how they are addressed by Ethereum. While Bitcoin
    and Ethereum are examples of public blockchains, IBM''s Hyperledger is used as
    an example of enterprise blockchains. At the end of this chapter, we mention the
    evolution of the blockchain: blockchain 1.0, 2.0, 3.0, and beyond, based on their
    use cases. Specifically, we will cover the following topics on blockchain:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章节将概述区块链及其关键概念，如加密学、哈希算法、分布式账本、交易、区块、工作证明、挖矿和共识。我们详细介绍了区块链技术的鼻祖比特币。我们通过指出比特币的一些局限性以及以太坊如何解决这些问题，简要介绍了以太坊。虽然比特币和以太坊是公共区块链的示例，但
    IBM 的超级账本被用作企业区块链的示例。在本章的最后，我们提到了区块链的演变：基于它们的用例，包括区块链1.0、2.0、3.0及以后版本。具体来说，我们将涵盖以下区块链主题：
- en: A genealogical analogy for blockchain
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 区块链的家谱类比
- en: The Bitcoin consensus mechanism
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 比特币共识机制
- en: A brief discussion of Hyperledger
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对超级账本的简要讨论
- en: Blockchain evolution
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 区块链的演变
- en: The genealogy analogy
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 家谱类比
- en: One of the authors recently attended a Chinese university alma mater reunion
    event in Beijing, where blockchain became a hot discussion topic. A very well-regarded
    schoolmate and scholar, Professor Yang, who has authored books on cryptography
    and public data safeguards, used genealogy to describe a blockchain. This is a
    well-thought-out analogy since it explains blockchain intuitively and easily.
    The analogy is borrowed here to illustrate the basic ideas behind the technology.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 作者之一最近参加了北京的一次中国大学校友聚会，在那里，区块链成为了一个热门讨论话题。一位备受尊敬的校友和学者，杨教授，他曾撰写过关于密码学和公共数据保障的书籍，用家谱来描述区块链。这是一个深思熟虑的类比，因为它直观、易于理解地解释了区块链。这里借用这个类比来说明技术背后的基本思想。
- en: Back in the old days in China, it was a custom for each family of a clan (sharing
    the same last name) to keep a copy of the genealogical tree of the clan. When
    members of a family changed due to either marriage or the birth of an offspring,
    as well as adoption, the new member's name would appear in each copy. However,
    the new member had to be accepted by the clan before the name could be added in.
    There were cases when a marriage was not endorsed by a majority of the clan due
    to various reasons. In this case, the new member's name would not be entered into
    the genealogy. In other words, when a new member joined in a family, the news
    was broadcast to other families of the clan. If the clan reached a consensus on
    accepting the new member, each family would update their copy of the genealogical
    tree to reflect the change. On the other hand, if the clan decided not to accept
    the new member, the name would not be added in. The genealogy could be used for
    verification purposes. For example, if a stranger made a claim to be a member
    of the clan, or two people with the same last name were eager to find out whether
    they shared the same ancestor, with the genealogy, it was easy to verify this.
    The outcome would be accepted since the genealogy was considered reliable thanks
    to the aforementioned consensus and decentralized records, which were difficult
    to manipulate unless the majority of families agreed.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在中国的古老时代，每个姓氏家族都有一个习俗，即保存该家族的族谱副本（具有相同姓氏的人）。当家族成员因婚姻、生子或收养而发生变化时，新成员的姓名会出现在每个副本中。然而，新成员必须在姓名被添加之前得到家族的接受。由于各种原因，有时候结婚未得到大多数家族的认可。在这种情况下，新成员的姓名就不会被录入家谱中。换句话说，当一个新成员加入家族时，消息会传达给其他家族。如果家族就接受新成员达成共识，每个家族都会更新他们的家谱副本以反映这一变化。另一方面，如果家族决定不接受新成员，姓名就不会被添加。家谱可以用于验证目的。例如，如果一个陌生人声称是家族的成员，或者两个拥有相同姓氏的人想知道他们是否有共同的祖先，有了家谱，就很容易验证。结果会被接受，因为家谱被认为是可靠的，这要归功于上述共识和分散记录，除非大多数家族同意，否则很难操纵。
- en: 'A blockchain shares many of the characteristics of a genealogy. They are summarized
    as follows:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链与家谱有许多相似之处，总结如下：
- en: Like a clan consisting of many related families, a blockchain network consists
    of nodes. Each node is like a family.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 就像一个由许多相关家庭组成的家族一样，区块链网络由节点组成。每个节点就像一个家庭。
- en: Like every family keeping a copy of the clan's genealogy, each node of a blockchain
    maintains a copy of all transactions that have occurred on the chain, starting
    from the very beginning. The collection of all transactions is a **ledger**. This
    makes a blockchain a decentralized data repository.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 就像每个家庭都保存一份家谱副本一样，区块链的每个节点都保留着从一开始就发生在链上的所有交易的副本。所有交易的集合构成了一个**分类帐**。这使得区块链成为了一个分散的数据存储库。
- en: A genealogy starts with a common ancestor of the clan and names with direct
    relationships, such as parents and children, that are connected by a line for
    linkage. Similarly, a ledger consists of blocks. Each block contains one or multiple
    transactions depending on the type of blockchain. (As you will see later, blocks
    on Bitcoin or Ethereum host multiple transactions, while R3's Corda uses a block
    with only one transaction). Transactions are like names, and a block is similar
    to the invisible box containing a couple's names. An equivalent of the root ancestor
    is called the **genesis block**, which is the first block of a blockchain. Similar
    to a line linking parents and children, a hash, which will later be explained
    in more detail, points from the current block to its ancestor block.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个家谱以一个家族的共同祖先开始，名字与直系亲属之间的关系，如父母和子女，通过一条线连接起来。同样，分类帐由块组成。每个块包含一个或多个交易，取决于区块链的类型。（正如您将在后面看到的，比特币或以太坊上的区块包含多个交易，而
    R3 的 Corda 使用只有一个交易的块）。交易就像名字，而块类似于包含夫妇名字的看不见的盒子。根祖先的等价物称为**创世块**，它是区块链的第一个块。类似于连接父母和子女的线，一个哈希，稍后将更详细地解释，从当前块指向其祖先块。
- en: Like the consensus mechanism for adding new names to a genealogy, the Bitcoin
    blockchain uses a mechanism called Proof-of-Work to decide whether a block can
    be added to the chain. Like a genealogy, after a block is added to a chain, it
    is difficult to change (hack) unless one possesses the majority (which is called
    a 51% attack) of the computing power of the network.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 就像为将新的名字添加到家谱的共识机制一样，比特币区块链使用一种称为工作证明的机制来决定是否可以将一个块添加到链上。就像家谱一样，在一个块被添加到链上之后，除非拥有网络大多数（称为51%攻击）的计算能力，否则很难改变（入侵）。
- en: Genealogy provides transparency in a clan's history. Similarly, a blockchain
    allows a user to query the whole ledger or just a part of the ledger and find
    out about coin movements.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 家谱提供了家族历史的透明度。同样，区块链允许用户查询整个分类帐或分类帐的一部分，并了解硬币的流动情况。
- en: Since every family kept a copy of the genealogy, it was unlikely to lose the
    genealogy even if many copies were lost due to a natural disaster, a war, or other
    reasons. As long as at least one family survived, the genealogy survived. Similarly,
    a decentralized ledger will survive as long as at least one node survives.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于每个家庭都保存了家谱的副本，即使由于自然灾害、战争或其他原因导致许多副本丢失，也不太可能丢失家谱。只要至少有一个家庭幸存下来，家谱就会幸存下来。同样，只要至少有一个节点幸存下来，分散式分类帐就会幸存下来。
- en: While genealogy is a good analogy to explain some key concepts of a blockchain,
    they are not the same. Inevitably, there are features that are not shared by them.
    For example, the blockchain uses cryptography and hashes extensively for data
    protection and deterring hackers. A genealogy does not have such a need. Therefore,
    next we move away from the genealogy analogy and explain key blockchain concepts
    chronically.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然家谱是解释区块链一些关键概念的一个好比喻，但它们并不相同。不可避免地，它们之间存在着不共享的特征。例如，区块链广泛使用密码学和哈希来保护数据和阻止黑客。家谱没有这种需求。因此，接下来我们将摆脱家谱的比喻，按照时间顺序解释关键的区块链概念。
- en: Bitcoin
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 比特币
- en: 'Blockchain technology initially caught people''s attention due to the **Bitcoin**
    blockchain, an idea outlined by a white paper authored by Satoshi Nakamoto and
    published in October 2008 on the cryptography mailing list at metzdowd.com. It
    describes the **Bitcoin digital currency** (**BTC**) and was titled *Bitcoin:
    A Peer-to-Peer Electronic Cash System*. In January 2009, Satoshi Nakamoto released
    the first Bitcoin software, which launched the network and the first units of
    the Bitcoin cryptocurrency: BTC coins.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链技术最初引起人们的关注是因为**比特币**区块链，由中本聪在2008年10月发表在metzdowd.com的密码学邮件列表上的一篇白皮书中概述的一个想法。它描述了**比特币数字货币**（**BTC**），标题为*比特币：一个点对点的电子现金系统*。2009年1月，中本聪发布了第一个比特币软件，这启动了比特币网络和比特币加密货币的第一个单位：BTC币。
- en: Why Bitcoin
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么比特币
- en: The creation of Bitcoin was right after the 2008 financial crisis, the most
    severe economic crisis since the Great Depression. This is not coincidental. The
    inventor of the Bitcoin cryptocurrency aimed at addressing people's disillusionment
    with financial institutions, whose epic failures in risk controls resulted in
    the 2008 financial crisis.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 比特币的诞生是在2008年金融危机之后，这是自大萧条以来最严重的经济危机。这不是巧合。比特币加密货币的发明者旨在解决人们对金融机构的幻灭，其在风险控制方面的史诗般失败导致了2008年的金融危机。
- en: 'A fundamental role played by financial institutions is to be an intermediary
    entity and bring untrusting parties together to facilitate transactions. For example,
    a retail bank attracts residual money from individuals and lends to individuals
    or companies that need the money. The difference in interest paid to the money
    suppliers and borrowers is the fee a bank charges for providing the intermediary
    service. Financial institutions are very successful in providing these services
    and play a pivotal role in powering economies worldwide. However, there are many
    deficiencies associated with this business model. Here are some examples:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 金融机构所扮演的一个基本角色是成为一个中间实体，将不信任的各方聚集在一起促成交易。例如，零售银行吸引个人的剩余资金并借给需要资金的个人或公司。支付给资金供应方和借款方的利息之差是银行提供中介服务的费用。金融机构非常成功地提供这些服务，并在全球经济中发挥着关键作用。然而，这种商业模式存在许多缺陷。以下是一些例子：
- en: '**Slow**: It often takes days to complete a financial transaction. For instance,
    it takes three days (after an order is initially entered) to complete and settle
    a cross-border money transfer. To make it happen, multiple departments and application
    systems within an institution and across institutions have to work together to
    facilitate the transaction. Another example is stock trading. An investor hires
    a broker to enter an order to be routed to a stock exchange. Here, the broker
    is either a member of the exchange or routes the order to another intermediary
    institution with membership. After a match is found between a buyer and a seller
    at the exchange, the transaction details are recorded by two parties who send
    it to their back offices respectively. The back-office teams work with a clearing
    house for clearance and settlement. It takes T + 3 for both parties to complete
    the action of exchanging ownership of the security (stock) and the cash.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**慢**：完成一笔金融交易通常需要数天的时间。例如，完成并结算跨境汇款需要三天时间（在初始输入订单后）。为了使其发生，一个机构内和机构间的多个部门和应用系统必须共同努力促成交易。另一个例子是股票交易。投资者雇佣经纪人输入订单以路由到证券交易所。在这里，经纪人可以是交易所的成员，也可以将订单路由到另一个具有会员资格的中介机构。在交易所的买卖双方找到匹配后，交易细节由两方记录并分别发送到其后台办公室。后台团队与清算所进行清理和结算。对于交易双方来说，完成证券（股票）所有权和现金交换的行动需时T
    + 3。'
- en: '**Expensive**: Financial intermediaries often charge hefty fees when providing
    these services. For example, a US bank could charge $10 to $30 USD to serve an
    individual by sending money from the US to a receiver in another country. In the
    case of stock trading, a full-service broker often charges tens of USD or more
    for a transaction. Even with a discount broker, an investor needs to pay $7 to
    $10 USD per transaction.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**昂贵**：金融中介在提供这些服务时通常收取高昂的费用。例如，美国银行可能会收取10到30美元的费用，以向其他国家的接收者发送资金。在股票交易中，全服务经纪人通常会收取数十美元或更多的费用。即使是折扣经纪人，投资者每笔交易也需要支付7到10美元。'
- en: '**Prone to be hacked**: Since details on a customer and the transactions are
    saved in a centralized area within an institution, it is prone to being hacked
    and causing severe financial loss or leakage of confidential personal information
    about customers. Recently, there have been high-profile personal data leakage
    incidents at reputable companies such as JP Morgan (83 million accounts hacked
    in 2014), Target (up to 70 million customers'' information hacked in 2013), and
    Equifax (148 million US consumers'' information hacked in 2017).'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**易受黑客攻击**：由于客户和交易细节保存在机构内的集中区域，因此容易受到黑客攻击，造成严重的财务损失或泄露客户的机密个人信息。最近，一些知名公司如JP摩根（2014年有8300万账户遭黑客攻击）、Target（2013年有高达7000万客户信息遭黑客攻击）、以及Equifax（2017年有1.48亿美国消费者信息遭黑客攻击），都发生了高调的个人数据泄露事件。'
- en: '**Not transparent**: Financial institutions keep both detailed and aggregated
    information on transactions. However, most of the information is not open to the
    individual customer and this results in information imparity. In the example of
    cross-border money transfers, both the sender and receiver have to wait for three
    days to know whether the transaction has been completed successfully or not. If
    a transaction fails, a lengthy investigation has to be triggered. Imagine if the
    receiver was in an emergency and needed the funding immediately. Such a service
    is unsatisfactory despite the client having to pay a high fee.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**不透明**：金融机构保存有关交易的详细和汇总信息。然而，大部分信息对个体客户不公开，导致信息不对等。以跨境汇款为例，发送方和接收方都要等待三天才能知道交易是否成功完成。如果交易失败，就必须进行漫长的调查。想象一下如果接收方处于紧急情况，需要立即获得资金。尽管客户必须支付高额费用，这样的服务仍是不尽人意的。'
- en: With blockchain technology, the preceding problems are resolved elegantly. In
    the case of the Bitcoin blockchain, the underlying asset to be transferred is
    the digital coin, BTC. A cross-border BTC transaction can complete in no more
    than 1 hour. No settlement is needed since transaction and settlement are in one
    action. The cost of this transaction is a tiny fraction of a transfer via a bank.
    For example, a recent report published by the **Bank of America** (**BoA**) claims
    a transfer via blockchain costs 1/6000 of what BoA charges. However, for some
    clients, waiting an hour is still too long. **Ripple**, a payment provider for
    sending money globally, completes in under 1 minute.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 利用区块链技术，上述问题得到了优雅的解决。在比特币区块链的情况下，要转移的基础资产是数字硬币BTC。跨境BTC交易最多只需1小时即可完成。不需要结算，因为交易和结算在一个动作中完成。该交易的成本仅是通过银行转账的一小部分。例如，美国银行（**BoA**）最近发布的一份报告称，通过区块链转账的成本是BoA收费的1/6000。然而，对一些客户来说，等待一个小时仍然太长。**瑞波**，一个全球汇款提供者，可在不到1分钟内完成。
- en: 'The word Bitcoin often causes confusion as people use the word interchangeably
    for three things: the cryptocurrency, the blockchain, and the protocol. To avoid
    this confusion, we use BTC to refer to the cryptocurrency, and Bitcoin to refer
    to the blockchain and the corresponding network that uses the distributed ledger.
    For the protocol, we will fully spell out **Bitcoin protocol** or simply protocol.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 词汇“比特币”经常引起混淆，因为人们将该词用于三种事物：加密货币、区块链和协议。为避免混淆，我们使用BTC指代加密货币，使用比特币指代区块链和使用分布式账本的相应网络。对于协议，我们将完全拼写**比特币协议**或简单称为协议。
- en: A peer-to-peer network
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 点对点网络
- en: 'To explain how Bitcoin works, let''s look at what steps are involved with the
    existing business model for completing a cross-border transaction:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 要解释比特币的工作原理，让我们看看用于完成跨境交易的现有业务模型涉及哪些步骤：
- en: A customer enters an order either by visiting a bank branch or via the web.
    The sender provides detailed information of an order such as the amount, sending
    currency, receiver name, receiving currency, receiver's bank name, account and
    branch numbers, and a SWIFT number. Here, **SWIFT** stands for the **Society for
    Worldwide Interbank Financial Telecommunications**, a messaging network used by
    financial institutions to transmit information and instructions securely through
    a standardized system of codes. SWIFT assigns each financial organization a unique
    code called, interchangeably, the **bank identifier code** (**BIC**), SWIFT code,
    SWIFT ID, or ISO 9362 code.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户通过访问银行分行或通过网络输入订单。发送者提供订单的详细信息，如金额、发送货币、接收者姓名、接收货币、接收者银行名称、账号和分行号、以及一个 SWIFT
    号码。这里，**SWIFT** 代表 **全球银行间金融电信协会**，一个金融机构用来通过一套标准化的代码系统安全传输信息和指令的消息网络。SWIFT 为每个金融组织分配一个称为
    **银行识别代码**（**BIC**）、SWIFT 代码、SWIFT ID 或 ISO 9362 代码的唯一代码。
- en: The sending bank takes the order and verifies that the sender has sufficient
    funds available.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发送银行接受订单并验证发送者是否有足够的资金可用。
- en: The bank charges a fee and converts the remaining amount from the sending currency
    to an amount in the receiving currency by executing an FX transaction.
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 银行收取费用并通过外汇交易将剩余金额从发送货币转换为接收货币的金额。
- en: The sending bank enters a transferring message to SWIFT with all the needed
    information.
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发送银行向 SWIFT 输入一条转账信息，包含所有必要信息。
- en: Upon receiving the message, the receiving bank verifies the receiver's account
    information.
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 接收银行在收到消息后验证接收者的账户信息。
- en: Upon a successful verification and settling the funds between sending and receiving
    banks following the protocol, the receiving bank credits the amount to the receiver's
    account.
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在成功验证并根据协议在发送和接收银行之间结算资金后，接收银行将金额记入接收者账户。
- en: Since there are multiple steps, entities, and systems involved, the preceding
    activities take days to complete.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 由于涉及多个步骤、实体和系统，上述活动需要数天才能完成。
- en: 'A Bitcoin network connects computers around the world. Each computer is a **node**
    with equal status, except for a subset of nodes called **miners**, which choose
    to play the role of verifying transactions, building blocks and linking to the
    chain. With Bitcoin, the business model for completing a money transfer involves
    the following steps:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 比特币网络连接全球各地的计算机。每台计算机都是一个具有平等地位的 **节点**，除了一部分被称为 **矿工** 的节点群，他们选择扮演验证交易、构建区块和连接链的角色。在比特币中，完成货币转账的商业模式涉及以下步骤：
- en: A sender enters the number of BTCs, the addresses of Bitcoins to be taken from,
    and addresses of Bitcoins to be transferred to, using an **e-wallet.**
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 发送者通过一个 **电子钱包** 输入比特币数量、待转出比特币的地址和待转入比特币的地址。
- en: The transaction request is sent to the Bitcoin network by the e-wallet.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 交易请求通过电子钱包发送到比特币网络。
- en: After miners have successfully verified the transaction and committed it to
    the network, the BTCs are now available for use by the receiver.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在矿工成功验证交易并将其提交到网络后，比特币现已可供接收者使用。
- en: 'The Bitcoin transfer is a lot faster (in 1 hour, or minutes if using Ripple)
    for the following reasons:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 比特币转账更快（1 小时内，若使用 Ripple，可能更快），原因如下：
- en: The transaction and settlement are one step. This avoids the need to go through
    a time-consuming and expensive reconciliation process.
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 交易和结算一步到位。这避免了需要经历耗时且昂贵的对账过程。
- en: No FX trade is needed since BTC is borderless. It can move worldwide freely
    and rapidly.
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于 BTC 跨国无界限，不需要外汇交易。它可以在全球自由快速地移动。
- en: No fund settlement is needed between banks since the transaction requires no
    intermediary banks.
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于交易不需要中间银行，银行之间不需要资金结算。
- en: 'In a case where a sender or receiver prefers to use a **fiat currency** such
    as USD, GBP, CNY, or JPY, a cryptocurrency market can be used for a conversion
    between BTC and a fiat currency. A website, CoinMarketCap, lists these markets:
    [https://coinmarketcap.com/rankings/exchanges/](https://coinmarketcap.com/rankings/exchanges/).
    As of September 21, 2018, there are 14,044 markets. In terms of market capitalization,
    the top three are Binance ([https://www.binance.com/](https://www.binance.com/)),
    OKEx ([https://www.binance.com/](https://www.binance.com/)), and Huopi ([https://www.huobi.pro](https://www.huobi.pro)).'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在发送方或接收方希望使用美元（USD）、英镑（GBP）、人民币（CNY）或日元（JPY）等法定货币的情况下，可以使用加密货币市场进行比特币与法定货币之间的转换。一个名为
    CoinMarketCap 的网站列出了这些市场：[https://coinmarketcap.com/rankings/exchanges/](https://coinmarketcap.com/rankings/exchanges/)。截至
    2018 年 9 月 21 日，有 14,044 个市场。就市值而言，前三名分别是币安（[https://www.binance.com/](https://www.binance.com/)）、OKEx（[https://www.binance.com/](https://www.binance.com/)）和火币（[https://www.huobi.pro](https://www.huobi.pro)）。
- en: 'A peer-to-peer network can connect nodes worldwide. However, a merely physical
    connection is not enough to make two untrusting parties trade with each other.
    To allow them to trade, Bitcoin takes the following measures:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 对等网络可以连接全球节点。然而，仅有物理连接并不足以使两个不信任的交易方进行交易。为了允许他们交易，比特币采取了以下措施：
- en: Every node saves a complete copy of all transactions in a decentralized ledger.
    This makes any alteration to a transaction on the chain infeasible.
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个节点保存了分散账本中所有交易的完整副本。这使得对链上交易的任何更改都变得不可行。
- en: The ledger transactions are grouped in blocks. A non-genesis block is linked
    to its previous block by saving the hash of all preceding blocks' transactions.
    Consequently, changing a transaction requires changing the current block of transactions
    and all subsequent blocks. This makes hacking the decentralized ledger extremely
    difficult.
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 账本交易被分组到区块中。非创世区块通过保存所有先前区块交易的哈希与其前一个区块相链接。因此，改变一个交易需要更改当前的交易块和所有后续块。这使得黑客攻击分散式账本变得极其困难。
- en: Bitcoin addresses the double-spending issue, that is the same BTC being spent
    twice, by using the Proof-of-Work consensus algorithm.
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 比特币通过使用工作量证明共识算法解决了双重支付问题，即同一比特币被两次花费的问题。
- en: Hashes are used extensively to protect the identities of parties and detect
    any changes occurring in a block.
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 哈希广泛用于保护各方的身份，并检测出块中发生的任何更改。
- en: Public/private keys and addresses are used to mask the identities of trading
    parties and to sign a transaction digitally .
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 公钥/私钥和地址用于掩盖交易各方的身份，并对交易进行数字签名。
- en: 'With these measures, untrusting parties feel comfortable to trade due to these
    reasons:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 凭借这些措施，不信任的交易方因以下原因感到舒适进行交易：
- en: The transaction is immutable and permanent. Neither party can nullify a transaction
    unilaterally.
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 交易是不可变的和永久的。任何一方都无法单方面使交易失效。
- en: No double spending is possible.
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不可能发生双重支付。
- en: Transaction and settlement occur simultaneously; therefore, there is no settlement
    risk.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 交易和结算同时发生；因此，不存在结算风险。
- en: Identities are protected.
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 身份得到保护。
- en: Transactions are signed by both parties, which will avoid any future legal disputes.
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 交易由双方签署，这将避免任何未来的法律纠纷。
- en: Cryptography and hash functions
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 密码学和哈希函数
- en: Cryptography or cryptology is research on techniques for securing communication
    in the presence of adversaries. In the old days, cryptography was synonymous with
    encryption. Modern cryptography relies heavily on mathematical theory and computer
    science. It also utilizes works from other disciplines such as electrical engineering,
    communications science, and physics.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 密码学或密码学是研究在对手存在的情况下保护通信技术的技术。在旧时代，密码学与加密同义。现代密码学严重依赖于数学理论和计算机科学。它还利用了其他学科的作品，如电气工程、通信科学和物理学。
- en: Cryptographic algorithms are designed around the assumption that with foreseeable
    computational hardware advances, it will not be feasible for any adversary to
    decipher encrypted messages based on these algorithms. In other words, in theory,
    it is possible to decode the encrypted message, but it is infeasible to do so
    practically. These algorithms are therefore defined to be computationally secure.
    Theoretical research (for instance, parallel or integer factorization algorithms)
    and computational technology advancements (for instance, quantum computers) can
    make these algorithms practically insecure and, therefore, encryption algorithms
    need to be adapted continuously.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 密码算法是基于这样的假设设计的，即在可预见的计算硬件进步下，任何对手都不太可能根据这些算法解密加密的消息。换句话说，理论上可以解码加密的消息，但在实践中不可行。因此，这些算法被定义为计算安全的。理论研究（例如并行或整数分解算法）和计算技术的进步（例如量子计算机）可能使这些算法在实践上不安全，因此加密算法需要不断地进行调整。
- en: Encryption is the process of converting plaintext into unintelligible text,
    called ciphertext. Decryption is the reverse, in other words moving from the unintelligible
    ciphertext back to plaintext.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 加密是将明文转换为不可理解的文本，称为密文。解密是反向操作，换句话说是从不可理解的密文转换回明文。
- en: The encryption algorithms used by Bitcoin mining are hash functions. A hash
    function is a function that maps data of any size to data of a fixed size. The
    values returned by a hash function are called hash values or simply hashes. A
    cryptographic hash function allows one to verify easily  that some input data
    maps to a given hash value. However, the reverse – when the input data is unknown—it
    is practically infeasible to reconstruct the input plaintext from a hash value.
    In other words, hashing is a one-way operation. Another notable attribute of a
    hashing function is that a minor change in the input plaintext will result in
    a completely different hash value. This feature is desirable for safeguarding
    information as any tiny change to the original data by a hacker results in a visibly
    different hash.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 比特币挖掘使用的加密算法是哈希函数。哈希函数是将任意大小的数据映射到固定大小数据的函数。哈希函数返回的值称为哈希值或简称哈希。密码哈希函数允许轻松地验证一些输入数据是否映射到给定的哈希值。然而，反过来—当输入数据是未知的—从哈希值重建输入明文在实践上是不可行的。换句话说，哈希是一个单向操作。哈希函数的另一个显著属性是，输入明文的微小变化将导致完全不同的哈希值。这个特性对于保护信息是可取的，因为黑客对原始数据的任何微小改变都会导致明显不同的哈希。
- en: 'Two common hash algorithms are MD5 (message-digest algorithm 5) and SHA-1 (secure
    hash algorithm):'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 两种常见的哈希算法是 MD5（消息摘要算法 5）和 SHA-1（安全哈希算法）：
- en: Developed by Ronald Rivest in 1991, MD5 maps input plaintext into a 128-bit
    resulting hash value. MD5 Message-Digest checksums are commonly used to validate
    data integrity when digital files are transferred or stored. MD5 has been found
    to suffer from extensive vulnerabilities.
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由罗纳德·里维斯特在 1991 年开发，MD5 将输入明文映射为一个 128 位的哈希值。MD5 消息摘要校验和通常用于在数字文件传输或存储时验证数据完整性。已发现
    MD5 存在广泛的漏洞。
- en: SHA-1 is a cryptographic hash function mapping input plaintext into a 160-bit
    (20-byte) hash known as a message digest – often displayed as a hexadecimal number,
    40 digits long. SHA-1 was designed by the United States national security agency
    and is a US federal information processing standard.
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SHA-1 是一种密码哈希函数，将输入的明文映射为一个 160 位（20 字节）的哈希值，也称为消息摘要，通常以 40 位十六进制数显示。SHA-1 由美国国家安全局设计，并且是美国联邦信息处理标准之一。
- en: SHA-256 is a successor hash function to SHA-1\. It is one of the strongest hash
    functions available and has not yet been compromised in any way. SHA-256 generates
    an almost unique 256-bit (32-byte) signature for a text. For example, *My test
    string* maps to `5358c37942b0126084bb16f7d602788d00416e01bc3fd0132f4458d
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: SHA-256 是 SHA-1 的继任哈希函数。它是目前最强大的哈希函数之一，迄今为止尚未以任何方式被破解。SHA-256 为文本生成几乎唯一的 256
    位（32 字节）签名。例如，*我的测试字符串* 映射为 `5358c37942b0126084bb16f7d602788d00416e01bc3fd0132f4458d`
- en: d355d8e76`. With a small change, the hash of *My test strings* is `98ff9f0555435
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: d355d8e76`. 经过微小改动，*我的测试字符串* 的哈希值为 `98ff9f0555435`
- en: f792339d6b7bf5fbcca82f1a83fde2bb76f6aa95d66050887cc`*, *a completely different
    value. SHA-256 produces 2^256 possible hashes. There is yet to be a case where
    two different inputs have produced the same SHA-256 hash, an issue called collision
    in cryptography. Even with the fastest supercomputer, it will take longer than
    the age of our universe to hit a collision. As a result, SHA-256 is used by Bitcoin
    for encryption.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: f792339d6b7bf5fbcca82f1a83fde2bb76f6aa95d66050887cc`*`，完全不同的值。SHA-256可以生成2^256种可能的哈希值。迄今为止，尚未出现两个不同的输入产生相同的SHA-256哈希的情况，这在密码学中称为碰撞问题。即使使用最快的超级计算机，也需要比宇宙的年龄更长的时间才能发生碰撞。因此，SHA-256被比特币用于加密。
- en: The distributed ledger, blocks, transactions, addresses, and UTXO
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分布式账本、区块、交易、地址和UTXO
- en: At a financial institution, a ledger is a book for recording financial transactions.
    Similarly, Bitcoin maintains a ledger for bookkeeping BTC transactions and balances
    by address. One key difference is that a bank's ledger is centralized and Bitcoin's
    ledger is decentralized. Consequently, a bank's ledger is much easier to be cooked.
    On the other side, Bitcoin's ledger is very difficult to cook as one has to change
    the ledger at all nodes worldwide.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在金融机构，账本是记录财务交易的账簿。类似地，比特币通过地址维护账本，记录比特币交易和余额。一个关键区别是，银行的账本是集中式的，而比特币的账本是分散式的。因此，银行的账本更容易被篡改。另一方面，比特币的账本非常难以篡改，因为必须在全球所有节点上更改账本。
- en: 'A user submits a transaction containing the following information:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 用户提交包含以下信息的交易：
- en: Sources of the BTCs to be transferred from
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要转移的比特币的来源
- en: The amount of BTCs to be transferred
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要转移的比特币数量
- en: Destinations the BTCs should be transferred to
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应转移比特币的目标
- en: 'As per the Wiki site, a transaction has a general structure shown as follows:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 根据维基网站，交易的一般结构如下所示：
- en: '![](img/6e753240-2538-4d3e-af23-5ded27025ad8.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6e753240-2538-4d3e-af23-5ded27025ad8.jpg)'
- en: 'Both source and destination addresses are 64-character hashes. Here is an example
    of an address: `979e6b063b436438105895939f4ff13d068428d2f71312cf5594c132905bfxy1`.'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 源地址和目标地址都是64字符的哈希值。以下是一个地址的示例：`979e6b063b436438105895939f4ff13d068428d2f71312cf5594c132905bfxy1`。
- en: The term *address* is a bit confusing. A programmer may think it to be an address
    related to a disk or memory location. However, it has nothing to do with a physical
    location. Instead, it is a logical label for grouping BTCs that have been transferred
    from/to it. In a way, one can think of it as a bank account number, yet there
    are fundamental differences between them. For example, a bank has a centralized
    place where metadata on an account, for instance, owner name, account open date,
    and account type, is saved. In addition, the account balance is precalculated
    and saved. In Bitcoin, there is no metadata on an address and one has to query
    the entire ledger to find the balance of an address by counting the net BTCs being
    transferred in and out of the address.  Addresses are referred to only in Bitcoin
    transactions. When the balance of an address falls to 0, any future request for
    taking BTCs from the address will fail the transaction validation due to insufficient
    funds.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 术语*地址*有点令人困惑。程序员可能认为它是与磁盘或内存位置相关的地址。然而，它与物理位置无关。相反，它是一个逻辑标签，用于将已转移的比特币分组。在某种程度上，可以将其视为银行账户号码，但它们之间存在根本性差异。例如，银行有一个集中的地方，用于保存有关账户的元数据，例如，所有者姓名、账户开立日期和账户类型。此外，账户余额是预先计算并保存的。在比特币中，地址上没有元数据，必须查询整个账本以找到地址的余额，通过计算进出地址的净比特币数量。地址仅在比特币交易中引用。当地址余额降至0时，任何从该地址取出比特币的未来请求将由于资金不足而失败交易验证。
- en: Bitcoin utilizes the **UTXO** model to manage its BTC transfer. The term was
    introduced by cryptocurrency, where it refers to an *unspent transaction output*.
    This is an output of a blockchain transaction that has not been spent and can
    be used as an input for a future transaction. In a Bitcoin transaction, only unspent
    outputs can be used as an input, which helps to prevent double spending and fraud.
    As a result, a committed transaction results in deleting inputs on a blockchain
    and creating outputs in the form of UTXOs. The newly created unspent transaction
    outputs can be spent by the owner holding the corresponding private keys. In other
    words, UTXOs are processed continuously and a committed transaction leads to removing
    spent coins and creating new unspent coins in the UTXO database.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 比特币利用**UTXO**模型管理其比特币转账。这个术语是由加密货币引入的，指的是*未花费的交易输出*。这是一个未被花费且可以作为未来交易输入的区块链交易输出。在比特币交易中，只有未花费的输出可以作为输入，这有助于防止双重花费和欺诈。因此，承诺的交易导致在区块链上删除输入并创建UTXO形式的输出。新创建的未花费交易输出可以由持有相应私钥的所有者花费。换句话说，UTXO持续处理，承诺的交易导致删除已花费的硬币并在UTXO数据库中创建新的未花费硬币。
- en: Like an address, a BTC is not associated with any physical object such as a
    digital token file or a physically minted coin. Instead, it only exists in transactions
    in the distributed ledger. For example, if one wants to know the total number
    of BTCs minted so far, one has to go through all nonzero balance addresses on
    the blockchain and add up all the BTCs. Since every node of Bitcoin keeps a copy
    of the ledger, it is only a matter of taking computing time to find an answer.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 像地址一样，比特币不与任何实物对象（如数字代币文件或实际铸造的硬币）相关联。相反，它只存在于分布式分类账中的交易中。例如，如果一个人想知道迄今为止铸造的比特币总数，就必须查看区块链上所有非零余额地址并加总所有比特币。由于比特币的每个节点都保存着分类账的副本，因此只需要计算时间就可以找到答案。
- en: 'When a user enters a BTC transaction request at a node, Bitcoin software installed
    at the node broadcasts the transaction to all nodes. Nodes on the network will
    verify the validity of the transaction by retrieving all historical transactions
    containing the input addresses and ensuring that BTCs from these addresses are
    legitimate and sufficient. After that, the mining nodes start to construct a block
    by collecting the verified transactions. Normally, a Bitcoin block contains between
    1,500 to 2,000 transactions. A miner who wins the race to resolve a difficult
    mathematical puzzle gets the role to build and link a new block to the chain.
    On the Bitcoin blockchain, a new block is created around every 10 minutes. As
    of September 21, 2018, approximately 542,290 blocks have been created on Bitcoin.
    The structure of a Bitcoin block is shown as follows:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '当用户在节点输入比特币交易请求时，节点上安装的比特币软件将该交易广播给所有节点。网络中的节点将通过检索包含输入地址的所有历史交易并确保这些地址中的比特币是合法且足够的来验证交易的有效性。之后，矿工节点开始通过收集经过验证的交易来构建一个区块。通常，比特币区块包含1,500至2,000笔交易。赢得解决难题竞赛的矿工将承担构建并链接一个新区块到区块链的角色。在比特币区块链上，大约每10分钟创建一个新区块。截至2018年9月21日，在比特币上已经创建了大约542,290个区块。比特币区块的结构如下所示:'
- en: '![](img/277afb38-b728-4a32-85a9-99e03539aed3.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](img/277afb38-b728-4a32-85a9-99e03539aed3.jpg)'
- en: 'Here, the block header contains the following fields:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '在这里，区块头包含以下字段:'
- en: '![](img/a9c3797f-f35c-4bff-8f83-5ff551d0df6b.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a9c3797f-f35c-4bff-8f83-5ff551d0df6b.jpg)'
- en: 'The concept of a **nonce** will be explained in the subsection on mining. hashPrevBlock is
    the same value as hashMerkleRoot. The Merkle tree hash root is essentially the
    hash of all transaction hashes in the block via a binary tree aggregation structure.
    The following diagram explains the idea:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '**随机数**的概念将在挖矿子章节中进行解释。`hashPrevBlock`与`hashMerkleRoot`的值相同。Merkle树哈希根本上是区块中所有交易哈希的哈希，通过二叉树聚合结构进行。以下图解释了这个想法:'
- en: '![](img/6dc370f7-0e67-41e2-8a08-99f8c937eae5.jpg)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6dc370f7-0e67-41e2-8a08-99f8c937eae5.jpg)'
- en: The consensus mechanism
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 共识机制
- en: If someone buys a bottle of water for $1, that person cannot spend the same
    $1 to buy a can of coke. If a person is free to double-spend a dollar, money would
    be worthless since everyone would have unlimited amounts and the scarcity, which
    gives the currency its value, would disappear. This is called the **double-spending
    problem**. With BTC, double spending is the act of using the same Bitcoin more
    than once. If this problem is not resolved, BTC loses its scarcity and cannot
    be used to facilitate a trade between two untrusting parties. The Bitcoin Core
    network protects against double spends via a consensus mechanism. To explain how
    the Bitcoin consensus mechanism works, we first describe the concepts of **PoW**
    (**Proof-of-Work**) and mining.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有人用1美元购买一瓶水，那个人就不能再用相同的1美元购买一罐可乐。如果一个人可以自由地二次花费一美元，货币将变得毫无价值，因为每个人都将拥有无限数量的货币，而赋予货币价值的稀缺性将消失。这就是所谓的**双重支付问题**。对于比特币而言，双重支付是同一比特币被使用多次的行为。如果这个问题没有解决，比特币就会失去稀缺性，不能用来促进两个不信任方之间的交易。比特币核心网络通过共识机制防止双重支付。要解释比特币共识机制是如何运作的，我们首先介绍**PoW**（工作证明）和挖矿的概念。
- en: As explained earlier, a miner needs to solve a difficult mathematical puzzle
    ahead of other miners in order to receive the role of being a builder of the current
    new block and receive a reward for doing the work. The work of resolving the math
    problem is called **PoW**.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 正如前面所解释的，为了获得成为当前新区块的建造者并获得做这项工作的奖励，矿工需要比其他矿工更早地解决一个困难的数学难题。解决数学难题的工作称为**PoW**。
- en: 'Why is PoW needed? Think of this: in a network consisting of mutually untrusting
    parties, more honest parties are needed than dishonest attackers in order to make
    the network function. Imagine if upon collecting sufficient transactions for a
    new block, a miner is allowed to build the new block immediately. This simply
    becomes a race for whoever can put enough transactions together quickly. This
    leaves a door wide open for malicious attackers to hack the network by including
    invalid or fake transactions and always win the race. This would allow hackers
    to double-spend BTCs freely.'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么需要PoW？想象一下：在一个由相互不信任的参与者组成的网络中，为了使网络正常运作，需要比不诚实的攻击者更多的诚实参与者。想象一下，当一个矿工收集到足够的交易来构建一个新的区块时，他被允许立即构建新的区块。这简直就是一个谁能迅速组合足够的交易的比赛。这为恶意攻击者留下了大门，可以通过包含无效或假交易来攻击网络，并总是赢得这场比赛。这将允许黑客自由双重支付比特币。
- en: 'Therefore, to prevent attackers from introducing bad transactions, a sufficient
    window of time is needed for participating nodes to verify every transaction''s
    validity by making sure a BTC has not been spent yet. Since every node maintains
    a copy of the ledger, an honest miner can trace the history and ensure the following
    to confirm the validity of a transaction:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，为了防止攻击者引入恶意交易，参与节点需要足够的时间窗口来验证每笔交易的有效性，确保比特币尚未被花费。由于每个节点都维护着账本的副本，一个诚实的矿工可以追踪历史，确保以下内容以确认交易的有效性：
- en: The requestor of a transaction does own the BTCs.
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 交易请求者拥有这些比特币。
- en: The same BTCs have not been spent by any other transactions in the ledger.
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 相同的比特币在账本中没有被任何其他交易所花费过。
- en: The same BTCs have not been spent by other transactions within the candidate
    block.
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 相同的比特币在候选区块内没有被其他交易所花费过。
- en: This window of time is currently set to be around 10 minutes. To enforce the
    10-minute waiting time, Bitcoin asks a miner to solve a sufficiently difficult
    mathematical puzzle. The puzzle requires only a simple computation. Miners have
    to repeat the same computation many times in order to burn enough CPU time to
    reach the network's goal of building a new block every 10 minutes on average. The
    process of repeated guessing is called **mining** and the device (specially made)
    is called a **mining rig**.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，这段时间窗口大约设置为10分钟。为了强制执行10分钟的等待时间，比特币要求矿工解决一个足够困难的数学难题。这个难题只需要进行简单的计算。矿工需要重复进行相同的计算多次，以烧掉足够的CPU时间，达到网络每10分钟平均建立一个新区块的目标。重复猜测的过程称为**挖矿**，而设备（专门制造的）称为**矿机**。
- en: Since, in order to win the mining race, a miner needs to invest heavily in hardware,
    these miners are dedicated to the work of mining and aim to receive sufficient
    BTCs to cover the cost of running the mining operation and make a profit. As of
    the first half of 2018, the reward given to a winning miner is 12.5 BTCs. One
    can find the price of BTC by visiting the CoinMarketCap website ([https://coinmarketcap.com/](https://coinmarketcap.com/)).
    As of September 21, 2018, one BTC is traded at around $6,710\. Therefore, 12.5
    BTC is worth about $83,875 USD.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
- en: 'Per Bitcoin protocol, mining is the only way for a new BTC to be issued (minted).
    Having a miner be rewarded handsomely serves three purposes:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: Compensates a miner's investment on hardware.
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Covers mining operational costs such as utility bills, which can be significant
    due to the large mining rigs being deployed at a mining site, human salaries, and
    site rentals.
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Gives miners incentives to safeguard the network from being attacked by malicious
    hackers. Miners are motivated to maintain the Bitcoin network in order not to
    lose value in their BTCs and their mining infrastructure. If Bitcoin is breached
    by hackers, Bitcoin''s reputation will suffer badly and BTC prices would freefall.
    This is exactly what the Bitcoin inventor hoped for: having more good miners than
    bad miners to address the double-spending issue.'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The total number of BTC that can be issued is fixed to be 21 million. As of
    today (September 19, 2018), around 17 million BTCs have been issued. The Bitcoin
    protocol defines a rule for dynamically adjusting the payout rate and the remaining
    4 million coins aren''t expected to be mined completely for another 122 years.
    The following point explains how the block creation payout rate is dynamically
    adjusted:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: 'The rate changes at every 210,000 blocks. It is a function of block height
    on the chain with genesis=0, and is calculated using 64-bit integer operations
    such as: (50 * 100000000) >> (height / 210000). The rate initially started with
    50 BTCs, and fell to 25 BTCs at block 210,000\. It fell to 12.5 BTCs at block
    420,000, and will eventually go down to 0 when the network reaches 6,930,000 blocks.'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Forking
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A Bitcoin blockchain can diverge into two potential paths since miners do not
    necessarily collect transactions and contract block candidates in the same way,
    nor at the same time. Other reasons such as hacking or software upgrades can also
    lead to path divergence. The splitting patches are called **forks**. There are
    temporary forks and permanent forks.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
- en: If a permanent fork occurs due to, for example, malicious attacks, a hard fork
    occurs. Similarly, there is the concept of soft fork. Both hard fork and soft
    fork refer toa radical change to the protocol. Hard fork makes previously invalid
    blocks/transactions valid and a soft fork makes previously valid blocks/transactions
    invalid.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
- en: To remove a temporary fork, Bitcoin protocol dictates that the longest chain
    should be used. In other words, when facing two paths, a winning miner will choose
    the longer chain to link a new block. As a result, the longer path continues to
    grow and the blocks on the losing (shorter) path becomes orphaned. Bitcoin nodes
    will soon discard or not take the orphaned blocks. They only keep the blocks on
    the longest chain as being the valid blocks.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 为了消除临时分叉，比特币协议规定应选择最长链。换句话说，当面对两条路径时，胜出的矿工会选择更长的链来连接新区块。因此，更长的路径会继续增长，而输掉的（更短的）路径上的区块会变成孤立块。比特币节点将会很快丢弃或不接受这些孤立块。它们只保存最长链上的区块作为有效区块。
- en: In the case of a permanent fork, nodes on the network have to choose which chain
    to follow. For example, Bitcoin Cash diverged from Bitcoin due to a disagreement
    within the Bitcoin community on how to handle the scalability problem. As a result,
    Bitcoin Cash became its own chain and shares the transaction history from the
    genesis block up to the forking point. As of September 21, Bitcoin Cash's market
    cap is around $8 billion, ranking fourth, versus Bitcoin's $215 billion.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在永久性分叉的情况下，网络节点必须选择跟随哪个链。例如，比特币现金由于比特币社区就如何处理可伸缩性问题存在分歧而产生分叉。结果，比特币现金变成了自己的链，并与创世区块直至分叉点的交易历史。截至
    9 月 21 日，比特币现金的市值约为 80 亿美元，排名第四，而比特币为 2150 亿美元。
- en: Mining and difficulty level
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 挖矿和难度级别
- en: 'There is one more issue that needs to be resolved: how to maintain the new
    block building rate of 10 minutes. If nothing is done, the mining rate will change
    due to the following factors:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一个需要解决的问题：如何保持每 10 分钟一个新区块的速率。如果不做任何处理，由于以下因素，挖矿速率将会产生变化：
- en: The number of miners on the network can vary in response to the BTC price
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络矿工数量会随着 BTC 价格的波动而变化。
- en: Technology advancements make mining rigs progressively faster
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 技术进步使矿机逐渐快速起来
- en: The total number of mining rigs varies
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 挖矿机的总数量不断变化
- en: Bitcoin adjusts the **difficulty level** of the mathematical puzzle in order
    to keep the building rate at 10 minutes. The difficulty level is calculated from
    the rate at which the most recent blocks were added in. If the average rate of
    new blocks being added is less than 10 minutes, the difficulty level will be increased.
    If the average rate takes more than 10 minutes, it's decreased. The difficulty
    level is updated every 2,016 blocks. The following graph displays the historical
    trend in Bitcoin difficulty level.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 比特币通过调整数学难题的**难度级别**来保持每 10 分钟一个新区块的速率。难度级别是根据最近添加的区块的速率计算出来的。如果新的区块添加速率的平均值低于
    10 分钟，难度级别将会增加。如果平均速率超过 10 分钟，难度级别将会降低。难度级别每 2,016 个区块更新一次。以下图表显示了比特币难度级别的历史趋势。
- en: '![](img/5a79d79d-3384-49ed-aba6-8da7f9a240c3.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![图](img/5a79d79d-3384-49ed-aba6-8da7f9a240c3.png)'
- en: 'We have yet to talk about the actual mining algorithm. Assume the current difficulty
    level is to find the first hash value with the leading character to be 0\. In
    Bitcoin, the process of solving a puzzle, that is, mining, requires a miner to
    follow these steps:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还没讨论实际的挖矿算法。假设当前的难度级别是找到第一个哈希值的开头字符为 0。在比特币中，解决难题的过程，也就是挖矿，需要矿工按照以下步骤进行：
- en: First, find the SHA-256 hash of the block in construction.
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首先，在进行中的区块中找到 SHA-256 哈希值。
- en: If the resulting hash has a leading 0, the miner solves the puzzle. The miner
    links the block to the ledger on the node and claims the trophy, 12.5 BTCs. The
    miner's node broadcasts the news to all nodes. All other nodes and miners on the
    network validate the answer (by mapping the block information plus nonce to get
    the same hash) and validate the entire history of the ledger, making sure that
    the block contains valid transactions.
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果得到的哈希值的开头是 0，那么矿工解决了难题。矿工将该区块连接到节点上的账本并获取奖励，12.5 个比特币。矿工的节点向所有节点广播这个消息。网络上的所有其他节点和矿工验证这个答案（通过将区块信息加上随机数映射得到相同的哈希值），并验证账本的整个历史，确保区块包含有效交易。
- en: If it passes the checks, all nodes on the network add the block to their copies
    of the ledger. Miners start to work on the next new block.
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果通过检查，所有网络节点都会将该区块加入到其账本的拷贝中。矿工们开始着手下一个新区块的工作。
- en: If the winning miner is a malicious attacker and includes bad transactions in
    the block, the validation of these transactions will fail and other miners will
    not include the block in their ledger copies. They will continue to mine on the
    current block. As time passes, the path containing the bad block will no longer
    be the longest path and, therefore, the bad block will become an orphaned block.
    This is essentially how all nodes on the network reach consensus to add only good
    blocks to the network and prevent bad blocks from sneaking in, therefore resolving
    the double-spending issue.
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果获胜的矿工是恶意攻击者并在区块中包含不良交易，则这些交易的验证将失败，其他矿工将不会在他们的分类帐副本中包含该块。他们将继续在当前块上进行挖矿。随着时间的推移，包含不良块的路径将不再是最长的路径，因此不良块将成为孤立块。这基本上是网络中所有节点如何达成共识，只向网络添加良好的块，防止不良块潜入，从而解决双重支付问题。
- en: If the resulting hash does not start with 0, then the miner is allowed to append
    a sequence number, known to be a nonce, starting from 0 to the input text, and
    retry the hash.
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果生成的哈希不以0开头，那么允许矿工在输入文本中附加一个已知为随机数的序列号，从0到输入文本再试一次哈希。
- en: If the resulting hash still does not contain a leading 0, the miner will add
    another sequence number, 1, to the input text and obtain a new hash. The miner
    will keep trying in this way until it finds the first hash with a leading zero.
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果生成的哈希仍不包含前导零，矿工将对输入文本添加另一个序列号1，获得一个新的哈希。矿工会通过这种方式不断尝试，直到找到第一个具有前导零的哈希。
- en: 'The following is an example of how the plaintext and nonce work together. The
    original plaintext is *input string* and the nonce varies from 0 to 1:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '以下是明文和随机数（nonce）如何共同工作的示例。原始明文是*输入字符串* ，随机数变化范围为0到1:'
- en: '**input string**: `f23f4781d6814ebe349c6b230c1f700714f4f70f735022bd4b1fb69421859993`'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**输入字符串**：`f23f4781d6814ebe349c6b230c1f700714f4f70f735022bd4b1fb69421859993`'
- en: '**input string0**: `5db70bb3ae36e5b87415c1c9399100bc60f2068a2b0ec04536e92ad2598b6bbb`'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**输入字符串0**：`5db70bb3ae36e5b87415c1c9399100bc60f2068a2b0ec04536e92ad2598b6bbb`'
- en: '**input string1**: `5d0a0f2c69b88343ba44d64168b350ef62ce4e0da73044557bff451fd5df6e96`'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**输入字符串1**：`5d0a0f2c69b88343ba44d64168b350ef62ce4e0da73044557bff451fd5df6e96`'
- en: In Bitcoin, *adjusting difficult level* largely refers to changing the required
    number of leading zeros. (The actual adjustment involves some other miner tuning
    to the requirement.) Each addition of a leading zero will increase the average
    number of tries significantly and therefore will increase the computing time.
    This is how Bitcoin manages to maintain the average rate of 10 minutes for new
    blocks being added in. The current Bitcoin difficulty level is 18 leading zeros.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在比特币中，*难度调整* 很大程度上指的是改变所需的前导零位数。（实际调整涉及到其他矿工调整到该要求。）每增加一个前导零位数，都将显著增加尝试的平均次数，因此会增加计算时间。这是比特币如何维持平均每10分钟添加一个新区块的速率。当前比特币的难度级别是18个前导零。
- en: Hacking – the 51% problem
  id: totrans-127
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 黑客行为 - 51%问题
- en: Thanks to the rising price of BTC, the mining operation has become more attractive.
    Investments are rushing in and large mining pools involving thousands of rigs
    or more have joined the network in order to gain an advantage in the race to solve
    the puzzle first and get the reward. For players without large capital from investments,
    they have a choice to participate in a mining pool. When the pool wins a race,
    the award will be allocated to each participant based on the computational power
    contributed.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 由于BTC价格上涨，挖矿操作变得更具吸引力。投资者纷纷涌入，成千上万的矿池加入网络，以在竞赛中率先解决难题并获取奖励优势。对于没有大型资本投资的玩家，他们可以选择参与矿池。当矿池赢得一场竞赛时，奖励将根据贡献的计算能力分配给每个参与者。
- en: This ever-growing computational power of a pool poses a real threat due to the
    so-called **51****% problem**. This problem occurs when a miner manages to build
    up computational power to total at least 51% of the total computing power of the
    network. When this occurs, the miner will have a chance to outrun other miners.
    The miner can continue to grow the ledger with blocks containing bad transactions
    since this miner has more than a 50% chance of solving the puzzle first. Soon,
    the malicious miner's ledger will grow to be the longest path and all other nodes
    have to save this path based on Bitcoin's consensus protocol.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 矿池的这种不断增长的计算能力构成了所谓的**51%问题**的真正威胁。当一个矿工成功地将计算能力积累到至少等于网络总计算能力的51%时，就会出现这个问题。这时，矿工将有机会领先其他矿工。由于这个矿工有超过50%的机会首先解决谜题，所以矿工可以继续增加包含不良交易的区块来扩展账本。很快，恶意矿工的账本将变得最长，并且所有其他节点都必须根据比特币的共识协议保存此路径。
- en: 'For a large and well-established network such as Bitcoin, the 51% problem is
    not as critical an issue, mainly due to the following reasons:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 对于比特币这样的大型和成熟的网络，51%问题并不是一个关键问题，主要原因如下：
- en: A well-established network will attract a much larger number of participating
    parties and connect a very significant number of nodes. It will take an exorbitantly high
    initial investment for a hacker to purchase the necessary mining rigs. When such
    a network is attacked, the price of cryptography will drop quickly when the news
    becomes public and the hacker will have a low chance of recovering the investment.
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个建立良好的网络将吸引更多的参与方，并连接非常多的节点。对于一个已经成熟的网络，黑客购买所需的挖矿设备需要巨额的初始投资。当这样的网络受到攻击时，当消息公开后，加密货币的价格会迅速下跌，黑客将很难收回投资。
- en: In the history of Bitcoin, there have been cases when a mining pool that accumulated
    dangerously high computing power approached this line. When the participating
    miners in the pool realized the problem, many of them chose to leave the pool.
    Soon, the computational power of the pool fell to a safe level.
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在比特币的历史上，曾经有矿池积累了危险的高计算能力接近这条线的情况。当参与的矿工意识到问题时，许多人选择离开该矿池。很快，矿池的计算能力降到了一个安全水平。
- en: In the case of a small and immature network, it is not difficult for a miner
    to muster computing power of more than 51%. However, the cryptocurrency value
    of these networks is minimal and it gives hackers very little financial incentive
    to take advantage of the 51% problem.
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于一个小而不成熟的网络，矿工很容易集结超过51%的计算能力。然而，这些网络的加密货币价值微不足道，对黑客来说几乎没有任何财务激励来利用51%的问题。
- en: Private keys and Bitcoin wallets
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 私钥和比特币钱包
- en: As discussed earlier, BTCs do not physically exist. The only evidence of their
    existence is when they are associated with addresses, which are referred to in
    transactions. When an address is initially created, a pair of public and private
    keys are generated with it. The public key is made known to the public and the
    private key is kept only by the owner of the address. When the owner wants to
    spend all or a portion of their BTCs, the owner provides a digital signature signed
    with the private key and sends the BTC request to the Bitcoin network. In other
    words, one has to know both the address and its private key to spend the BTC.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 正如前面讨论的那样，比特币并不存在于物理上。它们存在的唯一证据是当它们与地址关联时，在交易中被提及。当地址被初始创建时，会生成一对公钥和私钥。公钥对公众公开，而私钥仅由地址所有者保留。当所有者想要花费他们的BTC时，所有者使用私钥签署数字签名，并将BTC请求发送到比特币网络。换句话说，想要花费BTC，必须同时知道地址和它的私钥。
- en: If an owner loses a private key, its associated BTCs will be lost permanently.
    Therefore, it is advised to keep this information in a safe place. It is generally
    good practice to keep the address and private keys in separate places. To prevent
    a digital copy getting lost, an owner should maintain physical copies of printouts.
    To make conversion easier, an owner can print a QR code and later scan the QR
    code whenever it is needed.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 如果所有者丢失私钥，与之相关的BTC将永久丢失。因此，建议将此信息存放在安全的地方。通常最好将地址和私钥分开存放。为了防止数字副本丢失，所有者应保留纸质打印的物理副本。为了使转换更容易，所有者可以打印一个QR码，以后在需要时扫描该QR码。
- en: 'Bitcoin wallet applications are available to help a user manage keys and addresses.
    One can use a wallet to do the following:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 比特币钱包应用程序可用于帮助用户管理密钥和地址。可以使用钱包执行以下操作：
- en: Generate addresses and corresponding public/private keys
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生成地址和相应的公/私钥
- en: Save and organize a BTC's information
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保存和组织BTC的信息
- en: Send a transaction request to the Bitcoin network
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向比特币网络发送交易请求
- en: 'In Bitcoin, a private key is a 256-bit-long hash and a public key is 512 bits
    long. They can be converted into shorter lengths in hexadecimal representation.
    The following screenshot gives an example of a pair of public/private keys along
    with an address:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在比特币中，私钥是一个256位长的哈希，公钥是512位长。它们可以转换为十六进制表示中的较短长度。以下截图提供了一个公/私钥对和一个地址的示例：
- en: '![](img/2a8a1394-7b71-4864-80b3-c8fb59eba5e6.jpg)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/2a8a1394-7b71-4864-80b3-c8fb59eba5e6.jpg)'
- en: Bitcoin private keys can also be expressed in a string of 51 characters starting
    with a 5 and a public key in a string of 72 characters. A sample private key is `5Jd54v5mVLvy
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 比特币私钥也可以用由5和一个字符51开始的字符串表示，公钥可以用由72个字符的字符串表示。一个示例私钥是 `5Jd54v5mVLvy
- en: RsjDGTFbTZFGvwLosYKayRosbLYMxZFBLfEpXnp`and a sample public key is `BFCDB2DCE28D959F2815B16F81798483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68`*.*
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: RsjDGTFbTZFGvwLosYKayRosbLYMxZFBLfEpXnp 和一个示例公钥是 `BFCDB2DCE28D959F2815B16F81798483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68`。
- en: Bitcoin scripting
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 比特币脚本
- en: 'One can install the following development tools for programming Bitcoin operations:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 一个人可以为编程比特币操作安装以下开发工具：
- en: '**NodeJS**: This is an open source, cross-platform JavaScript runtime environment
    that executes JavaScript code outside of a browser. It allows a programmer to
    write and execute scripts quickly and easily. These scripts can be written to
    be run in a web browser or on a server.'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**NodeJS**：这是一个开源的、跨平台的JavaScript运行时环境，用于在浏览器之外执行JavaScript代码。它允许程序员快速、轻松地编写和执行脚本。这些脚本可以编写为在Web浏览器或服务器上运行。'
- en: '**BitcoinJS**: This is a JavaScript library for working with Bitcoin and its
    cryptographic functions. BitcoinJS can be used to generate public/private keys
    and addresses.'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**BitcoinJS**：这是一个用于处理比特币及其密码功能的JavaScript库。BitcoinJS可用于生成公钥/私钥和地址。'
- en: '**Blockchain.info**: This is a public API that can be used to query the blockchain
    to find out balances and broadcast transactions to the network. It can be used
    to implement a Bitcoin node and install and run a Bitcoin node.'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Blockchain.info**：这是一个公共API，可用于查询区块链以查找余额并将交易广播到网络。它可用于实现比特币节点并安装和运行比特币节点。'
- en: 'After installing the preceding tools, one can execute the following operations:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完上述工具后，可以执行以下操作：
- en: Generate a new private key and compute a public key
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生成一个新的私钥并计算一个公钥
- en: Check the balance for a certain address
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查某个地址的余额
- en: Generate addresses
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生成地址
- en: Construct a new transaction
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建一个新的交易
- en: 'Send a transaction, which involves three steps:'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发送一个交易，涉及三个步骤：
- en: Build a transaction with a list of inputs and outputs
  id: totrans-156
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建一个带有输入和输出列表的交易
- en: Sign the transaction with the required private keys
  id: totrans-157
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用必要的私钥对交易进行签名
- en: Broadcast the transaction to the network
  id: totrans-158
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将交易广播到网络
- en: Build an escrow account
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 建立一个托管账户
- en: Broadcasts the transaction
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 广播交易
- en: Altcoins
  id: totrans-161
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 替代币
- en: 'Thanks to Bitcoin, blockchain technology has attracted worldwide attention.
    Like any new technology, it has its limitations. Many variations of Bitcoin were
    created to address a particular limitation of Bitcoin. Here, we mention a few
    of them:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢比特币，区块链技术已经引起了全球的关注。就像任何新技术一样，它也有其局限性。许多比特币的变种被创建来解决比特币的特定限制。在这里，我们提到其中一些：
- en: '**Bitcoin Cash**: This is a hard fork of the Bitcoin chain that was created
    because a group of Bitcoin core developers wanted to use a different way of addressing
    the scalability issue.'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**比特币现金**：这是比特币链的硬分叉，是因为一群比特币核心开发者想要使用不同的方法来解决可扩展性问题而创建的。'
- en: '**Litecoin**: This is almost identical to Bitcoin except that the time for
    adding a new block was reduced from 10 minutes to 2 minutes.'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**莱特币**：这几乎与比特币相同，只是添加新区块的时间从10分钟减少到2分钟。'
- en: '**Zcash**: This is based on Bitcoin but offers total payment confidentiality.'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Zcash**：这基于比特币，但提供了完全的付款保密性。'
- en: '**Monero and Zcash**: Both altcoins address the privacy issue by making transaction
    history untraceable, but they implement two different solutions.'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**门罗币和Zcash**：这两种替代币通过使交易历史不可追踪来解决隐私问题，但它们实现了两种不同的解决方案。'
- en: '**Dash**: This mainly improves user-friendliness. For example, transactions
    are made untraceable and a user does not have to wait for several additional new
    blocks to be added before considering a transaction to be committed to the chain.'
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Dash**：主要改进了用户友好性。例如，交易变得无法追踪，用户不必等待添加了几个额外新区块后才考虑将交易提交到链上。'
- en: '**Namecoin**: This extends the use case of Bitcoin, which is for trading BTCs
    only, to providing domain name services.'
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Namecoin**：这扩展了比特币的用例，后者仅用于交易BTC，提供域名服务。'
- en: '**Peercoin**: This altcoin addresses the deficiencies of PoW, which is environmentally
    unfriendly and is low in throughput. Instead, it adopts proof of stake for achieving
    consensus. Based on this rule, a miner validates block transactions according
    to how many coins a miner holds. In other words, the mining power of a miner is
    in proportion to the number of peercoins owned.'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Peercoin**：这个山寨币解决了PoW的缺陷，后者环境不友好且吞吐量低。相反，它采用权益证明来实现共识。根据这一规则，矿工根据持有的币数验证区块交易。换句话说，矿工的挖矿能力与持有的Peercoin数量成比例。'
- en: '**Primecoin**: A primecoin miner competes to be the first to find the next
    biggest prime number.'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Primecoin**：Primecoin矿工竞相寻找下一个最大质数。'
- en: Ethereum
  id: totrans-171
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 以太坊
- en: 'Regardless of the efforts made from the steps-mentioned altcoins in addressing
    some part of the Bitcoin''s limitations, there are several fundamental issues
    that are not being addressed yet:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管上述山寨币采取了一些措施来解决比特币的一部分限制，但仍然存在一些尚未解决的基本问题：
- en: 'Bitcoin and these altcoins are specific to one purpose: trading either BTC
    or an altcoin.'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 比特币和这些山寨币都特定于一个目的：交易BTC或山寨币。
- en: Although a programmer can use tools such as BitcoinJS to interact with the network,
    the resulting code sits outside of the blockchain and is not guaranteed to run.
    The chain itself does not have a Turing complete programming language for coding
    directly on a blockchain.
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尽管程序员可以使用诸如BitcoinJS之类的工具与网络交互，但结果代码位于区块链之外，并不能保证运行。链本身没有用于直接在区块链上编码的图灵完备编程语言。
- en: These blockchains are stateless and one has to search through the entire ledger
    to find an answer such as the total number of BTC minted.
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这些区块链是无状态的，人们必须在整个账本中搜索才能找到答案，例如已铸造的BTC总数。
- en: In response to these problems, Vitalik Buterin, a Canadian cryptocurrency researcher
    and programmer, proposed the idea of Ethereum in late 2013\. Funded by an online
    crowdsale, the system went live on 30 July 2015, with 11.9 million coins *premined* for
    the crowdsale.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 针对这些问题，加拿大加密货币研究员和程序员Vitalik Buterin在2013年底提出了以太坊的想法。通过在线众筹资助，该系统于2015年7月30日上线，为众筹预挖了1190万枚币。
- en: 'The core idea for Ethereum was to build a general-purpose blockchain so users
    could solve a wide range of business problems not just limited to cryptocurrency
    transfer. Ethereum introduced a few new and critical concepts:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 以太坊的核心思想是构建一个通用的区块链，以便用户可以解决各种业务问题，不仅限于加密货币转移。以太坊引入了一些新的关键概念：
- en: The concept of saving a smart contract on a blockchain
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在区块链上保存智能合约的概念
- en: The concept of implementing a smart contract with a Turing complete programming
    language such as Solidity and running the piece of code on the blockchain
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Solidity等图灵完备编程语言实现智能合约的概念，并在区块链上运行代码片段
- en: Solidity was initially proposed in August 2014 by Gavin Wood. The Ethereum project's
    Solidity team led by Christian Reitwiessner later developed the language. It is
    one of the five languages, (Solidity, Serpent, LLL, Vyper, and Mutan) designed
    to target the **Ethereum virtual machine** (**EVM**).
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: Solidity最初由Gavin Wood在2014年8月提出。以后，由Christian Reitwiessner领导的以太坊项目Solidity团队开发了这种语言。它是针对**以太坊虚拟机**（**EVM**）设计的五种语言之一（Solidity、Serpent、LLL、Vyper和Mutan）。
- en: Nick Szabo, a programmer and lawyer, initially proposed the term *smart contract* in
    1996\. In his blog, Nick Szabo described it as the granddaddy of all smart contracts,
    the vending machine.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 程序员和律师Nick Szabo在1996年首次提出了术语*智能合约*。在他的博客中，Nick Szabo将其描述为所有智能合约的始祖，即自动售货机。
- en: 'A vending machine shares the exact same properties as a smart contract on a
    blockchain today. A vending machine is built with hardcoded rules that define
    what actions to execute when certain conditions are fulfilled, for example:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 今天的区块链上的智能合约与自动售货机具有完全相同的属性。自动售货机是根据硬编码的规则构建的，这些规则定义了在满足某些条件时执行的操作，例如：
- en: If Susan inputs a dollar bill in the vending machine, then she will receive
    a bag of pretzels.
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果苏珊在自动售货机中放入一张美元钞票，那么她将收到一袋椒盐脆饼。
- en: If Tom puts in a five-dollar bill, Tom will receive a bag of pretzels and also
    change of four dollars.
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果汤姆放进一张五美元的钞票，他将收到一袋椒盐脆饼并且会得到四美元的零钱。
- en: In other words, rules are defined and enforced by a vending machine physically.
    Similarly, a smart contract contains rules in program code that are run on the
    blockchain and triggered when certain conditions are met.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，规则由自动售货机物理上定义并执行。同样，智能合约包含在区块链上运行的程序代码中的规则，当满足某些条件时触发。
- en: 'The introduction of the smart contract concept is significant:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 智能合约概念的引入具有重要意义：
- en: A smart contract is a scripted legal document.
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 智能合约是一种脚本化的法律文件。
- en: The code built into the contract is stored on the Ethereum blockchain and cannot
    be tampered with or removed. This greatly increases the credibility of the legal
    document.
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 写入合同的代码存储在以太坊区块链上，不能被篡改或删除。这极大地增加了法律文件的可信度。
- en: This code cannot be stopped, meaning any party—regardless of how powerful the
    party is—cannot order or interfere with the running of the smart contract code.
    As long as certain conditions are met, the code will run and the legally defined
    actions will be fulfilled.
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这段代码无法被停止，意味着任何一方——不管这个方有多么强大——都无法命令或干预智能合约代码的运行。只要满足一定条件，代码就会运行，法律上定义的行动也将被完成。
- en: Ethereum to blockchain is like an OS to a computer. In other words, the platform
    is generic, no longer serving only one specific purpose.
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以太坊对于区块链就像操作系统对于计算机一样。换句话说，这个平台是通用的，不再只服务于特定的目的。
- en: 'It now has a Turing complete language: Solidity.'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现在它拥有了一种图灵完备的语言：Solidity。
- en: Enterprise blockchain – Hyperledger
  id: totrans-192
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 企业区块链 - Hyperledger
- en: 'The arrival of Ethereum revolutionized blockchain technology. Applying technology
    to resolve business problems well beyond the financial industry has become feasible.
    However, there are many scenarios where Ethereum is not enough. Ethereum''s issues
    include the following:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 以太坊的到来彻底改变了区块链技术。将技术应用于超越金融行业的商业问题已经成为可能。然而，以太坊并不足够的场景还有很多。以太坊的问题包括以下内容：
- en: 'Real enterprise applications, particularly in the financial industry, require
    a high throughput, which can mean billions of transactions a day. The current
    form of Ethereum has a maximum capacity of 1.4 million a day. Bitcoin is even
    worse: 300,000 transactions a day. During a stress test, Bitcoin Cash reached
    2.2 million. Ethereum 2.0 under development aims at getting to a billion transactions
    a day while maintaining a decentralized and secure public blockchain.'
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 真正的企业应用程序，特别是在金融行业，需要高吞吐量，这意味着每天可能有数十亿的交易。当前形式的以太坊每天的最大容量为140万笔。比特币甚至更糟糕：每天30万笔交易。在压力测试期间，比特币现金达到了220万笔。正在开发中的以太坊2.0目标是达到每天10亿笔的交易量，同时保持去中心化和安全的公共区块链。
- en: Many financial markets, for instance OTC Derivatives or FX, are permission-based.
    A public blockchain supported by Ethereum or Bitcoin does not meet such a need.
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 许多金融市场，比如场外衍生品或外汇交易，都是基于许可的。以太坊或比特币支持的公共区块链不符合这种需求。
- en: To satisfy their needs, well-established companies across industries form consortiums
    to work on enterprise blockchain projects, which are permission-based only. In
    other words, a node has to receive approval before it can join in the blockchain
    network. Examples of enterprise blockchains are Hyperledger and R3's Corda.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 为了满足他们的需要，各行各业的知名公司成立联盟，共同开展基于许可的企业区块链项目。换句话说，节点必须在加入区块链网络之前获得批准。企业区块链的例子有Hyperledger和R3的Corda。
- en: In December 2015, the **Linux Foundation** (**LF**) announced the creation of
    the Hyperledger Project. Its objective is to advance cross-industry collaboration
    by developing blockchains and distributed ledgers. On 12 July 2017, the project
    announced its production-ready **Hyperledger Fabric** (**HF**) 1.0.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 2015年12月，**Linux Foundation**（**LF**）宣布了Hyperledger项目的创建。其目标是通过开发区块链和分布式分类账来推动跨行业合作。2017年7月12日，该项目宣布推出了可供使用的**Hyperledger
    Fabric**（**HF**）1.0。
- en: 'Currently, Hyperledger includes five blockchain frameworks:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，Hyperledger包括五个区块链框架：
- en: '**Hyperledger Fabric** (**HF**): A permissioned blockchain, initially contributed
    by IBM and Digital Asset, it is designed to be a foundation for developing applications
    or solutions with a modular architecture. It takes plugin components for providing
    functionalities such as consensus and membership services. Like Ethereum, HF can
    host and execute smart contracts, which are named chaincode. An HF network consists
    of peer nodes, which execute smart contracts (chaincode), query ledger data, validate
    transactions, and interact with applications. User-entered transactions are channeled
    to an ordering service component, which initially serves to be HF''s consensus
    mechanism. Special nodes called Orderer nodes validate the transactions, ensure
    the consistency of the blockchain, and send the validated transactions to the
    peers of the network as well as to **membership service provider** (**MSP**) services
    that are implemented to be a certificate authority.'
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Hyperledger Fabric**（**HF**）：一个许可区块链，最初由IBM和Digital Asset贡献，旨在成为以模块化架构开发应用程序或解决方案的基础。它采用插件组件提供功能，如共识和成员服务。与以太坊类似，HF可以托管和执行智能合约，称为链代码。HF网络由对等节点组成，这些节点执行智能合约（链代码），查询分类账数据，验证交易，并与应用程序交互。用户输入的交易被通道化到一个命名为排序服务组件的服务，该服务最初用作HF的共识机制。称为排序节点的特殊节点验证交易，确保区块链的一致性，并将已验证的交易发送到网络的对等节点以及实施为证书颁发机构的**成员服务提供商**（**MSP**）服务。'
- en: '**Hyperledger Iroha**: Based on HF, it is designed for mobile applications.
    Iroha was contributed by Soramitsu, Hitachi, NTT Data, and Colu. It features a
    modern and domain-driven C++ design. It implements a consensus algorithm called
    Sumeragi.'
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Hyperledger Iroha**：基于HF，专为移动应用设计。Iroha由Soramitsu、日立、NTT数据和Colu贡献。它采用了现代化和领域驱动的C++设计。它实现了一种名为Sumeragi的共识算法。'
- en: '**Hyperledger Burrow**: Contributed initially by Monax and Intel, Burrow is
    a modular blockchain that was client-built to follow EVM specifications.'
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Hyperledger Burrow**：最初由Monax和Intel贡献，Burrow是一个模块化的区块链，是按照EVM规范构建的客户端。'
- en: '**Hyperledger Sawtooth**: Contributed by Intel, it implemented a consensus
    algorithm called **Proof of Elapsed Time** (**PoET**). PoET is designed to achieve
    distributed consensus as efficiently as possible. Sawtooth supports both permissioned
    and permissionless networks. Sawtooth is designed for versatility.'
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Hyperledger Sawtooth**：由Intel贡献，实现了一种名为**Proof of Elapsed Time**（**PoET**）的共识算法。PoET旨在尽可能高效地实现分布式共识。Sawtooth支持许可和非许可网络。Sawtooth设计灵活多变。'
- en: '**Hyperledger Indy**: Contributed initially by the Sovrin foundation, it is
    intended to support independent identity on distributed ledgers. Indy provides
    tools, libraries, and reusable components, which are implemented to provide digital
    identities.'
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Hyperledger Indy**：最初由Sovrin基金会贡献，旨在支持分布式分类账上的独立身份。Indy提供工具、库和可重用组件，这些组件旨在提供数字身份。'
- en: 'Early members of the initiative include the following:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 该倡议的早期成员包括以下几个：
- en: Blockchain ISVs, (Blockchain, ConsenSys, Digital Asset, R3, Onchain)
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 区块链独立软件供应商（Blockchain、ConsenSys、Digital Asset、R3、Onchain）
- en: Technology platform companies such as Cisco, Fujitsu, Hitachi, IBM, Intel, NEC,
    NTT DATA, Red Hat, and VMware
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 技术平台公司，如思科、富士通、日立、IBM、英特尔、NEC、NTT DATA、红帽和VMware
- en: Financial institutions such as ABN AMRO, ANZ Bank, BNY Mellon, CLS Group, CME
    Group, the **Depository Trust and Clearing Corporation** (**DTCC**), Deutsche
    Börse Group, J.P. Morgan, State Street, SWIFT, and Wells Fargo
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 金融机构，如荷兰银行、澳新银行、纽约梅隆银行、CLS集团、芝加哥商品交易所集团、美国存管与清算公司（**DTCC**）、德国证券交易所集团、摩根大通、美国富国银行
- en: Software companies such as SAP
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 软件公司，如SAP
- en: Academic institutions such as Cambridge Centre for Alternative Finance, blockchain
    at Columbia, and UCLA blockchain lab
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学术机构，如剑桥替代金融中心、哥伦比亚区块链和加州大学洛杉矶分校区块链实验室
- en: Systems integrators and other firms such as Accenture, Calastone, Wipro, Credits,
    Guardtime, IntellectEU, Nxt Foundation, and Symbiont
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 系统集成商及其他公司，如安永、Calastone、Wipro、Credits、Guardtime、IntellectEU、Nxt Foundation和Symbiont
- en: The evolution of blockchain
  id: totrans-211
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 区块链的演变
- en: Blockchain technology is still at an early stage. It will take many years before
    it becomes mature and its potential is fully explored and harnessed. Currently,
    there is no universally agreed way to classify or define blockchain generation.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链技术仍处于早期阶段。在它成熟并充分发挥潜力之前，还需要很多年的时间。目前，还没有普遍认可的方式来分类或定义区块链的世代。
- en: 'In her book on blockchain, Melanie Swan defined blockchain 1.0 to 3.0 based
    on the use scenarios that blockchain platforms are created to serve:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 在她关于区块链的书中，Melanie Swan基于区块链平台创建的使用场景将区块链 1.0 到 3.0 进行了定义。
- en: '*"Blockchain 1.0 is currency, the deployment of cryptocurrencies in applications
    related to cash, such as currency transfer, remittance, and digital payment systems.*'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '*"区块链 1.0 是货币，部署加密货币在与现金相关的应用中，比如货币转移、汇款和数字支付系统。*'
- en: '*Blockchain 2.0 is contracts, the entire slate of economic, market, and financial
    applications using the blockchain that are more expensive than simple cash transactions:
    stocks, bonds, futures, loans, mortgages, titles, smart property, and smart contracts.*'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: '*区块链 2.0 是合同，使用区块链进行更昂贵的经济、市场和金融应用的完整 slate：股票、债券、期货、贷款、抵押贷款、所有权、智能财产和智能合同。*'
- en: '*Blockchain 3.0 is blockchain applications beyond currency, finance, and markets
    - particularly in the areas of government, health, science, literacy, culture,
    and art."*'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '*区块链 3.0 是超越货币、金融和市场的区块链应用，特别是在政府、健康、科学、文化和艺术领域。*'
- en: 'Some others divided blockchain evolution into four generations from blockchain
    1.0 to 4.0:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: '有些人将区块链发展划分为从区块链 1.0 到 4.0 的四代:'
- en: '**Blockchain 1.0**: With Bitcoin being the most prominent example in this segment,
    use cases were based on the **distributed ledger technology** (**DLT**) where
    financial transactions could be executed. Cryptocurrency was used as cash for
    the Internet.'
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**区块链 1.0**：以比特币为此领域最突出的例子，在此段落中，使用案例基于**分布式分类技术（DLT）**，其中可以执行金融交易。加密货币被用作互联网上的现金。'
- en: '**Blockchain 2.0**: With Ethereum being the most prominent example in this
    segment, the new key concept was Smart Contracts, which are stored and executed
    on a blockchain.'
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**区块链 2.0**：以太坊是此领域最突出的例子，其中新的关键概念是智能合约，这些合约存储并在区块链上执行。'
- en: '**Blockchain 3.0**: The keyword is DApps, an abbreviation for decentralized
    applications, which avoided centralized infrastructure. They use decentralized
    storage and decentralized communication. Unlike a smart contract which only involves
    a backend or server-side code, a DApp can have frontend code and user interfaces,
    i.e. client-side code to interact with its backend code on a blockchain. Like
    the smart contract code, a DApp''s frontend can be stored and executed on decentralized
    storage such as Ethereums Swarm. In summary, a DApp is frontend plus contracts
    running on Ethereum.'
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**区块链 3.0**：关键词是 DApps，即去中心化应用的缩写，它们避免了集中式基础设施。它们使用去中心化存储和去中心化通信。与仅涉及后端或服务器端代码的智能合同不同，DApp可以具有前端代码和用户界面，即客户端代码，用于与其在区块链上的后端代码进行交互。与智能合同代码一样，DApp
    的前端可以存储和在以太坊的 Swam 上执行。总之，DApp是前端加上在以太坊上运行的合同。'
- en: '**Blockchain 4.0**: Blockchain platforms in this segment are built to serve
    for Industry 4.0\. Industry 4.0 refers, in a simple way, to automation, enterprise
    resource planning, and integration of different execution systems.'
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**区块链 4.0**：此领域的区块链平台旨在为工业4.0提供服务。简单来说，工业4.0指的是自动化、企业资源规划和不同执行系统的集成。'
- en: Regardless of how the blockchain technology is divided into versions, it is
    certain that the technology growth is far from being over. New ideas and implementations
    will be incorporated into the existing platforms to deal with challenges for real-life
    problems. In other words, blockchain technology will be nimble and is self-adjusted
    to be an enabler in resolving business problems.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 无论区块链技术如何划分版本，可以肯定的是技术的增长远未结束。新的想法和实施将被纳入现有平台，以应对解决现实问题的挑战。换句话说，区块链技术将变得灵活，并且能够自我调整，成为解决商业问题的推动者。
- en: Summary
  id: totrans-223
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Blockchain is an emerging technology. Thanks to its immutability, transparency,
    the consensus mechanism for avoiding double spending, along with other clever
    designs such as blocks chained with the hashes of the previous blocks, the technology
    allows untrusting parties to trade with each other. In this chapter, we explained
    the basic concepts of its important features. Most of the discussions were about Bitcoin,
    which is the mother of the technology. We briefly talked about Ethereum, which
    extended Bitcoin and introduced the concept of smart contracts. The introduction
    of smart contracts makes the Ethereum blockchain generic and allows us to develop
    applications beyond the borderless cash payment use case for which Bitcoin was
    invented. The concept of an enterprise chain, along with one of the examples,
    Hyperledger, was mentioned as well. Finally, we briefly touched on the evolution
    of blockchain to give readers an idea of the trend in the technology. In the next
    chapter, we will discuss the concepts of Ethereum in detail.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链是一种新兴技术。由于其不可变性、透明性、避免双重支付的共识机制以及其他巧妙的设计，比如将块与前一个块的哈希链接在一起，这项技术使不信任的各方能够相互交易。在本章中，我们解释了其重要特性的基本概念。大部分讨论都集中在比特币上，它是这项技术的鼻祖。我们简要讨论了以太坊，它扩展了比特币并引入了智能合约的概念。智能合约的引入使以太坊区块链变得通用，使我们能够开发超越比特币被发明的无国界现金支付用例的应用程序。企业链的概念以及其中的一个例子——Hyperledger也被提及。最后，我们简要介绍了区块链的演进，以使读者对技术的趋势有所了解。在下一章中，我们将详细讨论以太坊的概念。
