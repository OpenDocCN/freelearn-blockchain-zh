- en: Chapter 11. Blockchain-Outside of Currencies
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Digital currencies were the first ever application of blockchain technology,
    arguably without realizing its true potential. With the invention of bitcoin the
    concept of blockchain was introduced for the very first time, but it wasn't until
    2013, with the advent of *Blockchain 2.0* that the real benefits of blockchain
    were realized with its possible application in many different industries. Since
    then a number of use cases of blockchain technology in different industries, have
    been proposed including but not limited to finance, the Internet of Things, digital
    rights management, government, and law. In this chapter, four main industries
    namely the **Internet of Things** (**IoT**), government, health, and finance,
    have been selected for discussion. Readers will be introduced to all these fields
    and various related use cases will be presented.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: Internet of Things
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Internet of Things or IoT for short has recently gained much traction due
    to its potential for transforming business applications and everyday life. IoT
    can be defined as a network of computationally intelligent physical objects that
    are capable of connecting to the Internet, sensing real-world events or environments,
    reacting to those events, collecting relevant data, and communicating it over
    the Internet. This simple definition has huge implications and has led to exciting
    concepts, such as wearable's, smart homes, smart grids, smart connected cars,
    and smart cities, that are all based on this basic concept of an IoT device. After
    dissecting the definition of IoT above, there are four functions that come to
    light as being performed by an IoT device. These include sensing, reacting, collecting,
    and communicating. All these functions are performed by using various components
    on the IoT device.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: Sensing is performed by sensors. Reacting or controlling is performed by actuators,
    collection is a function of various sensors, and communication is performed by
    chips that provide network connectivity. One thing to note is that all these components
    are accessible and controllable via the Internet in the IoT. An IoT device on
    its own is perhaps useful to some extent but if it is part of a larger IoT ecosystem
    it is more valuable.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: 'A typical IoT can consist of many physical objects connecting with each other
    and to a centralized cloud server. This is shown in the diagram below:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: '![Internet of Things](img/image_11_001.jpg)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
- en: 'A typical IoT network: source--IBM'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: Elements of IoT are spread across multiple layers and various reference architectures
    exist that can be used to develop IoT systems. Generally, a five layer model can
    be used to describe IoT, which contains a physical object layer, device layer,
    network layer, services layer, and application layer. Each layer or level is responsible
    for various functions and includes various components. These are described in
    detail below.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: Physical object layer
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: These include any physical real-world objects includes people, animals, cars,
    trees, fridges, trains, factories, homes, and in fact anything that is required
    to be monitored and controlled can be connected to the IoT.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: Device layer
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This layer contains things that make up the IoT such as sensors, transducers,
    actuators, smart phones, smart devices, and **Radio Frequency Identification tags**
    (**RFIDs**). There can be many categories of sensors such as body sensors, home
    sensors, and environmental sensors based on the type of work they perform. This
    is the core of an IoT ecosystem where various sensors are used to sense real-world
    environments. This includes sensors that can monitor temperature, humidity, liquid
    flow, chemicals, air, pressure, and much more. Usually, an **Analog to Digital
    Converter** (**ADC**) is required on a device in order to turn the real-world
    analog signal into a digital signal that a microprocessor can understand.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: Actuators in this layer provide the means to enable control of external environments,
    for example, starting a motor or opening a door. These components also require
    digital to analog converters in order to convert a digital signal into analogue.
    This is especially relevant when control of a mechanical component is required
    by the IoT device.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: Network layer
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This layer is composed of various network devices that are used to provide Internet
    connectivity between devices and to the cloud or servers that are part of the
    IoT ecosystem. These devices can include gateways, routers, hubs, and switches.
    This layer can include two types of communication. First is the horizontal means
    of communication, which includes radio, Bluetooth, WiFi, Ethernet, LAN, ZigBee,
    and PAN and can be used to provide a communication between IoT devices. Second,
    we have communicating to the next layer, which is usually through the Internet
    and provides communication between machines and people or other upper layers.
    The first layer can optionally be included in the device layer as it physically
    is residing on the device layer where devices can communicate with each other
    at the same layer.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: Management layer
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This layer provides the management layer for the IoT ecosystem. This includes
    platforms that enable processing of data gathered from the IoT devices and turn
    that into meaningful insights. Also, device management, security management, and
    data flow management are included in this layer. It also manages communication
    between the device and application layers.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: Application layer
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This layer includes applications running on top of the IoT network. This can
    include a number of applications depending on the requirements such as transportation,
    healthcare, financial, insurance, or supply chain management. This of course is
    not an exhaustive list by any stretch of the imagination; there is a myriad of
    IoT applications that can fall into this layer:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: '![Application layer](img/image_11_002.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
- en: IoT five-layer model
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: With the availability of cheap sensors, hardware, and bandwidth, IoT has gained
    popularity in recent years and currently has applications in many different areas
    including healthcare, insurance, supply chain management, home automation, industrial
    automation, and infrastructure management. Moreover, advancements in technology
    such as the availability of IPv6, smaller and powerful processors, and better
    Internet access have also played a vital role in the popularity of IoT. The benefits
    of IoT range from cost saving to enabling businesses to make vital decisions and
    thus improve performance based on the data provided by the IoT devices. Raw data
    from millions of things (IoT devices) is analyzed and provides meaningful insights
    that help in making timely and effective business decisions.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 随着廉价传感器、硬件和带宽的可用性，物联网近年来备受青睐，在医疗保健、保险、供应链管理、家庭自动化、工业自动化和基础设施管理等许多不同领域都有应用。此外，技术的进步，如IPv6的可用性、更小巧和功能强大的处理器以及更好的互联网接入，也在物联网受欢迎中起着至关重要的作用。物联网的好处从节约成本到使企业能够根据物联网设备提供的数据做出重要决策，从而提高性能。数以百万计的物（物联网设备）的原始数据被分析，从中得到有意义的见解，有助于及时和有效地制定业务决策。
- en: The normal IoT model is based on a centralized paradigm where IoT devices usually
    connect with a cloud infrastructure or central servers in order to report and
    process the relevant data back. This centralization poses certain possibilities
    of exploitation including hacking and data theft. Moreover, not having control
    of personal data on a single, centralized service provider also increases the
    possibility of security and privacy issues. Whilst there are methods and techniques
    to build a highly secure IoT ecosystem based on the normal IoT model there are
    certain much more desirable benefits that blockchain can bring to IoT. A blockchain-based
    IoT model differs from the traditional IoT network paradigm. According to IBM,
    blockchain for IoT can help to build trust, reduce costs, and accelerate transactions.
    Additionally, decentralization, which is at the very core of blockchain technology,
    can eliminate single points of failure in an IoT network. For example, a central
    server perhaps is not able to cope with the amount of data that billions of IoT
    devices (things) are producing at high frequency. Also the peer-to-peer communication
    model provided by blockchain can help to reduce costs because there is no need
    to build high-cost centralized data centres or implementation of complex public
    key infrastructure for security. Devices can communicate with each other directly
    or via routers.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 普通物联网模型基于集中式范式，物联网设备通常连接到云基础设施或中央服务器，以报告和处理相关数据。这种集中化提出了某些可能性的利用，包括黑客攻击和数据窃取。此外，在没有对个人数据进行控制的单一集中式服务提供商的情况下，也增加了安全和隐私问题的可能性。虽然有方法和技术可以建立基于普通物联网模型的高度安全的物联网生态系统，但区块链可以为物联网带来一定更可取的好处。基于区块链的物联网模型与传统物联网网络范式不同。据IBM称，区块链对于物联网可以帮助建立信任、减少成本和加速交易。此外，区块链技术的核心——分散化，能够消除物联网网络中的单点故障。例如，一个中央服务器可能无法处理数十亿个物联网设备（物）以高频率产生的数据量。此外，区块链所提供的点对点通信模型可以帮助降低成本，因为无需建设高成本的集中式数据中心或实施复杂的公钥基础结构来确保安全。设备可以直接或通过路由器互相通信。
- en: As an estimate from various researchers and companies, by 2020 there will be
    roughly 22 billion devices connected to the Internet. With this explosion of billions
    of devices connecting to the Internet, it is hard to imagine that centralized
    infrastructures will be able to cope with the high demands of bandwidth, services,
    and availability without incurring excessive expenditure. Blockchain-based IoT
    will be able to solve scalability, privacy, and reliability issues in the current
    IoT model.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 根据各种研究人员和公司的估计，到2020年，将有大约220亿台设备连接到互联网。随着数十亿台设备连接到互联网的爆炸，很难想象中心化的基础设施能够在不过度支出的情况下满足带宽、服务和可用性的高需求。基于区块链的物联网将能够解决当前物联网模型中的可扩展性、隐私和可靠性问题。
- en: Blockchain enables *things* to communicate and transact with each other directly
    and with the availability of smart contracts negotiation and financial transactions
    can also occur directly between the devices instead of requiring a middleman,
    authority, or human intervention. For example, if a room in a hotel is vacant,
    it can rent itself out, negotiate the rent, and can open the door lock for a human
    who has paid the right amount of funds. Another example could be that if a washing
    machine runs out of detergent, it could order it online after finding the best
    price and value based on the logic programmed in its smart contract.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链使*物*能够直接与其他物通信和交易，并且在智能合约的可用性下，谈判和金融交易也可以直接在设备之间发生，而无需中间人、权威或人类干预。例如，如果酒店的一个房间空闲，它可以自行出租，谈判租金，并且可以为支付了足够资金的人开门锁。另一个例子可能是，如果洗衣机用完了洗涤剂，它可以在智能合约中编程的逻辑基础上，在线订购洗涤剂并找到最佳价格和价值。
- en: 'The above mentioned five-layer IoT model can be adapted to a blockchain-based
    model by adding a blockchain layer on top of the network layer. This layer will
    run smart contracts, and provide security, privacy, integrity, autonomy, scalability,
    and decentralization services to the IoT ecosystem. The management layer in this
    case can consist of only software related to analytics and processing, and security
    and control can be moved to the blockchain layer. This can be visualized in the
    following diagram:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 上述五层物联网模型可以通过在网络层之上添加一个区块链层来适应基于区块链的模型。该层将运行智能合约，并为物联网生态系统提供安全性、隐私性、完整性、自治性、可扩展性和去中心化服务。在这种情况下，管理层可以仅包括与分析和处理相关的软件，安全性和控制可以移至区块链层。这可以在以下图表中可视化：
- en: '![Application layer](img/image_11_003.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![应用层](img/image_11_003.jpg)'
- en: Blockchain-based IoT model
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 基于区块链的物联网模型
- en: In this model, other layers would perhaps remain the same but an additional
    blockchain layer will be introduced as a middleware between all participants of
    the IoT network.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个模型中，其他层可能保持不变，但是会引入一个额外的区块链层作为物联网网络所有参与者之间的中间件。
- en: 'It can also be visualized as a peer-to-peer IoT network after abstracting away
    all the layers mentioned above. This is shown in the following diagram where all
    devices are communicating and negotiating with each other without a central command
    and control entity:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在将上述所有层抽象化后，也可以将其视为点对点的物联网网络。在下面的图表中显示了这一点，所有设备都在互相通信和协商，没有中央命令和控制实体：
- en: '![Application layer](img/image_11_004.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![应用层](img/image_11_004.jpg)'
- en: Blockchain-based direct communication model, source--IBM
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 基于区块链的直接通信模型，来源--IBM
- en: It can also result in cost saving which is due to easier device management by
    using a blockchain based decentralised approach. The IoT network can be optimized
    for performance by using blockchain. In this case there will be no need to store
    IoT data centrally for millions of devices because storage and processing requirements
    can be distributed to all IoT devices on the blockchain. This can result in completely
    removing the need for large data centres for processing and storing the IoT data.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这也可以导致成本节约，这是由于使用基于区块链的去中心化方法更容易进行设备管理。可以通过使用区块链来优化物联网网络的性能。在这种情况下，将不需要为数百万设备集中存储物联网数据，因为存储和处理要求可以分配给区块链上的所有物联网设备。这可以完全消除处理和存储物联网数据的大型数据中心的需求。
- en: Blockchain-based IoT can also thwart denial of service attacks where hackers
    can target a centralized server or data centre more easily but with blockchain's
    distributed and decentralized nature, such attacks are no longer possible. Additionally,
    if as estimated there will be billions of devices connected to the Internet in
    the near future, it will become almost impossible to manage security and updates
    of all those devices from traditional centrally-owned servers. Blockchain can
    provide a solution to this problem by allowing devices to communicate with each
    other directly in a secure manner and even request firmware and security updates
    from each other. On a blockchain network these communications can be recorded
    immutably and securely which will provide auditability, integrity, and transparency
    to the system. This is not possible with traditional P2P systems.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: In summary, there are clear benefits that can be reaped with the convergence
    of IoT and blockchain and a lot of research and work in academia and industry
    are already in progress. There are various projects already proposed providing
    blockchain-based IoT solutions. For example, IBM Blue Horizon and IBM Bluemix
    are IoT platforms supporting blockchain IoT platforms. Various start-ups such
    as Filament have already proposed novel ideas on how to build a decentralised
    network that enables devices on IoT to transact with each other directly and autonomously
    driven by smart contracts.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: In the following section, a practical example is provided on how to build a
    simple IoT device and connect it to the Ethereum blockchain. This IoT device is
    connected to the Ethereum blockchain and is used to open a door (in this case
    the door lock is represented by an LED) when the appropriate amount of funds are
    sent by a user on the blockchain. This is a simple example and requires a more
    rigorously-tested version in order to implement it in production but it demonstrates
    how an IoT device can be connected, controlled, and responded to in response to
    certain events on an Ethereum blockchain.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: IoT blockchain experiment
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This example makes use of a Raspberry device which is a **Single Board Computer**
    (**SBC**). Raspberry Pi is a single-board computer developed as a low cost computer
    to promote computer education but has also gained much more popularity as a tool
    of choice for building IoT platforms. A Raspberry Pi 3 model B is shown in the
    following figure:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: '![IoT blockchain experiment](img/image_11_005.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
- en: Raspberry Pi model B
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: In the following section, an example will be discussed where a Raspberry Pi
    will be used as an IoT device connected to the Ethereum blockchain and will perform
    an action in response to a smart contract invocation.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: First, the Raspberry Pi needs to be set up. This can be done by using NOOBS
    which provides an easy method of installing Raspbian or any other operating system.
    This can be downloaded and installed from the link [https://www.raspberrypi.org/downloads/noobs/](https://www.raspberrypi.org/downloads/noobs/).
    Alternatively, only Raspbian can be installed from the link [https://www.raspberrypi.org/downloads/raspbian/](https://www.raspberrypi.org/downloads/raspbian/).
    Another alternative available at [https://github.com/debian-pi/raspbian-ua-netinst](https://github.com/debian-pi/raspbian-ua-netinst)
    can also be used to install a minimal non-GUI version of Raspbian OS. For the
    purpose of the example, NOOBS has been used to install Raspbian, as such the rest
    of the exercise assumes Raspbian is installed on the SD memory card of the Raspberry
    Pi.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，需要设置Raspberry Pi。可以使用提供Raspbian或任何其他操作系统安装的简便方法的NOOBS来完成此操作。这可以从链接[https://www.raspberrypi.org/downloads/noobs/](https://www.raspberrypi.org/downloads/noobs/)下载并安装。或者，可以只从链接[https://www.raspberrypi.org/downloads/raspbian/](https://www.raspberrypi.org/downloads/raspbian/)安装Raspbian。还可以使用[https://github.com/debian-pi/raspbian-ua-netinst](https://github.com/debian-pi/raspbian-ua-netinst)提供的另一种选择来安装Raspbian
    OS的最小非GUI版本。在本示例中，已使用NOOBS安装了Raspbian，因此本练习的其余部分假设Raspbian已安装在Raspberry Pi的SD存储卡上。
- en: Once the Raspbian operating system is installed, the next step is to download
    the appropriate `geth` binary for the Raspberry Pi ARM platform. The platform
    can be confirmed by running the following command in a terminal window in Raspberry
    Pi Raspbian operating system. The command output shows that which architecture
    the operating system is running on. In this case it is `armv71`, therefore ARM-compatible
    binary for `geth` will be downloaded.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 安装Raspbian操作系统后，下一步是为Raspberry Pi ARM平台下载适当的`geth`二进制文件。可以通过在Raspberry Pi Raspbian操作系统的终端窗口中运行以下命令来确认平台。命令输出显示操作系统正在运行的体系结构。在这种情况下，它是`armv71`，因此将下载适用于`geth`的ARM兼容二进制文件。
- en: '![IoT blockchain experiment](img/image_11_006.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![物联网区块链实验](img/image_11_006.jpg)'
- en: Raspberry Pi architecture
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: Raspberry Pi架构
- en: 'The following steps are described in detail:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 下面详细描述了以下步骤：
- en: '`geth` download:, note that in the example below a specific version is downloaded
    however other versions are available which can be downloaded from [https://geth.ethereum.org/downloads/](https://geth.ethereum.org/downloads/).'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`geth`下载：请注意，在下面的示例中下载了特定版本，但还有其他版本可供下载，可从[https://geth.ethereum.org/downloads/](https://geth.ethereum.org/downloads/)下载。'
- en: '[PRE0]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Unzip and extract into a directory, the directory named `geth-linux-arm7-1.5.6-2a609af5`
    will be created automatically with that tar command next:'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解压缩并提取到一个目录中，将自动创建名为`geth-linux-arm7-1.5.6-2a609af5`的目录，并使用下一个tar命令提取到该目录中：
- en: '[PRE1]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This will create a directory named `geth-linux-arm7-1.5.6-2a609af5` and will
    extract `geth` binary and related files into that directory. `geth` binary can
    be copied into `/usr/bin` or the appropriate path on Raspbian to make it available
    from anywhere in the operating system. When the download is finished, the next
    step is to create the genesis block.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 这将创建一个名为`geth-linux-arm7-1.5.6-2a609af5`的目录，并将`geth`二进制文件和相关文件提取到该目录中。可以将`geth`二进制文件复制到Raspbian上的`/usr/bin`或适当的路径中，以便从操作系统中的任何位置都可以访问它。下载完成后，下一步是创建创世区块。
- en: The same genesis block needs to be used that was created previously in [Chapter
    8](ch08.html "Chapter 8. Ethereum Development"), *Ethereum Development*. The genesis
    file can be copied from the other node on the network. This is shown in the following
    screenshot. Alternatively, an entirely new genesis block can be generated. This
    was discussed in detail in [Chapter 8](ch08.html "Chapter 8. Ethereum Development"),
    *Ethereum Development*.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 需要使用之前在[第8章](ch08.html "第8章。以太坊开发")中创建的相同的创世区块，*以太坊开发*。可以从网络上的其他节点复制创世区块文件。这在以下截图中显示。或者，可以生成全新的创世区块。这在[第8章](ch08.html
    "第8章。以太坊开发")中有详细讨论，*以太坊开发*。
- en: '![IoT blockchain experiment](img/image_11_007.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![物联网区块链实验](img/image_11_007.jpg)'
- en: Genesis file
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 创世区块文件
- en: 'Once the `genesis.json` file is copied onto the Raspberry Pi, the following
    command can be run in order to generate the genesis block. It is important that
    exactly the same genesis block is used that was generated previously otherwise
    the nodes will effectively be running on separate networks:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦将`genesis.json`文件复制到Raspberry Pi上，就可以运行以下命令以生成创世区块。非常重要的是要使用之前生成的完全相同的创世区块，否则节点将有效地运行在不同的网络上：
- en: '[PRE2]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'This will show the output similar to the one shown in the following screenshot:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这将显示与以下截图中显示的类似的输出：
- en: '![IoT blockchain experiment](img/image_11_008.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![物联网区块链实验](img/image_11_008.jpg)'
- en: Initialize genesis file
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 初始化创世文件
- en: After genesis block creation, there is a need to add peers to the network. This
    can be achieved by creating a file named `static-nodes.json`, which contains the
    enode ID of the peer that geth on the Raspberry Pi will connect to for synching.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 创建创世块后，需要向网络中添加对等节点。这可以通过创建一个名为`static-nodes.json`的文件来实现，其中包含树莓派上的geth将用于同步的对等节点的enode
    ID信息。
- en: '![IoT blockchain experiment](img/image_11_009.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![物联网区块链实验](img/image_11_009.jpg)'
- en: static nodes configuration
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 静态节点配置
- en: 'This information can be obtained from the geth JavaScript console by running
    the following shown command, this command should be run on the peer to which Raspberry
    is going to connect:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过运行以下显示的命令从geth JavaScript控制台上获得这些信息，此命令应该在树莓派要连接的对等节点上运行：
- en: '[PRE3]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This will show the output similar to the one shown in the following screenshot:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这将显示与以下截图中显示的类似的输出：
- en: '![IoT blockchain experiment](img/image_11_010.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![物联网区块链实验](img/image_11_010.jpg)'
- en: geth nodeinfo
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '`geth nodeinfo`'
- en: After this step, further instructions presented below can be followed in order
    to connect Raspberry Pi to the other node on the private network. In the example,
    the Raspberry Pi will be connected to the network ID 786 created in [Chapter 8](ch08.html
    "Chapter 8. Ethereum Development"), *Ethereum Development*. The key is to use
    the same genesis file created previously and different port numbers. Different
    ports are not a strict requirement however. If the two nodes are running under
    a private network and access from an environment external to the network is required
    then a combination of DMZ/router and port forwarding will be used. Therefore it
    is recommended to use different TCP ports to allow port forwarding to work correctly.
    The identity switch, which hasn't been introduced previously, in the following
    command allows for an identifying name to be specified for the node.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 完成此步骤后，可以按照下面呈现的进一步说明来连接树莓派到私人网络上的其他节点。在本例中，树莓派将连接到[第8章](ch08.html "第8章。以太坊开发")中创建的网络ID为786的*以太坊开发*。关键是使用之前创建的相同创世文件和不同的端口号。不过，不同的端口不是严格要求的。如果两个节点正在私人网络下运行，并且需要从网络外部的环境访问，则需要使用DMZ/路由器和端口转发的组合。因此建议使用不同的TCP端口以便允许端口转发正常工作。以下命令中介绍的身份切换，之前还未介绍，让节点能够指定一个标识名称。
- en: First node setup
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第一个节点的设置
- en: 'First, `geth` needs to be started on the first node using the following command:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，需要使用以下命令在第一个节点上启动`geth`：
- en: '[PRE4]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![First node setup](img/image_11_011.jpg)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![第一个节点设置](img/image_11_011.jpg)'
- en: geth on first node
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个节点上的`geth`
- en: Once `geth` is started up it should be kept running and another `geth` instance
    should be started from the Raspberry Pi node.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦`geth`启动起来，它应该得持续运行，而且来自树莓派节点的另一个`geth`实例应该被启动。
- en: Raspberry Pi node setup
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 树莓派节点设置
- en: 'On Raspberry Pi, the following command is required to be run in order to start
    `geth` and sync it with other nodes (in this case only one node). The following
    is the command:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在树莓派上，需要运行以下命令才能启动`geth`并与其他节点同步（在本例中只有一个节点）。命令如下：
- en: '[PRE5]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: This should produce the output similar to the one shown in the following screenshot.
    When the output contains the row displaying **Block synchronization started**
    it means that the node has connected successfully to its peer.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该产生与以下截图中显示的类似的输出。当输出包含显示**块同步已开始**的行时，这意味着节点已成功连接到其对等节点。
- en: '![Raspberry Pi node setup](img/image_11_012.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![树莓派节点设置](img/image_11_012.jpg)'
- en: geth on the Raspberry Pi.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派上的`geth`。
- en: 'This can be further verified by running commands in the `geth` console on both
    nodes as shown in the following screenshot. `geth` can be attached by simply running
    the command on the Raspberry Pi:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过在两个节点上的`geth`控制台上运行命令来进一步验证这一点，如下截图所示。仅需在树莓派上运行以下命令就可以连接`geth`：
- en: '[PRE6]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![Raspberry Pi node setup](img/image_11_013.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![树莓派节点设置](img/image_11_013.jpg)'
- en: geth console admin peers command running on Raspberry Pi
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 运行在树莓派上的`geth`控制台管理员peers命令
- en: 'Similarly `geth` can be attached to by running the command below on the first
    node:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，可以通过在第一个节点上运行以下命令来附加到`geth`：
- en: '[PRE7]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Once the console is available `admin.peers` can be run to reveal the details
    about other connected nodes as shown in the following screenshot:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦控制台可用，`admin.peers` 可以运行以显示关于其他连接节点的详细信息，如以下截图所示：
- en: '![Raspberry Pi node setup](img/image_11_014.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![树莓派节点设置](img/image_11_014.jpg)'
- en: geth console admin peers command running on the other peer
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在另一节点上运行 `geth console admin peers` 命令
- en: 'Once both nodes are up-and-running further prerequisites can be installed in
    order to set up the experiment. Installation of Node.js and the relevant JavaScript
    libraries is required. The required libraries and dependencies are listed below.
    First Node.js and npm need to be updated on the Raspberry Pi Raspbian operating
    system. For this the following steps can be followed:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦两个节点都正常运行，可以安装更多的先决条件以设置实验。需要安装 Node.js 和相关的 JavaScript 库。以下列出了所需的库和依赖项。首先需要在树莓派的
    Raspbian 操作系统上更新 Node.js 和 npm。可以按照以下步骤进行：
- en: 'Install latest Node.js on the Raspberry Pi using the following command:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令在树莓派上安装最新的 Node.js：
- en: '[PRE8]'
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'This should display output similar to the following. The output is quite large
    therefore only the top part of the output is shown in the following screenshot:'
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这应该显示类似于以下内容的输出。由于输出相当大，因此以下截图仅显示了输出的顶部部分：
- en: '![Raspberry Pi node setup](img/image_11_015.jpg)'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![树莓派节点设置](img/image_11_015.jpg)'
- en: Node.js installation
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Node.js 安装
- en: 'Run the update via `apt-get`:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过 `apt-get` 运行更新：
- en: '[PRE9]'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Verification can be performed by running the following command to ensure that
    the correct versions of Node.js and `npm` are installed, as shown in the following
    screenshot below:'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 可以通过运行以下命令来执行验证，以确保正确版本的 Node.js 和`npm`已安装，如下面的截图所示：
- en: '![Raspberry Pi node setup](img/image_11_016.jpg)'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![树莓派节点设置](img/image_11_016.jpg)'
- en: npm and node installation verification
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: npm 和 node 安装验证
- en: It should be noted that these version are not a necessity; any latest version
    of `npm` and `node` will work. The examples in this chapter makes use of npm 4.0.5
    and node v7.4.0.
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 应该注意，这些版本不是必需的；任何最新版本的`npm`和`node`都可以工作。本章的示例使用的是 npm 4.0.5 和 node v7.4.0。
- en: Install Ethereum web3 npm, which is required to enable JavaScript code to access
    the blockchain:![Raspberry Pi node setup](img/image_11_017.jpg)
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装以太坊 web3 npm，这是为了让 JavaScript 代码能够访问区块链：![树莓派节点设置](img/image_11_017.jpg)
- en: npm install web3
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: npm install web3
- en: Similarly, `npm install onoff` can be installed, which is required in order
    to communicate with the Raspberry Pi and control GPIO:![Raspberry Pi node setup](img/image_11_018.jpg)
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 同样地，可以安装`npm install onoff`，这是与树莓派通信和控制 GPIO 所必需的：![树莓派节点设置](img/image_11_018.jpg)
- en: onoff installation
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: onoff 安装
- en: When all prerequisites are installed, hardware setup can be performed. For this
    purpose a simple circuit is built using a breadboard and a few electronic components.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 当所有先决条件都安装好后，可以进行硬件设置。为此，使用面包板和一些电子元件建立一个简单的电路。
- en: 'These components are listed as follows:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 这些组件列如下：
- en: '**LED**: The abbreviation of **Light Emitting Diode**, this can be used as
    visual indication for an event.'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**LED**：**发光二极管**的缩写，可以用作事件的可视指示。'
- en: '**Resistor**: A 330 ohm component is required which provides resistance to
    passing current based on its rating. It is not necessary to understand the theory
    behind it for this experiment; any standard electronics engineering text covers
    all these topics in detail.'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**电阻器**：需要一个 330 欧姆的元件，根据其额定值提供对通过电流的阻抗。不需要理解背后的理论，这个实验涵盖了所有这些主题的标准电子工程文本详细讨论。'
- en: '**Breadboard**: This provides a means of building an electronic circuit without
    requiring soldering.'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**面包板**：这提供了一种在不需要焊接的情况下构建电子电路的方法。'
- en: '**T-Shaped cobbler**: This is inserted on the breadboard as shown in the figure
    below and provides a labeled view of all **GPIO** (**General Purpose I/O**) pins
    for the Raspberry Pi.'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**T 形布线板**：如下图所示插入到面包板上，并为树莓派的所有**GPIO**（**通用输入/输出**）引脚提供标记视图。'
- en: '**Ribbon cable connector**: This is simply used to provide connectivity between
    the Raspberry Pi and the breadboard via GPIO. All these components are shown in
    the following image:![Raspberry Pi node setup](img/image_11_019.jpg)'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**平坦电缆连接器**：简单地用于通过 GPIO 在树莓派和面包板之间提供连接。所有这些组件都显示在以下图像中：![树莓派节点设置](img/image_11_019.jpg)'
- en: Required components
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 所需组件
- en: Circuit
  id: totrans-114
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 电路
- en: As shown in the following image, the positive leg (long leg) of the LED is connected
    to pin number 21 of the GPIO and the negative (short leg) is connected to the
    resistor, which is then connected to the **ground** (**GND**) pin of the GPIO.
    Once the connections are set up the ribbon cable can be used to simply connect
    to the GPIO connector on the Raspberry Pi.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 如下图所示，LED 的正极（长腿）连接到 GPIO 的 21 号引脚，而负极（短腿）连接到电阻，然后连接到 GPIO 的**地**（**GND**）引脚。一旦连接设置好，可以使用平排线简单地连接到树莓派上的
    GPIO 连接器。
- en: '![Circuit](img/image_11_020.jpg)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![电路](img/image_11_020.jpg)'
- en: Connections for components on the breadboard
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 连接面包板上的元件
- en: Once the connections are set up correctly and the Raspberry Pi has been updated
    with the appropriate libraries and geth, the next step is to develop a simple
    smart contract that expects a value. If the value provided to it is not what it
    expects it does not trigger an event; otherwise, if the value passed matches the
    correct value, the event triggers which can be read by the client JavaScript programme
    running via Node.js. Of course, the solidity contract can be very complex and
    can also deal with the ether sent to it and if the amount of ether is equal to
    the required amount then the event can trigger; but in this example the aim is
    to demonstrate the usage of smart contracts to trigger events that can then be
    read by JavaScript programmes running on Node.js, which then in turn can trigger
    actions on IoT devices using various libraries.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦连接正确设置并且树莓派已更新到适当的库和 geth，下一步是开发一个简单的智能合约，该合约期望一个值。如果提供给它的值不是它所期望的，它不会触发事件；否则，如果传递的值与正确值匹配，则触发事件，客户端
    JavaScript 程序可以通过 Node.js 运行，可以读取事件。当然，Solidity 合约可以非常复杂，并且还可以处理发送给它的以太币，如果以太币的数量等于所需数量，则事件可以触发；但在这个示例中，目的是演示使用智能合约来触发可以由运行在
    Node.js 上的 JavaScript 程序读取的事件，然后进一步可以使用各种库触发 IoT 设备上的操作。
- en: 'The smart contract source code is shown as follows:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 智能合约源代码如下所示：
- en: '![Circuit](img/image_11_021.jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![电路](img/image_11_021.jpg)'
- en: Solidity code for simple IOT
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 简单 IOT 的 Solidity 代码
- en: 'The solidity online compiler can be used to run and test this contract. The **Application
    Binary Interface** (**ABI**) required for interacting with the contract is also
    available in the **Interface** field as shown in the following screenshot:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用 Solidity 在线编译器运行和测试该合约。与该合约交互所需的**应用二进制接口**（**ABI**）也可在以下截图中的**接口**字段中找到：
- en: '![Circuit](img/image_11_022.jpg)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![电路](img/image_11_022.jpg)'
- en: Solidity online compiler
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: Solidity 在线编译器
- en: 'There are two methods by which Raspberry node can connect to the private blockchain
    via the web3 interface. The first is where the raspberry device is running its
    own geth and maintains its own ledger but with resource-constrained devices it
    is not possible to run a full `geth` node, or even a light node in a few circumstances.
    In that case, the web3 provider can be initialized to connect to the appropriate
    RPC channel. This will be shown later in the client JavaScript Node.js programme.
    A comparison of both of these approaches is shown in the following diagram:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓节点可以通过 web3 接口连接到私有区块链的两种方法。第一种是树莓设备运行自己的 geth 并维护自己的账本，但对于资源受限的设备来说，很难运行完整的`geth`节点，甚至在某些情况下运行轻量级节点也不可能。在这种情况下，可以初始化
    web3 提供程序以连接到适当的 RPC 通道。这将在后面的客户端 JavaScript Node.js 程序中显示。这两种方法的比较如下图所示：
- en: '![Circuit](img/B05975_11_23.jpg)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![电路](img/B05975_11_23.jpg)'
- en: Application architecture of room rent IoT application (IoT device with local
    ledger)
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 房租 IoT 应用程序的应用架构（带本地账本的 IoT 设备）
- en: '![Circuit](img/B05975_11_24.jpg)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![电路](img/B05975_11_24.jpg)'
- en: Application architecture of room rent IoT application (IoT device without local
    ledger)
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 房租 IoT 应用程序的应用架构（没有本地账本的 IoT 设备）
- en: There are obvious security concerns which arise from exposing RPC interfaces
    publicly, therefore it is recommended that this option is used only on private
    networks and if required to be used on public networks appropriate security measures
    are put in place, such as allowing only the known IP addresses to connect to the
    geth RPC interface. This can be achieved by a combination of disabling peer discovery
    mechanisms and HTTP-RPC server listening interfaces. More information about this
    can be found in geth help. The traditional network security measures such as firewalls,
    **Transport Layer Security** (**TLS**) and certificates can also be used, but
    have not been discussed in this example.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，暴露 RPC 接口会带来安全问题，因此建议仅在私有网络上使用此选项，如果需要在公共网络上使用，则需采取适当的安全措施，例如仅允许已知 IP 地址连接到
    geth RPC 接口。这可以通过禁用对等发现机制和 HTTP-RPC 服务器监听接口的组合来实现。有关此的更多信息，请参阅 geth 帮助文档。传统的网络安全措施，如防火墙、**传输层安全性**（**TLS**）和证书也可以使用，但在本示例中未讨论。
- en: 'Now Truffle can be used to deploy the contract on the private network ID 786
    to which at this point the Raspberry Pi is connected. A truffle deploy can be
    performed simply by using the following shown command; it is assumed that `truffle
    init` and other preliminaries discussed in [Chapter 8](ch08.html "Chapter 8. Ethereum
    Development"), *Ethereum Development *have already been performed:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，Truffle 可以用于部署合约到私有网络 ID 786，该网络此时连接的是树莓派。可以通过以下显示的命令简单执行 truffle 部署；假设已经执行了
    `truffle init` 和其他章节 8 讨论的前提条件，《以太坊开发》：
- en: '[PRE10]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'It should produce the output similar to the following screenshot:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 它应该会产生类似以下屏幕截图的输出：
- en: '![Circuit](img/image_11_025.jpg)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![电路](img/image_11_025.jpg)'
- en: Truffle deploy
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: Truffle 部署
- en: 'Once the contract is deployed correctly, JavaScript code can be developed that
    will connect to the blockchain via web3, listen for the events from the smart
    contract in the blockchain, and turn the LED on via the Raspberry Pi. The JavaScript
    code is shown as follows:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦合约正确部署，就可以开发 JavaScript 代码，通过 web3 连接到区块链，在区块链上监听智能合约的事件，并通过树莓派将 LED 打开。以下是
    JavaScript 代码的示例：
- en: '[PRE11]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Note that in the example above the contract address `0x151ce17c28b20ce554e0d944deb30e0447fbf78d`
    is specific to the deployment and it will be different when readers run this example.
    Simply change the address in the file to what the readers see after deploying
    the contract. This JavaScript code can be placed in a file on the Raspberry PI,
    for example, `index.js`. It can be run by using the following command:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在上面的示例中，合约地址 `0x151ce17c28b20ce554e0d944deb30e0447fbf78d` 是特定于部署的，当读者运行此示例时将会不同。只需将文件中的地址更改为读者在部署合约后看到的地址。此
    JavaScript 代码可以放置在树莓派上的一个文件中，例如 `index.js`。可以使用以下命令运行它：
- en: '[PRE12]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: This will start the programme, which will run on Node.js and listen for events
    from the smart contract. Once the program is running correctly, the smart contract
    can be invoked by using the Truffle console as shown in the following screenshot.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 这将启动程序，该程序将在 Node.js 上运行，并监听来自智能合约的事件。一旦程序正确运行，就可以使用 Truffle 控制台调用智能合约，如下面的屏幕截图所示。
- en: In this case the `.getRent` function is called with parameter 10, which is the
    expected value.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，调用 `.getRent` 函数，并传递参数 10，这是预期的值。
- en: '![Circuit](img/image_11_026.jpg)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![电路](img/image_11_026.jpg)'
- en: Interaction with the contract
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 与合约的交互
- en: 'After the contract is mined, `roomRented` will be triggered, which will turn
    the LED on. In this example it is a simple LED but it can be any physical device
    such as a room lock that can be controlled via an actuator. If all works well,
    the LED will be turned on as a result of the smart contract function invocation
    as shown in the following image:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在合约被挖出后，将触发 `roomRented`，这将打开 LED。在此示例中，它是一个简单的 LED，但可以是任何物理设备，例如通过执行器控制的房间锁。如果一切正常，LED
    将因智能合约函数调用而打开，如下图所示：
- en: '![Circuit](img/image_11_027.jpg)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![电路](img/image_11_027.jpg)'
- en: Raspberry Pi with LED control
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 带有 LED 控制的树莓派
- en: As demonstrated in the preceding example, a private network of IoT devices can
    be built that runs a geth client on each of the nodes and can listen for events
    from smart contracts and trigger an action accordingly. The example shown is simple
    on purpose but demonstrates the underlying principles of an Ethereum network that
    can be built using IoT devices along with smart contract-driven control of the
    physical devices.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 正如前面的例子所示，可以建立一组运行每个节点上的geth客户端并监听来自智能合约的事件并相应触发动作的物联网设备私有网络。此目的是简化示例，但展示了利用物联网设备和智能合约驱动的物理设备控制所需的基本原则。
- en: In the next section, other applications of the blockchain technology in government,
    finance, and health will be discussed.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一部分中，将讨论区块链技术在政府、金融和医疗领域的其他应用。
- en: Government
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 政府
- en: There are various applications of blockchain being researched currently that
    can support government functions and take the current model of e-government to
    the next level. First, in this section some background for e-government will be
    provided and then a few use cases such as e-voting, homeland security (border
    control), and electronic IDs (citizen ID cards) will be discussed.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 目前正在研究各种支持政府职能并将当前的电子政务模式提升到新水平的区块链应用。首先，在本节中将提供电子政务的一些背景，然后将讨论一些用例，如电子投票、国土安全（边境控制）和电子身份证（公民身份证）。
- en: E-government or electronic government is a paradigm where information and communication
    technology is used to deliver public services to citizens. The concept is not
    new and has been implemented in various countries around the world but with blockchain
    a new avenue of exploration has opened up. Many governments are researching the
    possibility of using blockchain technology for managing and delivering public
    services. Transparency, auditability, and integrity are attributes of blockchain
    that can go a long way in effectively managing various government functions.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 电子政务或电子政府是一种利用信息和通信技术向公民提供公共服务的范式。这个概念并不新鲜，在世界各地的许多国家都有实施，但是区块链开辟了一个新的探索途径。许多政府正在研究利用区块链技术来管理和提供公共服务的可能性。区块链的透明性、可审计性和完整性是管理各种政府职能的有效属性。
- en: Border control
  id: totrans-152
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 边境控制
- en: Automated border control systems have been in use for decades now in order to
    thwart illegal entry into countries and prevent terrorism and human trafficking.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 自动边境控制系统已经使用了几十年，旨在阻止非法进入国家，并防止恐怖主义和人口贩运。
- en: Machine-readable travel documents and specifically biometric passports have
    paved the way for automated border control; however current systems are limited
    to a certain extent and blockchain technology can provide solutions. A **Machine-readable
    Travel Document** (**MRTD**) standard is defined in document ICAO 9303 by the
    **International Civil Aviation Organization** (**ICAO**) and has been implemented
    by many countries around the world.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 机器可读旅行文件，尤其是生物识别护照，为自动边境控制铺平了道路；然而，目前的系统在一定程度上受限，而区块链技术可以提供解决方案。国际民航组织（ICAO）的文件ICAO
    9303中定义了一个**机器可读旅行文件**（**MRTD**）标准，并已由世界许多国家实施。
- en: Each passport contains various security and identity attributes that can be
    used to identify the owner of the passport and also circumvent attempts at tampering
    with the passports. These include biometric features such as retina scan, finger
    prints, facial recognition, and standard ICAO specified features including **Machine
    Readable Zone** (**MRZ**) and other text attributes that are visible on the first
    page of the passport.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 每个护照都包含各种安全和身份属性，可用于识别护照所有者，也可以防范篡改护照的企图。这些包括生物特征，如视网膜扫描、指纹、面部识别，以及标准的ICAO指定特征包括**机器可读区**（**MRZ**）和护照第一页可见的其他文本属性。
- en: One key issue with current border control systems is centralization whereby
    the systems are controlled by a single entity and the fact that data is not readily
    shared between law enforcement agencies. This makes it difficult to track suspected
    individuals. Another issue is related to the immediate implementation of blacklisting
    of a travel document, for example, when there is an immediate need to track and
    control suspected travel documents. Currently, there is no mechanism available
    to immediately blacklist or revoke a suspected passport.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 当前边境控制系统的一个关键问题是集中化，即系统由单一实体控制，并且数据不容易在执法机构之间共享。这使得跟踪疑似个体变得困难。另一个问题与立即实施旅行文件黑名单相关，例如，在需要立即跟踪和控制疑似旅行文件时。目前，没有机制可以立即将疑似护照列入黑名单或吊销。
- en: Blockchain can provide a solution to this problem by maintaining a blacklist
    in a smart contract which can be updated as required and any changes will be immediately
    visible to all agencies and border control points thus enabling immediate control
    over the movement of a suspected travel document. It could be argued that traditional
    mechanisms like PKIs and P2P networks can also be used for this purpose but they
    do not provide the benefits that a blockchain can provide. With blockchain the
    whole system can be simplified without the requirement of complex networks and
    PKI setups which will also result in cost reduction. Moreover blockchain based
    systems will provide cryptographically guaranteed immutability which helps with
    auditing and discourages any fraudulent activity.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链可以通过在智能合约中维护黑名单来解决这个问题，该黑名单可以根据需要进行更新，任何更改都将立即对所有机构和边境控制点可见，从而实现对疑似旅行文件移动的即时控制。可以提出这样的论点，即传统机制如PKI和P2P网络也可以用于此目的，但它们不提供区块链可以提供的好处。使用区块链，整个系统可以简化，无需复杂的网络和PKI设置，这也将导致成本降低。此外，基于区块链的系统将提供加密保证的不可变性，有助于审计，并且会阻止任何欺诈活动。
- en: The full database of all travel documents perhaps cannot be stored on the blockchain
    currently due to scalability issues but a backend distributed database such as
    BigChainDB, IPFS, or Swarm can be used for that purpose. In this case, a hash
    of the travel document with the biometric ID of an individual can be stored in
    a simple smart contract and a hash of the document can then be used to refer to
    the detailed data available on the distributed file system such as IPFS. This
    way, when a travel document is blacklisted anywhere on the network, that information
    will be available immediately with the cryptographic guarantee of its authenticity
    and integrity throughout the distributed ledger. This functionality can also provide
    effective support in anti-terrorism activities, thus playing a vital role in the
    homeland security function of a government.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 由于可扩展性问题，当前可能无法将所有旅行文件的完整数据库存储在区块链上，但是后端分布式数据库，如BigChainDB、IPFS或Swarm可以用于此目的。在这种情况下，可以将个人的旅行文件哈希与生物特征识别ID存储在简单的智能合约中，然后可以使用文档的哈希来引用分布式文件系统（例如IPFS）中可用的详细数据。这样，当任何地方的旅行文件被列入黑名单时，该信息将立即可用，具有其在整个分布式分类帐中的真实性和完整性的加密保证。这种功能也可以在反恐活动中提供有效支持，从而在政府的国土安全职能中发挥重要作用。
- en: A simple contract in solidity can have an array defined for storing identities
    and associated biometric records. This array can be used to store the identifying
    information about a passport. The identity can be a hash of **Machine readable
    zone** (**MRZ**) of the passport or travel document concatenated with the biometric
    record from the RFID chip. A simple boolean field can be used to identify blacklisted
    passports. Once this initial check passes, further detailed biometric verification
    can be performed by traditional systems and eventually when a decision is made
    regarding the entry of the passport holder that decision can be propagated back
    to the blockchain, thus enabling all participants on the network to immediately
    share the outcome of the decision.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: Solidity中的一个简单合约可以定义一个数组，用于存储身份和相关的生物识别记录。该数组可用于存储有关护照的识别信息。身份可以是护照或旅行文件的**机器可读区域**（**MRZ**）的哈希，与RFID芯片中的生物识别记录连接而成。一个简单的布尔字段可以用于识别被列入黑名单的护照。一旦通过了这个初始检查，传统系统可以执行进一步的详细生物识别验证，最终当关于护照持有者入境的决定被做出时，该决定可以传播回区块链，从而使网络上的所有参与者可以立即分享决定的结果。
- en: A high-level approach to building a blockchain-based border control system can
    be visualized as shown in the following figure. In this scenario, the passport
    is presented for scanning to an RFID and page scanner which reads the data page
    and extracts machine-readable information along with a hash of the biometric data
    stored in the RFID chip. At this stage, a live photo and retina scan of the passport
    holder is also taken. This information is then passed on to the blockchain where
    a smart contract is responsible for verifying the legitimacy of the travel document
    by first checking its own list of blacklisted passports and then requesting more
    data from the backend IPFS database for comparison. Note that the biometric data
    such as photo or retina scan is not stored on the blockchain, instead only a reference
    to this data in the backend (IPFS or BigChainDB) is stored in the blockchain.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 构建基于区块链的边境控制系统的高级方法可以如下图所示进行可视化。 在这种情况下，护照被呈现给一个 RFID 和页面扫描器进行扫描，该扫描器读取数据页并提取机器可读信息以及存储在
    RFID 芯片中的生物特征数据的哈希。 在这个阶段，还会拍摄护照持有者的实时照片和视网膜扫描。 然后，将这些信息传递给区块链，智能合约负责验证旅行文件的合法性，首先检查自己的黑名单护照列表，然后从后端
    IPFS 数据库请求更多数据进行比较。 请注意，诸如照片或视网膜扫描之类的生物特征数据不存储在区块链上，而是只存储在区块链后端（IPFS 或 BigChainDB）中对此数据的引用。
- en: If the data from the presented passport matches with what is held in the IPFS
    as files or in BigChainDB and also passes the smart contract logical check then
    the border gate can be opened.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 如果呈现护照的数据与 IPFS 中的文件或 BigChainDB 中的数据匹配，并且通过智能合约的逻辑检查，则边境门可以打开。
- en: '![Border control](img/B05975_11_28.jpg)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![边境控制](img/B05975_11_28.jpg)'
- en: Automated border control using blockchain
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 使用区块链的自动边境控制
- en: After verification this information is propagated throughout the blockchain
    and is instantly available to all participants on the border control blockchain.
    These participants can be a worldwide consortium of homeland security departments
    of various nations.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 在验证后，此信息将传播到整个区块链，并立即提供给边境控制区块链上的所有参与者。 这些参与者可以是各国国土安全部门的全球财团。
- en: Voting
  id: totrans-165
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 投票
- en: Voting in any government is a key function and allows citizens to participate
    in the democratic election process. Whilst voting has evolved over time into a
    much more mature and secure process, it still has limitations that need to be
    addressed in order to achieve a desired level of maturity. Usually, the limitations
    in current voting systems revolve around fraud, weaknesses in operational processes,
    and especially transparency. Over the years, secure voting mechanisms have been
    built which make use of specialized voting machines that promised security and
    privacy but they still had vulnerabilities that could be exploited in order to
    subvert the security mechanisms of those machines. This can lead to serious implications
    for the whole voting process and can result in mistrust in the government by the
    public.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何政府中投票是一个关键功能，允许公民参与民主选举过程。 虽然投票随着时间的推移逐渐发展成为一个更加成熟和安全的过程，但仍然存在需要解决的限制，以达到期望的成熟水平。
    通常，当前投票系统的限制围绕着欺诈、运营流程中的弱点以及特别是透明度展开。 多年来，已建立了安全投票机制，这些机制利用专门的投票机器承诺提供安全和隐私，但它们仍然存在漏洞，可以被利用来破坏这些机器的安全机制。
    这可能会对整个投票过程产生严重的影响，并导致公众对政府的不信任。
- en: Blockchain-based voting systems can resolve these issues by introducing end-to-end
    security and transparency in the process. Security is provided in the form of
    integrity and authenticity of votes by using public key cryptography which comes
    as standard in a blockchain. Moreover, immutability guaranteed by blockchain ensures
    that votes cast once cannot be cast again. This can be achieved through a combination
    of biometric features and a smart contract maintaining a list of votes already
    cast. For example a smart contract can maintain a list of already casted votes
    with the biometric ID (for example a fingerprint) and can use that to detect and
    prevent double casting. Secondly, zero knowledge proofs can also be used on the
    blockchain to protect voters' privacy on the blockchain.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
- en: Citizen identification (ID cards)
  id: totrans-168
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Electronic IDs or national ID cards are issued by various countries around the
    world at present. These cards are secure and possess many security features that
    thwart duplication or tampering attempts. However, with the advent of blockchain
    technology there are several improvements that can be made to this process.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
- en: Digital identity is not only limited to just government-issued ID cards, it
    is a concept that is applicable in online social networks and forums too. There
    can be multiple identities used for different purposes. A blockchain-based online
    digital identity allows control over personal information sharing. Users can see
    who used their data and for what purpose and can control access to it. This is
    not possible with the current infrastructures which are centrally controlled.
    The key benefit is that a single identity issued by the government can be used
    easily and in a transparent manner for multiple services via a single government
    blockchain. In this case, the blockchain serves as a platform where government
    is providing various services such as pensions, taxation, or benefits and a single
    ID is being used for accessing all these services. Blockchain in this case provides
    an immutable record of every change and transaction made by a digital ID, thus
    ensuring integrity and transparency of the system. Also citizens can notarize
    birth certificates, marriages, deeds, and many other documents on the blockchain
    tied with their digital ID as a proof of existence.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
- en: Currently, there are successful implementations of identity schemes in various
    countries that work well and there is an argument that perhaps blockchain is not
    really required in identity management systems. Although, there are several benefits
    such as privacy and control over the usage of identity information but due to
    the current immaturity of blockchain technology perhaps it is not ready for use
    in real-world identity systems. However, research is being carried out by various
    governments to explore the usage of blockchain for identity management.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
- en: Moreover, laws such as the right to be forgotten can be quite difficult to incorporate
    in to blockchain due to its immutable nature.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
- en: Miscellaneous
  id: totrans-173
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 杂项
- en: Other government functions where blockchain technology can be implemented in
    order to improve cost and efficiency include collection of taxes, benefits management
    and disbursement, land ownership record management, life event registration (marriages,
    births), motor vehicle registration, and licenses. This is not an exhaustive list
    and over time many functions and processes of a government can be adapted to a
    blockchain-based model. The key benefits of blockchain such as immutability, transparency
    and decentralization can help to bring improvements to most of the traditional
    government systems.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 其他政府职能领域可以实施区块链技术以提高成本和效率的包括税收征收、福利管理和发放、土地所有权记录管理、生活事件登记（婚姻、出生）、机动车登记和许可证等。这并不是一个详尽的清单，随着时间的推移，政府的许多职能和流程都可以适应基于区块链的模式。区块链的关键优势，如不可变性、透明度和去中心化，可以帮助改进大多数传统政府系统。
- en: Health
  id: totrans-175
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 健康
- en: The health industry has been identified as another major industry that can benefit
    by adapting blockchain technology. Blockchain provides an immutable, auditable,
    and transparent system that traditional P2P networks cannot. In addition blockchain
    provides a cost-effective, simpler infrastructure as compared to traditional complex
    PKI networks. In healthcare, major issues such as privacy compromises, data breaches,
    high costs, and fraud can arise from lack of interoperability, overly complex
    processes, transparency, auditability, and control. Another burning issue is counterfeit
    medicines; especially in developing countries, this is a major cause of concern.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 健康产业被确定为另一个可以通过采用区块链技术获益的主要行业。区块链提供了一个传统P2P网络无法提供的不可变、可审计和透明的系统。此外，与传统的复杂PKI网络相比，区块链提供了一种经济、简单的基础架构。在医疗保健领域，由于缺乏互操作性、过度复杂的流程、透明度、可审计性和控制，可能会出现隐私泄漏、数据泄露、高成本和欺诈等主要问题。另一个紧迫的问题是假药；特别是在发展中国家，这是一个主要的关注点。
- en: With the adaptability of blockchain in the health sector, several benefits can
    be realized, ranging from cost saving, increased trust, faster processing of claims,
    high availability, no operational errors due to complexity in the operational
    procedures, and preventing the distribution of counterfeit medicines.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将区块链应用于健康领域，可以实现多种好处，从节省成本、增加信任、更快地处理索赔、高可用性、操作程序复杂性导致的没有操作错误，到防止假药的分发。
- en: From another angle, blockchains that are providing a digital currency as an
    incentive for mining can be used to provide processing power to solve scientific
    problems that can help to find cures for certain diseases. Examples include FoldingCoin,
    which rewards its miners with FLDC tokens for sharing their computer's processing
    power for solving scientific problems that require particularly large calculations.
    FoldingCoin is available at [http://foldingcoin.net/](http://foldingcoin.net/).
    Another similar project is called CureCoin which is available at [https://www.curecoin.net/](https://www.curecoin.net/).
    It is yet to be seen that how successful these projects will be in achieving their
    goals but the idea is very promising.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 从另一个角度来看，提供数字货币作为挖矿激励的区块链可以用来提供处理能力，以解决可以帮助找到某些疾病治愈方法的科学问题。例如，FoldingCoin奖励其矿工使用他们计算机的处理能力来解决需要特别大量计算的科学问题。FoldingCoin可在[http://foldingcoin.net/](http://foldingcoin.net/)获得。另一个类似的项目是CureCoin，可在[https://www.curecoin.net/](https://www.curecoin.net/)获得。这些项目能否成功实现目标尚待观察，但这个想法非常有前途。
- en: Finance
  id: totrans-179
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 金融
- en: Blockchain has many applications in the finance industry. Blockchain in finance
    is the hottest topic in the industry currently and major banks and financial organizations
    are researching to find ways to adapt blockchain technology especially due to
    its highly-desired potential to cost-save.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链在金融领域有许多应用。金融领域的区块链是目前行业中最热门的话题，主要银行和金融组织正在研究如何适应区块链技术，特别是由于其极具潜力的节省成本的能力。
- en: Insurance
  id: totrans-181
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 保险
- en: In the insurance industry, blockchain technology can help to stop fraudulent
    claims, increase the speed of claim processing, and enable transparency. Imagine
    a shared ledger between all insurers that can provide a quick and efficient mechanism
    for handling inter-company claims. Also with the convergence of IoT and blockchain,
    an ecosystem of smart devices can be imagined where all these things are able
    to negotiate and manage their own insurance policies controlled by smart contracts
    on the blockchain.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 在保险行业中，区块链技术可以帮助阻止欺诈索赔，增加索赔处理速度，并实现透明度。想象一下，所有保险公司之间共享的账本可以为处理公司间索赔提供快速高效的机制。此外，随着物联网和区块链的融合，可以想象出一种智能设备生态系统，其中所有这些设备都能够通过区块链上的智能合约进行协商和管理其自身的保险政策。
- en: Blockchain can reduce the overall cost and effort required to process claims.
    Claims can be automatically verified and paid via smart contracts and the associated
    identity of the insurance policy holder. For example a smart contract with the
    help of Oracles and possibly IoT can make sure that when the accident occurred,
    it can record related telemetry data and based on this information can release
    payment. It can also withhold payment if the smart contract after evaluating conditions
    of payment concludes that payment should not be released. For example in a scenario
    where the vehicle was not repaired by an authorized workshop or was used outside
    a designated area and so on and so forth. There can be many conditions that a
    smart contract can evaluate to process claims and choice of these rules depend
    on the insurer, but the general idea is that smart contracts in combination with
    IoT and Oracles can automate the entire vehicle insurance industry.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链可以减少处理索赔所需的总体成本和工作量。索赔可以通过智能合约自动验证和支付，并与保险单持有人的身份相关联。例如，通过智能合约和可能的物联网的帮助，可以确保发生事故时可以记录相关的遥测数据，并根据这些信息释放付款。如果智能合约在评估付款条件后得出付款条件不应该被释放的结论，还可以暂停付款。例如，在车辆在未经授权的车间维修或在指定区域外使用的情况下等等。智能合约可以评估许多条件来处理索赔，而这些规则的选择取决于保险人，但总体想法是智能合约与物联网和Oracles的结合可以自动化整个车辆保险行业。
- en: Several start-ups such as Dynamis have proposed smart contract-based peer-to-peer
    insurance platforms that run on Ethereum blockchain. This is initially proposed
    to be used for unemployment insurance and does not require underwriters in the
    model. It is available at [http://dynamisapp.com/](http://dynamisapp.com/).
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 如Dynamis等多家初创公司已提出基于以太坊区块链的智能合约对等保险平台。最初计划用于失业保险，并不需要模型下的承保人。可在[http://dynamisapp.com/](http://dynamisapp.com/)上使用。
- en: Post trade settlement
  id: totrans-185
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 后期交易结算
- en: This is the most sought-after application of blockchain technology. Currently,
    many financial institutions are exploring the possibility of using blockchain
    technology to simplify, automate, and speed up the costly and time-consuming post-trade
    settlement process.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 这是区块链技术最受追捧的应用。目前，许多金融机构正在探索使用区块链技术简化、自动化和加快昂贵和耗时的后期交易结算流程的可能性。
- en: 'In order to understand the problem better, the trade lifecycle is described
    briefly. A trade lifecycle contains three steps: execution, clearing, and settlement.
    Execution is concerned with the commitment of trading between two parties and
    can be entered into the system via front office order management terminals or
    exchanges. Clearing is the next step whereby the trade is matched between the
    seller and buyer based on certain attributes such as price and quantity. At this
    stage, accounts that are involved in payment are also identified. Finally, settlement
    is where eventually the security is exchanged for payment between the buyer and
    seller.'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地理解问题，简要描述了交易生命周期。交易生命周期包含三个步骤：执行、清算和结算。执行涉及两方之间的交易承诺，可以通过前台订单管理终端或交易所输入系统。清算是下一步，其中交易根据价格和数量等某些属性在卖方和买方之间匹配。在此阶段，还确定涉及支付的帐户。最后，结算是最终买方和卖方之间交换安全性以换取支付的地方。
- en: In the traditional trade lifecycle model, a central clearing house is required
    in order to facilitate trading between parties which bears the credit risk of
    both parties. The current scheme is somewhat complicated, whereby a seller and
    buyer have to take a complex route in order to trade with each other. This comprises
    of various firms, brokers, clearing houses, and custodians but with blockchain
    a single distributed ledger with appropriate smart contracts can simplify this
    whole process and can enable buyers and sellers to talk directly to each other.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 在传统的交易生命周期模型中，需要一个中央清算所来促进交易双方之间的交易，承担双方的信用风险。当前的方案有些复杂，卖方和买方必须走一条复杂的路线才能进行交易。这包括各种公司、经纪人、结算所和保管人，但是通过区块链，一个具有适当智能合约的单一分布式分类账可以简化整个流程，并使买方和卖方可以直接交流。
- en: Particularly, the post trade settlement process takes two to three days and
    has dependency on central clearing houses and reconciliation systems. With the
    shared ledger approach, all participants on the blockchain can immediately see
    a single version of truth regarding the state of the trade. Moreover, peer-to-peer
    settlement is possible, which results in the reduction of complexity, cost, risk,
    and the time it takes to settle the trade. Finally, intermediaries can be totally
    eliminated by making use of appropriate smart contracts on the blockchain.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 特别是，后期交易结算流程需要两到三天，并且依赖于中央结算所和对账系统。通过共享账本的方法，区块链上的所有参与者可以立即看到有关交易状态的真实版本。此外，点对点结算是可能的，这将减少复杂性、成本、风险和结算交易所需的时间。最后，通过在区块链上使用适当的智能合约，中介可以完全被淘汰。
- en: Financial crime prevention
  id: totrans-190
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 金融犯罪预防
- en: '**Know your customer** (**KYC**) and **Anti Money laundering** (**AML**) are
    the key enablers for the prevention of financial crime. In the case of KYC, currently
    each institution maintains their own copy of customer data and performs verification
    via centralized data providers. This can be a time-consuming process and can result
    in delays in on-boarding a new client. Blockchain can provide a solution to this
    problem by securely sharing a distributed ledger between all financial institutions
    that contains verified and accurate identities of customers. This distributed
    ledger can only be updated by consensus between the participants thus providing
    transparency and auditability. This can not only reduce costs but also enable
    meeting regulatory and compliance requirements in a better and consistent manner.'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: '**了解您的客户**（**KYC**）和**反洗钱**（**AML**）是防止金融犯罪的关键。在KYC的情况下，目前每个机构都维护着他们自己的客户数据副本，并通过集中的数据提供者进行验证。这可能是一个耗时的过程，可能会导致新客户的注册延迟。区块链可以通过在所有金融机构之间安全共享已验证和准确的客户身份信息的分布式分类账来解决这个问题。这个分布式账本只能通过参与者之间的共识来更新，从而提供透明性和可审计性。这不仅可以降低成本，还可以更好地满足监管和合规要求。'
- en: In the case of AML, due to the immutable, shared, and transparent nature of
    blockchain, regulators can easily be granted access to a private blockchain where
    they can fetch data for relevant regulatory reporting. This will also result in
    reducing complexity and costs related to the current regulatory reporting paradigm
    where data is fetched from various legacy and disparate systems and aggregated
    and formatted together for reporting purposes. Blockchain can provide a single
    shared view of all financial transactions in the system that are cryptographically
    secure, authentic, and auditable, thus reducing the costs and complexity associated
    with the currently employed regulatory reporting methods.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 在AML的情况下，由于区块链的不可变性、共享性和透明性，监管机构可以轻松地获得访问私有区块链的权限，从而可以获取相关监管报告的数据。这也将导致降低与当前监管报告范式相关的复杂性和成本，其中数据是从各种遗留系统中获取并聚合和格式化用于报告目的。区块链可以提供系统中所有金融交易的单一共享视图，这些交易是经过加密安全、真实和可审计的，从而降低了与目前采用的监管报告方法相关的成本和复杂性。
- en: Media
  id: totrans-193
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 媒体
- en: Key issues in the media industry revolve around content distribution, rights
    management, and royalty payments to artists. For example, digital music can be
    copied many times without any restriction and any attempts to apply copy protection
    have been hacked in some way or other. There is no control over the distribution
    of the content that a musician or song writer produces; it can be copied as many
    times as needed without any restriction and consequently has an impact on the
    royalty payments. Also, payments are not always guaranteed and are based on traditional
    airtime figures. All these issues revolving around copy protection and royalty
    payments can be resolved by connecting consumers, artists, and all players in
    the industry, allowing transparency and control over the process. Blockchain can
    provide a network where digital music is cryptographically guaranteed to be owned
    only by the consumers who pay for it. This payment mechanism is controlled by
    a smart contract instead of a centralized media agency or authority. The payments
    will be automatically made based on the logic embedded within the smart contract
    and number of 'downloads'. Moreover, illegal copying of digital music files can
    be stopped altogether because everything is recorded and owned immutably in a
    transparent manner on blockchain. A music file for example can be stored with
    owner information and timestamp which can be traced throughout the blockchain
    network. Furthermore, the consumers who own a legal copy of some content are cryptographically
    tied to the content they have and it cannot be moved to another owner unless permissioned
    by the owner. Copyrights and transfers can be managed easily via blockchain once
    all digital content is immutably recorded on the blockchain. Smart contracts can
    then control the distribution and payment to all concerned parties.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-195
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are many applications of blockchain technology and as discussed in the
    chapter they can be implemented in various industries to bring about multiple
    benefits to existing solutions. In this chapter, five main industries that can
    benefit from blockchain have been discussed. First IoT was discussed, which is
    another revolutionary technology on its own; and by combining it with the blockchain
    several fundamental limitations can be addressed, which brings about tremendous
    benefits to the IoT industry. More focus has been given to IoT as it is the biggest
    and most ready candidate for adapting blockchain technology. Already, practical
    use cases and platforms have emerged in the form of **Platform as a Service**
    (**PaaS**) for blockchain-based IoT such as the IBM Watson IoT blockchain. IBM
    Blue Horizon is also now available for experimentation, which is a decentralized
    blockchain-based IoT network. Second, applications in the government sector were
    discussed whereby various government processes such as homeland security, identification
    cards, and benefit disbursements can be made transparent, secure, and more robust.
    Furthermore, issues in the finance sector were discussed with possible solutions
    that blockchain technology can provide. Although the finance sector is exploring
    the possibilities of using blockchain with high energy and enthusiasm, it is still
    far away from production-ready blockchain-based systems. Finally, some aspects
    of the health sector and music industry were also discussed. All these use cases
    and many more in the industry stand on pillars provided by core attributes of
    blockchain technology such as decentralization, transparency, reliability, and
    security. However, certain challenges need to be addressed before blockchain technology
    can be adapted fully; these will be discussed in the next chapter.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
