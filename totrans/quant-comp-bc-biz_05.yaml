- en: '5'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Interview with Dr. Dave Snelling, Fujitsu Fellow
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous chapters of the book I provided a view on the technological
    details around quantum computing and Blockchain. I discussed use cases of these
    two technologies across different industries. I discussed how the technologies
    had several aspects in common, and there were technical reasons why I felt they
    were on a collision course. However, when we look at things from a business benefit
    perspective, we see that they are largely synergetic to each other.
  prefs: []
  type: TYPE_NORMAL
- en: The book's first objective was to establish the technological concepts behind
    these two groundbreaking technologies. Once we discussed that, the focus of the
    book moved on to the *so what* of these technologies. I wanted to establish that
    these technologies will have an increasingly large place in our lives over time.
    However, that is still an incomplete picture when we lack the views of those who
    are working firsthand with these technologies in order to make that happen.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter and the subsequent ones, I publish the contents of my interviews
    with quantum computing experts. These interviews were eye-opening for me, especially
    where we discussed possibilities of changing people's lives at scale. In this chapter
    I have captured the discussion between me and Dave Snelling from Fujitsu.
  prefs: []
  type: TYPE_NORMAL
- en: Dave has had several roles within Fujitsu. He is a Fujitsu fellow and distinguished
    engineer, Program Director of Artificial Intelligence, and part of the CTO EMEA
    office at Fujitsu. He began his career after studying high-performance computing
    during his university days. After a few brief career hops, including one within
    academia, he joined Fujitsu 22 years ago.
  prefs: []
  type: TYPE_NORMAL
- en: The first time I met Dave was at a Fujitsu-hosted event at their offices in
    Baker Street in London. Dave presented the impact of digital annealers in finance
    and logistics. After his presentation, when I was introduced to Dave, he was mentioned
    as the brains behind Fujitsu's Digital Annealer. For a minute, I thought it might
    be a long technical chat with a scientist. It turned out to be a chat where Dave
    was very eloquent about the practical applications of the Digital Annealer.
  prefs: []
  type: TYPE_NORMAL
- en: I knew straightaway that I had to interview Dave for my book. We met again a
    few weeks later, and this time, I briefed Dave about my plan for the book. We
    met at the Fujitsu offices, and Dave was kind enough to provide his views on quantum
    computing in a much more comprehensive manner. The best part of the chat was when
    Dave picked up my tablet and drew a graph representing how quantum computers,
    classical computers, and digital annealers would evolve over the next two decades.
  prefs: []
  type: TYPE_NORMAL
- en: 'We then scheduled a session for the interview, and Dave provided his thoughts
    on how he saw quantum technology being used across different industries. The interview
    is captured below:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Arun**: Dave, thank you very much for agreeing to do this interview. Let''s
    start with a brief overview of how you got into quantum computing, and your explorations
    in the field of quantum computing.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Dave**: Short of sending you my CV, I started out when I left graduate school
    for the first time. I did high-performance computing at graduate school and came
    over to Europe with a start-up working in the same space. The start-up then went
    bankrupt, as a lot of them did over the years. That was back in 1983-84\. I did
    a little bit of consulting after that and then I taught at the Universities of
    Leicester and Manchester until about 1997, mostly teaching novel computing and
    object-oriented design.'
  prefs: []
  type: TYPE_NORMAL
- en: I then joined Fujitsu to support their supercomputing project at the European
    Centre for Medium Range Weather Forecasting (ECMWF). I've been at Fujitsu ever
    since. My initial days at Fujitsu were mainly spent in the laboratory. I spent
    a lot of time looking at a variety of different things, starting with high-performance
    computing.
  prefs: []
  type: TYPE_NORMAL
- en: I started to work on grid computing, the predecessors to cloud computing. Towards
    the end of my time at the labs and in my transition over to the business unit,
    I was working around artificial intelligence. About 2 years ago Fujitsu announced
    its Digital Annealer. I had to school up on quantum computing very quickly, and
    my past experiences helped. So, I push quantum computing research at Fujitsu,
    but initially I came at it from the commercial side.
  prefs: []
  type: TYPE_NORMAL
- en: My technical background was necessary to really understand what the challenges
    are for what I call *true quantum computing*. I was also able to address the use
    cases that the Digital Annealer could address from both a technical and a business
    strategy point of view. So, that's sort of where I've gotten to now. For the past
    year, I've been the go-to person for technical aspects across international business
    around the Digital Annealer within Fujitsu.
  prefs: []
  type: TYPE_NORMAL
- en: A major part of my role is, of course, keeping my marketing people and our own
    salespeople from selling a product as something that it isn't (he laughs). I also
    make sure that in all our internal and external communication we are clear that
    what we are selling is not a quantum computer. This is a Digital Annealer, but
    it's quite good at solving some problems.
  prefs: []
  type: TYPE_NORMAL
- en: What are those problems? How do we then map them and so forth? That's where
    I am.
  prefs: []
  type: TYPE_NORMAL
- en: '**Arun**: Thank you so much for that. That leads us nicely into the next question.
    Can you please tell us about the Digital Annealer and how it came to be?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Dave**: I can tell you the background of the Digital Annealer. It was developed
    by a team in Fujitsu laboratories in Japan. We have a team there with a history
    in custom technology design. The team identified the *combinational optimization*
    problem as a key target to resolve, which may have been inspired by some of the
    developments in the early days of D-Wave. That gave Fujitsu the indication that
    the market for tailored solutions to combinational optimization problems was about
    to emerge.'
  prefs: []
  type: TYPE_NORMAL
- en: As early as 2011, D-Wave developed quantum computers (128-qubit) that were focused
    on optimization problems using quantum annealing techniques.
  prefs: []
  type: TYPE_NORMAL
- en: 'Combinatorial optimization problems are those where mathematical techniques
    are applied to find optimal solutions within a finite set of possible solutions.
    The set of possible solutions is generally defined by a set of restrictions, and
    the set is too large for exhaustive search. An example is the traveling salesman
    problem, where the total traveling distance must be minimized while each client
    is visited exactly once. Source: [https://www.sciencedirect.com/topics/computer-science/combinatorial-optimization-problem](https://www.sciencedirect.com/topics/computer-science/combinatorial-optimization-problem)'
  prefs: []
  type: TYPE_NORMAL
- en: In fact, it is now emerging. So, the timing was just about right. We then set
    about it with a pure scientific technical approach. How do we make this happen?
    The Digital Annealer is the result of that undertaking to develop technology that
    will address the combinational optimization subset of quantum applications.
  prefs: []
  type: TYPE_NORMAL
- en: That has then become a piece of technology with a complete service wrapped around
    it. Fujitsu now provides these services across multiple stages, beginning with identifying
    whether the problem is suitable for combinational optimization. We then make sure
    that the problem in hand is big enough to warrant a seriously high-performance
    solution to it. Small combinational optimization problems don't need the Digital
    Annealer. There are also some problems that are too big. We're working on addressing
    these problems in time, of course. Therefore, the process starts with identifying
    an industrial problem and then the real challenge is mapping the business problem
    within the industry to a *quadratic unconstrained binary optimization problem*.
  prefs: []
  type: TYPE_NORMAL
- en: 'The Quadratic Unconstrained Binary Optimization problem QUBO has become a unifying
    model for representing a wide range of combinatorial optimization problems, and
    for linking a variety of disciplines that face these problems. A new class of
    quantum annealing computer that maps QUBO onto a physical qubit network structure
    with specific size and edge density restrictions is generating a growing interest
    in ways to transform the underlying QUBO structure into an equivalent graph having
    fewer nodes and edges. Source: [https://dl.acm.org/citation.cfm?id=3160134](https://dl.acm.org/citation.cfm?id=3160134)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Arun**: Interesting. Just building on top of that, why did we need this Digital
    Annealer. Why couldn''t we have solved these combinatorial optimization problems
    using traditional machine learning techniques?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Dave**: The nature of combinational optimization problems is that they do
    not lend themselves to exact solutions. My favorite example is the typical knapsack
    problem. I probably told you this in a previous conversation, but here for your
    readers, I will give it to you again.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The *knapsack problem*: We have got 27 items (that''s a carefully picked number!).
    Twenty-seven items to pick up and put in my backpack, and I can only carry a certain
    amount of weight. I want to get the most value in there. Some of the items just
    come with their own intrinsic value, but there''s also the possibility of interaction
    between items. For example, the gold ring and the diamond have individual value,
    but as a diamond ring they have even more value. That kind of interaction is positive.'
  prefs: []
  type: TYPE_NORMAL
- en: 'There''s also negative interaction. Among our list of items, we also have a
    chicken and a fox. Negative interaction is true of these – they''re not likely
    to get along. You know you don''t want to put both of them in your backpack, because
    then you have a dead chicken and a messy fox: less value than if you take just
    one or the other.'
  prefs: []
  type: TYPE_NORMAL
- en: The complexity of interactions in this kind of problem are simply not solvable
    in any tractable manner using modern technology that we have today. In fact, if
    you could weigh 1,000 backpacks every second, to try all the possible combinations,
    it would take you 500 trillion millennia to find the optimum combination.
  prefs: []
  type: TYPE_NORMAL
- en: I've always liked that because 1,000 packs per second and 500 trillion millennia
    are numbers that people are going to stop and understand. So that kind of a problem
    is a combinational optimization problem. Beyond a certain scale, you cannot feasibly
    identify exact solutions – even with the Digital Annealer. So, what you're looking
    for is one of the heuristic approaches.
  prefs: []
  type: TYPE_NORMAL
- en: 'A **heuristic** technique, often called simply a **heuristic**, is any **approach**
    to problem solving, learning, or discovery that employs a practical **method**
    not guaranteed to be optimal or perfect, but sufficient for the immediate goals.
    Source: [https://www.101computing.net/heuristic-approaches-to-problem-solving/](https://www.101computing.net/heuristic-approaches-to-problem-solving/)'
  prefs: []
  type: TYPE_NORMAL
- en: The approach used by the Digital Annealer is simulated annealing, which is a
    very effective way of finding the local minima and then finding a deeper minimum.
  prefs: []
  type: TYPE_NORMAL
- en: 'A **graphics processing unit** (**GPU**) is a specialized electronic circuit
    designed to rapidly manipulate and alter memory to accelerate the creation of
    images in a frame buffer intended for output to a display device. Source: [https://en.wikipedia.org/wiki/Graphics_processing_unit](https://en.wikipedia.org/wiki/Graphics_processing_unit)'
  prefs: []
  type: TYPE_NORMAL
- en: So, for that kind of problem we can use a heuristic approach on a conventional
    machine or on GPUs. We have an emulator for the Digital Annealer that runs on
    GPUs. It is many thousands of times slower on the GPU than on the Digital Annealer, but
    it does a good job of solving small problems because it can emulate the way in
    which the Digital Annealer evaluates all the possible changes from one state to
    the next. As you know, each state is described as a string of bits. The Digital
    Annealer evaluates what would happen if you changed each one of those individual
    bits and evaluates all of those simultaneously. Now, that's about 130,000-way
    parallelism – and all on the same chip.
  prefs: []
  type: TYPE_NORMAL
- en: If you tried to do that with a CPU cluster to get 130,000 cores talking to each
    other, you'd have a huge machine. Of the many problems you might associate with
    such a machine, one of the biggest issues is that you can't have the cores all
    talk to each other every cycle, whereas in the Digital Annealer these 130,000
    different cases can be evaluated and compared with each other simultaneously.
  prefs: []
  type: TYPE_NORMAL
- en: When you try to do the same thing on a GPU you do a little better than you do
    on a CPU, but you still don't have the connectivity. That's what you have on the
    Digital Annealer - very tight coupling for a particular class problem. It only
    does the simulated annealing across a binary field of 8,192 bits.
  prefs: []
  type: TYPE_NORMAL
- en: In addition, there's a cooling cycle, which slowly varies the sensitivity as
    a simulated annealer moves from one possible solution to another. That automatic
    cooling is built into the hardware.
  prefs: []
  type: TYPE_NORMAL
- en: A simulated annealer needs a cooling schedule. If the temperature is too low,
    the annealer will not be able to escape the local minima. When the temperature
    is too high, it will struggle to converge to a local minima. The cooling cycle
    needs to be planned based on what the sensitivity of the annealer needs to be.
  prefs: []
  type: TYPE_NORMAL
- en: In addition to that, there is some hardware built in to detect when you've fallen
    into a local minima. You can then encode how sensitive you are to that detection
    and then the hardware will automatically, temporarily raise the temperature and
    start searching again. You get up to a higher temperature to get out of that local
    minimum and then start cooling down again, remembering of course where you were.
  prefs: []
  type: TYPE_NORMAL
- en: There are some cases where you can get the actual minima if you know your problem
    has a number that's going to be the minimum. For example, in pure constraint optimization
    problems the annealer can just find any solution that matches all the constraints.
  prefs: []
  type: TYPE_NORMAL
- en: '**Arun**: Have you tried the knapsack problem with your Digital Annealers?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Dave**: Oh yes, we have. We have run the classical set of combinatorial optimization
    problems such as graph coloring, max cut, knapsack, and the travelling salesperson.
    The knapsack problem for me is like portfolio optimization in finance. Therefore,
    if I could solve the knapsack problem, I believe, we can solve portfolio optimization
    in finance. What (*stocks*, *bonds*, *derivatives*, *cash*, *commodities and in
    what proportion*) am I putting into my portfolio?'
  prefs: []
  type: TYPE_NORMAL
- en: The weight is the maximum budget I'm allowed to carry on the portfolio, the
    volatility is the way in which the different assets (like *stocks* and *bonds*)
    behave against each other. Some of these assets work together, some of them work
    against each other. In the case where they work against each other, that's a good
    thing because you want them to create the diversification needed. So, there is
    optimizing in that context.
  prefs: []
  type: TYPE_NORMAL
- en: The travelling salesperson problem itself should be avoided because the pure
    travelling salesperson problem has so many decades of research and mathematics
    against it that it's easy to solve. If you take variants on it, they are more
    interesting. One of the projects we've worked on with BMW is welding the bottom
    of a chassis on a car. You have several seams that you have to weld. What is the
    fastest way to do all these welds?
  prefs: []
  type: TYPE_NORMAL
- en: A couple of things are different between the classical travelling salesperson
    and the welding problem. When you visit a *city* (point of welding), you must
    stay there for however long it takes you to do that weld. Therefore, there's a
    time associated with being in the city. In the case of the welding example, because
    the seam is in two dimensions you come out somewhere else in your map so it's
    kind of like a wormhole.
  prefs: []
  type: TYPE_NORMAL
- en: It is a time delayed wormhole where you can go in either end and come out the
    other end. Now when you have those variations (from the classical travelling salesman
    problem), and you put those kinds of constraints into your problem, you no longer
    have a classic travelling salesperson problem that you can solve on your laptop,
    because it's just gotten way more complicated.
  prefs: []
  type: TYPE_NORMAL
- en: Such a problem is well within the scope of the Digital Annealer to address,
    however. The DA can process up to about 90 seams, and it can even operate with
    multiple welding robots sharing each other's workspace. So, it is like two robots
    working together telling each other, "While you're over there, let me just do
    a couple of these for you." Working in this manner, the robots can work much more
    rapidly. We've had some big success with that in terms of adding efficiencies
    to the manufacturing process.
  prefs: []
  type: TYPE_NORMAL
- en: BMW and Fujitsu are working on a Digital Annealer-powered solution to add efficiencies
    to BMW's manufacturing processes. The explanation above from David refers to the
    initiative, where the Digital Annealer worked on a problem that is similar to
    the travelling salesperson's problem. BMW factories have several robots attending
    to several tasks on a car. The Digital Annealer is being used to make the robots
    more efficient in assembling cars.
  prefs: []
  type: TYPE_NORMAL
- en: '**Arun**: Would you be able to reveal any statistics in terms of the efficiencies
    you''ve managed to achieve for that particular use case?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Dave**: For that particular use case BMW have published a press release about
    it.'
  prefs: []
  type: TYPE_NORMAL
- en: 'And the press release reveals the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '"Currently, prototype quantum computing solutions addressing this challenge
    can compute optimized routes for seven welded seams. Working with FUJITSU Quantum-Inspired
    Computing Digital Annealer, a major automotive OEM has already tested and optimized
    22 seams, cost effectively increasing the number of cars produced using the same
    resources, and this is about to be raised to 64 seams (with 8,192-bit scale) making
    a disruptive change."'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Arun**: Great. I had a question on the applications of the Digital Annealer.
    Over the last six months, since we''ve started talking about this, I''ve met some
    people working on tough problems using quantum computing. The problems range from
    modelling elections, traffic management, climate modelling, and even recession
    modelling. With all these different applications possible, what are the low-hanging
    fruits? What are the other exciting areas you are focusing on?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Dave**: As mentioned before, we are looking into manufacturing – like the
    work with BMW, where we''re optimizing the manufacturing processes. And that''s
    a low-hanging fruit in the sense that we know how to solve the problem, and it
    has a big impact if you can increase production to keep up with demand, i.e. without
    having to build a new factory. Portfolio optimization is another big impact area
    in the finance sector that we''re looking into.'
  prefs: []
  type: TYPE_NORMAL
- en: The second area is for something like Solvency Capital Requirement (SCR). It
    is important to be able to find a portfolio that gives you a sufficiently safe
    SCR. I think it is probably the most complicated computation we've tried to put
    through the Digital Annealer.
  prefs: []
  type: TYPE_NORMAL
- en: '**Arun**: I''ve been more of a capital markets person and less of an insurance
    expert. I understand SCR is an equivalent of value at risk (VaR), is that right?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Dave**: It is similar, but it is from the insurance sector driven by regulatory
    requirements. With SCR, we balance an approximation and then compute the actual
    SCR on the balanced portfolio (of assets). The Digital Annealer is not actually
    solving for the SCR, but rather a proxy for it. We''ve tested that the proxy behaves
    exactly the way that the actual SCR does. We''re happy with that kind of process.'
  prefs: []
  type: TYPE_NORMAL
- en: We would be looking at VaR, but we haven't got to that yet. We are helping one
    of our customers to assess the value to the business of more frequent rebalancing,
    or better-quality rebalancing, or being able to use a larger asset pool to generate
    their portfolios from inception. However, I can't give you any performance numbers
    on that yet.
  prefs: []
  type: TYPE_NORMAL
- en: '**Arun**: I had a question on the frequent rebalancing solution. The technology
    (Digital Annealer) could allow for instantaneous rebalancing if you wanted it
    to happen. But the transaction costs of doing that will make it financially unviable.
    In your process of rebalancing and providing recommendations to rebalance, do
    you also take that transaction cost into account?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Dave**: What we do with our approach on the rebalancing cost is this: you
    can do the assessment and make a separate decision on making the change. So, you
    can assess every day and when it becomes financially viable you can execute the
    portfolio rebalancing. We have done some explorations into limiting the percentage
    of the portfolio that changes at any point, too.'
  prefs: []
  type: TYPE_NORMAL
- en: We can rebalance in such a way that only about 10% of the assets change, and they
    only change by 2 or 3% each. It may be that the rebalancing is a smooth process
    rather than totally chaotic. Otherwise, you're basically creating a new portfolio
    every time. But we can also encode constraints to say, *give me a new balanced
    portfolio where only 5% of my assets change by less than 10%*. That kind of flexibility
    and constraint management gives us an ability to deal with transaction costs.
  prefs: []
  type: TYPE_NORMAL
- en: '**Arun**: That''s interesting. What are the problems you are working on within
    logistics?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Dave**: We''ve done traffic management using digital annealers in Japan where,
    rather than a point-to-point journey, you have several point-to-point journeys
    all at once. You think about a network of taxicabs, taking frequently taken routes
    and all of them going through the same part of town. If you could tell some of
    your taxis to take the slightly longer route to reduce congestion, overall, everybody
    has a quicker journey by about 40%. This would work in Tokyo where they did the
    study, because the taxicab drivers will do what they''re told. This probably wouldn''t
    work in London.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Arun**: The Digital Annealer won''t work for Indian roads either. As you
    may know, in India people use intuition to drive rather than the rules of the
    road, so there is more chaos that the annealer may struggle to cope with. The
    number of vehicles and people on the road is several times higher (than London),
    so it would be computationally intensive too.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Dave**: Yeah, but this approach would work in military operations and in
    autonomous vehicle networks. It is not a market today, but something that can
    happen. In terms of actual transport, one of the bigger problems is not so much
    which way does the van drive. It''s what do we put on the van? This is relevant
    in a scenario where a van carries something on it to distribute across cities,
    and digital annealers are used to optimize the route of the van.'
  prefs: []
  type: TYPE_NORMAL
- en: That's a much more interesting and challenging problem than just what's the
    shortest route for the van. One of the examples of that is ATM replenishment.
    Now this is obviously a disappearing market, but there is at least one bank in
    every country that will be required to have cash available in almost every town.
    So, there's at least one customer for this kind of application. But the question
    there is not so much how you deliver the cash to the stations most efficiently.
    It's how much cash do you put in which ATM?
  prefs: []
  type: TYPE_NORMAL
- en: Based on how much cash gets distributed, you may now want to visit that place
    less frequently for topping up the ATM. Because what you're really trying to do
    is keep the minimum amount of cash in ATMs overnight.
  prefs: []
  type: TYPE_NORMAL
- en: There is also a whole class of problems around job shift scheduling, which at
    its base is graph coloring. A potential customer I've got has a network of engineers.
    If these engineers must go out and fix things, which engineer do you send? Which
    engineer do you put on the shifts? Which day of the week do you send them so that
    you get all the constraints met, like they all must work 37 hours a week?
  prefs: []
  type: TYPE_NORMAL
- en: We also have constraints such as these engineers needing 2 days off each week.
    All of them must work some late shifts. When I modelled it, my first version of
    that problem went way beyond the number of bits I had in the Digital Annealer.
    So, that problem required partitioning. That's part of our [Fujitsu's] service
    that wraps around these solutions.
  prefs: []
  type: TYPE_NORMAL
- en: Even as we go to our million-bit target machine, we may have to partition the
    problems. The larger solutions around partitioning are going to be a part of our
    business offering. I know that the folks at D-Wave have good software for partitioning
    for poorly connected or weakly connected annealers. The D-Wave second generation
    has only 15 nearest neighbors for each bit.
  prefs: []
  type: TYPE_NORMAL
- en: On our chip we've got an 8K-way connectivity to every bit at 64-bit precision.
    But when we go between chips, we're going to have similar kinds of challenges.
    It's the same kind of challenges that mechanical engineering CAD (Computer Aided
    Design), CAM (Computer Aided Manufacture) faced when we try to do simulations,
    say for energy fields around the components of a mobile phone. You must do 3D
    modelling to build your mesh and then partition the mesh to put it onto your clustered
    supercomputer. Partitioning for multiple digital annealers is the same kind of problems.
  prefs: []
  type: TYPE_NORMAL
- en: '**Arun**: Is it [the partitioning solution] already live or are you planning
    or working on it?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Dave**: The clustered machines are not live yet, it''s in the lab. The clustering
    software is still under development. It''s targeted for release in 2020\. So,
    it''s not that far off.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Arun**: I look forward to that. We''ve touched upon logistics, we''ve touched
    upon financial services, we''ve touched upon traffic management as well and labor
    management. Are you doing anything in healthcare?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Dave**: Yes. Pharmaceuticals is the best way to describe it. The way you
    use an annealer for that is not to identify the final solution. It is to look
    for a proxy for the solution, like we did with the SCR in the insurance example.
    Let''s say it''s a cancerous cell and you know you want to lock into it with your
    radioactive drug. To do that, you need to figure out how to design your drug in
    such a way that it can target that cell only. It turns out that the number of
    molecular simulations required to solve that problem is enormous.'
  prefs: []
  type: TYPE_NORMAL
- en: It takes several hours (hundreds of hours depending on many factors) of computer
    time to do each one of these simulations, and there are huge costs associated
    with that. The strategy with the Digital Annealer is we start with a basic molecular
    structure that we can add things to. For example, we could start with a Benzene
    ring (C[6] H[6] ). In a Benzene molecule, you've got a ring of six Carbons, with
    each Carbon bonded to a Hydrogen. You can swap out Hydrogen, so you have 6 different
    places to put 50 different things. That translates to six to the fiftieth power
    kind of combinations.
  prefs: []
  type: TYPE_NORMAL
- en: We solve that problem by narrowing things down, using the molecular bond energies
    to determine the best candidates for producing a feasible molecule. It's not perfect,
    but it's a lot better than nothing. The possible interactions between the neighboring
    molecules also need to be factored in. The bond between them is also important
    because that's a constraint.
  prefs: []
  type: TYPE_NORMAL
- en: This modelling is particularly valuable in the design of drugs. That's an area
    we're looking at. From a market perspective that's going to take a little bit
    longer [for the digital annealer to get into]. The pharmaceuticals industry is
    happy with running great big suites of chemical tests and are slow in adopting
    new technologies, so it is going to be a penetration challenge. Now, that's healthcare
    for you.
  prefs: []
  type: TYPE_NORMAL
- en: '**Arun**: Protein folding is a major modelling challenge, and if we got it
    right we could expedite the drug discovery process. Thanks for touching upon that
    Dave. What areas of quantum computing do you think will deliver first?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Dave**: In my view, there are three broad classifications of the quantum
    computing world. There is the gate computer, then we have the annealers – both
    digital and quantum. Also, there''s what I call the *analog* quantum devices that
    can be used to solve a problem in quantum physics. In the *analog* category, you
    wire up your quantum device to describe a problem in nature.'
  prefs: []
  type: TYPE_NORMAL
- en: It's just programming nature into the computer and that's going to produce some
    results way before gate computers do. Annealers are going to produce results first
    because we're doing that now with the digital annealer, quantum annealers won't
    be far behind. But these analog quantum devices will come somewhere in between.
    They're going to start before we get gate computers cracking RSA algorithms. That
    will have some important discoveries coming out of physics. This is primarily
    because they've made a quantum device that when it's doing what it's doing, it's
    answering a bigger question.
  prefs: []
  type: TYPE_NORMAL
- en: '**Arun**: Interesting. So, when we met last time you drew me a graph. I am
    not sure if you remember that? [The somewhat rough-around-the-edges drawing is
    shown below:]'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B13910_03_01.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1: A rough drawing by Dave Snelling, explaining the trends in computing
    paradigms'
  prefs: []
  type: TYPE_NORMAL
- en: '**Dave**: Yes, I do. There''s this point on the graph where the digital solution
    and the quantum solution cross over. One is where they cross over in terms of
    solvability and then they cross over in terms of pricing. The digital annealers
    will eventually be commoditized and that will bring their price down progressively,
    which will push your commercial viability curve farther to the right.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Arun**: So why do you feel this trend is beneficial? I think you''ve spoken
    about that. Can we briefly discuss the differences between applications of gate-based
    computers and quantum annealers?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Dave**: The biggest one with gate-based is that it''s quite simple. A gate-based
    quantum computer, in theory, will be Turing complete. So, anything that you can
    describe with a Turing machine, you could put on a quantum gate. You could probably
    encode a Turing machine onto a quantum gate machine, and you''d be done.'
  prefs: []
  type: TYPE_NORMAL
- en: 'A Turing machine is a hypothetical machine thought of by the mathematician
    Alan Turing in 1936\. Despite its simplicity, the machine can simulate ANY computer
    algorithm, no matter how complicated it is. Source: [https://www.cl.cam.ac.uk/projects/raspberrypi/tutorials/turing-machine/one.html](https://www.cl.cam.ac.uk/projects/raspberrypi/tutorials/turing-machine/one.html).
    A Turing complete programming language, or a computing device is equivalent to
    a Turing machine, in the sense that it can implement any algorithm.'
  prefs: []
  type: TYPE_NORMAL
- en: The following is just my opinion. In some ways, I think that gate-based computers
    have distracted the market from the development of quantum-based solutions, particularly
    in the analog space that I talked about. There is probably the lower-hanging fruit
    in that analog space that we could get to by building special-purpose machines.
  prefs: []
  type: TYPE_NORMAL
- en: Now one special-purpose machine is the quantum annealer. They're encoding a
    direct Hamiltonian operator and then minimizing the energy so you can code your
    problem up that way. Combinatorial optimization happens to be amenable to annealing.
    In that sense the digital and quantum annealers solve a very specific problem.
  prefs: []
  type: TYPE_NORMAL
- en: We have an algorithm for factoring integers on the annealer. It doesn't scale
    to RSA levels, but it does work. If somebody were to actually build a closely
    coupled million-bit digital annealer, you would probably be getting close. But
    we're not going to build a closely coupled one. We're going to build a clustered
    one and then the clustering makes it real hard to use it as a cracker (of RSA).
  prefs: []
  type: TYPE_NORMAL
- en: '**Arun**: With so many opportunities to solve unsolved problems, what are your
    main challenges when you go to the industry to sell the annealer?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Dave**: The go-to-market strategy when we''re talking to customers is to
    be very precise that the Digital Annealer solves exactly one kind of problem.
    The biggest challenge we face is getting people to step away from what they''ve
    heard about Quantum Artificial Intelligence and Quantum Machine Learning.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Arun**: Interesting. So, this is something I hear often. It is that we seem
    to have got distracted with gate-based machines.'
  prefs: []
  type: TYPE_NORMAL
- en: But what they don't realize is that quantum computing has given us a way to
    model nature into a computer. Instead of translating Physics into Math and bending
    that into computer science operations, you just get to model Physics into machines.
    During the translation (Physics to Math to computers), we lose a lot of quality
    information, but in the quantum world it [the loss of information] doesn't happen.
  prefs: []
  type: TYPE_NORMAL
- en: '**Dave**: Well, I agree with that entirely because that''s this *analog* quantum
    computer I keep talking about. Now we almost need to put quotation marks around
    *analog* because otherwise people may not necessarily understand the context in
    which I call them analog. The quantum annealers are in the middle ground as they
    are a kind of general-purpose analog device. But if you could build an analog
    device that would match your protein (in the healthcare example) and then just
    let it reach its final low energy state, you have everything.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Arun**: Something you mentioned when we met earlier was that logistics was
    perhaps the biggest market for some of the combinatorial optimization problems.
    I have seen several complex financial services problems firsthand. We have risk
    management in financial services, for example, that is quite data-intensive. We
    deal with millions and millions of data points in this space. If we could solve
    risk management challenges using annealers, why would optimization be harder in
    logistics? Is it the dimensionality of data that makes logistics harder?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Dave**: From a practical point of view, coding it up in logistics is constraint-driven.
    Whereas the portfolio optimization space, for example, is mostly driven by the
    objective function. Typically, when you''re describing an annealing problem you
    have the objective function. Which is what you''re trying to optimize. So, when
    you''re trying to optimize for portfolio balancing, you''re trying to minimize
    your risks. Then you put two constraints against that, one is a maximum return
    and the other is a minimum spend.'
  prefs: []
  type: TYPE_NORMAL
- en: You can also code it up as a dual objective function, in terms of a risk parameter
    that does the balance between risk and return. After this, you can constrain it
    based on the total budget. So that's one side of the picture.
  prefs: []
  type: TYPE_NORMAL
- en: In the logistics space, it's basically all about constraints. Constraints in
    the encoding process tend to explode the complexity of the problem. This is because
    you typically encode the constraint by building the quadratic terms as part of
    the problem solution. You're using part of the information space to give the code
    your constraints and so it does make it a little more challenging to also then
    use this information space to encode your objective function. In addition, sometimes
    your constraints in logistics will lead to higher order polynomials instead of
    quadratic.
  prefs: []
  type: TYPE_NORMAL
- en: '**Arun**: Moving on to another topic, I was looking at the semiconductors industry.
    There are a lot more options for qubit circuitry than just a silicon-based semiconductor
    model that is used for classical computers. There are different types of materials
    being used, different models being used. So how do you think that is going to
    affect the industry? Would it kill the semiconductor monopolies if different types
    of Qubit circuitry were coming into the picture for it?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Dave**: There''s a lot of exotic technology coming out around the quantum
    space in Josephson junctions that have done their own hype cycles followed by
    periods of quiet. You know, as I remember, Josephson junctions were around decades
    ago. They then just vanished and now they''re coming back under this quantum umbrella.
    You also have the high-temperature superconductors. They''re probably going in
    and out of popularity.'
  prefs: []
  type: TYPE_NORMAL
- en: 'A Josephson junction is made by sandwiching a thin layer of a non-superconducting
    material between two layers of superconducting material. The devices are named
    after Brian Josephson, who predicted in 1962 that pairs of superconducting electrons
    could "tunnel" right through the non-superconducting barrier from one superconductor
    to another. Source: [https://www.scientificamerican.com/article/what-are-josephson-juncti/](https://www.scientificamerican.com/article/what-are-josephson-juncti/)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Arun**: One final question, Dave. Quantum supremacy – do you think anyone
    is close to it?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Dave**: No, they are not, based on the classical definition. There are other
    definitions of quantum supremacy that say *can you solve a problem faster on a
    quantum computer than you can on a computer?* In that sense, yes many of them
    are close to quantum supremacy.'
  prefs: []
  type: TYPE_NORMAL
- en: The fact is that, solving a problem in half a millisecond is very impressive.
    But if you can solve it in 2 seconds on a laptop, then does it actually change
    your business model? No. So is it quantum supremacy? Yes, but no.
  prefs: []
  type: TYPE_NORMAL
- en: If it's solving a problem that needs to be solved every month and can take 6
    hours on a regular cluster, do you need a Digital Annealer or a quantum device?
    It's just a straight economic thing. It's not driven by the time window. So, quantum
    supremacy is a buzz word for sure, at least when discussed at a business level.
    As soon as somebody wants to say that they've done something with a quantum computer
    that no one has ever been able to do before – they can claim *quantum supremacy*
    and you know it will become just a marketing flag.
  prefs: []
  type: TYPE_NORMAL
- en: There is a little cynicism coming out here (from me) that you cannot attribute
    to Fujitsu. A lot of the hype around quantum supremacy is to secure funding for
    this kind of research. Firms and research teams use this as a hammer to drive
    attention and receive research funding. I am particularly keen to see some supremacy
    in the *analog* space we discussed earlier.
  prefs: []
  type: TYPE_NORMAL
- en: 'Other areas where I would like to see some meaningful breakthroughs are quantum
    communication, quantum sensing (for example: gravity sensing), and quantum imaging.
    These are awesome use cases of quantum computing that use entanglement. The gravity
    sensor for instance, is very sensitive to gravity. You can sense someone walking
    behind a wall and can see their gravity signatures on quantum devices. The UK
    quantum research organization is currently doing a lot of work in this space [1].'
  prefs: []
  type: TYPE_NORMAL
- en: '**Arun**: I have been speaking mostly with practitioners and will be talking
    to UK research organizations soon. Most of them are into academia. This book is
    focused largely on the practical implications of these technologies; however,
    it would be good to capture where the research world is heading to.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Dave**: Absolutely. Personally, I''m not following the research space right
    now. I''m busy trying to do a practitioner''s role and solving industrial problems.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Arun**: Thank you, Dave, I have taken so much of your time. Thank you very
    much for your insights.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Dave**: You are most welcome. I look forward to seeing the finished book.'
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: My conversation with Dave Snelling was very insightful, and there were several
    takeaways from it. The primary takeaway is how digital annealers can smoothen
    the entry for quantum computers and annealers in a few years' time. This transition
    is interesting from both a technical capability perspective and a commercial viability angle.
  prefs: []
  type: TYPE_NORMAL
- en: 'The other key point that I would like to stress is David''s focus on the *so
    what* of technology. Gate-based computers, so what? Quantum supremacy, so what?
    And the list goes on. This is an important lesson for technologists: it is very
    important to identify a problem to solve, and then deploy technological resources
    towards the solution. I often find technologists creating solutions that are looking
    for problems, and that is never a good place to innovate from.'
  prefs: []
  type: TYPE_NORMAL
- en: It is pretty evident that Dave is enthusiastic about the possibilities of quantum
    computers. We discussed use cases across several industries in this chapter. However,
    David also warned us about the possibility of getting too excited about the hype
    around quantum supremacy.
  prefs: []
  type: TYPE_NORMAL
- en: I personally am inspired by Dave's ability to simplify the narrative. For someone
    with so many years of laboratory experience, with a long technical background,
    his storytelling capabilities are amazing. Last but in no way least, I am genuinely
    touched by how grounded and open he was in sharing his views and thoughts on this
    industry.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[http://uknqt.epsrc.ac.uk/about/uknqt-hubs/](http://uknqt.epsrc.ac.uk/about/uknqt-hubs/)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
