- en: Construing Distributed Ledger Tech and Blockchain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A blockchain is a time-sequenced chain of transactions that are agreed upon
    consensus and grouped into blocks. This guarantees that information of the ledger
    (chain) is reliable and can be trusted, since each entry (block) is validated
    by the network and is agreed by the network. For a ledger of records, **distributed
    ledger technology** (**DLT**) and its variant (blockchain) are revolutions. By
    virtue of its nature, such as being an immutable trustworthy ledger of records,
    no single point of failure, no centralized third party, and decentralized trust,
    DLT and blockchain have created a hype (catalyzed by imagination) that allows
    us to envision various use cases of DLT and blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: One such application of blockchain that grabbed everyone's attention is Bitcoin,
    which is a globally distributed immutable ledger of records. Since its discovery
    (I'm not referring to it as an invention), enterprises, organizations, businesses,
    entrepreneurs, and lately, individuals, have learned the significance of this
    disruptive technology. For some time, the massive journey of Bitcoin overshadowed
    its underlying technology. However, when the world witnessed the massive volatility
    of cryptocurrency, everyone showed interest in the headlines that were created
    by the underlying disruptive technology. Today, there are many consensus protocols,
    various DLTs, and blockchains, and the world is trying to identify different use
    cases that can be addressed by DLT and blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: Since its discovery, DLT and blockchain have outgrown themselves. Billions of
    dollars are pumped into blockchain initiatives, and the trend is only growing
    year after year. Explorers are exploring and proving various use cases, from the
    prevention of human trafficking to digital identities, from education to healthcare,
    and so on.
  prefs: []
  type: TYPE_NORMAL
- en: The previous chapter focused on ledgers, an introduction to blockchain, DLT
    technologies, and their structure. This chapter will delve into DLT, its challenges
    and opportunities, and will drill into various use cases. We will also focus on
    design strategy and how it allows us to explore and engage with business scenarios.
  prefs: []
  type: TYPE_NORMAL
- en: Challenges and opportunities of DLT
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Enterprises are exploring the immense opportunities of DLT and blockchain, and
    they acknowledge the strategic and long-term benefits of this disruptive technology.
    However, there are various challenges associated with DLT and blockchain that
    need to be mitigated before they are adopted by enterprises. This section summarizes
    the challenges faced by DLT and the opportunities it offers.
  prefs: []
  type: TYPE_NORMAL
- en: Challenges associated with DLT
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This section covers the main challenges of the adoption of DLT.
  prefs: []
  type: TYPE_NORMAL
- en: Perception
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**The perceived immaturity of the underlying technology**: The perceived immaturity
    of the technology catalyzes the belief that solutions built with it might face
    challenges. Lately, it is also evident that DLT struggles with handling a higher
    number of transactions for concurrent users. Under-performing DLT and blockchain
    applications, from the transaction and performance perspectives, reduce the appeal
    and competitiveness of DLT and blockchain.'
  prefs: []
  type: TYPE_NORMAL
- en: '**The perceived challenges related to the security of data**: Enterprises need
    secure data access and permissioned implementation of DLT and blockchain. DLT
    and blockchain, by their very nature of being decentralized distributed ledgers,
    are perceived to be more secure than centralized ledgers, yet this needs data
    to back the facts. Most of the analysis is centered on the impact of DLT and blockchain;
    however, the attention needs to shift toward the usage of the technology and the
    regulations around it. To me, the more established a regulatory framework is,
    the more widely a technology will be adopted, and this holds true for DLT and
    blockchain.'
  prefs: []
  type: TYPE_NORMAL
- en: Consensus
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Consensus on the terminologies and clarity**: The obscurity of DLT versus
    blockchain, consensus, regulations, and security, along with their relationships,
    add to the confusion around this disruptive technology. Business stakeholders,
    decision-makers, consumers, and businesses are still analyzing the use cases of
    DLT and blockchain. The better the clarity, the higher the adoption, since businesses
    will be clearer about the use cases.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Regulation uncertainty**: Considering the fact that enterprises have invested
    considerably to remain compliant with standards and regulations, it is critical
    to establish regulations around DLT and blockchain. Otherwise, without regulations,
    the adoption of DLT and blockchain will remain in question.'
  prefs: []
  type: TYPE_NORMAL
- en: Facts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Missing structured governance around the technology**: Governance around
    DLT and blockchain is challenging, especially when the ledgers are distributed.
    Since DLT and blockchain are P2P, users use their keys to transact; this is why
    the governance around key management, as well as the clarity and legality around
    the loss of keys, still needs to evolve.'
  prefs: []
  type: TYPE_NORMAL
- en: '**It is not urgent**: Another important factor for the adoption of any technology
    revolves around the need for it. If there is a need and urgency for it, the technology
    will witness a monumental shift toward the adoption of it, both from regulators
    and businesses. Since enterprises are already invested in the current IT infrastructure,
    which is also compliant with regulations, they don''t have the urgency to shift
    to DLT and blockchain; it is a huge architecture change and a giant leap. It also
    involves cost, and enterprises need to gauge the **return on investment** (**ROI**).
    These factors reduce the urgency of DLT and blockchain, as well as its adoption.'
  prefs: []
  type: TYPE_NORMAL
- en: The unknowns
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Unknown risks for an early adopter**: Today, every enterprise has well-defined
    processes, IT systems, and analytics solutions that serve their current requirements
    and comply with regulations and standards. The adoption of yet-to-be standardized
    solutions around DLT and blockchain requires considerable redesign of their existing
    solutions, and the risks are unknown. There''s also this issue of their clarity.
    Even with some level of calculated strategic benefits of DLT and blockchain, enterprises
    are reluctant to adopt DLT and blockchain due to the cost of resources—both software
    and talent. A shift toward DLT and blockchain will only happen when the benefits
    to business outweigh the cost and risk.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Lack of clarity on the replacement of real contracts with smart contracts**:
    There is lack of clarity when it comes to smart contracts and chaincodes as well.
    They are assumed to replace real legal contracts with simple auto-executable conditions.
    This, lack of clarity, will eventually die out with the evolution of smart contracts
    and smart contracts will shine when enterprises share the influencing stories
    of smart contracts as a replacement for complex real contracts.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Lack of data to highlight the advantages businesses can gain**: Since DLT
    and blockchain aren''t widely adopted yet, data on their performance is yet to
    be shared and widely known. A precise assessment of their performance and their
    impact on the traditional centralized ledger approach versus the decentralized
    ledger approach are not clearly known. Clarity on the benefits of businesses adopting
    DLT and blockchain still need to be cemented.'
  prefs: []
  type: TYPE_NORMAL
- en: Being a DLT and blockchain enthusiast and evangelist, I firmly believe that
    the challenges around DLT and blockchain will not hinder the acceptance and adoption
    of such a disruptive technology. As we discussed previously, the more trust grows,
    the more likely the technology is going to be adopted. The more businesses see
    the value and benefits of them, the more regulations will be legislated and standards
    will be defined. Interestingly, there is a difference between maturity and adoption,
    which is fully based on the benefits enterprises find in the usage of DLT and
    blockchain. The more benefits there are (even if the maturity of DLT and blockchain
    are low), the more likely they are to be adopted. DLT and blockchain might take
    a little more time to mature than they will to be adopted.
  prefs: []
  type: TYPE_NORMAL
- en: Opportunities offered by DLT and blockchain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This is an era of disintermediation, where Uber owns no vehicles, Facebook allows
    billions to connect, Airbnb owns no real estate, and Amazon sells almost everything
    without holding much inventory. Various industries, such as insurance, healthcare,
    finance, transportation, logistics, retail, and real estate include intermediaries.
    All of those cases where intermediaries are involved are potential use cases for
    blockchain. This allows the removal of intermediaries between consumer and producer
    while injecting trust, reliability, robustness, immutability, and confidentiality.
    Financial and non-financial industries have quickly understood the potential of
    DLT and blockchain technology and its disruptive applications. DLT and blockchain
    can be applied to several industries, from the financial sector to music, from
    intellectual property rights to education and healthcare. The continuous application
    of DLT and blockchain to address various use cases is so huge that the World Economic
    Forum predicted that, by 2027, 10% of global GDP would be stored on blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: Now, it's time to check out the opportunities that DLT and blockchain offer.
  prefs: []
  type: TYPE_NORMAL
- en: Gain in efficiency and novel revenue streams
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Gain in efficiency**: Various enterprise processes that involve third parties
    and processes that are human-centric can be automated and re-engineered to gain
    efficiency. For example, with DLT and blockchain, there is no need for data synchronization
    and control by a third party, which makes the need for a third party obsolete,
    thus improving the efficiency of transactions. Previously, we discussed cases
    where reconciliation is required by transacting parties where assets and their
    values are included. With DLT and blockchain, everyone has the same trusted copy
    of the ledger, and so reconciliation isn''t required. This is a significant cost
    saving and a driver for wide adoption.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Novel revenue streams**: Efficient, improvised, and integrated processes
    will attract novel revenue streams for enterprises because they will be able to
    scale quickly, integrate with other organizations more quickly, address new challenges
    quickly by inducing agility.'
  prefs: []
  type: TYPE_NORMAL
- en: Business models and enhanced resilience
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Wide array of business models**: The absence of a third party opens up a
    wide array of possibilities around applications and business models. Businesses
    can adopt **peer**-**to**-**peer** (**P2P**) transactions so that they can fuel
    the growth of a crowd economy, a shared economy, or a system where the underprivileged
    population can be brought to the mainstream.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Enhanced resilience**: DLT and blockchain, by virtue of their distributed
    nature, allow participating nodes to have a copy of the ledger. Even if the network
    fails, each node holds a copy of the ledger and the transactions on it. No single
    entity owns it; everyone owns it, and this enhances the network''s resilience.'
  prefs: []
  type: TYPE_NORMAL
- en: Inheritance of trust
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As there is no single point of failure and no single or third party acts as
    the central authority, everyone owns the network, but at the same time doesn't.
    Transactions are added as blocks, but only when a consensus is reached; once appended
    to the block and the block is added to the chain, it remains omnipresent and immutable.
    Without a third party being involved and no reliance on a centralized database,
    DLT and blockchain offer opportunities in terms of identity verification, security,
    and authentication of trust on an immutable, trusted, distributed platform.
  prefs: []
  type: TYPE_NORMAL
- en: Immutability and a smarter world
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Advantages of recording and reporting on immutability**: Since transactions
    are immutable in DLT and blockchain, consistency and clarity reporting is provided.
    Since they are immutable, the chance of errors occurring is extremely low and
    the network itself checks against fraud.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Smarter world**: In DLT and blockchain, agreements between businesses, businesses
    and consumers, individuals and machines, machines and machines, and so on are
    implemented using smart contracts. These smart contracts are self-executing, and
    so the administrative and execution costs of agreements are reduced drastically.
    Risk, in terms of contract or agreement interpretation, is reduced significantly,
    which further reduces any legal costs that arise in the case of conflicts in traditional
    contracts and agreements.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Plethora of use cases**: DLT and blockchain find opportunities in abundant
    use cases, from government to finance and **supply chain management** (**SCM**)
    to human empowerment. This chapter will cover a few of those use cases.'
  prefs: []
  type: TYPE_NORMAL
- en: Challenges of traditional technologies and solutions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The evolution of a human being to being able to understand exchanging value
    has its roots in the level of uncertainty. The greater the uncertainty, the less
    the trust in the exchange of value. The higher the certainty, the greater the
    exchange of value. There are various traditional challenges that blockchain tries
    to solve, such as trust, intermediaries, confidentiality, robustness, resilience,
    and availability. Let''s go over them now:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Trustless**: When you deal with a centralized system, you place trust on
    the system and the underlying set of people and machines that are responsible
    for taking care of the system and its security. Your inherent trust is in the
    organization you are dealing with. For example, we are using an email service
    for many years and sometimes send important personal emails as well. We have inherent
    trust in the organization that is offering those email services, with trust and
    certainty that our emails will neither be tampered nor lost. However, can it be
    modified, and can the data that you are trying to access from a bank or an institution
    such as a government be tampered with? The answer is yes. On the other hand, blockchain
    offers a trustless ecosystem, where information cannot be tampered and is delivered
    with certainty. A human''s quest to look for a trustless ecosystem is addressed
    by blockchain.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**No intermediary**: While talking about trust, we can sense that it is the
    foundation for the exchange of value between a business and a business or a business
    and its consumers. In addition, trust becomes more complicated, costly, inefficient,
    error-prone, and slow when it crosses borders, boundaries, and regulations. This
    equation is complicated when an intermediary gets involved. Blockchain is proven
    as a powerful alternative to a dis-intermediary, trust-free economy, where the
    trust is between businesses directly, between humans directly, or between business
    and humans directly, without an institutionalized intermediary or a third party
    as a centralized trust authority. With no intermediary and trust residing in the
    system/ecosystem itself, collaborations, partnerships, and opportunities are limitless.
    Moreover, blockchain allows organizations to transact with organizations, consumers,
    machines, or each other without any intermediary. To me, this is an evolution
    of trust, where the trust is in an ecosystem and technology that now allows parties
    to transact without a trusted intermediary. When it comes to transactions, it
    is paramount to understand confidentiality.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Confidentiality**: This is a person''s, organization''s, or party''s right
    to keep their data private, where their actions are neither recorded nor monitored.
    They can obtain privacy by being either anonymous by not letting others know anything
    about them, or by not posting any sensitive information or documentation in the
    transaction itself or transacting encrypted information. Confidentiality is all
    about a secure and controlled exchange of sensitive information to a person, an
    organization, or parties based on an agreement. It can also be termed as permissioned
    access, where permissions are granted to allow parties to access information.
    It''s in this technologically advanced era that technology has invaded privacy.
    Individuals'', organizations'', and institutions'' data and information is out
    in the public domain, which is hosted outside their firewalls or used by others
    to monitor and derive patterns and gauge activities.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An example of this is facial recognition, which isn't just a technology; it's
    a biometric identification that (interestingly) doesn't need your consensus. Fingerprints
    and retinal scans need your consensus; however, with facial recognition, someone
    can use your identity without your approval. Information can be derived and your
    patterns can be recognized with facial technology. Paying with a smile or linking
    an individual to photos or dynamic pricing are some examples of facial recognition
    applications prevailing today. With sophisticated pattern matching, technology
    can even relate data to an individual or an organization.
  prefs: []
  type: TYPE_NORMAL
- en: With blockchain technology, users are the owners and can decide the depth and
    level of information that can be shared and with whom. For example, a user can
    choose to share their facial recognition biometric identity for their government's
    security initiatives and not for the commercial use of pattern identification
    of the user's buying behavior.
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain offers confidentiality and privacy through encryption and access
    control. Persisted data is encrypted and stored, while in-transit data is secured
    by enabling two-way **Transport Layer Security** (**TLS**). Also, it encrypts
    transactions that are executed against the smart contract or chaincode. Role-based
    access control or attribute-based access control defines who can execute transactions
    based on users' role profiles or users' attributes. On top of that, you should
    only share data and information with those parties that should have access to
    it (for example, Hyperledger Fabric's private channels). This way, an organization
    assumes that information is only shared with those parties that should have access
    to it. Confidentiality can be enhanced to the next level if you use distributed
    ledgers, which aren't public, but are specific to channels on which only agreed
    parties are transacting.
  prefs: []
  type: TYPE_NORMAL
- en: '**Robustness**: We discussed trust in the previous section, and we learned
    that trust is about executing transactions correctly. However, trust extends to
    managing exceptions too. The ability of the system to manage trustworthy exceptions
    is called robustness. Robustness is paramount in blockchain as its consensus-based
    ecosystem that establishes trust without an intermediary. Blockchain can meet
    exceptions when, let''s say, two miners reach a solution to a puzzle at the same
    time. Blockchain offers the solution of following the longest chain, and consolidating
    a single chain within a cycle will help solve such a double mining issue. Similarly,
    the exception of double spending can be resolved by allowing the first transaction
    that is referring the digital asset to be accepted, and rejecting the second transaction
    that references the same asset. There are challenges with this, but the underlying
    robustness of the system enhances the trust. After all, in blockchain, trust is
    on the system itself, and it''s the robustness of the blockchain system that will
    attract businesses and individuals to it.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Resilience:** Resilience means the ability of an individual to recover from
    a state of shock, for example, a large mobile bill or if you just dropped your
    phone in water. How soon and positively you recover from these shocks defines
    your resilience. Similarly, in blockchain, resilience is the ability of the blockchain
    network to recover from a fault. Interestingly, due to the nature of blockchain
    technology, it is inherently resilient. With DLT, transactions are backed up and
    available on the participating nodes. As more and more nodes are added to the
    blockchain network, its availability increases. Since the data is available in
    each node, resilience is not an issue. It''s distributed, and so there''s no single
    point of failure, and it''s also decentralized, which means there''s no single
    authority. This leads to excellent disaster recovery in a system where nodes can
    attach or detach from the blockchain network at any time.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Availability:** Since a blockchain network doesn''t need a centralized authority
    to trust and maintain it, and it''s also resilient and nodes can attach and detach
    anytime, the availability of the system is enhanced. As more and more nodes get
    attached to the network, the network becomes more available. It''s even classed
    as available when a single node is alive in the blockchain network. With no missed
    transactions and no human errors, and a system where all transactions meet the
    consensus, blockchain offers a resilient, robust system. Transactions are immutable
    and can be validated, and the results of such validations are always consistent.
    Imagine a system with so many benefits over traditional technology; it entices
    businesses and enterprises to believe that blockchain is a revolution*.*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Design strategy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This section will cover the details around designing a blockchain solution to
    build a business network. Many enterprises, entrepreneurs, and organizations are
    analyzing blockchain. They are adopting blockchain to gain transactional speed
    for business-to-business transactions, store information in an immutable way,
    and share it securely. For businesses, blockchain is a platform where peers exchange
    values via transactions, without the interference of a central arbitrator. All
    of this is good; however, where should we start? This section covers defining
    a design strategy for blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: 'I have used the following terms from my book, *We Wake With Noah, *and found
    it interesting that the self-improvement concepts I explored in that book can
    be applied to technology as well :'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Explore** | **Engage** | **Experiment** | **Experience** | **Influence**
    |'
  prefs: []
  type: TYPE_TB
- en: '| Use case identification | *As*-*is* flow | Acquire skills | Analyze outcome
    | Share |'
  prefs: []
  type: TYPE_TB
- en: '| Justifying the use case | *To-be flow* | Be agile | Measure outcome | Influence
    |'
  prefs: []
  type: TYPE_TB
- en: '| Structure of the blockchain network | Holistic solution design | Develop,
    test | Analyze lessons |  |'
  prefs: []
  type: TYPE_TB
- en: '| Business network goals | Choosing MVP | Elevate, test |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| Governance | Draw long term vision | Deploy |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| Dispute and arbitrator | Future enhancements |  |  |  |'
  prefs: []
  type: TYPE_TB
- en: '|  | Define scope |  |  |  |'
  prefs: []
  type: TYPE_TB
- en: '|  | Define storyboard |  |  |  |'
  prefs: []
  type: TYPE_TB
- en: The preceding table lists the design strategy for a blockchain solution. This
    section will discuss it in more detail.
  prefs: []
  type: TYPE_NORMAL
- en: 'It is always conducive to run workshops and sessions with enterprise key stakeholders
    when you''re making various decisions, such as use case identifying and justifying
    the use case though blockchain technology. It also helps to determine the type
    of blockchain, define, governance and arbitrators, and so on. The following principles
    can be followed during workshops:'
  prefs: []
  type: TYPE_NORMAL
- en: Define the workshop as a business workshop and list technical questions that
    can be answered in subsequent technology workshops.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Put an emphasis on identifying the use case and justifying them by answering
    and rating various factors.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Continually gauge the audience's reactions, questions, and inclination toward
    factors, which maybe align toward or away from blockchain. Feed that to the justifying
    question (as listed in the following section) for further enhancement of the question's
    outcome.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understand the *as*-*is* and *to*-*be* processes as they help align the solution
    with the business needs.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Include blockchain experts, technology experts, and security experts in the
    workshops, as they help to answer specific technology questions, and also help
    them gravitate toward the real business needs.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Identify key stakeholders and build a consortium of stakeholders (business consortium
    and technology consortium) so that you can run subsequent workshops more effectively.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Run parallel design sessions with the technology consortium. An early design
    session brings two very important things to the equation: simplicity and clarity.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use the business consortium's feedback at the start and end of the design session
    and, similarly, technology consortium feedback at the end of the business sessions.
    This will help you establish equilibrium and keep things on track.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Explore
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This section covers the identification and justification of use cases as candidates
    for blockchain technology. We will also cover identifying a blockchain's type,
    governance, and arbitrators.
  prefs: []
  type: TYPE_NORMAL
- en: Identifying and justifying use cases
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Kick-start workshops will identify the use case, draft it at a high level, and
    analyze blockchain as a candidate to address the use case at hand. This exploration
    is critical as it ensures that all the parties reach a consensus to employ blockchain
    in order to address use case. It helps to quantify the need for a blockchain-based
    solution.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following is a list of factors that will be used in the equation to quantify
    the need for blockchain as a solution for the use case. For the chosen use case,
    quantify the need for blockchain based on the following factors:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Truth**:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Is there a need for reconciliation between parties?
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Is there a silo of information among the enterprise, its partners and suppliers,
    and so on?
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Intermediaries**:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Are there existing intermediaries?
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Are these intermediaries only ensuring trust?
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Is there a need to include participants with similar common problems?
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Multi-party**:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Does this use case result in sharing information with others?
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Do multiple parties need to update reports?
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Do you need information from other sources or stakeholders?
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Is it a similar problem that other parties encounter?
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Transaction**:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Does this use case need the enterprise to report the accuracy of transactions?
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Does this use case need transactions to be transparent?
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Does this use case need transaction privacy?
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Does it require high transaction throughput?
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Authority**:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Do you need regulatory authority among participants?
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Do you foresee the inclusion of other parties?
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Standards and other solutions**:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Does this use case easily highlight assets (or can you easily identify assets?),
    transactions, and events?
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Does this use case lead to ease in digitalizing the asset in your business value
    chain?
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Can you address it better with a traditional technology?
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: What is the algorithm to quantify the need for blockchain?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For the aforementioned factors, ensure that you draft two separate factors
    for each question—a criticality factor question and a satisfaction factor question.
    The answers to these questions should be given by the participants. For example,
    the first factor on **truth** can be expanded with the following questions:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Criticality factor**: Is reconciliation between parties critical?'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Satisfaction factor**: Is the current reconciliation between parties satisfactory?'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Formulate all other factors and expand them to gauge the criticality factor
    and satisfaction factor. This becomes key to the equation that will help justify
    the need for blockchain. Here, I''m attempting to formulate an equation to justify
    the need for blockchain: let me call it the **blockchain justifying equation**
    (**BJE**).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s use this BJE to quantify the need for blockchain. Assign a number to
    the use case factor and check whether the employment of blockchain is justified
    or not for the given use case. In other words, we can say that use case factors
    are paramount in highlighting the usability of blockchain. In this section, I
    will try to draft an equation to justify the need for blockchain. The need for
    blockchain is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Justified**: When the use case is critical to the enterprise, but it is not
    well served currently. This means that they are not satisfied with the current
    solution.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Not Justified**: When the use case is not critical to the enterprise, but
    it is currently well served. This means that they are satisfied with the current
    solution.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conclusively, we will consider the need for blockchain when the **outcome**
    is justified; otherwise, there is no need for blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: Building the equation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Work through the workshops and sessions to make the participants rate the aforementioned
    questions based on two factors: **criticality factor** (**CF**) and **satisfaction
    factor** (**SF**). These factors need to be independently answered on a scale
    of zero to five, where five is extremely critical and zero is not critical; similarly,
    five is extremely satisfied and zero is not satisfied.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let me formulate the equation:'
  prefs: []
  type: TYPE_NORMAL
- en: '*BN = CF + (CF - SF)*'
  prefs: []
  type: TYPE_NORMAL
- en: Here, *BN* is the blockchain need, *CF* is the criticality factor, and *SF*
    is the satisfaction factor.
  prefs: []
  type: TYPE_NORMAL
- en: This means:* blockchain need* = *criticality factor* + (*criticality factor* – *satisfaction
    factor*). Here*,* the *criticality factor* is the percentage of people who rated
    the factors as extremely critical, and the *satisfaction factor* is the percentage
    of people who rated the factor as extremely satisfactory. In this equation, *criticality* is
    the percentage of people rating the outcome very or extremely important and *satisfaction* is
    the percentage of people rating the outcome very or extremely satisfying.
  prefs: []
  type: TYPE_NORMAL
- en: If 80% of respondents rate the factors as extremely critical and only 20% of
    respondents rate it as extremely satisfactory, then the need for blockchain is
    justified. However, if only 20% of respondents rate the factors as extremely critical
    and 80% of respondents' rate it as extremely satisfactory, then the need for blockchain
    is not justified.
  prefs: []
  type: TYPE_NORMAL
- en: I will be developing this equation and plots around it in more detail in my
    next book, *Blockchain for Solution Designers*. For now, we will explore the equation
    and see how it can quickly help to quantify (justify) the need for blockchain
    for given a use case based on the various factors at hand.
  prefs: []
  type: TYPE_NORMAL
- en: Types of blockchain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Once you have justified the need for blockchain, you can analyze various factors
    to determine which blockchain solution fits the use case. The following diagram
    is self-explanatory in terms of identifying which type of blockchain suffices
    your requirement. However, if you want to get into the details for each type of
    blockchain, you can refer to the *Types of blockchain networks* section in [Chapter
    1](759718e2-3861-41c1-8d90-bad1deeceddb.xhtml), *Exploring Blockchain and BaaS*,
    where we provide details about the different types of blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following diagram illustrates the qualifiers to identify the need for a
    specific type of blockchain:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f65a54f8-abfd-4a32-b13e-cb9d0a75f4ee.png)'
  prefs: []
  type: TYPE_IMG
- en: Types of blockchain
  prefs: []
  type: TYPE_NORMAL
- en: The preceding diagram clearly highlights the qualifiers that can help you identify
    the type of blockchain network needed for the use case.
  prefs: []
  type: TYPE_NORMAL
- en: Structure of the business network
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Up until now, as part of the design strategy, we have identified the use case
    and the qualifiers/factors to justify the need for blockchain. We have also analyzed
    the use case and reached a consensus on the type of blockchain network needed.
    From this chapter onward, we will focus on permissioned blockchain since this
    book is about Hyperledger Fabric and permissioned blockchain. In this section,
    we will focus on defining a structure for the blockchain-based business network,
    particularly for permissioned blockchain networks. Permissioned blockchain business
    networks consist of more than one enterprise. They solve a common business problem
    and they want to reap the benefits of blockchain technology. Hence, the first
    question that arises is how to define the scope and structure of the permissioned
    blockchain network.
  prefs: []
  type: TYPE_NORMAL
- en: 'Defining a structure is paramount as it has impacts on tax, laws, jurisdiction,
    and governance. A permissioned blockchain network can be structured as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Consortium-based business networks**: They can be a joint venture, where
    all the members are just like the founder:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Joint ventures** (**JVs**): These are usually a massive centralized structure.
    JVs are rigid and usually put the founders in the driving seat. However, if the
    pitfalls of JVs are neglected, then it is an effective choice to form a consortium.
    Each member (with financial participation) can be added as a founder, and a JV
    legal entity can be formed between founders. They can democratically decide on
    the setup, maintenance, and operation of the consortium.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Founder-driven business networks**: Founder-driven business networks are
    set up and maintained by the founder. In such case, founders are able to handle
    business networks and can decide on future direction in technology. They can be
    of the following types:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Software license-driven**: This is when a technology company or a solution/platform
    provider takes care of the founder-driven business network; for example, IBM or
    Oracle build a solution from the ground up that takes care of the consortium.
    It might be possible that such configurations may lead to technological centralization.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Open source driven**: Such networks are run by an open source giant; the
    Hyperledger project by the Linux foundation and Ethereum are examples. Open source
    still lacks the capability for enterprise support, governance of the project,
    finance of the project, and so on.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Community-based business network**: These are blockchain networks that are
    driven by communities, which are either driven by standards or are autonomously
    driven:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Permissioned Decentralized Autonomous Organization** (**pDAO**): **Decentralized
    Autonomous Organizations** (**DAOs**) are just like cooperative organizations,
    where various collaborating parties provide funding. For example, funding for
    permissionless DAOs are arranged by ICOs and tokens. There can be a pDAO, where
    the governance of the consortium is set out in rules, which are embodied in the
    chaincode itself. In such a configuration, it is the chaincode that drives the
    operations of the consortium. The founders of the consortium can handle the setup
    and maintenance of the consortium. Operations are taken care of by the chaincode
    automatically.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: pDAOs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: pDAOs are decentralized (no single authority) and autonomous (self-sufficient).
    This means that they are community-based blockchain networks that are owned by
    participating enterprises. However, the operations, funding, and dispute resolutions
    are automatically taken care of by the chaincode that governs the autonomous permissioned
    organizations. Such a setup of the enterprise consortium will withdraw the need
    for a huge enterprise exercise in order to maintain and handle the operations
    of the consortium. All of the decisions are *democratic*, which is driven by the
    code that is handling the operation of the consortium. Such an enterprise consortium
    will define the *operation* and *maintenance* of the chaincode. Essentially, they
    will first define the constitution of the business network. Thereafter, the chaincode
    will be responsible for the automatic realization of the constitution. Every proposal,
    such as adding and removing a member, can be submitted as a transaction to the
    chaincode, which will take care of its execution on the blockchain itself. Such
    a community-driven blockchain network is for the blockchain, by the blockchain,
    and of the blockchain. Power is not in the hands of few; it is distributed, permissioned
    by the version of underlying permissioned network and chaincode for the specific
    use case, and autonomous.
  prefs: []
  type: TYPE_NORMAL
- en: I believe that pDAO might be the future for enterprise blockchain adoption.
    Such an enterprise consortium can be started with few participants. All of the
    legal certainty can be resolved with a legal structure, and differences can be
    resolved with arbitrators. Read my next book, *Blockchain for Solution Designers*,
    which extends and talks about pDAO in detail.
  prefs: []
  type: TYPE_NORMAL
- en: Business network goals and governance
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The previous section outlined how to define and choose a structure of the blockchain.
    The next step in the design strategy should focus on establishing business network
    goals and governance. Defining business network goals and governance will also
    need analysis results, which are collected when you're defining the blockchain
    network. This section goes in parallel with the previous section, as the decision
    that was made in the previous section is cemented here.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are various questions that need to be analyzed before a blockchain structure
    is chosen. Following are some of the questions that will have strong impact on
    choosing a specific blockchain structure:'
  prefs: []
  type: TYPE_NORMAL
- en: How can you ensure that the consortium doesn't lead to a concentration of power?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Who controls the consortium?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Do primary consortium members benefit more than later joiners?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Who benefits from the already existing infrastructure? Does this create confusion
    and infrastructure dependency or locking for the new joiners or late joiners?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Who decides on new member inclusion or member exclusion?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Who decides the inclusion/exclusion of non-core members of the consortium?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How will the operational decisions be executed?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How will the consortium be financed?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How are disputes realized?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Governance a wider topic and out of the scope of this book. For now, you should
    understand that it is an important step in defining the business network and scalability
    of the business network from the maintenance and operational perspectives.
  prefs: []
  type: TYPE_NORMAL
- en: Dispute resolution and arbitrators
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Since a consortium includes various enterprises and discrete parties, it has
    its own business complexities. These complexities can lead to disputes. Hence,
    a consortium must have arbitrators to settle disputes. This means that there is
    a need for an arbitration function for a consortium, which takes care of the participation
    contract (via a legal document) between members of the consortium. This can be
    CPA authorities who handle legal documents until these documents also turn into
    a smart contract (chaincode), which acts as a smart arbitrator.
  prefs: []
  type: TYPE_NORMAL
- en: A consortium can engage smart contract (chaincode) auditors to verify the smart
    contract and verify the interface and integration of the smart contract with external
    applications and data sources. Such independent auditors will offer assurance
    to the consortium and help in surfacing vulnerabilities.
  prefs: []
  type: TYPE_NORMAL
- en: Engage, experiment, experience, and influence
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Once you have explored the design strategy, it''s time to engage with the *as*-*is*
    flows and define the *to*-*be* flows. A holistic design of the solution will ensure
    synchronicity between the flows, use cases, and technology. Starting blockchain
    solutions with a Big Bang can be a problematic approach. Choose a **minimum viable
    product** (**MVP**) and draw a sketch for the future enhancement. Start with a
    simple, clear, yet critical use case. This ensures two benefits:'
  prefs: []
  type: TYPE_NORMAL
- en: Simplicity and clarity of the processes will help you to translate the requirement
    into a solution, in both an effective and timely manner
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Criticality of the use case will cement the prowess of the blockchain in handling
    critical use cases
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Start with a smaller blockchain business network. Try not to include arbitrators,
    regulators, and huge consortia. Design a solution that is scalable and dynamic,
    but build a minimum viable product to satisfy the use case's scope. Details regarding
    this are out of the scope of this book. You should follow the agile way to develop
    a blockchain-based solution. You can learn more about blockchain solution design
    in my next book, *Blockchain for Solution Designers*.
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain properties and use cases
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: DLT, like blockchain, is exemplified as one of the most disruptive technological
    advancements of this century. Although there are many regulatory challenges that
    it needs to overcome before being part of the majority, there are various properties
    of blockchain that make it truly revolutionary. It is the properties of blockchain that
    offer numerous potential for various industries. In this section, we will talk
    about blockchain properties and the use cases that are catalyzed by those properties.
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain properties
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: With the immense success of blockchain's first application, Bitcoin, and then
    the emergence of Ethereum and Hyperledger, enterprises, organizations, industry
    leaders, entrepreneurs, and individuals have realized that blockchain is not a
    quixotic dream but a true revolution that will propel today's enterprises across
    industries into a new era of digital enterprises. Various properties of DLT and
    blockchain can enable decentralized autonomous marketplaces, catalyze the reduction
    of friction in transactions and reconciliations, allow for the secure maintenance
    and sharing of decentralized records, and enable consumers and businesses to track
    the provenance of products, supplies, and documents.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following is a list of the most important properties of blockchain:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Shared and transparent access**: This results in the consistency of data,
    which allows participants to access consistent data as updates are replicated
    across participants. For a permissioned blockchain, it allows only authorized
    participants to access the data. Transparency enhances auditability and trust
    in the system and reduces the cost of frauds and audits.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Immutable**:Blockchain is append-only; records cannot be altered or deleted.
    Immutability enhances confidence in the information that exists on the system
    and reduces the potential for fraud many times.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Validated and undeniable transactions**: Transactions are added to the blockchain
    in blocks only after consensus is met. Hence, the validity of the transactions
    cannot be denied.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Isolated for confidentiality**: With a permissioned blockchain, transactions
    can be made accessible for views and only updates authorized participants or parties.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Decentralized**: DLT, like blockchain, is a decentralized P2P network with
    no central authority controlling the network. This results in the elimination
    of third parties and intermediaries, which further results in the reduction of
    transaction costs and near real-time execution of the transactions.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Distributed ledger**: All of the participating nodes maintain a copy of the
    ledger. Hence, reconciliation is not needed as the DLT guarantees data consistency.
    Since data consistency is guaranteed, the need for reconciliation, dispute resolution,
    and delays due to dispute resolution are omitted.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Smart contracts**/**chaincode**: Business logic is authored in smart contracts
    or chaincodes, which are validated by and shared among the participants, resulting
    in a high degree of trust in the automated business processes. Any asset can be
    represented digitally in a blockchain, and transactions are executed as per the
    business logic defined in those smart contracts or chaincodes.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Resilience**: A trustless ecosystem, robustness, confidentiality, and availability
    are a few other proprieties we discussed previously.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These properties not only upheave the evolution of various use cases across
    industries, but also address the perceived challenges of DLT and blockchain. Beyond
    that, blockchain can be customized to be a permissioned blockchain such as Hyperledger.
    In a permissioned blockchain, only authorized parties will have access to the
    blockchain network and can view and update only relevant information and tasks.
    Although a permissioned blockchain needs meticulous planning, it takes out the
    apprehension that enterprises have about blockchain. Various BaaSes, such as the
    **Oracle Blockchain Platform** (**OBP**), offer solutions for permissioned blockchain
    and ease the adoption of permissioned blockchain. Hence, BaaS is essentially catalyzing
    the adoption of the blockchain revolution.
  prefs: []
  type: TYPE_NORMAL
- en: Properties and use cases
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are several disruptive properties of blockchain that are attractive to
    various industries and address a wide array of use cases for a whole spectrum
    of industries. Although the financial industry is continuing to be the key emerging
    player in exploring and implementing DLT and blockchain use cases, there are several
    blockchain advantages/properties that are attractive to an industry, such as immutable
    permanent records, repository of public records, universal formats, accessibility,
    and notarization with timestamp hashing, and they also address various government
    and legal use cases such as voting, propositions, governance services, transactional
    organizations, P2P bonds, land titles, IP registration, tax receipts, notary services,
    and document registry services.
  prefs: []
  type: TYPE_NORMAL
- en: Similarly, properties such as distributed ledger, decentralized network, consensus
    for transactions, and trustless counter-parties attract use cases for markets
    such as digital currency, payments, remittance, financial sector, banking, insurance,
    settlements, trading, derivatives, internal audits, and crowdfunding. Blockchain
    and DLT attributes such as large-scale coordination, transaction security, and
    communication (also known as messaging) are attractive to **Internet of Things**
    (**IoT**) sectors and fuel enormous chains of use cases such as smart home networks,
    connected cars, smart cities, personalized robots, digital assistants, drones,
    and sensor networks. Healthcare use cases such as digital health wallets, smart
    health tokens, health data analytics, heath databanks, universal EMR, and personal
    development contracts are possible with DLT and blockchain properties such as
    large-scale multi-stream integration, privacy and security, real-time accessibility,
    and universal formats.
  prefs: []
  type: TYPE_NORMAL
- en: 'The aforementioned properties also result in addressing art, science, and AI
    use cases such as P2P resource nets, crow analysis, community supercomputers,
    films, art tracing and tracking, blockchain advocates, digital mind files, and
    blockchain learners. The following diagram lists some of the use cases, and is
    just a glimpse into the possibilities and opportunities that DLT and blockchain
    have evoked for businesses, organizations, and individuals:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f77be75a-d6ec-4aa0-a156-5b862d66c7c8.png)'
  prefs: []
  type: TYPE_IMG
- en: Properties and use cases
  prefs: []
  type: TYPE_NORMAL
- en: The preceding diagram shows the properties that helped realize various use cases
    for varied industries such as the government, legal, marketplace, IoT, and healthcare.
    The property columns list the properties, while the use case columns highlight
    the use case that's the most alluring for a given industry.
  prefs: []
  type: TYPE_NORMAL
- en: Types of use cases
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Broadly speaking, blockchain is an ideal use case for the decentralized consensus
    on ledgers that are appended by themselves on agreed transactions that are non-commutative.
    In this section, I'm going to categorize blockchain use cases into a few categories;
    however, I believe that there are millions of use cases, which is the result of
    non-commutative state transition functions. The listed categorization of use cases
    is exhaustive.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s start by simply putting the definition of blockchain into an equation:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Blockchain* = *Who Owns* - *What*, *When*, *and How much*'
  prefs: []
  type: TYPE_NORMAL
- en: '*When* is the timeline, while *How much* is the quantity. However, *What*,
    is the topic of discussion here. My efforts to categorize blockchain are centered
    on *What* and *Who*.'
  prefs: []
  type: TYPE_NORMAL
- en: '**WHAT:** *What* represents the assets; essentially, the scarce assets that
    are valuable. Assets such as identity, currency, land title, contract, vote, provenance,
    and payments are valuable and scarce. Let''s analyze various applications of blockchain
    and check what they actually manage. Bitcoin manages accounts, Ethereum manages
    contract states, Everledger manages events associated with diamonds, and trust
    lines are managed by Ripple, and so on. Similarly, for Hyperledger Fabric, assets
    can be tangible assets such as real estate and hardware, while intangibles are
    assets such as contracts and intellectual property. Hence, blockchain is a potential
    solution for those cases where the requirement is to transact those assets while
    establishing decentralized consensus by recording them on an immutable ledger.'
  prefs: []
  type: TYPE_NORMAL
- en: '**WHO:** At any given point in time, blockchain is a currency, a network, a
    protocol, or a platform. It is a notion that is driving the world toward a world
    of DAO or **Decentralized Autonomous Communities** (**DAC**). I will be using
    these terms interchangeably throughout.'
  prefs: []
  type: TYPE_NORMAL
- en: An organization or an enterprise is a set of people who are working together
    to achieve a certain defined set of goals and follow rules. Such organizations
    own assets and liabilities, which means there are sets of people and legal contracts
    that establish the truth in holding assets and owning liabilities. An organization
    acts because there is a mutual consensus between a key set of people to do so.
    Similarly, hiring someone means an employee has agreed to offer certain services
    while an employer has agreed to offer monetary and other benefits. In all of these
    cases, there are contracts (sets of rules).
  prefs: []
  type: TYPE_NORMAL
- en: 'The question is: do we really need management to execute these rules, or do
    we need certain jobs at certain business functions to execute these contracts?
    Industrialization answered this by incorporating machines at the bottom level;
    can DLT, such as blockchain, do it for the top levels as well? Organizations stand
    and operate on contracts and rules while following regulations, which are, again,
    a set of rules. Organizations execute these contracts and rules to generate revenue,
    offer services, and pay employees for the services they offer to the organization
    so that the organization can offer its services to their customers and pay taxes
    to the government. Can these not be achieved by software and, in particular, by
    DLTs such as blockchain and Hyperledger?'
  prefs: []
  type: TYPE_NORMAL
- en: To me, the answer is *yes*, and with minimal human involvement. There can be
    DAOs (also referred as DACs), where asset owners are the stakeholders, and smart
    contract and chaincode are the rules and contracts that take care of the daily,
    strategic, and tactical operations of the organizations. Participating nodes are
    the employees themselves, who take care of validating, verifying, and reaching
    consensus with minimum rewards. Yes, it's too early to fully chart the upcoming
    future of DAOs; it is possible to have a distributed one-world government where
    policies and relationships are taken care of by super smart contracts.
  prefs: []
  type: TYPE_NORMAL
- en: 'Well, jumping back to the present and glancing back at the preceding equation,
    let''s concentrate on the *Who*. While adopting blockchain, the key elements that
    you should look for are as follows: what are the assets and what is the consensus
    mechanism that the business will consent to when moving toward blockchain? Are
    you planning for a DAO or is your business planning to establish a business network
    where parties will interact and a consortium will be established? Here, I''m hinting
    toward the permissioned and permissionless world of blockchain. In either case,
    *Who* is important and needs to be determined. Since the world of DAOs and DACs
    is unwinding, I''m considering a marketplace fueled by smart contracts and chaincodes
    as a category of use case for blockchain. The more mature the world of DLT gets,
    the closer the world will move toward the reality of DAOs and DACs. Now, let''s
    get back to the equation again and look at the other two parts of the equation,
    other than *What *and *Who*. These two pieces are *When* and *How much*. Essentially,
    *How much* is a generic term for quantity and all the other parameters for an
    asset. *When* helps in analyzing the timelines, the dates of the events, and transactions.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, the question is, how to we derive information about *Who, When, What*,
    and *How much*? This information is part of the blockchain ecosystem and brings
    the third most important category of use cases, which is the analytics. Go into
    design and development and try to always put forward the visibility aspect of
    the solution. Based on the equation and the definitions around it, there are three
    primary categories of blockchain use cases:'
  prefs: []
  type: TYPE_NORMAL
- en: Digital assets
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Digital analytics
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Digital platform
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In this section, we will deep dive into these categories and list the subcategories
    of these blockchain use cases.
  prefs: []
  type: TYPE_NORMAL
- en: Digital assets
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'When we use the term digital assets, we are counting a plethora of assets with
    the following main categories:'
  prefs: []
  type: TYPE_NORMAL
- en: Tangible assets and
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Intangible assets.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Following are the subcategories for tangible assets :'
  prefs: []
  type: TYPE_NORMAL
- en: '**Financial assets**: Currency, equity (public and private), bonds, derivatives,
    commodities, finance, micro-finance, charity, and crowd funding.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Records**: Records can be public, semi-public, or other types as well:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Public records**:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Financial records, such as spending records, trading records, mortgage records,
    and service records
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Public records, such as business ownership records, regulatory records, business
    incorporation/dissolution records, health/safety inspections records, immigrant
    records, and government laws
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Titles, such as land titles
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Registries, such as vehicle registry and forensic evidence
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: License and permits, such as business license, building permits, and gun permits
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Certificates such as birth certificates, death certificates, and marriage certificates
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Digital identities, such as passport, SSN number, unique ID, voters ID, vote,
    a product's digital token, and so on
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Semi-public records**:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Certificates, that is, degree, grades, learning evaluation reports, and so on
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Records, such as employee records, behavioral records, medical records, accounting
    records, business transaction records, arbitration, supply records, delivery records,
    and citizenship records
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Private records**:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Contracts and escrows
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Personals, such as wills, trust, signatures, and GPS data
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Keys, such as car keys, hotel keys, apartment and home keys, locker keys, rental
    car keys, and package delivery keys
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Following are the subcategories for intangible assets :'
  prefs: []
  type: TYPE_NORMAL
- en: Intangible assets, such as coupons, tickets, patents, reservations, trademark,
    copyrights, licenses (such as software licenses, video game licenses, and movie
    licenses), domain, art proofs such as authorship, photo, and video or audio ownership
    records
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Miscellaneous, such as temperature records and sports records
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Here, we have tried to enlist some of these assets. However, there are use
    cases to manage and record these assets on a blockchain. In addition, there is
    a special category of use cases that deals with the provenance of some assets
    and is mostly implemented in SCM cases such as tracking from supplier to shelf,
    tracing medicines, and the custody of pills. The following are the possible subcategories
    of these use cases:'
  prefs: []
  type: TYPE_NORMAL
- en: Digital identity
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Provenance
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Records
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let's talk a bit more about these subcategories.
  prefs: []
  type: TYPE_NORMAL
- en: '**Digital identity**: Identity theft and identity fraud are common headlines
    from the digital world. Billions of record are stolen, lost, and exposed every
    year across the globe, and two thirds of data breaches are because of identity
    theft and identity fraud. Blockchain DNA includes immutability and native authentication,
    which curb identity theft and identity fraud. For example, if the identification
    system is based solely on biometrics, then identity verification issues are omitted.
    As a result, banks, governments, and organizations can use highly accurate results.
    Even before biometric identity verification becomes a reality (for the world,
    not just in specific cases), private key ownership is a highly secure and a proven
    way to manage identity, where keys are digital assets. Hence, user identities
    are managed and verified without the risk of exposing valuable information, such
    as personal data. Human identities, item identities, and uniqueness are verified
    and managed with digital tokens. A digital token is an asset that is the mapping
    of the physical item with a digital identity of the item. This digital token can
    then be used for SCM to prove provenance in order to provide the rights to intellectual
    property for example.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Records**: Blockchain is not a decentralized database; it is a system of
    records. Every day, every single moment, businesses are creating transactions
    with these assets, where assets are exchanged between suppliers, customers, partners,
    and individuals. Blockchain is a system that records these transactions and the
    digital identities of these assets. This is immutable and enhances the confidentiality
    of the information that exists on the system and reduces fraud opportunities.
    Also, transactions are added to the blockchain in blocks after a consensus is
    met. Hence, the validity of the transactions cannot be denied.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Provenance**: With a unique digital identity (digital token), any physical
    item can prove its authenticity and prove its origin. Since records are immutable
    in the ledger, an item can be traced from its origin to its end point. Provenance
    checks fake products and allows consumers to be informed before they pick the
    item as it now leaves the onus on the consumer because the consumer is fully informed
    of a product''s origins, journey, temperature during journeys, farms, region,
    and so on. Consumers can make informed decisions. With provenance, every product
    will speak the truth. Companies know about the materials they''re supplied with,
    can check whether any substandard items were used to build the product, and know
    about the potential issues they have.'
  prefs: []
  type: TYPE_NORMAL
- en: Beyond that, blockchain will remove the cost that organizations incur due to
    the inspection of items and products. This is why the item to market time is reduced
    while trust is increased manifold. For provenance, blockchain induces transparency,
    sustainability, and trust in the item and product. The end consumer is well informed
    about the product, its ingredients, and its journey, even before they pick it
    up. Blockchain allows intelligence tracking and tracing of the product and manages
    a product's digital identity (for example, serial numbers), records the origin,
    and marks the authentication of constituting components and tracks the entire
    journey of the transformation, packaging, shipping, storage, and shelving of the
    product while managing regulatory compliance, and recalls and checks the authenticity
    of the products.
  prefs: []
  type: TYPE_NORMAL
- en: These subcategories are interrelated. For example, for provenance, the product's
    digital identities are a must. Transactions on that product, such as transformation,
    packaging, shipping, storage, and shelving are recorded on the ledger so that
    the digital footprint of the product can be analyzed. These digital footprints
    help the consumer trace and track it. However, on a broader level, we consider
    them as drivers for use cases such as tracking and tracing analytics, although
    they are primarily about the digital records of the asset.
  prefs: []
  type: TYPE_NORMAL
- en: Digital analytics
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A blockchain ledger is a huge system of records that is immutable. As the world
    starts adopting more and more blockchain use cases, think about the immense data
    contained in a permissionless blockchain. Even permissioned blockchains will have
    consortiums or private data that will continue to grow massively. Analytics and
    predictive analytics on blockchain will uncover many stories, facts, and insights.
    Such an ecosystem will offer real-time, trusted, and unaltered information, which
    will empower not only enterprises but also smaller organizations and individuals
    to analyze information, and in permissioned blockchains, relevant (authorized)
    information.
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain has numerous use cases in financial technologies, such as trade financing,
    where smart contracts and decentralized applications (dApps) can be created to
    enhance the speed of payments and reduce the time to execute transactions across
    the boarders and parties. Blockchain smart contracts, chaincode, or dApps can
    streamline clearing and settlement functions as well. These dApps will result
    in enormous transactions and trade data, contracts, and transaction data are executed
    against those contracts. This data is extremely useful for strategic and tactical
    purposes, and digital blockchain analytics will help in analyzing the blockchain
    data. This result in blockchain analytics use cases such as **Anti-Money Laundering** (AML)
    and fraud analytics, risk analysis, trade execution, operation analysis, compliance
    reports, and regulatory reports.
  prefs: []
  type: TYPE_NORMAL
- en: Digital platform
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A consortium of organizations can build a platform to allow their customers
    to interact with them as a unified system. Alternatively, several individuals
    can vote for change from their home or smart device, and the results will be available
    the same day. All of this is possible with the modern array for transformative
    applications built on blockchain platforms. Such applications are termed dApps.
  prefs: []
  type: TYPE_NORMAL
- en: dApp offers a decentralized platform to build decentralized applications. These
    dApps inherit many of the benefits of blockchain, such as P2P interactions, trustless
    systems, and consensus for reliability. Since dApps' inherited blockchain benefits
    are built on a blockchain platform, data isn't recorded centrally, and it's distributed.
    This overrules the possibility for a single point of failure, enhances transaction
    speeds because no reconciliation is needed, reduces costs because third parties
    are not involved, and reduces fraud and its associated costs while enhancing transparency.
    The cost and time it takes applications to get to market is greatly reduced and
    blockchain is easily integrated with legacy systems, hence giving enterprises
    the opportunity for blockchain to coexist with their legacy systems.
  prefs: []
  type: TYPE_NORMAL
- en: Beyond dApps lies the world of DAO and DAC. Smart contracts/chaincodes can be
    authored in such a way that they can execute most of the functions of a business.
    Blockchain can run a business by executing legal contracts and rules authored
    as part of smart contracts or chaincode and refer to records, data, and documents
    that are recorded on the blockchain ledger.
  prefs: []
  type: TYPE_NORMAL
- en: The dApps marketplace is a major area where many applications are available
    that solve simple to complex problems, which are built on blockchain platforms
    such as Ethereum for permissionless applications, Hyperledger Fabric for permissioned
    use cases, and Hyperledger and **Internet of Things Association** (**IOTA**) for
    IoT-based use cases. For example, stock trading follows T+3, where trade is settled
    three days after it's accepted. With blockchain, trade can be settled instantly.
    Government regulations can be absorbed into dApps and DAO because regulatory compliance
    are government rules that can be coded into smart contracts or chaincodes. This
    will infuse regulations into dApps and DAOs/DACs. Refer to the previous section
    for details on DAOs/DACs.
  prefs: []
  type: TYPE_NORMAL
- en: The blockchain and IoT marriage offers an ecosystem where machine-to-machine
    interaction is recorded, processed, and shared. Blockchain adds immutable recording
    of IoT data to the blockchain ledger, which brings in trustlessness and transparency
    to IoT systems. With digital identities of the devices, blockchain allows authentication,
    verification of the identities of devices, and opens up a multitude of use cases
    for permissioned and permissionless use cases. IOTA is a data layer for IoT, and
    it relies on a DLT called **directed acyclic graph** (**DAG**), where the focus
    is on executing and recording transactions between machines.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following diagram shows different use cases based on the three primary
    categories of use cases:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f6a730ce-825a-46fc-ba74-760372e9a5e5.png)'
  prefs: []
  type: TYPE_IMG
- en: Categorized use cases
  prefs: []
  type: TYPE_NORMAL
- en: The following section explores a few of the use cases in depth.
  prefs: []
  type: TYPE_NORMAL
- en: Exploring use cases
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In the *Design strategy* section*,* we tried to define a design strategy for
    a blockchain-based business solution, which has five steps: explore, engage, experiment,
    experience, and influence. In this section, we will concentrate on the first step.
    In this step, we will explore a few blockchain use cases. They are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Real property registry and transfer of ownership
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Know your customer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Invoice factoring
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Government – real property registry and transfer of ownership
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Real properties are recorded and maintained by governments, mostly at the local
    government level. For example, a country assessor is responsible for recording
    and maintaining the country's property records. Although a few countries are digitized,
    many countries still use traditional methods and rely on a paper-based system.
    More or less, recording results in legal title ownership, recording of the transaction,
    and checking unlawful disposal. Essentially, the record is proof of legal ownership
    of the title. In this recording process, the government is the trusted authority
    which maintains property records, assesses its values, and collects taxes. As
    a trusted central authority, the government body offers trust and advocates transparency.
    In addition, the government's central authority also offers a procedure to recognize
    the property rights, secure documents, display property rights as public records
    for transparency, and offer seamless methods to transfer ownership of these rights
    and records transfer transactions. In a nutshell, the public looks for records
    and rights maintenance, the transference of titles and rights, and the records
    of transfer transactions and trust.
  prefs: []
  type: TYPE_NORMAL
- en: Doesn't this sound like an effective use case that can be addressed though blockchain?
    In fact, many local and international governments have started adopting blockchain
    to digitally record land title records on blockchain. It helps in many ways, such
    as transparency, protecting records, checking fraudulent transfers, and recording
    transfers. This use case covers a simple blockchain solution for real property
    registry, assessment, and listing.
  prefs: []
  type: TYPE_NORMAL
- en: Challenges with the current process
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Recording a deed incurs administrative costs. Usually, a deed is delivered either
    though eForm, post, email, or in person on paper to the recording office. Then,
    it is scanned and uploaded to document stores. This results in the posting of
    records to central storage. From that point onward, recorded information is used
    to determine the ownership of the record. That ownership of the record is also
    made available to the public for reference. Any further transaction, such as transfer
    of ownership, needs to happen in the same central storage. This is costly, inefficient,
    error-prone, and time-consuming.
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain, the savior
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Records will be stored on the blockchain or the government's central repository,
    and its references can be on the blockchain. Refer to the *Large* *object storage
    -* *on-chain or off chain* section in [Chapter 3](6aaa9b0a-84b6-4fca-82c3-864e22d616b0.xhtml), *Delving
    into Hyperledger Fabric*, for more details on large object storage. Land or property
    titles are recorded as digital assets and are available on the blockchain for
    public reference. Transactions can be executed against those assets and assets
    can be transferred quickly. Government bodies don't need to scan documents all
    of the time, print labels, record files, and maintain them. All the information
    for that digital asset is available in the immutable blockchain. Tax transactions
    can be executed against those assets as well. Property values can be assessed,
    and that value assessment can be posted as a transaction for those digital assets
    (properties) on the blockchain. Everything is recorded in one place, and analytics
    and reports can be generated over blockchain records. Blockchain serves as a traceable
    and auditable history of records for all of the transactions that are performed
    on digital assets (properties).
  prefs: []
  type: TYPE_NORMAL
- en: Various transactions, such as the one parcel change transaction (where the digital
    asset is split, combined, or reclassified), can be recorded on blockchain. Various
    propositions, such as 58 and 193 (referring props in California), that result
    in real property transfer transactions between parents and children or between
    grandparents and grandchildren can be recorded on the immutable ledger. Various
    other life cycle events, such as address changes, and any property attribute changes
    can be recorded as well. Since data is available on the blockchain, it's easy
    to share it with other departments, and it also makes it easy for other departments
    to connect with one source to get hold of the relevant information. Various other
    transactions can occur on the digital asset, such as valuation, assessment, and
    roll corrections, which can transact on the digital asset and can be recorded
    for auditability and traceability.
  prefs: []
  type: TYPE_NORMAL
- en: 'A blockchain solution for real property (also known as *real estate* or *realty*)
    registry could be a **RealPropertyChain** registry. It''s a blockchain solution
    where real property records such as land records and building records are recorded.
    These properties are identified as a digital asset on a blockchain, and transactions
    on those digital assets (records) are recorded on the blockchain platform:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/10da4939-eff4-4a67-8c7e-96a519a00ef5.png)'
  prefs: []
  type: TYPE_IMG
- en: Blockchain solutions for property registry and assessment
  prefs: []
  type: TYPE_NORMAL
- en: 'The preceding diagram shows a simple blockchain solution for real property
    registry, assessment, listing, and analytics. It is a blockchain platform with
    the following components:'
  prefs: []
  type: TYPE_NORMAL
- en: There is a dApp to register real properties, which will also verify and associate
    taxpayers with it. It's called a **Real Property Record Management System**. Recorded
    real property will have a digital identity, and the system will recognize it as
    a unique digital asset with an ownership that's defined and a taxpayer that's
    identified. If a property is already recorded, then the property's unique digital
    asset ID can be used to verify it and its ownership.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There is a dApp that allows you to list properties. Again, the property owner
    authorizes the listing of properties. The listing will allow you to buy and sell
    properties. Today, there are **Multiple Listing Services** (**MLSes**), which
    is a real property database for which realtors pay a fee to list, buy, and sell
    properties. Various websites, such as Zillow, collaborate with these MLSes for
    residential properties, while other companies such as CoStar partner with MLSes
    to deal with commercial properties. For you to sell your property, you need to
    pay agents that are registered to these MLSes. It's sometimes 6 to 9% of the sales
    price. It is an expensive affair and, for you to get a better deal, you might
    need to work with an MLS for a wider market reach. A blockchain-based dApp is
    looking to list *authorized* properties on the blockchain. Buying and selling
    are now for everyone, and it's transparent, and transactions are immutable as
    well.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A dApp can also be created to analyze real property data, which can showcase
    trends, assessment value changes, and transactions on a property.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Smart contracts such as **Appraisal & Assessment** can be created, which can
    take care of the transfer of ownership, construction permits, and so on. For example,
    when a transfer occurs against a property (digital asset), the blockchain receives
    a copy of the deed. Smart contracts will determine whether a reappraisal is required
    using state law. If reappraisal is required, then a new market value of the property
    is determined and new assessment values are communicated to the taxpayer by the
    smart contracts communication services. Such a smart contracts will also take
    care of exemption rules such as disability exemption and veteran exemption. In
    addition, certain transfer of ownership, such as a husband to wife, doesn't lead
    to reappraisals. These smart contracts deal with such appraisal rules and can
    create new assessed values for the taxpayer. Smart contracts can also communicate
    with the taxpayer with a new assessment to let property owners appeal if they
    don't agree with the assessed values.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other systems, such as the legal and judiciary systems and tax collectors, can
    easily connect with the blockchain and access relevant authorized information
    from it.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Advantages of blockchain solutions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Advantages of blockchain solutions for property registry, listings, and assessments
    are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Efficiency**: Deeds recording is expensive today. Bringing a property registry
    to blockchain platforms results in **Property as an Asset service** (**PaaAS**),
    where it is recorded immutably. Subsequent transactions such as change of ownership,
    assessments, and appraisals can be taken care of by smart contract, which adds
    efficiency; it is less error-prone and more efficient.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Real time**: Property records are updated in real time. Transactions such
    as transfer of ownership, assessments, and reappraisal calculations can be performed
    by smart contracts almost immediately. Blockchain enhances the transparency and
    accuracy of public information in real time.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Immutable transactions**: Since the digital asset registry and transaction
    records are on DLT, it is immutable, is prone to attacks, and is tamper-proof.
    Natural disasters such as the one that happened in Haiti, where land records were
    destroyed can occur. This cannot happen on an immutable ledger such as a blockchain.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Trust**: Blockchain facilitates trust, transparency, efficiency, accuracy,
    and security to property registry and recording, records transactions on the property,
    listing, automated appraisals and assessments, ease of integration, and so on.
    This demonstrates that blockchain is a powerful alternative to centralized real
    property recording, ownership, and transaction systems.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Social factor
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Such blockchain-based solutions for land title registry can mean a lot for countries
    such as Honduras, where the World Bank issued dollars to aid Honduras' government
    in digitizing land titles. The centralized system was not a viable solution as
    corrupt players could have hacked and tampered with it. The blockchain solution
    is the most suitable solution for such a problem as it's immutable and cannot
    be tampered with. Another example is India, where two thirds of civil cases are
    related to land and property. According to government data, there are 22 million
    pending cases. Of these, 6 million have been dragged out for more than five years.
    On a blockchain platform, land and property records are digital assets with a
    unique digital identity. They are stored immutably on the ledger, and blockchain
    system will take care of the transactions on these digital assets, such as transference
    of ownership, change in attributes, new constructions, and loans. Users, authorized
    agencies, and governments can track and trace the entire history for a digital
    asset almost instantly. Such a system will be a boon for highly unorganized and
    corrupt regions.
  prefs: []
  type: TYPE_NORMAL
- en: Crowd funding of real estate properties
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Another interesting use case, which is in line with the preceding use case,
    is related to the crowdfunding of properties. Crowdfunding a property, where tokens
    represent part of the ownership of the property, has existed for a long time.
    However, the issue arises when you want to liquidate and your partners aren't
    ready at that point in time. With token-based ownership of digital assets such
    as a property, you can trade your tokens without worrying about issues and liquidate
    at your will and need. Tokens or a fixed number of digital tokens can represent
    the percentage of ownership for a digital asset such as property (land, a building,
    or an apartment). Based on the percentage, you will receive rental income or dividends.
    This is an open window for those who want to enter real estate and want to invest
    in real estate but also want to start with small investments. Now you can own
    a fraction of a business, a fraction of a home, or a fraction of an apartment
    and have potential earnings from its rental or dividends.
  prefs: []
  type: TYPE_NORMAL
- en: FinTech – know your customer
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In order to check regulatory risks, money laundering, unauthorized financing,
    and so on, banks are spending billions of dollars in order to onboard new customers
    and maintain compliance for existing customers. Although opening accounts is a
    simple, straightforward process, it involves regulatory processes to identify
    and further verify the applicant. These processes are known as on-boarding processes,
    also known as **know your customer** (**KYC**). This process faces constant regulatory
    changes and needs to be up to date to meet compliance. It is complex, time-consuming,
    and costly. Roughly, each bank spends 60 to 300 million dollars annually. It takes
    approximately 5 to 45 days per KYC and, on average, it takes 24 days for a new
    account to be on-boarded. Along with that, financial institutions need to maintain
    their systems and processes to remain compliant with changing regulatory requirements.
    In addition, a customer doesn't have a unified experience because it changes from
    bank to bank. On top of this, banks collectively spend billions of dollars on
    AML yearly.
  prefs: []
  type: TYPE_NORMAL
- en: It is evident that the burden in all financial institutions and banks results
    in poor client on-boarding. Blockchain is a potential savior in this case because
    it allows financial institutions to share the burden. Also, it removes the duplication
    of efforts since customer details will be available at the shared distributed
    ledger. With blockchain-enabled KYC processes, a customer's most recent information
    is available on the shared distributed ledger. Participating financial institutions
    and banks will reach a consensus if changes need to be made to the customer data,
    and they will participate in a joint consensus-based approach to verify applicants.
  prefs: []
  type: TYPE_NORMAL
- en: Currently, KYC/on-boarding involves document collection from the applicant,
    engaging credit agencies to verify an applicant's identity, and its inclusion
    into AML and illegal financial transactions. This chain involves multiple parties
    and it's costly, time-consuming, slow, and error-prone.
  prefs: []
  type: TYPE_NORMAL
- en: Present
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Currently, KYC, also known as on-boarding process, has many challenges. Firstly,
    there is a lack of structure as different departments such as credit, accounts,
    legal, and operations follow different processes. Since each department interprets
    regulations differently, there is a separate process per department for each financial
    institution or bank. Secondly, these processes need to comply with the constantly
    changing regulations. Thirdly, an array of documentation and various touch points
    are needed to verify that an applicant adds time and cost to the process.
  prefs: []
  type: TYPE_NORMAL
- en: Future
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Blockchain technologies such as cryptography, security, hashing, and properties
    such as transparency and immutability will ensure that the records that banks
    are trying to access are accurate, consistent, secure, reliable, and true. As
    data is shared, it is neither controlled by a single entity, nor is there a single
    point of failure. By virtue of consensus, data is reliable as well. The availability
    of a customer/applicant's personal data on blockchain is a concern that can be
    addressed. Each financial institution and bank can maintain their secured database
    to host their customer's data and only share a link to the blockchain or a token
    to the blockchain.
  prefs: []
  type: TYPE_NORMAL
- en: For an applicant, financial institutions or banks execute the KYC process, which
    verifies the identity of the application. This ensures that the individual isn't
    indulged in any illegal financial transaction. The applicant provides certain
    information to the financial institution or bank, which is then used by a bank's
    **line of business** (**LOB**), also known as departments, to verify applicant
    involvement in AML and illegal financing activities. With blockchain solutions
    for KYC, even participating banks can share the verification of the applicant
    over a secure shared immutable ledger. Any faulty transaction by a customer will
    raise an immediate alert to the blockchain, which can be consumed by participating
    banks and financial institutions to flag that customer.
  prefs: []
  type: TYPE_NORMAL
- en: KYC is essentially a movement of identity that involves multiple parties. Since
    blockchain is shared, immutable, reliable, and secure and doesn't have a single
    authority or single point of failure, banks and financial institutions don't need
    to reconcile.
  prefs: []
  type: TYPE_NORMAL
- en: 'With reference to the **Pre-Blockchain KYC Process** in the following diagram,
    applicants submit documents, including government-issued identity documents such
    as SSN number, driving license, and passport, along with other information such
    as employment, business tax, and address proofs. Banks collect these documents
    and, after initiating a scan, forward it to a central intermediary to verify the
    person''s identity. An intermediary will store such information in a central database
    and will incur costs to manage, maintain, and secure such data. This cost is further
    cascaded to banks. Also, each participating bank and financial institution repeats
    the same process:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/8da3efe2-cd93-4e17-af9e-ff5ee47910ed.png)'
  prefs: []
  type: TYPE_IMG
- en: KYC use case
  prefs: []
  type: TYPE_NORMAL
- en: Although the applicant submitted government-issued identities, a challenge still
    lies in the level of assurance. The major challenge is to prove *who you are*.
    Intermediaries will check various data sources, credit agencies, and so on, but
    still, the assurance level is a doubtful question.
  prefs: []
  type: TYPE_NORMAL
- en: What if the applicant is a first timer and doesn't even have a credit history?
    The missing chain in the highest level of assurance is biometric identification
    and verification of the applicant. The applicant can offer government-issued identity
    documents such as a passport, SSN number, or driving license, along with the inherence
    of biometrics. The highest level of assurance is guaranteed by matching biometrics
    and government identity. This translates to the fact of having biometric data
    at the central intermediary as well. This adds data protection costs and brings
    in sophisticated devices into the picture in order to scan an applicant's biometrics.
  prefs: []
  type: TYPE_NORMAL
- en: KYC/on–boarding processes on blockchain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: An applicant's unique digital identity is generated based on government issue
    identifiers and biometrics. Biometrics adds the highest level of assurance, which
    is backed by a government ID. This will serve as a unique digital identity of
    the customer on the blockchain network. This helps the applicant turned customer
    to perform cross border transactions. Also, with a blockchain KYC solution, there
    is no central intermediary, and so each bank and financial institution doesn't
    need to duplicate the effort of performing the KYC checks. A shared immutable
    distributed ledger will offer to request a bank or financial institution, along
    with the applicant's permission, for the customer's activities across banks and
    institutes. It will also raise an alert if there is anything suspicious, which
    will let banks and institutes flag that customer. For all subsequent transactions
    that are performed by the customer, their digital identity will be appended with
    each transaction, which means that each transaction has the customer's digital
    signature with the highest level of assurance. A customer's digital identity can
    help you access the customer's relevant information, such as their address, and
    let you track and trace any transaction. This will also help you flag any suspicious
    transaction and helps reduce false positivity. With blockchain, there is no central
    intermediary. Therefore, there's no single point of failure and the immutable
    shared ledger turns out to be the source of truth.
  prefs: []
  type: TYPE_NORMAL
- en: Process on the blockchain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'With blockchain, the KYC/on-boarding process will be as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: The applicant approaches the bank with their government ID, address, and tax
    proofs.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The bank will scan the document, along with the biometrics of the applicant,
    and push it to blockchain (assuming that banks start using biometrics for on-boarding).
    Alternatively, the customer can upload his/her KYC documents to blockchain directly
    (as shown in the preceding diagram).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The blockchain network will use certain attributes of the government IDs, such
    as SSN number and date of birth, and, if biometrics is enabled, will use biometrics
    to generate a unique digital identity of the applicant. If the applicant already
    exists, verified information will be returned to the bank.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When a new applicant is added to the blockchain, a transaction is performed,
    which the participating banks and financial institutions verify. Hence, digital
    identity is highly assured and added based on consensus, which also means it's
    reliable. Similarly, any change that's made to an already existing customer's
    information can be appended to the blockchain upon consensus. All updates and
    new additions are accessible to participating banks and financial institutions
    in real time.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The verified applicant is added as a customer.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Transactions that are performed by that customer will always include their digital
    signature.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This ensures the creation of the digital identity of the customer and that each
    transaction has a verified digital signature. However, let's discuss who can access
    the data on the blockchain. Since data is available on a shared distributed ledger,
    it can be accessed by third parties for verification, but only after permissions
    are granted. This checks any unauthorized access to data and empowers individual
    users and institutional users.
  prefs: []
  type: TYPE_NORMAL
- en: When an applicant provides information to a bank, along with its biometrics,
    their digital identity is created by the blockchain system. However, no-one can
    access it until the user grants consent. The user will own the data, and others
    can access it only after the user provides consent. Users can grant consent by
    logging in to the KYC portal (the unified KYC portal as a dApp of the blockchain
    network) and establishing a private key to the data. Now, banks and other third
    parties can access the data for verification purposes, and the data is still owned
    by the user. In addition, each verification request and each access to user data
    will leave a trace, which will empower the end user and inform them about who's
    using their information and for what.
  prefs: []
  type: TYPE_NORMAL
- en: The KYC process can be built as a smart contract, which can then be used across
    industries and further induces standardization. Blockchain offers strict checks
    against fraud as data on the blockchain is immutable. Banks and financial institutions
    don't need to perform verification individually. Since data is on a shared distributed
    ledger, various parties can access it, although it is still owned by the end user.
    As transactions are signed, any fraudulent activity can be spotted and communicated
    across the blockchain network. Since data on the ledger is trusted, reliable,
    and immutable, secondary verification isn't required. Scams and fraudulent transactions
    can be spotted in real time, which saves time and the aftermath of undetected
    frauds and scams.
  prefs: []
  type: TYPE_NORMAL
- en: The KYC solution we discussed previously is a distributed digital identity solution
    of the customers. In addition, bringing banks and financial institutions to the
    blockchain eliminates redundancy. Signing transactions with the digital identity
    helps check against frauds and identify illegal and fraudulent transactions. However,
    KYC and its underlying digital identity solution on blockchain have various use
    cases as well. It can find solutions to use cases that need a unique digital identity;
    for example, membership cards, legal systems, and credit rating agencies. Along
    with this, all of those use cases where transactions are involved are a prime
    candidate for a blockchain-based KYC solution. Examples include wagers, digital
    rights, micro financing, P2P lending, remittance, global payments, equity, debt,
    crowdfunding, derivatives, voting, ownership, title records, intellectual property,
    and healthcare.
  prefs: []
  type: TYPE_NORMAL
- en: FinTech – invoice factoring
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Small businesses usually bring their invoices to larger financing firms, such
    as banks, to obtain finance. Usually, business to business and business to government
    transactions, especially procurement, take longer for payments. Companies usually
    sell invoices to invoice financing companies and can obtain finance for the outstanding
    invoices. Usually, it's 75 to 85% of the invoice. The rest is received when the
    invoice financing company has received the amount, with the remaining amount having
    a fee deducted by the invoice financing company. The amount that's charged by
    the invoice financing company is usually dependent on the payment term. The longer
    the payment term is, the higher the fee that's charged by the invoice factoring
    company. Roughly, invoice factoring is a 3 trillion dollar business globally.
    Globally, approximately 2% of invoice financing is subject to fraud every year.
  prefs: []
  type: TYPE_NORMAL
- en: '**What is there today?**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Banks and financial institutions do have processes to check for fraud and tackle
    potential risks; however, it''s labor-intensive, manual, costly, time-consuming,
    and inefficient. The following are the main steps in invoice factoring:'
  prefs: []
  type: TYPE_NORMAL
- en: The supplier invoices its client with payment terms (30 to 90 days)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The supplier is in need of cash and thereby reaches an agreement to assign an
    invoice to factor, which includes fee and other details
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The invoice is sold and assigned to a factor
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The factor will advance approximately 80% of the invoice amount
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Upon invoice due dates, the client pays the factor the invoice amounts
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The factor pays the supplier with the remaining 20%, after subtracting the fee
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**What are we trying to solve?**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Mostly, firms take the invoices to multiple financing institutes or banks.
    Since financing firms and banks don''t have an integrated communication mechanism;
    it''s open to vulnerability, which can be the potential point of fraud. Since there
    are multiple places for the firm to take its invoices and since financial institutions
    and banks are not integrated, they don''t know about the same invoice being presented
    to various financing institutes or banks. In addition, an invoice can be altered
    and presented to various parties to obtain finance. Here, we are talking about
    two primary challenges: first, the same invoice is being sent to various parties,
    and second, an altered invoice is being sent to various parties. Along with this,
    other risks are associated with invoice factoring, such as non-payment and late
    payment, to name a few. Additional risks include that the invoices could be fake,
    or may have been tampered with. Invoice factoring is also a use case that''s used
    to verify the identities of the clients and their customers. Verified and established
    identities can reduce the risk of late and non-payment.'
  prefs: []
  type: TYPE_NORMAL
- en: Bringing invoice factoring to blockchain will result in decentralizing the entire
    process of invoice factoring. Blockchain smart contracts will take care of the
    agreements and verify the credit of participants (the supplier and its customer,
    in terms of the previous example in this section). Since it's an immutable record
    of transaction, where participating parties can also analyze the past performances
    of the participants, it helps to reduce risk and induce transparency to the overall
    process. Blockchain solutions, particularly based on Hyperledger Fabric, will
    help to reduce fraud that occurs in invoice financing, particularly due to a lack
    of communication and double invoicing.
  prefs: []
  type: TYPE_NORMAL
- en: Consortium–based solutions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A permissioned Hyperledger-based solution can help companies share key information
    about the invoice on the ledger and not give them a detailed insight about a customer's
    data. Even though it's a consortium of banks, financial institutions, and so on,
    they are competitors. In a consortium-based solution, the invoice seller will
    connect with a specific factor (bank or a financial institution). The digital
    identity of the invoice will be verified over the blockchain network. In the case
    of uniqueness, that invoice will be considered by the factor (bank or financial
    institution) for factoring. A supplier can allow their clients to be part of the
    blockchain network so that clients can directly pay the factors. All of the transactions
    will be processed through the blockchain network, which is signed by the digital
    identity of the transacting party and will include information about the digital
    identity of the invoice (digital asset).
  prefs: []
  type: TYPE_NORMAL
- en: As you can imagine, the digital identity, also known as the digital token, of
    the invoice is issued by the blockchain network and will be unique. Hence, a double
    invoice cannot occur on a blockchain network. Besides that, all of the parties,
    such as banks and financial institutions, are in the consortium; hence, everyone
    will know about the invoice, which eliminates any communication issues. This will
    also check any chances of the seller taking the same or a tampered invoice to
    multiple lenders at the same time. If they do so, the invoice will be paid for
    only one request, and an act of double invoicing will be recorded permanently
    on the blockchain, which can hit the credit rating of the seller. As the blockchain
    network evolves, more emphasis can be given to the credit scores of the sellers
    and lenders. The better the rating of a seller is, the less they need to pay as
    a fee would encourage legal and trustworthy sellers. With blockchain, invoice
    factoring can also be taken forward to small and medium investors.
  prefs: []
  type: TYPE_NORMAL
- en: Marketplace solution
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Invoice sellers can use the blockchain platform via a dApp, which will allow
    them to choose the invoices that they want to sell. Once an invoice is marked
    for sale, a verified factor can accept the invoice. If the seller approves of
    it, this means that the seller has agreed to the factoring agreement and fees.
    In this case, a smart contract will issue payment transactions to the seller and
    the seller will be paid. Upon the due date, a smart contract will issue a debit
    transaction from the client's account to credit the factor account. Upon payment
    to the factor account, the smart contract will take care of the remaining payment
    to the seller and credit the fee to factor accounts.
  prefs: []
  type: TYPE_NORMAL
- en: In this entire journey, once an invoice is pushed to the blockchain platform
    for trade, all of the transactions are taken care of by the smart contract itself.
    Supplier, factors, and clients are invoiced, credited, and debited automatically
    by the smart contract. Certain attributes from the invoice can be used to generate
    a unique hash, also known as a digital identity, of the invoice itself. Any change
    in the invoice attribute will result in a change in the invoice hash and can easily
    be spotted by the blockchain network.
  prefs: []
  type: TYPE_NORMAL
- en: Tokenized marketplace
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'With blockchain, invoice factoring goes beyond the boundaries of banks and
    financial institutions. Small and medium investors can also participate in invoice
    factoring. Let''s say, *Invoice Buy & Sell* is a dApp built on a blockchain solution:'
  prefs: []
  type: TYPE_NORMAL
- en: The invoice seller can use that app and choose an invoice to trade.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The seller can set the invoice amount or smart contract based on the previous
    scores. The credit scores of the seller will modify the price of the invoice.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A blockchain smart contract (invoice factoring smart contract) will generate
    a digital identity (digital token) of the invoice and get it verified for duplicity.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Upon verification, the invoice will be tokenized based on the percentage or
    fraction of the invoice amount.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lenders (small, medium, or big) can own those tokens. Tokens represent the part
    that's due to be paid to the seller. Ownership of tokens means agreement to pay
    the seller.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Upon the due date, the smart contract will issue a debt transaction from the
    client's account to credit the factor account, based on the tokens owned by the
    lenders (factor accounts).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Upon payment to lenders (factor accounts), the smart contract will take care
    of the remaining payment to the seller and credit the fee to lenders/factor accounts.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following diagram shows the invoice factoring process, with and without
    blockchain:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/d6662c79-6bf0-4c44-b6cc-40e8a199a4db.png)'
  prefs: []
  type: TYPE_IMG
- en: Invoice factoring use case
  prefs: []
  type: TYPE_NORMAL
- en: Since this is a token-based approach, small, medium, and big lenders can buy
    invoices across the border with the immutability, trust, and reliability of the
    blockchain network.
  prefs: []
  type: TYPE_NORMAL
- en: Engaging with a use case
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In the *Design strategy* section, we tried to define a blockchain design strategy
    that consists of five steps: explore, engage, experiment, experience, and influence.
    In this section, we will concentrate on the second step. During this step, we
    will engage with one of the use cases we defined in previous section. [Chapter
    5](fff87d3c-430b-46d8-96a0-159ff6508987.xhtml), *Managing Solution on Oracle Blockchain
    Platform*, and [Chapter 6](0bf3e2e3-9ad5-4a97-aa1a-20a0aa7da463.xhtml), *Developing
    Solutions on Oracle Blockchain Platform*, take care of experimenting with the
    solution. There, we will define another use case and try to build the chaincode
    for the solution. We will also set up and configure a blockchain network to run
    the chaincode and use integration via REST to connect with the chaincode.'
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, while engaging with the use case, we will start by defining
    the flow—first the *as*-*is* flow and then the *to*-*be* flow. We have covered
    a lot in terms of the flow in the previous section, which is why this section
    will be about the *as*-*is* flow. During the engaging process, we will learn about
    the art of defining a model, including assets, data models, transactions, participants,
    events, and access controls. Once the flow is defined and the components are identified,
    we will look into the integration architecture and infrastructure configuration
    of the use case.
  prefs: []
  type: TYPE_NORMAL
- en: 'The steps to engage and define a blockchain-based business network for a given
    use case is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Define the *as*-*is* flow to identify the problem and define a high-level flow
    (*to*-*be*)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Identify and define the blockchain network components:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Identify the participants.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Define the asset and data model.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Define the business flow in transactional details. This allows you to identify
    the transactions and events.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Defining the flow
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This use case covers account receivable factoring, also termed as invoice factoring.
    It is a financial transaction that allows businesses to generate quick values
    out of their outstanding invoices. We will start by defining the *as*-*is* flow
    and then the *to*-*be* flow, which allows us to identify various blockchain components.
  prefs: []
  type: TYPE_NORMAL
- en: As-is flow
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Sellers make a transaction with the customer and raise an invoice. These invoices
    are due in 30 days, 90 days, or whatever, depending on the business terms of the
    supplier and their customers. Hence, their customers don't pay the sellers immediately.
    In those cases, where the seller wants immediate cash to operate or generate more
    business, they can opt to sell their outstanding receivables. This allows sellers
    to meet their immediate needs. The invoice seller usually puts the outstanding
    invoice for sale at a discount. The buyer usually accepts the discount and immediately
    pays the seller. However, the buyers only pay the discounted amount, for example,
    90% of the total invoice amount. Behind the scenes, the buyers check the credit
    history of the payer (customer) since it is the customer who will finally pay
    the buyer. During this process, there are three parties—the invoice seller, the
    invoice debtor (payer), and the invoice factor (buyer). Such invoice factoring
    is also referred to as account receivables financing or account receivables factoring.
    It is a kind of **asset-based lending** (**ABL**), which allows a seller's account
    receivables to be collateral.
  prefs: []
  type: TYPE_NORMAL
- en: To-be flow
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: At a high level, the supplier delivers goods to its customers—customer A and
    customer B. The supplier issues invoices to these customers for payments. Invoice
    1 is due in 30 days to customer A and invoice 2 is due in 90 days to customer
    B. The supplier needs immediate cash and puts invoice 1 and invoice 2 for sale
    at a discount of 5% and 10%, respectively. Bank 1 and Bank 2 are also participants
    of the blockchain-based business network (KonsensusChainBC). They browse for the
    available invoices and factor them. Bank 1 factors invoice 1 and pays 95% of the
    invoice value to the supplier, while Bank 2 factors invoice 2 and pays 90% of
    the invoice value to the supplier. Factoring will result in the immediate payment
    of the invoice to supplier. Immediate payment confirmation will result in the
    customer's account receivables being updated. Now, customer 1 needs to pay Bank
    1, while customer 2 needs to pay to Bank 2\. The amount that's payable is updated
    with new payee details. Upon the due date, the account is paid from the payer
    (customer) account directly to the buyer's (the bank's) account, and the AP systems
    of the customers are updated. Upon 100% payment of the invoices by customer 1
    and 2, the buyer will pay the remaining invoice amount to the seller (supplier).
    However, the buyers (Bank 1 and Bank 2) will pay the remaining to the seller,
    minus a transaction fee.
  prefs: []
  type: TYPE_NORMAL
- en: Identifying and defining business network components
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The following diagram highlights various blockchain components for a business
    network called KonsensusChainBC. These components include assets, transactions,
    events, channels, and an access control list for the blockchain network. Since
    this blockchain business network is realized on a Hyperledger Fabric-based blockchain,
    it has a concept for channels as well. Although this step needs a detailed flow
    with transactions and events, you can jump to the transaction flow step and then
    come back to this section.
  prefs: []
  type: TYPE_NORMAL
- en: 'Based on the transaction flow, you get the following list of components on
    the blockchain business network:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/85b7bcbe-72f3-498d-a8ad-7ca14b805d2e.png)'
  prefs: []
  type: TYPE_IMG
- en: Blockchain components of KonsensusChainBC
  prefs: []
  type: TYPE_NORMAL
- en: Visit [Chapter 3](6aaa9b0a-84b6-4fca-82c3-864e22d616b0.xhtml),* Delving into
    Hyperledger Fabric*, for details on transactions, events, channels, participants,
    and access control. Visit [Chapter 5](fff87d3c-430b-46d8-96a0-159ff6508987.xhtml), *Managing
    Solutions using the Oracle Blockchain Platform,* to configure the network on the
    OBP.
  prefs: []
  type: TYPE_NORMAL
- en: Defining assets
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Assets can be anything of *value*. Assets can be tangible assets such as real
    estate, and hardware, and intangible assets such as contracts and certificates.
    Assets can be modified using chaincode transactions. Therefore, before we identify
    the transactions, it is good to identify the assets that will be transacted on
    the blockchain network. Assets such as identity, currency, land title, contract,
    vote, provenance, and payments are valuable and scarce. Let's analyze various
    applications of blockchain and check what they actually manage. Example accounts
    are the assets in Bitcoin, contract states are managed by Ethereum, diamonds as
    assets are managed by Everledger and so on. Similarly, for Hyperledger Fabric,
    assets can be tangible assets, such as real estate and hardware, where intangibles
    can be things such as contracts and intellectual property. This means, blockchain
    is a potential solution for those cases, where the requirement is to transact
    assets while establishing a decentralized consensus while recording them on the
    immutable ledger.
  prefs: []
  type: TYPE_NORMAL
- en: 'For this business case, the primary asset is the invoice. The following are
    some of the attributes of the asset:'
  prefs: []
  type: TYPE_NORMAL
- en: Invoice ID/number
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Invoice description
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Currency for transaction
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Original invoice amount
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Outstanding invoice amount
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Factored invoice amount (calculated based on discount percentage)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Invoice due date
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Invoice discount percentage
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Customer ID and other customer details
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Supplier ID and other supplier details (banks details as well)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Factoring participant ID (banks that agree to the *to*-*be* factor for the invoice)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Factor details (the factor bank's details, and so on)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Invoice milestone (status)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Payer agreement (true/false)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Defining participants
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This subsection concentrates on defining the participants for the business
    network. For the use case of invoice factoring, the following parties are involved:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Supplier, also known as the seller or issuer of the invoice:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The supplier is also a founder of a blockchain network (KonsensusChainBC), where
    various banks and customers are connected as participants
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The blockchain network's chaincode is presented as a dApp called KonsensusChain
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: This dApp offers a solution for selling the receivables. It also comes with
    user interfaces, which allows the supplier (seller), buyer (factor) and customer
    (payer/debtor) to transact
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The supplier's account receivables are connected with the blockchain network
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Customers (customer A and customer B) are also termed as payer/debtors:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The customer uses the KonsensusChain dApp to browse the milestone (status) of
    the invoices and checks the payee's information.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The customer's account payables are connected with blockchain network, where
    it subscribes to events that are emitted (raised) from the blockchain network.
    Various events allow the customer's **account payable** (**AP**) to update payee
    details and update their AP system with the ongoing status changes of the invoice.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Banks are the parties that buy the invoices. They are also known as buyers.
    There are two banks (Bank 1 and Bank 2) in this scenario.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Verifiers are participants that have access to the transaction summary, but
    don't have many details. An example of this would be a government authority, such
    as **Securities and Exchange Commission** (**SEC**), wanting to check fraud in
    invoice factoring and need access to the transaction summary.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following diagram shows the participants:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/0eaf4a4e-85c2-4814-bdc6-92054ca44b74.png)'
  prefs: []
  type: TYPE_IMG
- en: KonsensusChainBC business network participants
  prefs: []
  type: TYPE_NORMAL
- en: The circle with the dash line/blue color shows the channel between customer
    1, the supplier, and all the banks, while the circle with the solid line/red color
    shows the channel between customer 2 and the supplier. We will be discussing channels
    in more detail in [Chapter 3](6aaa9b0a-84b6-4fca-82c3-864e22d616b0.xhtml), *Delving
    into Hyperledger Fabric*.
  prefs: []
  type: TYPE_NORMAL
- en: Detailed flow with transactions and events
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This section is the core to identifying the transactions and events, and also
    lays the foundation for defining the channels and access control. We will cover
    all the remaining blockchain components in this section.
  prefs: []
  type: TYPE_NORMAL
- en: The **Supplier** (**seller**) offers to sell the receivables at a discount of
    5% the value of the invoice (invoice 1 is raised to customer A) and a discount
    of 10% the value of the invoice (invoice 1 is raised to customer B). Supplier's **Account
    Receivables** (**AR**) will automatically push invoices to the blockchain network
    (KonsensusChainBC). AR invoices that are pushed to the blockchain network are
    marked with '*Pending Approval for Factoring*' as milestone (status).
  prefs: []
  type: TYPE_NORMAL
- en: 'Following are the steps performed by **seller**, to ensure the availability
    of invoices for factoring :'
  prefs: []
  type: TYPE_NORMAL
- en: The KonsensusChain dApp offers a user interface for the supplier (role-based).
    This UI allows the **seller** to approve AR invoices, which are pending for factoring
    (*Pending Approval for Factoring*). Upon approval, the invoice will be available
    for banks to factor.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once approved, chaincode (the smart contract behind KonsensusChain dApps) will
    issue transaction *Trade AR Invoices*, and the milestone (status) of the invoice
    will be *Available for Factoring*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Banks** (**buyer**/**payer**) use the dApps (KonsensusChain) and the user
    interface that''s meant for buyers.'
  prefs: []
  type: TYPE_NORMAL
- en: Following are the steps performed by **payer :**
  prefs: []
  type: TYPE_NORMAL
- en: Bank 1 and Bank 2 use the dApps UI to browse the invoice, which is available
    for factoring.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: While browsing, dApp issues **View Available Invoices transaction.**
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The banks browse for invoices and choose the invoices to buy. This will result
    in transaction **Buy Available Invoices** and the milestone of the invoice changes
    to *Initiated for Factoring*:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Let''s assume Bank 1 bought the invoices of customer A and Bank 2 bought the
    invoices of customer B. Following are the results of this assumption :'
  prefs: []
  type: TYPE_NORMAL
- en: This status (*Initiated for Factoring*) change will result in the automatic
    execution of the *Factor Pay Discounted Invoice* transaction, and the milestone
    of the invoice will change to *Invoice Factored*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The *Factor Pay Discounted Invoice* transaction generates two events: *Factor
    Seller Event* and *Factor Payer Event*. The *Factor Seller Event* will result
    in following activities:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Bank 1’s system will pay 95% of the invoice amount to the supplier (against
    invoice 1 of customer A) and 90% of the invoice amount to the supplier (against
    invoice 2 of customer B)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Factor Seller Event* will also result in the supplier's AR system updating
    its records.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The **customer** (**debtor**/**payee**) account payable system will receive
    the *Factor Payer Event* from the chaincode. Following are the impact of *Factor
    Payer Event* and changes at the customer''s account payable (AP) :'
  prefs: []
  type: TYPE_NORMAL
- en: 'The *Factor Payer Event* will also result in the customer'' account payable
    (AP) system updating records:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Customer 1 and customer 2 are subscribed to the *Factor Payer Event* with filters
    containing unique customer identities, invoice identifiers, and the payee's account
    details. This will allow the AP system to associate payee details with the invoices.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: These events will contain details about the invoice for which they are listed
    as the payer/debtors. These invoices will now have the modified payee (banks)
    details. In this case, the bank's details and the bank's account details will
    be part of the event as well.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The customer's AP system will also invoke the *Pay Factor Directly* transaction.
    This is an agreement by the customer to pay the payee (invoice buyer/factor) directly.
    This will not lead to changes in the milestone of the invoice, but the *Payer
    Agreement* invoice attributewill be set to *true*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'When the invoice becomes due, that is, in 30 days for customer A and 90 days
    for customer B, KonsensusChain (chaincode) will automatically result in the payment
    of 100% of the invoice value to the payee (bank). Following occurs when the invoices
    are due :'
  prefs: []
  type: TYPE_NORMAL
- en: Invoices turning due, will result in the *Debtor Pay Invoice* transaction. This
    will changes the milestone of the invoice to *Debtor Pays Factor*
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Upon execution of the *Debtor Pay Invoice* transaction, chaincode will automatically
    result in the *Factor Pay Discounted Invoice* transaction, and the milestone of
    the invoice will be *Factor Pays Seller*. This will result into following :'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This step will result in the payment of the remaining invoice by the banks (buyers/factor)
    to the invoice seller (supplier).
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The factor (buyer) of the invoice will, minus a factoring fee, pay the remainder
    to the seller (the supplier, in this case).
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Upon payment, the seller system will automatically invoke the *Factor Pay Full
    Invoice* transaction. This is a final indicator to the KonsensusChain blockchain
    network indicating a successful payment receipt. At this final stage, the milestone
    (status) of the invoice will be *Invoice Factoring Completed*.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following diagram highlights the entire transaction flow:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/e0f82b37-340f-4fd1-a4e1-987501f23a56.png)'
  prefs: []
  type: TYPE_IMG
- en: Transaction flow
  prefs: []
  type: TYPE_NORMAL
- en: Integration architecture
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The following diagram shows how various systems can integrate with the blockchain
    business network. Applications can integrate with the blockchain network using
    REST, SDK, and events. This allows for simplified application development and
    integration with the blockchain network. Events allow SaaS, PaaS, and custom processes
    to subscribe to events and respond accordingly.
  prefs: []
  type: TYPE_NORMAL
- en: The business scenario that we have designed in this chapter is because all the
    participants are part of the KonsensusChain blockchain network and are using the
    dApp to execute transactions. Such dApps offer a role-based user interface, which
    allows participants to connect to the application and execute transactions. However,
    we also discussed transactions, which lead to updating account receivables and
    updating account payables. AR and AP are the SaaS and on-premise (E-Business Suite)
    applications of supplier and customer 1, respectively. Such applications can subscribe
    to blockchain events and act accordingly.
  prefs: []
  type: TYPE_NORMAL
- en: With reference to our business scenario, the seller (supplier) can integrate
    with the blockchain network (KonsensusChain) via REST and execute the *Trade AR
    Invoice* transaction. This transaction will result in invoice discovery at the
    blockchain network. The bank's application can connect their SaaS, PaaS, and custom
    processes with the blockchain network via REST and SDK. Customer 2 doesn't have
    SaaS and they build their processes and applications using BPM solutions. Such
    applications can also subscribe to blockchain events and connect via REST.
  prefs: []
  type: TYPE_NORMAL
- en: 'The verifier is using Java, Go, and Node.js for advanced integration:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/3f901411-06cc-4f00-8005-13f493e9b5e9.png)'
  prefs: []
  type: TYPE_IMG
- en: Integration architecture
  prefs: []
  type: TYPE_NORMAL
- en: Infrastructure of the business network
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Up until now, we've walk though the invoice factoring use case and modeled the
    business network (KonsensusChain) to realize the use case. We also learned about
    the integration options with the blockchain network. This section is dedicated
    to realizing the infrastructure of the business network. The use case we've discussed
    so far can be realized on a permissioned blockchain such as Hyperledger Fabric.
    Therefore, we will try to define the infrastructure using a cloud platform that
    is based on Hyperledger Fabric. We had a glimpse of OBP in the *BaaS* section
    of [Chapter 1](759718e2-3861-41c1-8d90-bad1deeceddb.xhtml), *Exploring Blockchain
    and BaaS*. In this section, we will try to realize the business use case over
    the OBP.
  prefs: []
  type: TYPE_NORMAL
- en: From an infrastructure perspective, Oracle offers a cloud hosted platform for
    Blockchain, and it is pre-assembled with various underlying services such as compute,
    storage, identity management (authentication), containers, object store (embedded
    archiving), log and management analytics (operations), and so on. Various SaaS
    applications, PaaS applications, on-premise applications, and legacy applications
    can integrate with blockchain using Oracle's integration cloud service and can
    subscribe to events that are raised (emitted) from the blockchain business network.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following diagram shows that OBP is built on top of Hyperledger Fabric:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ce189944-97ce-473f-b1d3-341be8f610da.png)'
  prefs: []
  type: TYPE_IMG
- en: OBP Leveraging Hyperledger Fabric
  prefs: []
  type: TYPE_NORMAL
- en: The supplier's (seller) organization plans to start a consortium and decides
    for a founder-based consortium, thus adding a few more participating organizations
    to it. To do so, they set up blockchain instances on the OBP. Each blockchain
    instance contains managed containers, virtual machines, identity management, block
    and object storage, and Kafka, the Oracle Event Hub cloud service. In this section,
    we will walk through the business case and try to realize the infrastructure for
    it.
  prefs: []
  type: TYPE_NORMAL
- en: 'KonsensusChain is a founder-based blockchain network with a chaincode that
    takes care of financial transactions, invoice buying and selling, payments to
    invoicing sellers, and receiving payments from end customers. KonsensusChain is
    set up on OBP. It has a physical machine for each organization (founder and participant).
    Since it is a production deployment, its ordering is based on Kafka, and the ordering
    nodes are made with the founder organization. This infrastructure also includes
    one **certificate authority** (**CA**) for each organization. With a requirement
    of less than 1,000 transactions per hour, this highly available configuration
    will look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Two fabric CA nodes replicated across separate virtual machines (VMs) for **high
    availability** (**HA**).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The supplier (founder) will have two peer nodes, while customers and banks have
    two peer nodes each.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 4 TB of storage.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A console node replicated on each VM for HA. This console can be used to manage
    participants, and the founder can use it to manage the chaincode.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The identity cloud service is integrated, which allows organizations to manage
    roles and identities.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There will be a container in an isolated VM for the chaincode. You can use the
    console to manage the chaincode.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The REST proxy nodes will be replicated across separate VMs for HA. These nodes
    offer the RESTful APIs.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A load balancer and operations management and monitoring are supplied as well.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An object store for configuration backup and replication of blocks across regions
    is provided.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The founder (seller/supplier) will have two Kafka orderers nodes, which are
    replicated across separate VMs for HA.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following diagram shows the infrastructure for the blockchain business
    network (KonsensusChain) that we discussed in this section:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/5fc2e6fd-d31c-4a51-8250-b9be9475c69c.png)'
  prefs: []
  type: TYPE_IMG
- en: Infrastructure for the blockchain business network
  prefs: []
  type: TYPE_NORMAL
- en: Each organization will get a blockchain instance (one founder and five participant
    instances). Each instance will include nodes—a peer node, a console node, a REST
    proxy node, and a CA node, while the founder will have an orderer's node. Instances
    are also integrated with the object store for the dynamic backup of configurations
    and ledgers. The backup includes ledger blocks, channel configurations, checkpoints,
    chaincode, and nodes for provisioning files and log files. Backup and restore
    are automatic processes. It also uses the Oracle event hub cloud service for Kafka
    at the orderer's nodes. The REST proxy nodes will allow for RESTful APIs, which
    further helps SaaS, PaaS and their applications to connect and integrate with the
    blockchain business network. With all of these services, containers, and the infrastructure,
    OBP takes care of high availability, scalability, and the resilience of the blockchain
    business network.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter highlighted the challenges and opportunities of DLT and blockchain.
    This chapter also drilled into various properties of blockchain and how those
    properties are upheaving the usage of blockchain in various scenarios. In this
    chapter, we also delved into modeling a use case and demonstrated the integration
    aspects and infrastructure for implementing a use case. The *Design strategy*
    section mentioned the five stages of this—explore, engage, experiment, experience,
    and influence. We also covered the initial two stages (explore and engage) of
    the design strategy. We explored the design strategy by examining various use
    cases, justifying the adoption of blockchain, and also tried to formulate an equation
    to justify/quantify the employment of blockchain for a given use case. Later,
    we engaged in the design strategy by defining a blockchain-based business network
    for a given use case. Here, we sketched flows and identified various blockchain-based
    business network components, such as assets, transactions, participants, events,
    access control, and channels. My next book, *Blockchain for Solution Designers*,
    covers design strategy extensively. In this edition, [Chapter 5](fff87d3c-430b-46d8-96a0-159ff6508987.xhtml), *Managing
    Solution on Oracle Blockchain Platform* and [Chapter 6](0bf3e2e3-9ad5-4a97-aa1a-20a0aa7da463.xhtml), *Developing
    Solution on Oracle Blockchain Platform*, covers the experimental part of the design
    strategy, where you will learn to build a chaincode and run it on a blockchain
    platform. This allows you to experiment with the blockchain platform. From the
    next chapter onward, we will be exploring Hyperledger, its architecture, and other
    details.
  prefs: []
  type: TYPE_NORMAL
