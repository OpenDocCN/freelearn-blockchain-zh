["```\nnpm install ibmiotf --save\n```", "```\n{\n  \"name\": \"sample-application\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Hands-On IoT Solutions with Blockchain - Chapter 1 App\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"start\": \"node .\",\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"author\": \"Maximiliano Santos\",\n  \"license\": \"ISC\",\n  \"dependencies\": {\n    \"ibmiotf\": \"^0.2.41\"\n  }\n}\n```", "```\n{\n  \"org\": \"<your iot org id>\",\n  \"id\": \"<any application name>\",\n  \"auth-key\": \"<application authentication key>\",\n  \"auth-token\": \"<application authentication token>\"\n}\n```", "```\nvar Client = require(\"ibmiotf\");\nvar appClientConfig = require(\"./application.json\");\n\nvar appClient = new Client.IotfApplication(appClientConfig);\n\nappClient.connect();\n\nappClient.on(\"connect\", function () {\n  console.log(\"connected\");\n});\n```", "```\n$ npm start\n> sample-application@1.0.0 start /sample-application\n> node .\nconnected\n```", "```\nvar Client = require(\"ibmiotf\");\nvar appClientConfig = require(\"./application.json\");\n\nvar appClient = new Client.IotfApplication(appClientConfig);\n\nappClient.connect();\n\nappClient.on(\"connect\", function () {\n  appClient.subscribeToDeviceEvents();\n});\n\nappClient.on(\"deviceEvent\", function (deviceType, deviceId, payload, topic) {\n  console.log(\"Device events from : \" + deviceType + \" : \" + deviceId + \" with payload : \" + payload);\n});\n```", "```\nnpm install ibmiotf --save\n```", "```\n{\n  \"name\": \"sample-device\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Hands-On IoT Solutions with Blockchain - Chapter 1 Device\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"start\": \"node .\",\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"author\": \"Maximiliano Santos\",\n  \"license\": \"ISC\",\n  \"dependencies\": {\n    \"ibmiotf\": \"^0.2.41\"\n  }\n}\n```", "```\n{\n  \"org\": \"<your iot org id>\",\n  \"type\": \"DeviceSimulator\",\n  \"id\": \"DeviceSimulator01\",\n  \"auth-method\" : \"token\",\n  \"auth-token\" : \"<device authentication token>\"\n}\n```", "```\nvar iotf = require(\"ibmiotf\");\nvar config = require(\"./device.json\");\n\nvar deviceClient = new iotf.IotfDevice(config);\n\ndeviceClient.log.setLevel('debug');\n\ndeviceClient.connect();\n\ndeviceClient.on('connect', function(){\n  console.log(\"connected\");\n});\n```", "```\n$ npm start\n> sample-device@1.0.0 start /sample-device\n> node .\n[BaseClient:connect] Connecting to IoTF with host : ssl://3nr17i.messaging.internetofthings.ibmcloud.co\nm:8883 and with client id : d:3nr17i:DeviceSimulator:DeviceSimulator01\n[DeviceClient:connect] DeviceClient Connected\nconnected\n```", "```\nvar iotf = require(\"ibmiotf\");\nvar config = require(\"./device.json\");\n\nvar deviceClient = new iotf.IotfDevice(config);\n\ndeviceClient.log.setLevel('debug');\n\ndeviceClient.connect();\n\ndeviceClient.on('connect', function() {\n  console.log(\"connected\");\n  setInterval(function function_name () {\n    deviceClient.publish('myevt', 'json', '{\"value\":' + new Date() +'}', 2);\n  },2000);\n});\n```", "```\nDevice Event from :: DeviceSimulator : DeviceSimulator01 of event myevt with payload : {\"value\":Sun May 20 2018 21:55:19 GMT-0300 (-03)}\nDevice Event from :: DeviceSimulator : DeviceSimulator01 of event myevt with payload : {\"value\":Sun May 20 2018 21:55:21 GMT-0300 (-03)}\nDevice Event from :: DeviceSimulator : DeviceSimulator01 of event myevt with payload : {\"value\":Sun May 20 2018 21:55:23 GMT-0300 (-03)}\nDevice Event from :: DeviceSimulator : DeviceSimulator01 of event myevt with payload : {\"value\":Sun May 20 2018 21:55:25 GMT-0300 (-03)}\n```"]