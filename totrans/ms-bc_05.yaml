- en: Chapter 5. Alternative Coins
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第五章. 替代币
- en: Since the initial success of bitcoin, many alternative currency projects have
    been launched. Bitcoin was released in 2009 and the first alternative coin project
    (named Namecoin) was introduced in 2011\. In 2013 and 2014, the altcoin market
    grew exponentially and many different types of alternative coin project were started.
    A few of those became a success, whereas many were unpopular and did not succeed.
    A few were *pump and dump* scams that surfaced for some time but soon disappeared.
    Alternative approaches to bitcoin can be divided broadly into two categories,
    based on the primary purpose of their development. If the primary purpose is to
    build a decentralized blockchain platform, they are called alternative chains;
    if the sole purpose of the alternative project is to introduce a new virtual currency,
    it's called an altcoin. Alternative blockchains will be discussed in detail in
    later chapters in this book.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 自比特币最初成功以来，许多替代货币项目已经启动。比特币于2009年发布，第一个替代币项目（名为Namecoin）于2011年推出。在2013年和2014年，替代币市场呈指数级增长，并启动了许多不同类型的替代币项目。其中一些取得了成功，而许多则不受欢迎且未能成功。少数是一些短期出现的*炒作和倾销*骗局，但很快就消失了。对比特币的替代方法可以广泛分为两类，根据其开发的主要目的。如果主要目的是构建去中心化的区块链平台，则称为替代链；如果替代项目的唯一目的是引入新的虚拟货币，则称为替代币。替代区块链将在本书的后续章节中详细讨论。
- en: This chapter is mainly dedicated to alternative coins (altcoins) whose main
    purpose is to introduce a new virtual currency (coin) although some material will
    also be presented on the topic of alternate protocols built on top of bitcoin
    in order to provide various services. These include concepts such as Namecoin,
    where the primary purpose is to provide decentralized naming and identity services
    instead of currency.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章主要专注于替代币（altcoins），其主要目的是引入一种新的虚拟货币（币），尽管部分内容也会介绍构建在比特币之上的替代协议，以提供各种服务。其中包括诸如Namecoin等概念，其主要目的是提供去中心化的命名和身份服务，而不是货币。
- en: Currently, as of late 2016, there are hundreds of altcoins on the market and
    they hold a certain monetary value. Many of these alternative projects are direct
    forks of bitcoin source code although some of those have been written from scratch.
    Some altcoins set out to address bitcoin limitations such as privacy. Some others
    offer different types of mining, changes in block times, and distribution schemes.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，截至2016年末，市场上有数百种替代币，并且它们具有一定的货币价值。许多这些替代项目直接是比特币源代码的分叉，尽管其中一些是从头开始编写的。一些替代币旨在解决比特币的局限，例如隐私问题。还有一些提供不同类型的挖矿、更改区块时间和分发方案。
- en: By definition an altcoin is generated in the case of a hard fork. If bitcoin
    has a hard fork then the other, older chain is effectively considered another
    coin. However there is no established rule as to which chain becomes the altcoin.
    This has happened recently with Ethereum, where a hard fork caused a new currency
    **ETC** (**Ethereum classic**) to come into existence in addition to the **Ethereum**
    (**ETH**) currency. Ethereum classic is the old chain and Ether is the new chain
    after the fork. Such a contentious hard fork is not desirable for a number of
    reasons. First it is against the true spirit of decentralization as the Ethereum
    foundation, a central entity, decided to go ahead with the hardfork even though not
    everyone agreed to the proposition; second it also splits the user community due
    to disagreement over the hard fork. Although a hard fork in theory generates an
    altcoin, it is limited in what it can offer due to the fact that, even if the
    change results in a hard fork, usually there are no drastic changes around the
    fundamental parameters of the coin. They usually remain the same. For this reason,
    it is desirable to either write a new coin from scratch or fork the bitcoin (or
    another coin's source code) to create a new currency with the desired parameters
    and features.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 按定义，另类币是在硬分叉的情况下生成的。如果比特币经历了一次硬分叉，那么另一个更老的链实际上被视为另一种币。然而，关于哪条链成为另类币并没有已经建立的规则。最近就发生了这样的情况，以太坊就出现了这种情况，一次硬分叉导致了一种新的货币**ETC**（**以太经典**）的产生，除了现有的**以太币**（**ETH**）。以太经典是旧链，以太是分叉后的新链。因为一次引发争议的硬分叉无法在许多方面令人满意。首先，它违背了去中心化的真正精神，因为以太坊基金会，一个中心实体，决定继续进行硬分叉，即使并非每个人都同意这一提议；其次，由于对硬分叉的分歧，它也分裂了用户社区。尽管从理论上讲，硬分叉会产生一种另类币，但由于即使改变引发了硬分叉，基础币的基本参数通常没有发生剧烈变化，它在所能提供的方面存在限制。通常它们保持不变。因此，最好要么从零开始编写一种新币，要么分叉比特币（或其他币种的源代码）以创建一个具有所需参数和功能的新货币。
- en: 'Altcoins must be able to attract new users, trades, and miners otherwise the
    currency will have no value. Currency gains its value, especially in the virtual
    currency space, due to the network effect and its acceptability by the community.
    If a coin fails to attract enough users then soon it will be forgotten. Users
    can be attracted by providing an initial amount of coins and can be achieved by
    using various methods. Methods of providing an initial number of altcoins are
    discussed as follows:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 另类币必须能够吸引新用户、交易和矿工，否则该货币将毫无价值。货币在虚拟货币领域获得其价值，主要是因为网络效应和社区接受能力。如果一种币无法吸引足够的用户，那么很快它就会被遗忘。可以通过提供初始数量的币来吸引用户，并且可以通过使用各种方法来实现。提供初始数量的另类币的方法如下所述：
- en: '**Create a new blockchain**: Altcoins can create a new blockchain and allocate
    coins to initial miners but this approach is now unpopular due to many scam schemes
    or *pump and dump* schemes where initial miners made a profit with the launch
    of a new currency and then disappeared.'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**创建新区块链**：另类币可以创建一个新的区块链并将币分配给初始矿工，但由于许多欺诈计划或*炒作和倒腾*计划，这种方法现在不受欢迎，初始矿工通过推出新币获利然后消失。'
- en: '**Proof of burn**: Another approach to allocating initial funds to a new altcoin
    is *Proof of burn*, also called a one-way peg or price ceiling. In this method
    users permanently destroy a certain quantity of bitcoins in proportion to the
    quantity of altcoins to be claimed. For example if 10 bitcoins were destroyed
    then altcoins can have a value no greater than the amount of bitcoins destroyed.
    This basically means that bitcoins are being *converted* into altcoins by burning
    them.'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**销毁证明**：为新另类币分配初始资金的另一种方法是*销毁证明*，也称为单向锚定或价格上限。通过这种方法，用户可以永久销毁与要认领的另类币数量成比例的一定数量的比特币。例如，如果销毁了10个比特币，那么另类币的价值就不会超过所销毁的比特币数量。这基本上意味着通过销毁比特币来将其*转换*为另类币。'
- en: '**Proof of Ownership**: Instead of permanently destroying bitcoins, an alternative
    method is to prove that users own a certain number of bitcoins. This proof of
    ownership can be used to claim altcoins by tethering altcoin blocks to bitcoin
    blocks. For example, this can be achieved by merged mining in which effectively
    bitcoin miners can mine altcoin blocks while mining for bitcoin without any extra
    work.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**拥有权的证明**：与永久销毁比特币不同，一种替代方法是证明用户拥有一定数量的比特币。这种拥有权的证明可以用于通过将另类币区块系到比特币区块来认领另类币。例如，这可以通过合并挖矿来实现，这样一来比特币矿工就可以在挖掘比特币的同时挖掘另类币区块，而不需要额外工作。'
- en: '**Pegged sidechains**: Sidechains, as the name suggests, are blockchains separate
    from the bitcoin network but bitcoins can be transferred to them. Altcoins can
    also be transferred back to the bitcoin network. This concept is called a two-way
    peg.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**挂钩侧链**：侧链，顾名思义，是与比特币网络分开的区块链，但比特币可以转移到它们上面。替代币也可以转回比特币网络。这个概念被称为双向挂钩。'
- en: 'Investing and trading these alternative coins is also a big business, albeit
    not as big as bitcoin but enough to attract new investors and traders and provide
    liquidity to the market. Combined altcoin market capitalization is shown as follows
    in the graph generated from [http://coinmarketcap.com](http://coinmarketcap.com):'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 投资和交易这些替代币也是一项大生意，虽然规模不及比特币，但足以吸引新投资者和交易者，并为市场提供流动性。从 [http://coinmarketcap.com](http://coinmarketcap.com)
    生成的图表显示了综合替代币市值如下：
- en: '![Alternative Coins](img/image_05_001.jpg)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![替代币](img/image_05_001.jpg)'
- en: This shows that at the time of writing the Combined Altcoin Market Capitalization
    is more than 2 billion US Dollars
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这表明，在撰写本文时，综合替代币市值超过了20亿美元。
- en: 'Current market cap (as of Oct 2016) of the top 10 coins is shown as follows:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 当前前十大币种的市值（截至2016年10月）如下所示：
- en: '![Alternative Coins](img/5975_table.jpg)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![替代币](img/5975_table.jpg)'
- en: The data is taken from https://coinmarketcap.com/
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 数据来源于 https://coinmarketcap.com/
- en: There are various factors and new concepts introduced with alternative coins.
    Many concepts were invented even before bitcoin but with bitcoin not only were
    new concepts, such as a solution to the Byzantine Generals' problem, introduced
    for the first time but also previous concepts such as hashcash and Proof of Work
    were used in an ingenious way and came into the limelight. Since then, with the
    introduction of alternative coin projects, various new techniques and concepts
    have been developed and introduced. In order to appreciate the current landscape
    of alternative cryptocurrencies, it is essential to understand some theoretical
    concepts first. In the following section, some new concepts that have been introduced
    with altcoin projects are introduced to the reader.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 替代币引入了各种因素和新概念。许多概念甚至在比特币之前就已经发明，但是随着比特币的出现，不仅首次引入了新概念，比如拜占庭将军问题的解决方案，而且以巧妙的方式使用了之前的概念，比如哈希现金和工作证明，并且备受瞩目。从那时起，随着替代币项目的推出，各种新技术和概念得以开发和推出。为了了解替代加密货币的当前格局，首先必须理解一些理论概念。在以下部分，向读者介绍了一些随替代币项目引入的新概念。
- en: Theoretical foundations
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理论基础
- en: In this section, various theoretical concepts are introduced to the reader that
    have been developed with the introduction of different altcoins in the past few
    years.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，向读者介绍了过去几年引入不同替代币时开发的各种理论概念。
- en: Alternatives to Proof of Work
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作证明的替代方案
- en: The **Proof of Work** (**PoW**) scheme in the context of cryptocurrency was
    first used in bitcoin and served as a mechanism to provide assurance that a miner
    had completed the required number of work in order to find a block. This in return
    provided decentralization, security, and stability for the blockchain. Also, this
    is the main vehicle in bitcoin for providing decentralized distributed consensus.
    PoW schemes are required to have a much desired property called *progress freeness*,
    which basically means that the reward for consuming computational resources should
    be random and proportional to the contribution made by the miners. In this case,
    some chance of winning the block reward is given to even those miners who have
    comparatively less computational power. The term *progress freeness* was introduced
    by *Arvind Narayanan .et.al* in the book *Bitcoin and Cryptocurrency Technologies*.
    Other requirements for mining computational puzzles include adjustable difficulty
    and quick verification. Adjustable difficulty ensures that the difficulty target
    for mining on the blockchain is regulated in response to increased hashing power
    and the number of users. Quick verification is a property which means that mining
    computational puzzles should be easy and quick to verify. Another aspect of the
    PoW scheme, especially the one used in Bitcoin (Double SHA-256), is that since
    the introduction of ASICs the power is shifting towards miners or mining pools
    who can afford to operate large-scale ASIC farms and this challenges the core
    philosophy of the decentralization of bitcoin.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**工作证明**（**PoW**）方案在加密货币背景下首次用于比特币，并作为一种机制，提供了保证矿工已经完成了所需数量的工作以找到一个区块。这反过来为区块链提供了去中心化、安全性和稳定性。此外，这也是比特币中提供去中心化分布式共识的主要手段。PoW方案需要具有一个被称为*进度自由*的非常理想的属性，这基本上意味着消耗计算资源的奖励应该是随机的，并且与矿工所做的贡献成比例。在这种情况下，即使是那些计算能力相对较低的矿工也有一定机会赢得区块奖励。术语*进度自由*是由*阿尔温德·纳拉扬*等人在书籍*比特币和加密货币技术*中引入的。挖掘计算难题的其他要求包括可调整的难度和快速验证。可调整的难度确保了区块链上的挖矿难度目标能够根据增加的哈希功率和用户数量进行调节。快速验证是一种属性，意味着挖掘计算难题应该易于验证且快速。
    PoW方案的另一个方面，特别是比特币中使用的方案（双SHA-256），是自ASIC推出以来，算力正在向那些能够负担得起大规模ASIC矿场运营的矿工或矿池倾斜，这挑战了比特币去中心化的核心理念。'
- en: There are a few alternatives that have been proposed such as ASIC-resistant
    puzzles and are designed in such a way that building ASICs for solving this puzzle
    is infeasible and does not result in a major performance gain over commodity hardware.
    A common technique used for this purpose is to apply a class of computational
    hard problems called *memory hard* computational puzzles. The core idea behind
    this method is that as puzzle solving requires a large amount of memory, it is
    not feasible to be implemented on ASIC-based systems. This technique was initially
    used in litecoin and Tenebrix where the Scrypt hash function was used as an ASIC-resistant
    PoW scheme. Even though this scheme was initially advertised as ASIC resistant,
    recently Scrypt ASICs have now become available disproving the original claim
    by litecoin.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些替代方案被提出，例如抗ASIC谜题，设计得这样一种谜题，使得构建ASIC来解决这个谜题变得不可行，且不会比通用硬件带来重大的性能提升。用于此目的的一种常见技术是应用一类称为*内存硬*计算难题的计算难题。这种方法的核心思想是，由于解决谜题需要大量内存，因此在基于ASIC的系统上实现它是不可行的。这种技术最初在Litecoin和Tenebrix中使用，其中Scrypt哈希函数被用作ASIC抗性PoW方案。尽管最初将此方案宣传为抗ASIC，但最近Scrypt
    ASIC现已推出，否定了Litecoin的原始声明。
- en: Another approach to ASIC resistance is where multiple hash functions are required
    to be calculated in order to provide PoW. This is also called a chained hashing
    scheme. The rationale behind this idea is that designing multiple hash functions
    on an ASIC is not very feasible. The most common example is the X11 memory hard
    function implemented in Dash. X11 comprises 11 SHA3 contestants where one algorithm
    outputs the calculated hash to the next algorithm until all 11 algorithms are
    used in a sequence. These algorithms include blake, bmw, groestl, jh, keccak,
    skein, luffa, cubehash, shavite, simd, and echo.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 抵抗 ASIC 的另一种方法是需要计算多个哈希函数以提供 PoW。这也称为链式哈希方案。这个想法背后的理念是，在 ASIC 上设计多个哈希函数是不太可行的。最常见的例子是
    Dash 实现的 X11 内存硬函数。X11 由 11 个 SHA3 参与者组成，其中一个算法将计算的哈希输出到下一个算法，直到所有 11 个算法都按顺序使用。这些算法包括
    blake、bmw、groestl、jh、keccak、skein、luffa、cubehash、shavite、simd 和 echo。
- en: This approach did provide some resistance to ASIC development initially but
    now ASIC miners are available commercially and support mining of X11 and similar
    schemes. A recent example is ASIC Baikal Miner, which supports X11, X13, X14,
    and X15 mining. Other examples include miners such as iBeLink DM384M X11 miner
    and Pinidea X11 ASIC miner.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 初始时，这种方法确实对 ASIC 的发展提供了一些抵抗，但现在 ASIC 矿工机已经商业化，并支持 X11 和类似方案的挖矿。最近的一个例子是 ASIC
    Baikal Miner，它支持 X11、X13、X14 和 X15 挖矿。其他例子包括矿工，如 iBeLink DM384M X11 矿工和 Pinidea
    X11 ASIC 矿工。
- en: Perhaps another approach could be to design *self-mutating puzzles* that intelligently
    or randomly change the PoW scheme or its requirements as a function of time. This
    will make it almost impossible to be implemented in ASICs as it will require multiple
    ASICs to be designed for each function and also randomly changing schemes would
    be almost impossible to handle in ASICs. At the moment, it is unclear how this
    can be achieved practically.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 或许另一种方法可能是设计*自变异难题*，它可以智能地或随机地改变 PoW 方案或其要求，作为时间函数。这将使其几乎不可能在 ASIC 中实现，因为每个功能都需要设计多个
    ASIC，并且随机变化的方案几乎不可能在 ASIC 中处理。目前尚不清楚如何在实践中实现这一点。
- en: PoW has various drawbacks and the biggest of all is energy consumption. It is
    estimated that the total electricity consumed by bitcoin miners will be equivalent
    to that of Denmark by 2020\. This is huge and all that power is in a way wasted;
    in fact no useful purpose is served except for of mining. Environmentalists have
    raised real concerns about this situation.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: PoW 有各种缺点，其中最大的缺点是能源消耗。据估计，到 2020 年，比特币矿工所消耗的总电力将相当于丹麦的电力消耗。这是巨大的，而且所有的能源在某种程度上都被浪费了；事实上，除了挖矿之外，没有提供任何有用的用途。环保主义者对这种情况提出了真正的担忧。
- en: It has been proposed that PoW puzzles can be designed in such a way that they
    serve two purposes. First their primary purpose is in consensus mechanisms and
    second to perform some useful scientific computation. This way not only can the
    schemes be used in mining but they can also help to potentially solve other scientific
    problems too. This proof of useful work has been recently put into practice by
    Primecoin where the requirement is to find special prime number chains known as
    Cunningham chains and bi-twin chains. As the study of prime number distribution
    has special significance in scientific disciplines such as physics, by mining
    Primecoin miners not only achieve the block reward but also help in finding the
    special prime numbers.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 有人提出 PoW（工作量证明）难题可以设计成具有两个目的。首先，它们的主要目的是在共识机制中，其次是执行一些有用的科学计算。这样一来，这些方案不仅可以用于挖矿，而且还可以帮助潜在地解决其他科学问题。这种有用工作的证明最近由
    Primecoin 实践，其中的要求是找到特殊的素数链，称为 Cunningham 链和双生链。由于素数分布的研究在物理等科学学科中具有特殊意义，通过挖掘
    Primecoin，矿工不仅可以获得区块奖励，还可以帮助找到特殊的素数。
- en: Proof of Storage
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 存储证明
- en: Also known as proof of irretrievability, this is another type of proof of useful
    work that requires storage of large number of data. Introduced by Microsoft Research,
    this scheme provides a useful benefit of distributed storage of archival data.
    Miners are required to store a pseudo, randomly-selected subset of large data
    in order to perform mining.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 又称为不可检索性证明，这是另一种需要存储大量数据的有用工作证明类型。由微软研究引入，此方案提供了分布式存储归档数据的有用好处。矿工需要存储大数据的伪随机选择子集以执行挖矿。
- en: Proof of Stake
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 权益证明
- en: This proof is also called virtual mining. This is another type of mining puzzle
    that has been proposed as an alternative to traditional PoW schemes. It was first
    proposed in PeerCoin in August, 2012\. In this scheme, the idea is that users
    are required to demonstrate possession of a certain amount of currency (coins)
    thus proving that they have a stake in the coin. The simplest form of stake is
    where mining is made comparatively easier for those users who demonstrably own
    larger amounts of digital currency. The benefits of this scheme are twofold; first
    acquiring large amounts of digital currency is relatively difficult as compared
    to buying high-end ASIC devices and second it results in saving computational
    resources. Various forms of stake have been proposed and are briefly discussed
    below.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这个证明也被称为虚拟挖矿。这是另一种挖矿难题，被提出作为传统PoW方案的替代方案。它首次在2012年8月的PeerCoin中提出。在这个方案中，用户需要证明拥有一定数量的货币（硬币），从而证明他们对硬币有一份利益。权益证明的最简单形式是，对于那些可以明确拥有更多数字货币的用户，挖矿相对容易。这种方案的好处是双重的；首先，相对于购买高端ASIC设备，获取大量数字货币相对困难，其次，它可以节省计算资源。已经提出了各种形式的权益证明，并且以下简要讨论。
- en: Proof of coinage
  id: totrans-31
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 硬币年龄证明
- en: The age of a coin is the time since the coins were last used or held. This is
    a different approach from the usual form of Proof of Stake where mining is made
    easier for users who have the highest stake in the altcoin. In the coin-age-based
    approach the age of the coin (coinage) is reset every time a block is mined. The
    miner is rewarded for holding and not spending coins for a time period. This mechanism
    has been implemented in Peercoin combined with PoW in a creative way. The difficulty
    of mining puzzles (PoW) is inversely proportional to the coin-age, meaning that
    if miners consume some coin-age using *coin-stake* transactions then the PoW requirements
    are relieved.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 硬币的年龄是硬币上次被使用或持有的时间。这与通常的权益证明形式不同，后者会使拥有最高权益的用户挖矿变得更容易。在基于硬币年龄的方法中，每次挖掘一个区块时，硬币的年龄（硬币年龄）都会被重置。矿工会因为持有而不花费硬币而获得奖励一段时间。这个机制已经以一种创造性的方式与PoW结合在Peercoin中实现。挖矿难题（PoW）的难度与硬币年龄成反比，这意味着如果矿工使用*硬币权益*交易消耗了一些硬币年龄，那么PoW要求会减轻。
- en: Proof of deposit
  id: totrans-33
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 存款证明
- en: The core idea behind this scheme is that newly minted blocks by miners are made
    un-spendable for a certain period of time. More precisely the coins get locked
    for a set number of blocks during the mining operation. The scheme works by allowing
    miners to perform mining at the cost of freezing a certain number of coins for
    some time. This is a type of Proof of Stake.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 这个方案的核心思想是，由矿工新铸造的区块在一定时间内无法使用。更确切地说，硬币在挖矿过程中被锁定一定数量的区块。该方案通过允许矿工以冻结一定数量的硬币一段时间的代价来执行挖矿。这是一种权益证明的类型。
- en: Proof of burn
  id: totrans-35
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 燃烧证明
- en: As an alternate expenditure to computing power, proof of burn in fact destroys
    a certain amount of bitcoins in order to get equivalent altcoins. This is commonly
    used when starting up new coin projects as a means to provide a fair initial distribution.
    This can be considered an alternative mining scheme where the value of the new
    coins comes from the fact that previously a certain number of coins have been
    destroyed.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 作为与计算能力的替代支出，实际上是销毁一定数量的比特币以获得等值的替代币的燃烧证明。在启动新的币项目时，这通常被用作提供公平的初始分配手段。这可以被认为是一种替代的挖矿方案，新币的价值来自于之前销毁了一定数量的币。
- en: Proof of activity
  id: totrans-37
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 活动证明
- en: This scheme is a hybrid of PoW and Proof of Stake. In this scheme, blocks are
    initially produced by using PoW but then each block randomly assigns three stakeholders
    that are required to digitally sign it. The validity of subsequent blocks is dependent
    on the successful signing of previously randomly chosen blocks.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这个方案是PoW和权益证明的混合体。在这个方案中，区块最初是通过PoW产生的，但然后每个区块会随机分配三个需要对其进行数字签名的利益相关者。后续区块的有效性取决于成功签署之前随机选择的区块。
- en: There is, however a possible issue known as the *nothing at stake* problem where
    it would be trivial to create a fork of the blockchain. This is possible because
    in PoW appropriate computational resources are required to mine whereas in Proof
    of Stake there is no such requirement; as a result, an attacker can try to mine
    on multiple chains using the same coin.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 不过，有一个可能存在的问题，即*漠视问题*，在这个问题中创建区块链分叉是微不足道的。这是可能的，因为在PoW中，挖矿需要适当的计算资源，而在PoS中则没有这样的要求；结果是，攻击者可以尝试在多条链上使用相同的代币进行挖矿。
- en: Non-outsourceable puzzles
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 非外包谜题
- en: The key motivation behind this puzzle is to develop resistance again the development
    of mining pools. Mining pools as previously discussed offer rewards to all participants
    in proportion to the computing power they consume. However, in this model the
    mining pool operator is a central authority to whom all the rewards go and who
    can enforce certain rules. Also, in this model all miners only trust each other
    because they are working towards a common goal together in the hope of the pool
    manager getting the reward. Non-outsourceable puzzles are a scheme that allows
    miners to claim rewards for themselves; consequently pool formation becomes unlikely
    due to inherent mistrust between anonymous miners.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这个谜题背后的关键动机是为了对抗矿池的发展。正如之前所讨论的那样，矿池按照它们消耗的计算能力比例奖励所有参与者。然而，在这个模型中，矿池操作员是所有奖励都归属的中央权威，并且可以强制执行某些规则。而且，在这个模型中，所有矿工之间只相互信任，因为他们共同为了矿池经理获得奖励的共同目标而努力。非外包谜题是一种允许矿工为自己主张奖励的方案；因此，由于匿名矿工之间的固有不信任，矿池形成变得不太可能。
- en: Difficulty adjustment and retargeting algorithms
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 难度调整和重新定位算法
- en: 'Another concept that has been introduced with the advent of bitcoin and altcoins
    is difficulty in retargeting algorithms. In bitcoin a difficulty target is calculated
    simply by the following equation; however other coins have either developed their
    own algorithms or implemented modified versions of the bitcoin difficulty algorithm:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '随着比特币和替代币的出现，另一个概念是调整难度的算法。在比特币中，难度目标简单地通过以下方程计算；但是，其他硬币要么开发了自己的算法，要么实现了修改版的比特币难度算法:'
- en: '*T = Time previous * time actual / 2016 * 10 min*'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '*T = (上一个时间 * 当前时间) / (2016 * 10 min)*'
- en: The idea behind difficulty regulation in bitcoin is that a generation of 2016
    blocks should take roughly around 2 weeks (inter-block time should be around 10
    minutes). If it takes longer than 2 weeks to mine 2016 blocks then the difficulty
    is decreased and if it takes less than two weeks to mine 2016 blocks then the
    difficulty is increased. When ASICs were introduced due to a high block generation
    rate the difficulty increased exponentially and that is one drawback of PoW algorithms
    that are not ASIC resistant. This leads to mining power centralization. This also
    poses another problem; if a new coin starts now with the same Proof of Work based
    on SHA256 as bitcoin uses, then it would be easy for a malicious user to just
    simply use an ASIC miner and control the entire network. This attack would be
    more practical if there is less interest in the new altcoin and someone decides
    to take over the network by consuming adequately high computing resources. This
    may not be a feasible attack if other miners with similar computing power also
    join the the altcoin network because then miners will be competing with each other.
    Also, multipools pose a greater threat where a group of miners can automatically
    switch to the currency that is becoming profitable. This phenomenon is known as
    **pool hopping** and can adversely affect a blockchain, and consequently the growth
    of the altcoin. Pool hopping impacts the network adversely because pool hoppers
    join the network only when the difficulty is low and they can gain quick rewards;
    the moment difficulty goes up (or is readjusted) they *hop off* and then come
    back again when the difficulty is adjusted back. For example if a multipool consumes
    its resources in quickly mining a new coin, the difficulty will increase very
    quickly; when the multipool leaves the currency network; it becomes almost unusable
    because of the fact that now the difficulty has increased to such a level that
    it is no longer profitable for solo miners and can no longer be maintained. The
    only fix for this problem is to initiate a hard fork which is usually undesirable
    for the community.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 比特币中难度调节的思想是，挖掘2016个区块大约需要2周时间（区块之间的时间应该大约为10分钟）。如果挖掘2016个区块花费的时间超过2周，则难度会减少；如果挖掘2016个区块的时间少于两周，则难度会增加。当ASIC矿机的速率因高区块生成速度而增长时，难度会呈指数增加，这是PoW算法的一个缺点，不具备ASIC抗性。这导致了挖矿算力的集中。这也带来了另一个问题；如果一个新币现在以与比特币的SHA256算法相同的工作量证明开始，那么一个恶意用户可以轻而易举地使用ASIC矿机并控制整个网络。如果对新替代币没有足够的兴趣且有人决定通过使用充足的计算资源来接管网络，这种攻击可能会变得更加可行。如果其他具有类似计算能力的矿工也加入到替代币网络中，这可能就不再是一个可行的攻击，因为矿工们会互相竞争。此外，多重矿池带来更大的威胁，因为一组矿工可以自动切换到变得有利可图的货币。这种现象被称为**矿池跳跃**，可以对区块链产生不利影响，从而影响替代币的增长。矿池跳跃对网络造成不利影响，因为矿池跳跃者只会在难度较低并且可以快速获得奖励时加入网络；一旦难度上升（或重新调整），他们就会*跳出*，然后在难度重新调整后再次加入。例如，如果一个多重矿池迅速耗尽资源挖掘一种新币，难度会迅速增加；当多重矿池离开货币网络时，它几乎无法使用，因为现在难度已经增加到一个水平，对于独立矿工来说不再有利可图，也无法维持。这个问题的唯一解决方法是发起一个硬分叉，但这通常对社区是不可取的。
- en: There are a few algorithms that have come into existence to address this issue
    and are discussed later. All these algorithms are based on the idea of readjusting
    various parameters in response to hash rate changes; these parameters include the
    number of previous blocks, difficulty of previous blocks, ratio of adjustment,
    and the number by which the difficulty can be readjusted back or up. In the following
    section, readers will be introduced to the few difficulty algorithms being used
    in and proposed for various altcoins.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些算法已经出现来解决这个问题，并在后面进行了讨论。所有这些算法都是基于根据哈希率变化重新调整各种参数的想法；这些参数包括先前区块的数量、先前区块的难度、调整比例以及可以重新调整难度的数量。在接下来的部分，读者将介绍一些正在使用和提出给各种替代币的难度算法。
- en: Kimoto Gravity Well
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 木本重力井
- en: 'This algorithm is used in various altcoins to regulate difficulty. This was
    first introduced in Megacoin and used to adaptively adjust difficulty of the network
    every block. The logic of the algorithm is shown as follows:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 此算法用于各种替代币中以调节难度。这最初是在Megacoin中首次引入的，并用于每个区块自适应地调整网络的难度。该算法的逻辑如下所示：
- en: '*KGW = 1 + (0.7084 * pow((double(PastBlocksMass)/double(144)), -1.228))*'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '*KGW = 1 + (0.7084 * pow((double(PastBlocksMass)/double(144)), -1.228))*'
- en: Basically, the algorithm runs in a loop that goes through a set of predetermined
    blocks (`PastBlockMass`) and calculates a new readjustment value. The core idea
    behind this algorithm is to develop an adaptive difficulty regulation mechanism
    that can readjust the difficulty in response to rapid spikes in hash rates. **Kimoto
    Gravity Well** (**KGW**) ensures that the time between blocks remains approximately
    the same. In bitcoin the difficulty is adjusted every 2016 blocks but in KGW the
    difficulty is adjusted at every block.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上，该算法在一个循环中运行，遍历一组预定的块（`PastBlockMass`）并计算一个新的重新调整值。该算法背后的核心思想是开发一种自适应难度调节机制，以响应哈希率的急剧波动。**Kimoto
    Gravity Well** (**KGW**) 确保区块之间的时间保持大致相同。在比特币中，难度每2016个块调整一次，但在KGW中，难度每个区块都会调整。
- en: This algorithm is vulnerable to time warp attacks, which allow an attacker to
    temporarily enjoy less difficulty in creating new blocks. This attack allows a
    time window where the difficulty becomes low and the attacker can easily generate
    many coins at a fast rate.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 这种算法容易受到时间扭曲攻击的影响，这允许攻击者暂时享受较低的难度来创建新的区块。这种攻击会在一个时间窗口内使难度降低，攻击者可以轻松地以快速的速度生成许多硬币。
- en: Dark Gravity Wave
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 暗重力波
- en: '**Dark Gravity Wave** (**DGW**) is a new algorithm designed to address certain
    flaws such as the time warp attack in the KGW algorithm. This was first introduced
    in Dash, previously known as Darkcoin. It makes use of multiple exponential moving
    averages and simple move averages to achieve a smoother readjustment mechanism.
    The formula is shown as follows:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**暗重力波** (**DGW**) 是一种新的算法，旨在解决KGW算法中的某些缺陷，如时间扭曲攻击。这最初是在之前被称为Darkcoin的Dash中引入的。它利用多个指数移动平均和简单移动平均来实现更平滑的重新调整机制。该公式如下所示：'
- en: '*2222222/ (((Difficulty+2600)/9)^2)*'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '*2222222/ (((难度+2600)/9)^2)*'
- en: This formula is implemented in Dash coin and various other altcoins as a mechanism
    to readjust difficulty.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这个公式是在 Dash 币和其他各种替代币中实现的一种调整难度的机制。
- en: DGW version 3.0 is the latest implementation of this algorithm and allows improved
    difficulty retargeting compared to KGW.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: DGW 3.0 版是该算法的最新实现，与 KGW 相比，它允许改进的难度重新调整。
- en: DigiShield
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数字盾
- en: This is another difficulty retargeting algorithm that has recently been used
    in Zcash with slight variations and after adequate experimentation. This algorithm
    works by going through a fixed number of previous blocks to calculate the time
    they took to be generated and then readjusts the difficulty to the difficulty
    of the previous block by dividing the actual time span by averaging the target
    time. In this scheme, the retargeting is calculated much much rapidly and also
    the recovery from a sudden increase or decrease in hashrate is quick. This algorithm
    protects against multipools, which can result in rapid hashrate increases. The
    network difficulty is readjusted every block or every minute depending on the
    implementation. The key innovation is faster readjust times as compared to KGW.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这是另一种最近在 Zcash 中使用的调整难度算法，经过了适当的实验，并且有些微的变化。该算法通过遍历固定数量的先前区块来计算它们生成所需的时间，然后通过将实际时间跨度除以目标时间的平均值来重新调整难度到上一个区块的难度。在这个方案中，重新调整速度要快得多，而且对于哈希率的突然增加或减少的恢复也很快。这种算法可以防止多池，它可以导致哈希率的快速增加。网络难度根据实现的方式每个区块或每分钟重新调整一次。关键的创新是比
    KGW 更快的重新调整时间。
- en: MIDAS
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: MIDAS
- en: '**Multi Interval Difficulty Adjustment System** (**MIDAS**) is an algorithm that
    is comparatively more complex than the algorithms discussed previously. This method
    responds much more rapidly to abrupt changes in hash rates. This algorithm also
    provides protection against time warp attacks.'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '**多间隔难度调整系统** (**MIDAS**) 是一个相对于先前讨论的算法更为复杂的算法。这种方法对哈希率的突然变化反应更快。该算法还提供了对时间扭曲攻击的保护。'
- en: Many currencies have emerged as an attempt to address various limitations in
    bitcoin. A brief discussion of bitcoin limitations is provided as follows.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 许多货币的出现是为了解决比特币的各种限制。以下简要讨论了比特币的限制。
- en: Bitcoin limitations
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 比特币的限制
- en: Various limitations in bitcoin have also sparked some interest in altcoins,
    which were developed specifically to address limitations in bitcoin. The most
    prominent and widely discussed limitation is the lack of anonymity in bitcoin.
    This limitation is discussed in detail as follows.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 比特币的各种限制也引发了对替代币的兴趣，这些替代币专门开发来解决比特币的限制。最突出和广泛讨论的限制是比特币的匿名性缺乏。以下详细讨论了这个限制。
- en: Privacy and anonymity
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 隐私和匿名性
- en: As the blockchain is a public ledger of all transactions and is openly available
    it becomes trivial to analyse it. Combined with traffic analyses, transactions
    can be linked back to their source IP addresses, thus possibly revealing a transaction's
    originator. This is a big concern from a privacy point of view. Even though in
    bitcoin it is a recommended and common practice to generate a new address for
    every transaction, thus allowing some level of unlinkability, this is not enough
    and various techniques have been developed and successfully used to trace the
    flow of transactions throughout the network and link them back to their originator.
    Various methods to analyse blockchains such as transaction graphs, address graphs,
    and entity graphs have been used by researchers to link users to the transactions,
    thus raising privacy concerns. The afore mentioned analysis techniques can be
    further enriched by using publicly available information about transactions and
    linking them to the actual users. There are open source block parsers available
    that can be used to extract transaction information, balances, and scripts from
    the blockchain database. A parser available at [https://github.com/mikispag/rusty-blockparser](https://github.com/mikispag/rusty-blockparser) is
    written in Rust and provides advanced blockchain analysis capabilities. An earlier
    version of this work is called BitIodine but is no longer being actively developed.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 由于区块链是所有交易的公开账本，并且是公开可用的，因此分析它变得非常容易。结合交易分析，可以将交易追溯到其源 IP 地址，从而可能揭示交易的发起者。这是从隐私的角度来看一个很大的问题。尽管在比特币中，为每笔交易生成一个新地址是一种推荐和常见的做法，从而允许一定程度的不可链接性，但这还不够，已经开发并成功使用各种技术来追踪整个网络中的交易流动，并将其追溯到其发起者。研究人员已经使用各种分析区块链的方法，如交易图、地址图和实体图，将用户与交易联系起来，从而引起了隐私问题。上述分析技术可以通过使用关于交易的公开可用信息并将其与实际用户联系起来进一步丰富。有开源区块解析器可用，可以从区块链数据库中提取交易信息、余额和脚本。一个可在
    [https://github.com/mikispag/rusty-blockparser](https://github.com/mikispag/rusty-blockparser)
    上找到的解析器是用 Rust 编写的，提供了先进的区块链分析功能。这项工作的早期版本称为 BitIodine，但已不再积极开发。
- en: 'Various proposals have been made to address the privacy issue in bitcoin. These
    proposals fall into three categories: mixing protocols, third-party mixing networks,
    and inherent anonymity. A brief discussion of each category is presented as follows.'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 已经提出了各种提议来解决比特币的隐私问题。这些提议分为三类：混合协议、第三方混合网络和固有匿名性。对每个类别的简要讨论如下。
- en: Mixing protocols
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 混合协议
- en: These schemes are used to provide anonymity to bitcoin transactions. In this
    model, a mixing service provider (an intermediary or a shared wallet) is used.
    Users send coins to this shared wallet as a deposit and the shared wallet then
    can send some other coins (of the same value deposited by some other users) to
    the destination. Users can also receive coins that were sent by others via this
    intermediary. This way the link between outputs and inputs is no longer there
    and transaction graph analysis will not be able to reveal the true relationship
    between senders and receivers.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 这些方案用于为比特币交易提供匿名性。在这个模型中，使用混合服务提供商（中间人或共享钱包）。用户将硬币存入这个共享钱包作为押金，然后共享钱包可以将其他一些硬币（由其他用户存入的相同价值的硬币）发送到目的地。用户还可以通过这个中间人接收其他人发送的硬币。这样，输出和输入之间的链接就不复存在，交易图分析将无法揭示发送者和接收者之间的真实关系。
- en: 'CoinJoin is one example of mixing protocols, where two transactions are joined
    together to form a single transaction while keeping the inputs and outputs unchanged.
    The core idea behind CoinJoin is to build a shared transaction that is signed
    by all participants. This technique improves privacy for all participants involved
    in the transactions:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: CoinJoin 是混合协议的一个例子，其中两个交易被合并成一个单一的交易，同时保持输入和输出不变。CoinJoin 背后的核心思想是构建一个由所有参与者签名的共享交易。这种技术提高了所有参与交易的参与者的隐私：
- en: '![Mixing protocols](img/B05975_05_02.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![混合协议](img/B05975_05_02.jpg)'
- en: CoinJoin transaction with three users joining their transaction into a single
    larger CoinJoin transaction
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: CoinJoin 交易，三个用户将他们的交易合并成一个更大的 CoinJoin 交易
- en: Third-party mixing protocols
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第三方混合协议
- en: Various third-party mixing services are available but if the service is centralized
    then it poses the threat of tracing the mapping between senders and receivers,
    because the mixing service knows about all inputs and outputs. In addition to
    this, fully centralized miners even pose the risk of the administrators of the
    service stealing the coins.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 有各种第三方混合服务可用，但如果服务是集中的，那么它存在跟踪发送者和接收者之间映射的风险，因为混合服务了解所有输入和输出。除此之外，完全集中化的矿工甚至会造成服务管理员窃取比特币的风险。
- en: Various services, with varying degrees of complexity, such as CoinShuffle, Coinmux,
    and dark send in Dash (coin) are available that are based on the idea of CoinJoin
    (mixing) transactions. CoinShuffle is a decentralized alternative to traditional
    mixing services as it does not require a trusted third party.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 有各种各样复杂程度的服务可用，比如CoinShuffle、Coinmux以及Dash（coin）中的dark send，它们都是基于CoinJoin（混合）交易的想法。
    CoinShuffle是传统混合服务的分散替代品，因为它不需要信任的第三方。
- en: CoinJoin-based schemes, however, have some weaknesses, most prominently the
    possibility of launching a Denial of Service attack by users who committed to
    signing the transactions initially but now are not providing their signature,
    thus delaying or stopping joint transaction a altogether.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 基于CoinJoin的方案，然而，存在一些弱点，其中最突出的是可能出现的拒绝服务攻击，因为最初承诺签署交易的用户现在没有提供他们的签名，从而延迟或停止联合交易。
- en: Inherent anonymity
  id: totrans-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 内在的匿名性
- en: This category includes coins that support privacy inherently and is built into
    the design of the currency. The most popular is Zcash, which is discussed in detail
    later in the chapter. Other examples include Monero, which makes use of ring signatures
    to provide anonymous services.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 该类别包括天生支持隐私并内置在货币设计中的货币。最流行的是Zcash，这在本章后面将详细讨论。其他示例包括Monero，它利用环签名提供匿名服务。
- en: The next section introduces various enhancements that have been made, or are
    proposed, in order to extend the bitcoin protocol.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 下一节将介绍已实施或拟议的各种增强措施，以扩展比特币协议。
- en: Extended protocols on top of bitcoin
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 比特币上的扩展协议
- en: Several protocols have been proposed and implemented on top of bitcoin in order
    to enhance and extend the bitcoin protocol and use for various other purposes
    instead of just as a virtual currency.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 已经提出并实施了几个协议，以增强并扩展比特币协议，并用于各种其他用途，而不仅仅是作为一种虚拟货币。
- en: Colored coins
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 彩色比特币
- en: Colored coins is a set of methods that have been developed to represent digital
    assets on the bitcoin blockchain. Coloring a bitcoin refers colloquially to updating
    it with some metadata representing a digital asset (smart property). The coin
    still works and operates as a bitcoin but additionally carries some metadata that
    represents some assets. This mechanism allows issuing and tracking specific bitcoins.
    Metadata can be recorded using the bitcoins `OP_RETURN` opcode or optionally in
    multi-signature addresses. This metadata can also be encrypted if required to
    address any privacy concerns. Colored coins can be used to represent a multitude
    of assets including but not limited to commodities, certificates, shares, bonds,
    and voting. It should also be noted that, in order to work with colored coins,
    a wallet that interprets colored coins is necessary and normal bitcoin wallets
    will not work. Colored coin wallets can be set up online using a service available
    at [https://www.coinprism.com/](https://www.coinprism.com/). Using this service,
    any type of digital asset can be created and issued via a colored coin.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 彩色比特币是一组已开发出来的方法，用于在比特币区块链上表示数字资产。彩色比特币口语上指更新带有表示数字资产（智能财产）的一些元数据的比特币。该比特币仍然像比特币一样运作，但另外携带了一些表示某些资产的元数据。这种机制允许发行和追踪特定的比特币。如有必要，可以使用比特币的`OP_RETURN`操作码记录元数据，或者选择在多重签名地址中。如果需要，这些元数据也可以加密以解决任何隐私问题。彩色比特币可以用来代表各种资产，包括但不限于商品、证书、股票、债券和投票。还应该注意，为了使用彩色比特币，需要一个解释彩色比特币的钱包，普通的比特币钱包将无法正常工作。可以使用[https://www.coinprism.com/](https://www.coinprism.com/)提供的服务在线设置彩色比特币钱包。使用这项服务，可以创建和发行各种类型的数字资产通过彩色比特币。
- en: The idea of colored coins is very appealing as it does not require any modification
    to the existing bitcoin protocol and can make use of the already existing secure
    bitcoin network. In addition to the traditional representation of digital assets,
    there is also the possibility of creating *smart assets* that behave according
    to the parameters and conditions defined for them. These parameters includes time
    validation, restrictions on transferability, and fees. This opens the possibility
    of creating smart contracts.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 彩色币的理念非常诱人，因为它不需要对现有的比特币协议进行任何修改，可以利用已经存在的安全比特币网络。除了传统的数字资产表示形式外，还有创建*智能资产*的可能性，它们可以根据其定义的参数和条件进行行为。这些参数包括时间验证、转让限制和费用。这开启了创建智能合约的可能性。
- en: A major use case can be the issuance of financial instruments on the blockchain.
    This will ensure low transaction fees, valid and mathematically secure proof of
    ownership, fast transferability without requiring an intermediary, and instant
    dividend pay outs to the investors.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 一个主要的用例可能是在区块链上发行金融工具。这将确保低交易费用，有效且数学上安全的所有权证明，无需中介即可进行快速转让，并且立即向投资者支付股息。
- en: A rich API is available for coloured coins at [http://coloredcoins.org/](http://coloredcoins.org/).
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 彩色币提供了丰富的API，网址为[http://coloredcoins.org/](http://coloredcoins.org/)。
- en: Counterparty
  id: totrans-86
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Counterparty
- en: This is another service that can be used to create custom tokens that act as
    a cryptocurrency and can be used for various purposes such as issuing digital
    assets on top of bitcoin blockchain. This is quite a powerful platform and runs
    on bitcoin blockchains at their core but has developed its own client and other
    components to support issuing digital assets. The architecture consists of a counterparty
    server, counterblock, counter wallet, and armory_utxsvr. Counterparty works based
    on the same idea as coloured coins by embedding data into regular bitcoin transactions
    but provides a much richer library and set of powerful tools to support the handling
    of digital assets. This embedding is also called embedded consensus because the
    counterparty transactions are embedded within bitcoin transactions. The method
    of embedding the data is by using `OP_RETURN` opcode in bitcoin.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 这是另一个可以用来创建充当加密货币的自定义代币的服务，可用于各种用途，例如在比特币区块链上发行数字资产。这是一个非常强大的平台，它在比特币区块链的基础上运行，但发展了自己的客户端和其他组件以支持发行数字资产。体系结构包括Counterparty服务器、Counterblock、Counterwallet和Armory_utxsvr。Counterparty基于彩色币的相同理念，通过向常规比特币交易嵌入数据来支持数字资产的处理，但提供了更丰富的库和强大的工具集来支持数字资产的处理。这种嵌入也被称为嵌入式共识，因为Counterparty交易嵌入到比特币交易中。嵌入数据的方法是使用比特币中的`OP_RETURN`操作码。
- en: The currency produced and used by counterparty is known as XCP and is used by
    smart contracts as the fee for running the contract. At the time of writing its
    price is 2.78 USD. XCPs were created by using the proof of burn method discussed
    previously.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 由Counterparty产生和使用的货币被称为XCP，并且作为运行合约的费用。在撰写本文时，其价格为2.78美元。通过使用先前讨论的燃烧证明方法创建了XCP。
- en: Counterparty allows the development of smart contracts on Ethereum using solidity
    language and allows interaction with bitcoin blockchain. In order to achieve this,
    BTC Relay is used as a means to provide interoperability between Ethereum and
    bitcoin. This is a clever concept where Ethereum contracts can talk to bitcoin
    blockchain and transactions through BTC Relay. The relayers (nodes that are running
    BTC Relay) fetch the bitcoin block headers and relay them to a smart contract
    on the Ethereum network that verifies the PoW. This process verifies that a transaction
    has occurred on the bitcoin network. This is available at [http://btcrelay.org/](http://btcrelay.org/).
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: Counterparty允许使用Solidity语言在以太坊上开发智能合约，并与比特币区块链进行交互。为了实现这一点，使用BTC Relay作为在以太坊和比特币之间提供互操作性的手段。这是一个聪明的概念，以太坊合约可以通过BTC
    Relay与比特币区块链和交易进行通信。Relayer（运行BTC Relay的节点）获取比特币块头并将它们中继到以太坊网络上的智能合约，该合约验证PoW。此过程验证了在比特币网络上发生了一笔交易。网址为[http://btcrelay.org/](http://btcrelay.org/)。
- en: 'Technically, this is basically an Ethereum contract that is capable of storing
    and verifying bitcoin block headers just like bitcoin simple payment verification
    lightweight clients do by using bloom filters. SPV clients were discussed in detail
    in the previous chapter. The idea can be visualized with the following diagram:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 从技术角度来看，这基本上是一个以太坊合约，能够像比特币简单支付验证轻量级客户端一样存储和验证比特币区块头，它们使用布隆过滤器。SPV客户端在上一章进行了详细讨论。这个概念可以通过下图进行可视化：
- en: '![Counterparty](img/B05975_05_03.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![Counterparty](img/B05975_05_03.jpg)'
- en: BTC relay concept
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: BTC中继概念
- en: Note
  id: totrans-93
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Counterparty is available at [http://counterparty.io/](http://counterparty.io/).
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: Counterparty 可以在 [http://counterparty.io/](http://counterparty.io/) 找到。
- en: Development of altcoins
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 山寨币的发展
- en: Altcoin projects can be started very easily from a coding point of view by simply
    forking the bitcoin or another coin's source code but this probably is not enough.
    When a new coin project is started, there are several things that need to be considered
    in order to ensure a successful launch and the coin's longevity. Usually, the
    code base is written in C++ as was the case with bitcoin but almost any language
    can be used to develop coin projects, for example Golang or Rust.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 从编程角度来看，简单地通过分叉比特币或其他币种的源代码可以非常轻松地启动山寨币项目，但这可能还不够。当启动一个新的币种项目时，有若干事项需要考虑，以确保成功启动和币种的长期发展。通常，代码库是用C++编写的，就像比特币一样，但几乎任何语言都可以用于开发币种项目，例如Golang或Rust。
- en: Writing code or forking the code for an existing coin is the trivial part, the
    challenging issue is how to start a new currency so that new investors and users
    can be attracted to it. Generally, the following steps are taken in order to start
    a new coin project.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 编写代码或对现有币种的代码进行分叉是相对简单的部分，具有挑战性的问题是如何启动一种新货币，以便吸引新的投资者和用户。通常，为了启动一个新的币种项目，会采取以下步骤。
- en: From a technical point of view, in the case of forking the code of another coin,
    for example bitcoin, there are various parameters that can be changed to effectively
    create a new coin. These parameters are required to be *tweaked* or introduced
    in order to create a new coin. These parameters can include but are not limited
    to the following.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 从技术角度来看，如果是分叉其他币种的代码，例如比特币，可以更改各种参数以有效地创建一种新币。这些参数需要进行*调整*或引入以创建新币。这些参数可以包括但不限于以下内容。
- en: Consensus algorithms
  id: totrans-99
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 共识算法
- en: There is a choice of consensus algorithm: **Proof of Work** (**PoW**) as used
    in bitcoin or **Proof of Stake** (**PoS**), as in Peercoin.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 可以选择共识算法：**工作量证明**（**PoW**），如比特币所用，或者**权益证明**（**PoS**），如Peercoin所用。
- en: Hashing algorithms
  id: totrans-101
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 哈希算法
- en: This is either SHA256, Scrypt, X11, X13, X15, or any other hashing algorithm
    that is adequate for use as a consensus algorithm.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能是SHA256、Scrypt、X11、X13、X15，或者任何其他足够适合作为共识算法的哈希算法。
- en: Difficulty adjustment algorithms
  id: totrans-103
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 难度调整算法
- en: Various options are available in this category to provide difficulty retargeting
    mechanisms. The most prominent examples are KGW, DGW, Nite's Gravity Wave, and
    DigiShield. Also all these algorithms can be tweaked based on requirements to
    produce different results; therefore many variants are possible.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个类别中有多种选项可以提供难度重定向机制。最显著的例子是KGW、DGW、Nite's Gravity Wave和DigiShield。此外，这些算法都可以根据需求进行调整以产生不同的结果；因此，可能会有许多变体。
- en: Inter-block time
  id: totrans-105
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 区块间时间
- en: This is the time elapsed between the generation of each block. For bitcoin the
    blocks are generated every 10 minutes, for litecoin it's 2.5 minutes. Any value
    can be used but an appropriate value is usually between a few minutes; if the
    generation time is too fast it might destabilize the blockchain, if it's too slow
    it may not attract many users.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 这是生成每个区块之间的时间。在比特币中，区块每10分钟生成一次，在莱特币中则是每2.5分钟。可以使用任何值，但适当的值通常在几分钟之间；如果生成时间过快，可能会使区块链不稳定，如果过慢，则可能无法吸引太多用户。
- en: Block rewards
  id: totrans-107
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 区块奖励
- en: A block reward is for the miner who solves the mining puzzle and is allowed
    to have a Coinbase transaction that contains the reward. This used to be 50 coins
    in bitcoin initially and now many altcoins set this parameter to a very high number;
    for example in Dogecoin it is 10,000, currently.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 区块奖励是给解决挖矿难题的矿工的，并允许他们拥有包含奖励的Coinbase交易。最初在比特币中这个奖励是50个币，现在许多山寨币将这一参数设定得非常高；例如，在狗狗币中，目前是10,000个。
- en: Reward halving rate
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 奖励减半率
- en: This is another important factor; in bitcoin it is halved every 4 years and
    now is set to 12.5 bitcoins. It's a variable number that can be set to any time
    period or none at all depending on the requirements.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 这是另一个重要因素；在比特币中，每4年减半一次，现在设置为12.5比特币。这是一个可变的数字，可以根据需求设置为任何时间段，或者根本不设置。
- en: Block size and transaction size
  id: totrans-111
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 区块大小和交易大小
- en: This is another important factor that determines how high or low the transaction
    rate can be on the network. Block sizes in bitcoin are limited to 1 MB but in
    altcoins it can vary depending on the requirements.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 这是另一个重要因素，它决定了网络上的交易率可以有多高或有多低。比特币的区块大小限制为1 MB，但在另类币中，它可以根据需求变化。
- en: Interest rate
  id: totrans-113
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 利率
- en: This property applies only to PoS systems where the owner of the coins can earn
    interest at a rate defined by the network in return for the amount of coins that
    are held on the network as a PoS to protect the network.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 此属性仅适用于 PoS 系统，在该系统中，持有者可以根据网络定义的利率，以持有在网络上作为 PoS 来保护网络的硬币数量获得利息。
- en: Coin age
  id: totrans-115
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 币龄
- en: This parameter defines how long the coin has to remain unspent in order for
    it to become eligible to be considered stakeworthy.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 此参数定义了硬币必须保持未使用多长时间，以使其有资格被视为可以进行投票的。
- en: Total supply of coins
  id: totrans-117
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 货币的总供应量
- en: This number sets the total limit of the coins that can ever be generated. For
    example in bitcoin the limit is 21 million, whereas in Dogecoin it's unlimited.
    This limit is fixed by the block reward and halving schedule discussed above.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 这个数字设定了可以生成的货币的总限制。例如，比特币的限制是2100万，而 Dogecoin 的限制是无限的。这个限制是由上面讨论的区块奖励和减半时间表确定的。
- en: 'There are two options to create your own virtual currency: forking existing
    established cryptocurrency source code or writing a new one from scratch. The
    latter option is less popular but the first option is easier and has allowed the
    creation of many virtual currencies over the last few years. Fundamentally, the
    idea is that first a cryptocurrency source code is forked and then appropriate
    changes are made at different strategic locations in the source code to effectively
    create a new currency.'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 创建自己的虚拟货币有两种选择：分叉现有的已建立的加密货币源代码或从头开始编写一个新的。后者不太流行，但第一种选择更容易，并且在过去几年已经允许创建了许多虚拟货币。基本上，这个想法是首先分叉加密货币源代码，然后在源代码的不同战略位置进行适当的更改，从而有效地创建一个新的货币。
- en: In the next section, readers are introduced to some altcoin projects. It is
    not possible to cover all alternative currencies in this chapter, but a few selected
    coins are discussed below. Selection is based on longevity, market cap, and innovation.
    Each coin is discussed from different angles such as theoretical foundations,
    trading, and mining.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，读者将介绍一些另类币项目。在本章节中不可能涵盖所有替代货币，但下面讨论了一些精选的货币。选择是基于其长期性、市值和创新。每个货币都从不同的角度进行讨论，如理论基础、交易和挖矿。
- en: Namecoin
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Namecoin
- en: Namecoin is the first fork of the bitcoin source code. The key idea behind Namecoin
    is not to produce an altcoin but instead to provide improved decentralization,
    censorship resistance, privacy, security, and faster decentralized naming. Decentralized
    naming services are intended to provide a response to inherent limitations such
    as slowness and centralized control in the traditional **Domain Name System**
    (**DNS**) protocols used on the Internet. Namecoin is also the first solution
    to Zooko's triangle, which was briefly discussed in previous chapters.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: Namecoin 是比特币源代码的第一个分叉。Namecoin 背后的关键思想不是生产一种替代币，而是提供改进的去中心化、抗审查、隐私、安全性和更快的去中心化命名。去中心化命名服务旨在提供对互联网传统**域名系统**（**DNS**）协议的固有限制的响应，例如传统的DNS协议在互联网上的使用的缓慢和集中控制。Namecoin
    也是对之前章节中简要讨论的 Zooko 三角形的第一个解决方案。
- en: Namecoin is used to essentially provide a service to register a key/value pair.
    One major use case of Namecoin is that it can provide a decentralized **Transport
    Layer Security** (**TLS**) certificate validation mechanism, driven by blockchain-based
    distributed and decentralized consensus.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: Namecoin 主要用于提供注册键/值对的服务。Namecoin 的一个主要用途是，它可以提供一种由区块链驱动的去中心化**传输层安全性**（**TLS**）证书验证机制，通过基于区块链的分布式和去中心化共识。
- en: It is based on the same technology introduced with bitcoin, but with its own
    blockchain and wallet software. The source code for the Namecoin core is available
    at [https://github.com/namecoin/namecoin-core](https://github.com/namecoin/namecoin-core).
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 它基于与比特币引入的相同技术，但具有自己的区块链和钱包软件。Namecoin核心的源代码可在[https://github.com/namecoin/namecoin-core](https://github.com/namecoin/namecoin-core)找到。
- en: 'In summary, Namecoin provides the following three services:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，Namecoin提供以下三项服务：
- en: Secure storage and transfer of names (keys)
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 名称（密钥）的安全存储和转让
- en: Attachment of some value to the names by attaching up to 520 bytes of data
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过将最多520字节的数据附加到名称上，赋予名称一些价值
- en: Production of a digital currency (Namecoin)
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数字货币（Namecoin）的发行
- en: 'Namecoin also for the first time introduced merged mining, which allows a miner
    to mine on more than one chain simultaneously. The idea is simple but very effective:
    miners create a Namecoin block and produce a hash of that block. Then the hash
    is added to a bitcoin block and miners solve that block at equal to or greater
    than the Namecoin block difficulty in order to prove that enough work has been
    contributed towards solving the Namecoin block.'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: Namecoin还首次引入了合并挖矿，这使得矿工可以同时在多条链上进行挖矿。这个想法很简单但非常有效：矿工创建一个Namecoin区块并生成该区块的哈希。然后，该哈希被添加到比特币区块中，矿工解决该区块的难度等于或大于Namecoin区块的难度，以证明已经为解决Namecoin区块做出了足够的工作。
- en: 'More precisely the Coinbase transaction is used to include the hash of the
    transactions from Namecoin (or any other altcoin). The mining task is to solve
    bitcoin blocks whose Coinbase scripSig contains a hash pointer to Namecoin (or
    any other altcoin) block. This is shown in the diagram below. If a miner manages
    to solve a hash at the bitcoin blockchain difficulty level, the bitcoin block
    is built and becomes part of the bitcoin network. In this case, the Namecoin hash
    is ignored by the bitcoin blockchain. On the other hand, if a miner solves a block
    at Namecoin blockchain difficulty level a new block is created in the Namecoin
    blockchain. The core benefit of this scheme is that all the computational power
    spent by the miners contributes towards securing both Namecoin and bitcoin:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 更准确地说，Coinbase交易被用来包含来自Namecoin（或任何其他代币）的交易哈希。挖矿任务是解决包含对Namecoin（或任何其他代币）区块的哈希指针的比特币区块。这在下面的图表中显示。如果矿工成功解决比特币区块难度级别的哈希，比特币块就建成并成为比特币网络的一部分。在这种情况下，比特币区块链将忽略Namecoin哈希。另一方面，如果矿工在Namecoin区块链难度级别解决了一个区块，会在Namecoin区块链中创建一个新区块。这种方案的核心好处在于，矿工消耗的所有计算能力都有助于保护Namecoin和比特币：
- en: '![Namecoin](img/B05975_05_04.jpg)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![Namecoin](img/B05975_05_04.jpg)'
- en: Merged mining diagram
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 合并挖矿图表
- en: Trading Namecoins
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 交易Namecoins
- en: The current market cap of Namecoin is £2,736,537 as per [https://coinmarketcap.com/](https://coinmarketcap.com/)
    and it can be bought and sold at various exchanges such as [https://cryptonit.net/](https://cryptonit.net/).
    Various other exchanges can be found via a simple online search.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 根据[https://coinmarketcap.com/](https://coinmarketcap.com/)，Namecoin的当前市值为£2,736,537，可以在各种交易所（如[https://cryptonit.net/](https://cryptonit.net/)）购买和出售。通过简单的在线搜索可以找到其他各种交易所。
- en: Obtaining Namecoins
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 获取Namecoins
- en: Even though Namecoins can be mined independently, they are usually mined as
    part of bitcoin mining by utilizing the merged mining technique as explained above.
    This way Namecoin can be mined as a by-product of bitcoin mining. Solo mining
    is no longer profitable as is evident from the following difficulty graph; instead
    it is recommended to merge-mine, use a mining pool, or even use a cryptocurrency
    exchange to buy Namecoin.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管Namecoins可以独立挖矿，但通常作为比特币挖矿的一部分进行挖矿，利用上述合并挖矿技术。这样，Namecoin可以作为比特币挖矿的副产品而被挖掘。独立挖矿已不再盈利，从下面的难度图表可以明显看出；因此建议进行合并挖矿，使用矿池，或甚至使用加密货币交易所购买Namecoin。
- en: '![Obtaining Namecoins](img/image_05_005.jpg)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![获取Namecoins](img/image_05_005.jpg)'
- en: 'Namecoin difficulty as shown at: https://bitinfocharts.com/comparison/difficulty-nmc.html'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: Namecoin难度显示在：https://bitinfocharts.com/comparison/difficulty-nmc.html
- en: Various mining pools such [https://slushpool.com](https://slushpool.com/) also
    offer the option of merged mining. This allows a miner to mine primarily bitcoin
    but also as a result earn Namecoin too.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 一些矿池（如[https://slushpool.com](https://slushpool.com/)）也提供合并挖矿的选项。这使得矿工可以主要挖掘比特币，同时也因此获得Namecoin。
- en: Another method that can be used to quickly get some Namecoins is to swap your
    existing coins with Namecoins, for example, if you already have some bitcoins
    or an other cryptocurrency that can be used to exchange with Namecoin. An online
    service, [https://shapeshift.io/](https://shapeshift.io/), is available that provides
    this service. This service allows conversion from one cryptocurrency to another,
    using a simple user-friendly interface.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种快速获取一些 Namecoin 的方法是用现有的货币与 Namecoin 进行交换，例如，如果您已经拥有一些比特币或其他可用于与 Namecoin
    交换的加密货币。有一个名为 [https://shapeshift.io/](https://shapeshift.io/) 的在线服务可提供此服务。该服务允许使用简单易用的界面从一种加密货币转换为另一种加密货币。
- en: 'For example, paying BTC to receive NMC is shown as follows:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，支付 BTC 以接收 NMC 如下所示：
- en: '![Obtaining Namecoins](img/image_05_006.jpg)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![获取 Namecoins](img/image_05_006.jpg)'
- en: 'Once **Start Transaction** is clicked, the transaction starts and instructs
    the user to send the bitcoins to a specific bitcoin address. When the user sends
    the required amount, the conversion process starts as shown:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 点击 **开始交易** 后，交易开始并指示用户将比特币发送到特定的比特币地址。用户发送所需金额后，转换过程如下所示：
- en: '![Obtaining Namecoins](img/image_05_007.jpg)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![获取 Namecoins](img/image_05_007.jpg)'
- en: 'When the process completes, the transactions can be viewed in the Namecoin
    wallet:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 当进程完成时，可以在 Namecoin 钱包中查看交易记录：
- en: '![Obtaining Namecoins](img/image_05_008.jpg)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![获取 Namecoins](img/image_05_008.jpg)'
- en: It may take some time to confirm the transactions; until that time it is not
    possible to use the Namecoins to manage names. Once Namecoins are available in
    the wallet, the **Manage Names** option can be used to generate Namecoin records.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 确认交易可能需要一些时间；在此期间，不可能使用 Namecoins 管理名称。一旦 Namecoins 在钱包中可用，可以使用 **管理名称** 选项来生成
    Namecoin 记录。
- en: Generating Namecoin records
  id: totrans-148
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 生成 Namecoin 记录
- en: Namecoin records are in the form of key and value pairs. A name is a lower-case
    string of the form `d/examplename` whereas a value is a case-sensitive, UTF-8
    encoded JSON object with a maximum of 520 bytes. The name should be RFC1035 ([https://tools.ietf.org/html/rfc1035](https://tools.ietf.org/html/rfc1035))-compliant.
    A general namecoin name can be an arbitrary binary string up to 255 bytes long
    with, 1024-bits of associated identifying information. A record on a Namecoin
    chain is only valid for around 200 days or 36,000 blocks after which it needs
    to be renewed. Namecoin also introduced .bit top level domains that can be registered
    using Namecoin and can be browsed using specialized Namecoin-enabled resolvers.
    Namecoin wallet software as shown in the following screenshot can be used to register
    `.bit` domain names.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: Namecoin 记录以键值对的形式存在。名称是一个形如 `d/examplename` 的小写字符串，而值是一个区分大小写的、UTF-8 编码的 JSON
    对象，最大长度为 520 字节。名称应符合 RFC1035 ([https://tools.ietf.org/html/rfc1035](https://tools.ietf.org/html/rfc1035))
    标准。通用的 Namecoin 名称可以是一个任意的二进制字符串，最长为 255 字节，附带 1024 位的相关识别信息。Namecoin 链上的记录仅在大约
    200 天或 36,000 个区块后有效，之后需要更新。Namecoin 还引入了可以使用 Namecoin 注册并可以使用专用的 Namecoin 启用解析器浏览的
    `.bit` 顶级域。如下截图所示的 Namecoin 钱包软件可用于注册 `.bit` 域名。
- en: 'The name is entered and, after the **Submit** button is pressed, it will ask
    for configuration information such as DNS, IP, or Identity:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 输入名称，并在按下 **提交** 按钮后，将要求配置信息，如 DNS、IP 或身份：
- en: '![Generating Namecoin records](img/image_05_009.jpg)'
  id: totrans-151
  prefs: []
  type: TYPE_IMG
  zh: '![生成 Namecoin 记录](img/image_05_009.jpg)'
- en: 'As shown in the following screenshot, **masteringblockchain** will register
    as `masteringblockchain.bit` on the Namecoin blockchain:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 如下截图所示，**掌握区块链**将在 Namecoin 区块链上注册为 `masteringblockchain.bit`：
- en: '![Generating Namecoin records](img/image_05_010.jpg)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![生成 Namecoin 记录](img/image_05_010.jpg)'
- en: Litecoin
  id: totrans-154
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Litecoin
- en: Litecoin is a fork of the bitcoin source code released in 2011\. It uses Scrypt
    as PoW, originally introduced in the Tenebrix coin. Litecoin allows for faster
    transactions as compared to bitcoin due to its faster block generation time of
    2.5 minutes. Also difficulty readjustment is achieved every 3.5 days roughly due
    to faster block generation time. The total coin supply is 84 million.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: Litecoin 是基于比特币源代码的一个分支，于 2011 年发布。它使用 Scrypt 作为 PoW，最初在 Tenebrix 币中引入。由于其更快的出块时间为
    2.5 分钟，Litecoin 比比特币允许更快的交易。此外，由于更快的出块时间，大约每 3.5 天就会进行一次难度调整。总共发行 8400 万个硬币。
- en: Scrypt is a sequentially memory hard function that is the first alternative
    to the SHA-256-based PoW algorithm. It was originally proposed as a password-based
    key derivation function `PBKDF`. The key idea is that if the function requires
    large number of memory to run then custom hardware such as ASICs will require
    more VLSI area, which would be unfeasible to build. The Scrypt algorithm requires
    a large array of pseudo random bits to be held in memory and a key is derived
    from this in a pseudo random fashion. The algorithm is based on a phenomenon called
    **Time-Memory Tradeoff** (**TMTO**). If memory requirements are relaxed then it
    results in increased computational cost. Put another way, TMTO shortens the running
    time of a programme if more memory is given to it. This tradeoff makes it unfeasible
    for an attacker to gain more memory because it's expensive and difficult to implement
    on custom hardware, or if the attacker chooses to not increase memory, then it
    results in the algorithm running slowly due to high processing requirements.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: Scrypt 是一个顺序内存硬函数，是第一个替代 SHA-256 基础 PoW 算法的函数。它最初被提议作为基于密码的密钥派生函数 `PBKDF`。其关键思想是，如果函数需要大量内存来运行，那么定制硬件（如
    ASIC）将需要更多的 VLSI 区域，这是不可行的。Scrypt 算法需要在内存中保存大量伪随机位，并以伪随机方式从中派生密钥。该算法基于一种称为 **时间-内存折衷**（**TMTO**）的现象。如果内存需求放松，那么会导致增加计算成本。换句话说，如果给予更多内存，则
    TMTO 会缩短程序的运行时间。这种折衷使得攻击者无法获得更多内存，因为这是昂贵且难以在定制硬件上实现的，或者如果攻击者选择不增加内存，则由于高处理要求而导致算法运行缓慢。
- en: 'Scrypt uses the following parameters to generate a derived key (Kd):'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: Scrypt 使用以下参数生成派生密钥（Kd）：
- en: '`Passphrase`: This is a string of characters to hash'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`口令`：这是一串要进行哈希的字符。'
- en: '`Salt`: This is a random string that is provided to Scrypt functions (generally
    all hash functions) in order to provide a defence against brute-force dictionary
    attacks using rainbow tables'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`盐`：这是提供给 Scrypt 函数（通常是所有哈希函数）的随机字符串，以抵御使用彩虹表的暴力字典攻击。'
- en: '`N`: This is a memory/CPU cost parameter that must be a power of 2 > 1'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`N`：这是一个内存/CPU 成本参数，必须是大于 1 的 2 的幂。'
- en: '`P`: The parallelization parameter'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`P`：并行化参数'
- en: '`R`: The block size parameter'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`R`：块大小参数'
- en: '`dkLen`: The intended length of the derived key in bytes'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dkLen`：派生密钥的预期长度（以字节为单位）'
- en: 'Formally, this function can be written as follows:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 形式上，此函数可写为：
- en: '*Kd = scrypt (P, S, N, P, R, dkLen)*'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '*Kd = scrypt (P, S, N, P, R, dkLen)*'
- en: Before applying the core Scrypt function, the algorithm takes `P` and `S` as
    input and applies **PBKDF2** and SHA-256-based HMAC. Then the output is fed to
    an algorithm called **ROMix,** which internally uses the Blockmix algorithm utilizing
    the Salsa20/8 core stream cipher to fill up the memory which requires large memory
    to operate, thus enforcing the sequentially memory hard property.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 在应用核心 Scrypt 函数之前，算法以 `P` 和 `S` 作为输入，并应用 **PBKDF2** 和基于 SHA-256 的 HMAC。然后，输出馈送到称为
    **ROMix** 的算法，该算法内部使用 Blockmix 算法利用 Salsa20/8 核心流密码来填充需要大内存才能操作的内存，从而强制实施顺序内存硬性质。
- en: 'The output from this step of the algorithm is finally fed to the `PBKDF2` function
    again in order to produce a derived key. This process is shown in the following
    diagram:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 从算法的这一步骤得到的输出最终再次馈送到 `PBKDF2` 函数中，以生成派生密钥。该过程如下图所示：
- en: '![Litecoin](img/B05975_05_11.jpg)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![Litecoin](img/B05975_05_11.jpg)'
- en: Scrypt algorithm
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: Scrypt 算法
- en: Scrypt is used in litecoin mining with specific parameters where N= 1024, R
    = 1, P=1, and S= random 80 bytes producing a 256-bit output.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: Scrypt 在 litecoin 挖矿中使用特定参数，其中 N= 1024，R = 1，P=1，而 S= 随机 80 字节产生一个 256 位的输出。
- en: 'It appears that, due to the selection of these parameters, the development
    of ASICs for Scrypt for litecoin mining turned out to be not very difficult. In
    an ASIC for litecoin mining, a sequential logic can be developed that takes the
    data and nonce as input and applies the **PBKDF2** algorithm with **HMAC-SHA256**; then
    the resultant bit stream is fed into the `SALSA20/8` function which produces a
    hash that again is fed down to the `PBKDF2` and `HMAC-256` functions to produce
    a 256-bit hash output. As is the case with bitcoin PoW, in Scrypt also if the
    output hash is less that the target hash (already passed as input at the start,
    stored in memory, and checked with every iteration) then the function terminates;
    otherwise, the nonce is incremented and the process is repeated again until a hash
    is found that is lower than the difficulty target:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 由于选择了这些参数，为莱特币挖矿开发ASIC并不是很困难。在用于莱特币挖矿的ASIC中，可以开发一个顺序逻辑，将数据和随机数作为输入，并应用**PBKDF2**算法与**HMAC-SHA256**；然后，生成的比特流被提供给`SALSA20/8`函数，该函数生成一个哈希值，再次输入到`PBKDF2`和`HMAC-256`函数中生成256位哈希输出。与比特币PoW相同，在Scrypt中，如果输出哈希值小于目标哈希值（在开始时作为输入传递，存储在内存中，并在每次迭代中检查），则该函数终止；否则，随机数递增，进程再次重复，直到找到一个小于难度目标的哈希值：
- en: '![Litecoin](img/B05975_05_12.jpg)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![莱特币](img/B05975_05_12.jpg)'
- en: Scrypt ASIC design simplified flowchart
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: Scrypt ASIC设计简化流程图
- en: '**Trading Litecoin**: As with other coins, trading litecoin is easily carried
    out on various online exchanges. The current market cap of litecoin is £161,239,005\.
    The current price of litecoin is £3.25/LTC.'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**莱特币交易**: 与其他数字货币一样，莱特币的交易很容易在各种在线交易所进行。莱特币当前的市值为£161,239,005。当前莱特币价格为£3.25/LTC。'
- en: '**Mining**: Litecoin mining can be carried out solo or in pools. At the moment,
    ASICs for Scrypt are available that are commonly used to mine litecoin.'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**挖矿**: 莱特币的挖矿可以独自进行，也可以在矿池中进行。目前，用于Scrypt算法的ASIC已经问世，通常用于挖掘莱特币。'
- en: Litecoin mining on a CPU is no longer profitable as is the case with many other
    digital currencies. There are online cloud mining providers and ASIC miners available
    that can be used to mine litecoin. Litecoin mining started from the CPU, progressed
    through GPU mining rigs, and eventually now has reached a point where specialized
    ASIC miners such as Asic Scrypt Miner Wolf available from EhsMiner are now required
    to be used in the hope of being able to make some coins. Generally, it is true
    that even with ASICs it is better to mine in pools instead of solo as solo mining
    is not as profitable as mining in pools due to the proportional rewards scheme
    used by mining pools. These miners are capable of producing a hashing rate of
    2 Gh/s for Scrypt algorithms.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 与许多其他数字货币一样，莱特币在CPU上的挖矿已不再盈利。有在线云挖矿服务提供商和可用的ASIC矿机可用于挖掘莱特币。莱特币的挖矿从CPU开始，通过GPU挖矿设备的发展，最终现在已经达到了需要使用专业ASIC矿机才能挖矿的程度，例如来自EhsMiner的Asic
    Scrypt Miner Wolf。一般来说，即使使用ASIC，也最好在矿池中挖矿，而不是独自挖矿，因为矿池采用的比例奖励方案使得矿池挖矿比独自挖矿更有利可图。这些矿工可以在Scrypt算法上产生2
    Gh/s的哈希率。
- en: '**Software source code and wallet**: The source code for litecoin is available
    at [https://github.com/litecoin-project/litecoin](https://github.com/litecoin-project/litecoin).
    The litecoin wallet can be downloaded from [https://litecoin.org/](https://litecoin.org/)
    and can be used just like the bitcoin core client software.'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**软件源代码和钱包**: 莱特币的源代码可以在[https://github.com/litecoin-project/litecoin](https://github.com/litecoin-project/litecoin)获取。莱特币钱包可以从[https://litecoin.org/](https://litecoin.org/)下载，并且可以像比特币核心客户端软件一样使用。'
- en: Primecoin
  id: totrans-178
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 质数币
- en: Primecoin is the first digital currency on the market that introduced a useful
    PoW, as opposed to bitcoin's SHA256-based PoW. Primecoin uses searching prime
    numbers as a PoW. Not all types of prime number meet the requirements to be selected
    as PoW. Three types of prime numbers (known as Cunningham chain of first kind,
    Cunningham chain of second kind, and bi-twin chains) meet the requirements of
    a PoW algorithm to be used in cryptocurrencies. The difficulty is dynamically
    adjusted via a continuous difficulty evaluation scheme in Primecoin blockchain.
    The efficient verification of PoW based on prime numbers is also of high importance,
    because if verification is slow then PoW is not suitable. Therefore prime chains
    are selected as a PoW because finding prime chains gets difficult as the chain
    increases in length whereas verification remains quick enough to warrant being
    used as an efficient PoW algorithm. It is also important that once a PoW has been
    verified on a block it must not be reusable on another block. This is accomplished
    in Primecoin by a combination of *Proof of Work certificates* and hashing it with
    the header of the parent block in the child block. The PoW certificate is produced
    by linking the prime chain to the block header hash. It also requires that the
    block header's origin is divisible by the block header hash. If it is, it is divided
    and after division the quotient is used as a PoW certificate. Another property
    of the adjustable difficulty of PoW algorithms is met by introducing difficulty
    adjustment every block instead of every 2,016, as is the case with bitcoin. This
    is a *smoother* approach as compared to bitcoin and allows readjustment in the
    case of sudden increases in hash power. Also the total number of coins generated
    is community-driven and there is no concrete limit on the number of coins Primecoin
    can generate.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: Primecoin是市场上第一个引入有用PoW（与比特币的基于SHA256的PoW相对）的数字货币。 Primecoin使用搜索素数作为PoW。 并非所有类型的素数都满足被选为PoW的要求。
    三种类型的素数（称为第一类康宁汉链，第二类康宁汉链和双生链）符合PoW算法的要求，可用于加密货币中。 通过Primecoin区块链中的连续难度评估方案动态调整难度。基于素数的PoW的高效验证也非常重要，因为如果验证很慢，则PoW就不适合。
    因此，选择素数链作为PoW，因为随着链长度的增加，查找素数链变得困难，而验证仍然足够快，可以用作高效的PoW算法。 重要的是，一旦PoW在一个区块上被验证，就不能在另一个区块上被重复使用。
    通过将*工作证明证书*与父块的标题进行哈希组合，在Primecoin中完成了这一点。 PoW证书是通过将素数链链接到区块头哈希而生成的。 还要求区块头的原点可被区块头哈希整除。
    如果可以，就进行除法，然后商用作PoW证书。 PoW算法的可调节难度的另一个特性是每个区块都进行难度调整，而不是像比特币那样每2,016个区块进行一次。 这是一种与比特币相比*更顺畅*的方法，并且在哈希功率突然增加的情况下允许重新调整。
    此外，生成的硬币总数由社区驱动，并且Primecoin能够生成的硬币数量没有具体限制。
- en: Trading Primecoin
  id: totrans-180
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 交易Primecoin
- en: Primecoins can be traded on major virtual currency trading exchanges. The current
    market cap of Primecoin is £828,002 at the time of writing. It is not very large
    but, due to the fact that Primecoin is based on a novel idea and there is a dedicated
    community behind it, this continues to hold some market share.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: Primecoin可以在主要虚拟货币交易所交易。 撰写时，Primecoin的市值为£828,002。 它并非很大，但由于Primecoin基于一个新颖的想法，并且有一个专注的社区支持，因此仍继续保持一定的市场份额。
- en: '![Trading Primecoin](img/image_05_013.jpg)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![交易Primecoin](img/image_05_013.jpg)'
- en: Mining guide
  id: totrans-183
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 挖矿指南
- en: The first step is to download a wallet. Primecoin supports native mining within
    the wallet, just like original bitcoin clients, but also can be mined on the cloud
    via various online mining service providers.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是下载一个钱包。 Primecoin支持钱包内的本地挖矿，就像原始比特币客户端一样，也可以通过各种在线挖矿服务提供商在云中挖矿。
- en: 'A quick Windows guide is presented as follows:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个简短的Windows指南：
- en: 'The first step is to download the Primecoin wallet from: [http://primecoin.io/index.php](http://primecoin.io/index.php).'
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一步是从以下地址下载Primecoin钱包：[http://primecoin.io/index.php](http://primecoin.io/index.php).
- en: Once the wallet is installed and synched with the network, mining can be started
    by following the next step. A debug window can be opened in the Primecoin wallet
    by clicking on the **Help** menu and selecting the **Debug** window menu item.
    Additional help can be invoked through typing `help` in the console window:![Mining
    guide](img/image_05_014.jpg)
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装钱包并与网络同步后，可以通过以下步骤开始挖矿。 在Primecoin钱包中，可以通过单击**帮助**菜单并选择**调试**窗口菜单项来打开调试窗口。
    通过在控制台窗口中键入`help`，还可以获得其他帮助：![挖矿指南](img/image_05_014.jpg)
- en: Debug window used to enable the Primecoin mining function
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 调试窗口用于启用 Primecoin 挖矿功能
- en: Once the preceding commands are successfully executed mining will start in solo
    mode. This may not be very profitable but the miner can use mining pools available
    online:![Mining guide](img/image_05_015.jpg)
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦前述命令成功执行，挖矿将以独立模式开始。这可能并不十分有利，但挖矿者可以使用在线挖矿池：![挖矿指南](img/image_05_015.jpg)
- en: Primecoin wallet software, synching with the network
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Primecoin 钱包软件，与网络同步
- en: 'The Primecoin source code is available at [https://github.com/primecoin/primecoin](https://github.com/primecoin/primecoin).
    Although it''s a novel concept and the PoW that Primecoin has introduced does
    have scientific significance, it seems that no active development is being carried
    out to further develop Primecoin. Readers can further explore Primecoin by reading
    the Primecoin white paper by *Sunny King* (pseudonym) at: [http://primecoin.io/bin/primecoin-paper.pdf](http://primecoin.io/bin/primecoin-paper.pdf).'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: Primecoin 源代码可在 [https://github.com/primecoin/primecoin](https://github.com/primecoin/primecoin)
    上获取。尽管 Primecoin 引入的 PoW 具有科学意义，但看起来没有活跃的开发正在进行以进一步开发 Primecoin。读者可以通过阅读 *Sunny
    King*（化名）的 Primecoin 白皮书进一步探索 Primecoin：[http://primecoin.io/bin/primecoin-paper.pdf](http://primecoin.io/bin/primecoin-paper.pdf)。
- en: Zcash
  id: totrans-192
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Zcash
- en: 'Zcash was launched on 28th of October, 2016\. This is the first currency that
    uses a specific type of zero knowledge proofs known as **zero-knowledge Succinct
    Non-interactive Arguments of Knowledge** (**zk-SNARKs**) to provide complete privacy
    to the user. These proofs are very short and easy to verify; however, setting
    up the initial public parameters is a complex process. The latter include two
    keys: the proving key and verifying key. The process requires sampling some random
    numbers in order to construct the public parameters. The issue is that these random
    numbers, also called *toxic waste*, must be destroyed after the parameter generation
    in order to prevent counterfeiting of Zcash. For this purpose, the Zcash team
    came up with a multi-party computation protocol to generate the required public
    parameters in a collaborative manner from independent locations to ensure that
    *toxic waste* is not created. Due to the fact that these public parameters are
    required to be created by the Zcash team, it means that the participants in the
    ceremony are trusted. This is the reason why the ceremony was very open and conducted
    by making use of a multi-party computation mechanism. This mechanism has a property
    whereby all of the participants in the ceremony will have to be compromised in
    order to compromise the final parameters. When the ceremony is completed all participants
    physically destroy the equipment used for private key generation. This action
    eliminates any trace of the participants'' part of the private key on the equipment.'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: Zcash 在2016年10月28日推出。这是第一种使用特定类型的零知识证明（称为**零知识简洁非交互式知识参数**（**zk-SNARKs**））为用户提供完全隐私的货币。这些证明非常短并且易于验证；然而，设置初始的公共参数是一个复杂的过程。后者包括两个密钥：证明密钥和验证密钥。该过程需要随机选择一些随机数以构建公共参数。问题在于这些随机数，也称为*有毒废物*，必须在参数生成后被销毁以防止
    Zcash 的伪造。为此，Zcash 团队提出了一种多方计算协议，以从独立位置协作生成所需的公共参数，以确保*有毒废物*不会产生。由于所需的公共参数必须由
    Zcash 团队创建，这意味着仪式的参与者是受信任的。这就是为什么仪式非常公开并采用多方计算机制进行的原因。该机制具有一个特性，那就是为了破坏最终参数，所有仪式参与者都必须被破坏。仪式完成后，所有参与者都会销毁用于私钥生成的设备。这一举动消除了设备上参与者私钥的任何痕迹。
- en: zk-SNARKs must satisfy the properties of completeness, soundness, succinctness,
    and non-interactivity. *Completeness* means that there is a definite strategy
    for a prover to satisfy a verifier that an assertion is true. On the other hand,
    *soundness* means that no prover can convince the verifier that a false statement
    is true. *Succinctness* means that messages passed between the prover and verifier
    are very small in size. Finally, the property non-interactive means that the verification
    of correctness of an assertion can be carried out without any interaction or very
    little interaction. Also, being a zero knowledge proof, the property of *zero-knowledge* (discussed
    in [Chapter 3](ch03.html "Chapter 3. Cryptography and Technical Foundations"),
    *Cryptography and Technical Foundations*) needs to be met too.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: zk-SNARKs 必须满足完整性、声音性、简洁性和非互动性的属性。*完整性*意味着存在一个明确的策略，使证明者能够使验证者相信一个断言是真实的。另一方面，*声音性*意味着没有证明者可以说服验证者一个假的陈述是真实的。*简洁性*意味着证明者和验证者之间传递的消息非常小。最后，非互动属性意味着可以在没有任何互动或非常少的互动的情况下验证断言的正确性。此外，作为零知识证明，还需要满足*零知识*的属性（在
    [第 3 章](ch03.html "第 3 章。密码学和技术基础")，*密码学和技术基础*中讨论）。
- en: Zcash developers have introduced the concept of a **Decentralized Anonymous
    Payments scheme** (**DAP scheme**) that is used in the Zcash network to enable
    direct and private payments. The transactions reveal no information about the
    origin, destination, and amount of the payments. There are two types of addresses
    available in Zcash, z-addr and t-addr. Z addresses are based on zero knowledge
    proofs and provide privacy protection whereas T addresses are similar to those
    of bitcoin.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: Zcash 开发人员引入了一个称为**去中心化匿名支付方案**（**DAP 方案**）的概念，该方案用于 Zcash 网络以实现直接和私密支付。交易不会透露有关支付的来源、目的地和金额的任何信息。Zcash
    中有两种类型的地址，z-addr 和 t-addr。Z 地址基于零知识证明并提供隐私保护，而 T 地址类似于比特币的地址。
- en: 'Zcash uses an efficient PoW scheme named **Asymmetric PoW** (**Equihash**),
    which is based on the Generalized Birthday Problem. It allows very efficient verification.
    It is a memory-hard and ASIC-resistant function. A novel idea (initial slow mining)
    has been introduced with Zcash, which means that the block reward increases gradually
    over a period of time until it reaches the 20,000^(th) block. This allows for
    initial scaling of the network and experimentation by early miners, and adjustment
    by Zcash developers if required. The slow start did have an impact on price due
    to scarcity as the price of ZEC on its first day of launch reached roughly 25,000
    USD. A slightly modified version of the Digishield difficulty adjustment algorithm
    has been implemented in Zcash. The formula is shown as follows:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: Zcash 使用一种称为**非对称 PoW**（**Equihash**）的高效 PoW 方案，它基于广义生日问题。它允许非常有效的验证。这是一个内存硬和
    ASIC 抗性的函数。Zcash 引入了一个新颖的想法（初始缓慢挖矿），这意味着区块奖励会逐渐增加，直到达到第 20,000 个区块。这允许网络的初始扩展和早期矿工的实验，如果需要，Zcash
    开发人员可以进行调整。初始缓慢启动对价格产生了影响，因为由于稀缺性，ZEC 在首日上涨到大约 25,000 美元。Zcash 实施了稍微修改过的 Digishield
    难度调整算法。公式如下所示：
- en: '*(next difficulty) = (last difficulty) x SQRT [ (150 seconds) / (last solve
    time) ]*'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '*(下一个难度) = (上一个难度) x SQRT [ (150 秒) / (上一个求解时间) ]*'
- en: 'A snapshot of various attributes of Zcash (after an initial slow start) is
    shown as follows:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: Zcash 的各种属性快照（初始缓慢启动后）如下所示：
- en: '![Zcash](img/5975_table2.jpg)'
  id: totrans-199
  prefs: []
  type: TYPE_IMG
  zh: '![Zcash](img/5975_table2.jpg)'
- en: Trading Zcash
  id: totrans-200
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 交易 Zcash
- en: 'Zcash can be bought on major digital currency exchanges. At the time of writing,
    the price of Zcash is very high. As shown in the following graph, the price soared
    as high as approximately 10 bitcoins per Zcash. Some exchanges carried out orders
    as high as 2,500 BTC per ZEC:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: Zcash 可以在主要数字货币交易所购买。在撰写时，Zcash 的价格非常高。如下图所示，价格一度飙升至每个 Zcash 约 10 比特币。一些交易所的订单甚至高达
    2,500 BTC 每个 ZEC：
- en: '![Trading Zcash](img/image_05_016.jpg)'
  id: totrans-202
  prefs: []
  type: TYPE_IMG
  zh: '![交易 Zcash](img/image_05_016.jpg)'
- en: Mining guide
  id: totrans-203
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 挖掘指南
- en: 'There are multiple methods to mine Zcash. Currently, CPU and GPU mining are
    possible. Various commercial cloud mining pools also offer contracts for mining
    Zcash. In order to perform solo mining using a CPU, the following steps can be
    followed:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 挖掘 Zcash 有多种方法。目前，可以进行 CPU 和 GPU 挖掘。各种商业云挖矿池也提供挖掘 Zcash 的合约。要使用 CPU 进行独立挖矿，可以按照以下步骤进行：
- en: 'The first step is to install prerequisites using the following command:'
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一步是使用以下命令安装先决条件：
- en: '[PRE0]'
  id: totrans-206
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: If the prerequisites are already installed, a message will display indicating
    that components are already the newest version. If not already installed or older
    than the latest package, then the installation will continue, the required packages
    will be downloaded, and the installation will be completed.
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果先决条件已安装，将显示消息指示组件已经是最新版本。如果尚未安装或版本旧于最新软件包，则安装将继续，将下载所需软件包，并完成安装。
- en: 'Next, run the commands to clone Zcash from `git` as shown in the following
    screenshot:'
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，运行命令从`git`克隆 Zcash，如下屏幕截图所示：
- en: '[PRE1]'
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This command will clone the Zcash git repository locally. The output is shown
    in the following screenshot:'
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此命令将在本地克隆 Zcash git 存储库。输出如下屏幕截图所示：
- en: '![Mining guide](img/image_05_017.jpg)'
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![挖矿指南](img/image_05_017.jpg)'
- en: The next step is to download proving and verifying keys, by using the following
    command from the screenshot:![Mining guide](img/image_05_018.jpg)
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步是通过使用以下命令从屏幕截图中下载证明和验证密钥：![挖矿指南](img/image_05_018.jpg)
- en: 'Once this command runs it will download around 911 MBs of keys into the `~/.zcash-params/`
    directory. The directory contains files for proving and verifying keys:'
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行此命令后，将在`~/.zcash-params/`目录中下载约 911 MB 的密钥。该目录包含用于证明和验证密钥的文件：
- en: '[PRE2]'
  id: totrans-214
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Once the preceding commands are completed successfully, the source code can
    be built using the following command:'
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦上述命令成功完成，可以使用以下命令构建源代码：
- en: '[PRE3]'
  id: totrans-216
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This will produce very long output; if everything goes well it will produce
    a `zcashd` binary file. Note that this command takes `nproc` as the parameter,
    which is basically a command that finds the number of cores or processors in the
    system and displays that number. If you don't have that command then replace `nproc`
    with the number of processors in your system.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 这将产生非常长的输出；如果一切顺利，它将生成一个`zcashd`二进制文件。请注意，此命令将`nproc`作为参数，`nproc`基本上是一个查找系统中核心或处理器数量并显示该数字的命令。如果您没有该命令，则用您系统中的处理器数量替换`nproc`。
- en: Once the build is completed, the next step is to configure Zcash. This is achieved
    by creating a configuration file with the name `zcash.conf` in the `~/.zcash/`
    directory.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 构建完成后，下一步是配置 Zcash。这可以通过在`~/.zcash/`目录中创建名为`zcash.conf`的配置文件来实现。
- en: 'A sample configuration file is shown as follows:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 示例配置文件如下所示：
- en: '[PRE4]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The preceding configuration enables various features. The first line adds the
    mainnet node and enables mainnet connectivity. `rpcuser` and `rpcpassword` are
    the username and password for the RPC interface. `gen = 1` is used to enable mining.
    `genproclimit` is the number of processors that can be used for mining. The last
    line enables a faster mining solver; this is not required if you want to use standard
    CPU mining.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 前述配置启用了各种功能。第一行添加了主网节点并启用了主网连接。`rpcuser`和`rpcpassword`是 RPC 接口的用户名和密码。`gen =
    1`用于启用挖矿。`genproclimit`是可用于挖矿的处理器数量。最后一行启用了更快的挖矿解算器；如果要使用标准 CPU 挖矿，则不需要此功能。
- en: 'Now Zcash can be started using the following command:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 现在可以使用以下命令启动 Zcash：
- en: '[PRE5]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Once started this will allow interaction with the RPC interface via the Zcash-cli
    command-line interface. This is almost the same as the bitcoin command-line interface.
    Once the Zcash daemon is up-and-running, various commands can be run to query
    different attributes of Zcash. Transactions can be viewed locally by using the
    CLI or via a blockchain explorer. A blockchain explorer for Zcash is available
    at: [https://explorer.zcha.in/](https://explorer.zcha.in/).'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦启动，这将允许通过 Zcash-cli 命令行界面与 RPC 接口交互。这几乎与比特币命令行界面相同。一旦 Zcash 守护进程运行起来，可以运行各种命令来查询
    Zcash 的不同属性。可以通过 CLI 或区块链浏览器在本地查看交易。Zcash 的区块链浏览器位于：[https://explorer.zcha.in/](https://explorer.zcha.in/)。
- en: Address generation
  id: totrans-225
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 地址生成
- en: 'New Z addresses can be generated using the command below:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用以下命令生成新的 Z 地址：
- en: '[PRE6]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Running the Zcash-cli command with the `getinfo` parameter produces the output
    shown in the following screenshot. It displays valuable information such as blocks,
    difficulty, and balance:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`getinfo`参数运行 Zcash-cli 命令会产生以下屏幕截图中显示的输出。它显示有关区块、难度和余额等有价值的信息：
- en: '![Address generation](img/image_05_019.jpg)'
  id: totrans-229
  prefs: []
  type: TYPE_IMG
  zh: '![地址生成](img/image_05_019.jpg)'
- en: Screenshot displaying the output of getinfo
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 显示`getinfo`输出的屏幕截图
- en: 'New T addresses can be generated using the following command:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用以下命令生成新的 T 地址：
- en: '[PRE7]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: GPU mining
  id: totrans-233
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: GPU 挖矿
- en: Other than CPU mining, a GPU mining option is also available. There is no official
    GPU miner yet; however open source developers have produced various proofs of
    concepts and working miners. The Zcash Company held an open competition to encourage
    developers to build and submit CPU and GPU miners. No winning entry has been announced
    as of the time of writing. Readers can get more information by visiting the website,
    [https://zcashminers.org/](https://zcashminers.org/).
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 除了CPU挖矿之外，还可以选择GPU挖矿。目前还没有官方的GPU矿工，但开源开发者已经制作出了各种概念证明和可工作的矿工。Zcash公司举办了一场公开竞赛，鼓励开发者构建并提交CPU和GPU矿工。截至撰写时还没有宣布获胜者。读者可以访问[https://zcashminers.org/](https://zcashminers.org/)参考更多信息。
- en: 'There is another mining: using cloud mining contracts available from various
    online cloud mining providers. The cloud mining service providers perform mining
    on the customers'' behalf. In addition to cloud mining contracts, miners can use
    their own equipment to mine via mining pools using stratum or other protocols.
    One key example is Zcash pool by nice hash. Using this pool, miners can sell their
    hash power. An example of building and using a CPU miner on a Zcash mining pool
    is shown as follows.'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 还有另一种挖矿方式：使用各种在线云挖矿提供商提供的云挖矿合约。云挖矿服务商代表客户进行挖矿。除了云挖矿合约，矿工还可以使用自己的设备通过矿池使用stratum或其他协议进行挖矿。一个关键的示例是nicehash的Zcash矿池。通过这个矿池，矿工可以出售他们的算力。以下是在Zcash挖矿矿池上构建和使用CPU矿工的示例。
- en: Downloading and compiling nheqminer
  id: totrans-236
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 下载和编译nheqminer
- en: 'The following steps can be used to download and compile `nheqminer` on an Ubuntu
    Linux distribution:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用以下步骤在Ubuntu Linux系统上下载和编译`nheqminer`：
- en: '[PRE8]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Once all the steps are completed successfully, nhequminer can be run using
    the following command:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 当所有步骤都成功完成后，可以使用以下命令运行nhequminer：
- en: '[PRE9]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Nhequminer releases are available for Windows at: [https://github.com/nicehash/nheqminer/releases](https://github.com/nicehash/nheqminer/releases).'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: Windows版本的Nhequminer可以在以下网址找到：[https://github.com/nicehash/nheqminer/releases](https://github.com/nicehash/nheqminer/releases)。
- en: Nheqminer takes several parameters such as location (`-l`), username (`-u`),
    and the number of threads to be used for mining (`-t`).
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: Nheqminer需要几个参数，如位置(`-l`)，用户名(`-u`)，以及用于挖矿的线程数(`-t`)。
- en: 'A sample run of Windows miner for Zcash is shown as follows:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是Windows版本Zcash矿工的运行示例：
- en: '![Downloading and compiling nheqminer](img/image_05_020.jpg)'
  id: totrans-244
  prefs: []
  type: TYPE_IMG
  zh: '![下载和编译nheqminer](img/image_05_020.jpg)'
- en: Using the BTC address to receive pay-outs for selling hash power
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 使用比特币地址接收出售算力的支付
- en: '![Downloading and compiling nheqminer](img/image_05_021.jpg)'
  id: totrans-246
  prefs: []
  type: TYPE_IMG
  zh: '![下载和编译nheqminer](img/image_05_021.jpg)'
- en: Using Zcash T address to receive pay-outs for selling hash power
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Zcash T地址接收出售算力的支付
- en: This completes the introduction to Zcash; readers can explore more about Zcash
    online as it is very volatile at the moment and things can change very quickly.
    One thing is for sure; Zcash's zero knowledge proofs are a major innovation and
    they pave the way for future applications that require inherent privacy, such
    as banking, medicine, or the law.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 这完成了对Zcash的介绍；读者可以在网上了解更多关于Zcash的信息，因为现在它的波动性很大，事情可能会发生很快。有一件事是肯定的；Zcash的零知识证明是一个重大的创新，并为未来需要固有隐私的应用程序铺平了道路，如银行业、医学或法律业。
- en: Summary
  id: totrans-249
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, readers have been introduced to the overall cryptocurrency
    landscape. A few altcoins have been discussed in detail, especially Zcash and
    Namecoin. Cryptocurrencies are a very active area for research, especially around
    scalability, privacy, and security aspects. Some research has also been conducted
    in order to invent new difficulty retargeting algorithms in order to thwart the
    threat of centralization in cryptocurrencies. Further research can be carried
    out in the areas of privacy and specially scalability. Readers now should be able
    to appreciate the concept of altcoins and various motivations behind them. Some
    practical aspects, such as mining and starting a new currency project, have also
    been discussed, which hopefully will give readers a strong foundation and enable
    them to further explore these areas. Altcoins are a fascinating field of research
    and open a lot of possibilities for a decentralized future.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍了整个加密货币领域的概况。详细讨论了一些替代币，特别是Zcash和Namecoin。加密货币是一个非常活跃的研究领域，特别是在可扩展性、隐私和安全方面。也进行了一些研究，以发明新的难度重新调整算法，以阻止加密货币中央化的威胁。在隐私和特别是可扩展性领域可以进行进一步的研究。读者现在应该能够欣赏到替代币的概念及其背后的各种动机。还讨论了一些实际方面，如挖矿和启动新的货币项目，希望这些讨论将为读者打下坚实的基础，并使他们能够进一步探索这些领域。替代币是一个迷人的研究领域，为去中心化的未来打开了许多可能性。
