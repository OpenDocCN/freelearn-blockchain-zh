- en: Explaining Blockchain Technology and Working with Hyperledger
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Blockchain is a transforming force in a digital world in which people are connected
    more than ever. To explain it in a few words, this shared, distributed ledger
    known as blockchain is able to make the process of recording transactions and
    tracking assets in a business network more secure, easier, and with transparency
    for all members.
  prefs: []
  type: TYPE_NORMAL
- en: People now often use services such as internet banking, e-commerce, and apps
    for making purchases such as hotel reservations, taxi services, and other online
    services. This creates a huge volume of transactions and data. On top of this,
    IoT also brings new possibilities to this digital world. As products integrate
    with IoT, the volume of transactions grows exponentially; therefore, the necessity
    to connect to suppliers, banks, and regulators across geographical boundaries
    grows.
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain technology provides a huge opportunity to transform operational business
    in many industries, such as financial services, insurance, communications, and
    government. Furthermore, it facilitates transactions between companies as they
    can be processed digitally.
  prefs: []
  type: TYPE_NORMAL
- en: What is blockchain?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let’s take a more in-depth look at what blockchain really is. An asset consists
    of anything that is capable of being owned or controlled to produce value. The
    assets are the protagonists of this network, and can include tangible assets such
    as cars, houses, or money. They can also include intangible assets such as copyrights
    and patents. If the assets are the protagonist, then the ledger is the *key*.
    The ledger is a business's system of records. Businesses will have multiple ledgers
    for multiple business networks in which they participate.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following diagram represents the status quo for business networks. Each
    participant keeps their own ledger(s), which are updated to represent business
    transactions as they occur:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f7df70b3-a53a-4362-b437-fb4c80fc22ad.png)'
  prefs: []
  type: TYPE_IMG
- en: 'With blockchain technology, members of a business network share a ledger that
    is updated every time a transaction occurs through peer-to-peer replication, as
    depicted in the following diagram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/31ed78e2-2d11-40b8-bc61-a0d4322dda7e.png)'
  prefs: []
  type: TYPE_IMG
- en: Blockchain allows multiple competing parties to securely interact with the same
    universal source of truth. It has shared immutable ledgers for recording transaction
    history, which provide a permissioned network with known identities.
  prefs: []
  type: TYPE_NORMAL
- en: 'The four important concepts of blockchain are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Consensus**: For a transaction to be valid, all participants must agree on
    its validity.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Provenance**: Participants know where the asset came from and how its ownership
    has changed over time.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Immutability**: No participant can tamper with a transaction after it has
    been recorded in the ledger. If a transaction was made in error, a new transaction
    must be used to reverse the error, and both transactions are then visible.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Finality:** A single shared ledger provides one place to go to determine
    the ownership of an asset or the completion of a transaction.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The main focus when we talk about blockchain is on a business network based
    on Blockchain, Blockchain for business, where transactions and members are permissioned,
    private, and prioritized; we are working with assets, identity, and selective
    endorsement.
  prefs: []
  type: TYPE_NORMAL
- en: You may be familiar with the idea that blockchain is a Bitcoin technology. In
    fact, we may even say that Bitcoin was the first use case of blockchain. Bitcoin
    is a digital currency with no central banks, no single administrator, and no paper
    currency. The software used is capable of solving mathematical puzzles in a peer-to-peer
    network. The transactions do not have an intermediary; they happen directly between
    users with transparency.
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain and Hyperledger
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'There are many frameworks or technologies around blockchain: R3 (corda), Ethereum,
    Neo, and Nem, each one with a particular design and architecture. Throughout this
    book, we will focus on the blockchain technology Hyperledger ([https://www.hyperledger.org/](https://www.hyperledger.org/)).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Hyperledger is part of the Linux Foundation, which was launched in 2016 with
    a technical and organizational governance structure and thirty founding corporate
    members. More than 230 members are now part of this initiative. This includes
    companies such as Cisco, Hitachi, IBM, ABN AMRO, ANZ Bank, Red Hat, VMware, and
    JP Morgan. Today, Hyperledger works with many projects under the same umbrella
    and focuses on differences in blockchain use cases, as well as covering frameworks
    and tools. A good description of Hyperledger projects can be found at [https://www.hyperledger.org](https://www.hyperledger.org).
    Here, it is stated that Hyperledger incubates and promotes a range of business
    blockchain technologies, including distributed ledger frameworks, smart contract
    engines, client libraries, graphical interfaces, utility libraries, and sample
    applications. The Hyperledger umbrella strategy encourages the reuse of common
    building blocks and enables rapid innovation of DLT (distributed ledger technology)components:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/2bed88b9-3b3f-4da1-a168-d4c5aa338c94.png)'
  prefs: []
  type: TYPE_IMG
- en: Hyperledger projects
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Exploring the Hyperledger projects, we find five frameworks and five tools.
    The frameworks are Sawtooth, Iroha, Burrow, Indy, and Fabric. The tools are Caliper,
    Composer, Cello, Explorer, and Quilt.
  prefs: []
  type: TYPE_NORMAL
- en: Let's discuss these frameworks and tools.
  prefs: []
  type: TYPE_NORMAL
- en: Hyperledger Sawtooth framework
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Hyperledger Sawtooth follows the same architecture and characteristics as other
    Hyperledger frameworks; it is an enterprise blockchain platform for building distributed
    ledger applications and networks.
  prefs: []
  type: TYPE_NORMAL
- en: In my opinion, the most striking characteristic of Sawtooth is the facility
    to use the APIs, as well as many languages such as Python, C++, Go, Java, JavaScript,
    and Rust. This aids in the development of applications that run on top of the
    Sawtooth platform. In addition, you can write smart contracts in Solidity for
    use with the Seth transaction family.
  prefs: []
  type: TYPE_NORMAL
- en: Another good feature is the parallel transaction execution. Most blockchains
    require serial transaction execution in order to guarantee consistent ordering
    at each node on the network. Ethereum contract compatibility can also be used
    with Seth; the Sawtooth-Ethereum integration project extends the interoperability
    of the Sawtooth platform to Ethereum.
  prefs: []
  type: TYPE_NORMAL
- en: Hyperledger Iroha framework
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Hyperledger Iroha is a blockchain platform designed for building distributed
    ledgers; it is based on use cases such as Know Your Customer and features mobile
    application development and a new chain-base Byzantine fault tolerant consensus
    algorithm called Sumeragi. Soramitsu, Hitachi, NTT Data, and Colu initially contributed
    to Hyperledger Iroha.
  prefs: []
  type: TYPE_NORMAL
- en: Hyperledger Composer tool
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you want to test an idea, create a **proof of concept** (**POC**) or a minimum
    value product (MVP), or even start a project, then Hyperledger Composer can help
    you do so quickly and easily. You can test your business network with a web application
    named Composer Playground. With some clicks and a good use case, you can also
    create a business networking integrated into your systems. Another option is to
    create a frontend application to use your smart contract.
  prefs: []
  type: TYPE_NORMAL
- en: The picture below represent an official architecture overview in the site of
    Hyperledger Composer Tool.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/1eb34247-e29e-489d-ae1d-1a5a7abe57b5.png)'
  prefs: []
  type: TYPE_IMG
- en: Hyperledger Burrow framework
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The first paragraph of the Hyperledger Burrow documentation contains a good
    description of what this framework is. This description is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '*"Hyperledger Burrow is a permissioned Ethereum smart-contract blockchain node.
    It executes Ethereum EVM smart contract code (usually written in Solidity) on
    a permissioned virtual machine. Burrow provides transaction finality and high
    transaction throughput on a proof-of-stake Tendermint consensus engine."*'
  prefs: []
  type: TYPE_NORMAL
- en: 'The idea is indeed to work with Ethereum smart contracts. The high level of
    architecture applied to Hyperledger Burrow can be seen in the following diagram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/33f6d024-17bf-4768-ab43-acb73866b991.png)'
  prefs: []
  type: TYPE_IMG
- en: Hyperledger Fabric
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To explore the umbrella project of Hyperledger, we''ll work with Hyperledger
    Fabric. This was the first project or initial concept of the Hyperledger Framework,
    and Digital Asset and IBM were among the initial contributors. The characteristics
    of Hyperledger Fabric are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Allows components such as consensus and membership services to be plug-and-play
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Leverages container technology to host smart contracts called chaincode, which
    comprise the application logic of the system
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'But before we move forward, let''s review some concepts of blockchain and explore
    Hyperledger Fabric in detail:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/0166787c-5329-4bb9-8fde-824b3962487a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'In the preceding diagram, you can see a high-level blockchain architecture.
    Let''s explore (analyze) the important components of this architecture:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chaincode:** This is our business network contract, and Just like a any contract,
    it states possible transactions between members of the network, and guarantee
    that every member has pre established defined access of the ledger'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Ledger:** Think as a digital storage to entire transactions history, as a
    database you can have  query capabilities to explore the data.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Privacy:** Channels: In the most of cases , there is an unique channel to
    all networks, but Hyperledger Fabric allows multi lateral transactions, guaranteeing
    the privacy and confidentiality, so if two members of the network for any reason
    need to have a specified transaction among  them they can have a separated channel
    from the others.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Security and membership services**: Each member has a specific permission
    in the network , as a result every transactions will be logged and can be traced
    by an authorized regulator or auditor.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To explain what we are talking about better, let''s take a look at the components
    of Hyperledger Fabric in a business network:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6487fb41-bc1b-4cf6-916b-12b633323281.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The components shown in the preceding diagram can be explained as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Multiple members are part of the blockchain network. In this case, we have **Member**
    **1**, **Member 2,** **Member 3,** and **Member** **N**.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Each member has its own peer.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Each peer has a **Certificate Authority**.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The queue or transactions will be ordered by the **Ordering Cluster**.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Member or peer
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'A peer is a member or a company in the network that hosts the ledger and smart
    contracts. Smart contracts and ledgers are used to encapsulate the shared processes
    and shared information in a network:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/706ca4da-9df2-415b-804e-b7aa9b138f38.png)'
  prefs: []
  type: TYPE_IMG
- en: Certificate Authority (CA)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Each member of a business network can access a digital identity, issued for
    it by an authority trusted by the system. In the most common case, digital identities
    (or simply identities) take the form of cryptographically validated digital certificates
    that comply with the X.509 standard and are issued by a CA.
  prefs: []
  type: TYPE_NORMAL
- en: Ordering Cluster
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The queue or transactions will be ordered by the ordering services that provide
    a shared communication channel to clients and peers, offering a broadcast service
    for messages containing transactions. As part of ordering and distributing the
    transactions, Hyperledger Fabric works with **ordering services (OS)** and a Kaftka
    cluster, which is the broker that guarantees the load balancing and consensus.
    We'll explore this in more detail when we set up the environment.
  prefs: []
  type: TYPE_NORMAL
- en: SDK/API
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The application or current system can connect to the blockchain network through
    an SDK/API, which is normally developed using Node.js and is an important step
    in using the smart contract:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/e1f75f01-5df7-41bf-b223-de36a3303b46.png)'
  prefs: []
  type: TYPE_IMG
- en: There are some important improvements in Hyperledger Fabric 1.3\. Since version
    1.1 and Node.js chaincode support, developers are now able to develop chaincode
    using the most popular framework with the latest programming language. If you
    are using a version before 1.1, you need to use Go to develop the chaincode. Let's
    explore the new features of Hyperledger Fabric 1.3.
  prefs: []
  type: TYPE_NORMAL
- en: 'The examples used to set up coding in this book will follow Hyperledger Fabric
    1.4, with important new features such as:'
  prefs: []
  type: TYPE_NORMAL
- en: '**New ways to develop applications**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These new features facilitate the writing of decentralized code. They enable
    the developer to use Node.js SDK Node.js chaincode intuitively and logically to
    produce decentralized applications
  prefs: []
  type: TYPE_NORMAL
- en: '**New features for operations and easier to maintain**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: With more Hyperledger Fabric networks deployed and tested, serviceability and
    operational aspects become more important. Fabric v1.4 has new features for logging
    improvements, health checks, and operational metrics. Fabric 1.4 is the recommended
    version to start a production operation because its features focus on stability
    and some important fixes. If you go to the Hyperledger Fabric website, you can
    find information on future fixes that will be delivered in the v1.4.x stream,
    while new features are being developed in the v2.0 stream.
  prefs: []
  type: TYPE_NORMAL
- en: Selecting a good use case
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Before we start any blockchain project, an important step is to select a good
    use case. We often see cases that can be solved through a distributed database
    or even a web application with good permission access.There is a puzzle to be
    cracked:'
  prefs: []
  type: TYPE_NORMAL
- en: Is a business network involved?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Is there a transaction that needs validation or a consensus?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Are audit trails important, or origin control?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Immutability (data)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Finality (fewer disputes)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Make sure to draw a map with different organizations on, or a business network
    and how they are connected—this is a very important step. Moreover, check the
    use case addresses one or more attributes listed between the second and fifth
    points. If you don't have more than one of the attributes listed between the second
    and fifth points, then it probably does not fit with the blockchain solution.
  prefs: []
  type: TYPE_NORMAL
- en: It's a good idea to have a think tank or design thinking session when selecting
    a use case.
  prefs: []
  type: TYPE_NORMAL
- en: 'This table demonstrates a good use case for different industries:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Financial Institutions** | **Insurance** | **Cross Industries and Others**
    |'
  prefs: []
  type: TYPE_TB
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Credit letter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Credit debit or bond
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Consortium shared ledger
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: First party medical claims processing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scheduled personal property claims processing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Loyalty points
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Capital asset management
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Identity management
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain – food tracking use case
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now, let's focus on the food tracking use case. Today, consumers are demanding
    more information and transparency on how and where their products are made. The
    EU requires more information about corporate supply chains, with huge penalties
    for companies and countries that do not comply. Since 2016, Chinese customers
    have been tracking where their food was produced, as well as how many times it
    has changed hands between different wholesalers and brokers before reaching their
    dinner tables. So, the use case sounds a good fit for blockchain, right?
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s reflect on the five elements of blockchain:'
  prefs: []
  type: TYPE_NORMAL
- en: Business networking
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Producers, manufactures, transportation companies, retail stores.
  prefs: []
  type: TYPE_NORMAL
- en: Is there a transaction that needs validation or consensus?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Recording who owns what, when, and where an asset is in the supply chain.
  prefs: []
  type: TYPE_NORMAL
- en: Are audit trails important?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Consumers request, blocks like E.U. and countries like China require a tracking
    audit.
  prefs: []
  type: TYPE_NORMAL
- en: Immutability and 5\. Finality
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Different companies and assets involved in a complex process.
  prefs: []
  type: TYPE_NORMAL
- en: 'Okay, now that we know that blockchain fits with our use case, let''s take
    a look at the benefits of using blockchain technology:'
  prefs: []
  type: TYPE_NORMAL
- en: It is verifiable, preventing any party from altering or challenging the legitimacy
    of the information being exchanged.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Greater efficiencies are available through increased transparency in complex
    global supply chains.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Regulators, authorities, and business network companies can quickly and easily
    request reliable information from across the supply chain.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In the next chapters, we will be exploring in more detail the food chain, and
    how blockchain with IoT can transform it.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Blockchain features a shared and distributed ledger capable of making the process
    of recording transactions and tracking assets in a business network easier and
    more dynamic. This is different from Bitcoin, which is an example of an unpermissioned
    public ledger and defines an unregulated shadow currency with intensive resources.
    Blockchain is generally permissioned, private, and prioritizes endorsements, using
    assets based on a cryptocurrency.
  prefs: []
  type: TYPE_NORMAL
- en: The project known as Hyperledger is a collaborative effort with open source
    code that was created to promote blockchain technologies.
  prefs: []
  type: TYPE_NORMAL
- en: 'In May 2017, there were five active frameworks and five active tools:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Frameworks:** Hyperledger Burrow, Hyperledger Fabric, Hyperledger Iroha,
    Hyperledger Sawtooth, and Hyperledger Indy'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Tools:** Hyperledger Cello, Hyperledger Composer, Hyperledger Explorer, Hyperledger
    Quilt, and Hyperledger Caliper'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In the next chapters, we will explore in more detail how the blockchain platform
    can be used to solve some important challenges in the food chain, and we will
    discover that Hyperledger Fabric 1.4 is a strong blockchain platform.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Q. Why use blockchain?
  prefs: []
  type: TYPE_NORMAL
- en: 'A. Blockchain provides trust and transparency to solve food chain challenges
    that have stymied supply chains; with the use of blockchain, you can access the
    benefits of the platform, such as these:'
  prefs: []
  type: TYPE_NORMAL
- en: Trust and transparency
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Choose who is acting and receiving information, as you need only one shared
    ledger for transactions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As the ledger is immutable, lack of confidence is no longer a problem, and participants
    can be sure of the origins and veracity of transactions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Quick and easy access to detailed end-to-end supply chain data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Minimize waste with better allocation of goods and products, based on data from
    the ecosystem
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Blockchain gives participants the ability to share a ledger, which is updated
    through peer-to-peer replication every time a transaction occurs. Privacy services
    are used to ensure that participants see only the parts of the ledger that are
    relevant to them, and that transactions are secure, authenticated, and verifiable.
    Blockchain also allows the contract for asset transfers to be embedded, for execution
    with the transaction. Network participants agree how transactions are verified
    through a process referred to as consensus. Government oversight, compliance,
    and auditing can be part of the same network.
  prefs: []
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To find further information about the topic, follow these links:'
  prefs: []
  type: TYPE_NORMAL
- en: 'The Hyperledger Sawtooth documentation, which can be found at the following
    link: [https://sawtooth.hyperledger.org/docs/core/releases/latest/introduction.html#distinctive-features-of-sawtooth](https://sawtooth.hyperledger.org/docs/core/releases/latest/introduction.html#distinctive-features-of-sawtooth)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Hyperledger Iroha documentation, which can be found at the following link: [https://www.hyperledger.org/projects/iroha/resources](https://www.hyperledger.org/projects/iroha/resources)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Hyperledger Indy documentation, which can be found at the following link: [https://github.com/hyperledger/indy-node/blob/stable/getting-started.md](https://github.com/hyperledger/indy-node/blob/stable/getting-started.md)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Hyperledger Composer documentation, which can be found at the following
    link: [https://hyperledger.github.io/composer/latest/introduction/introduction.html](https://hyperledger.github.io/composer/latest/introduction/introduction.html)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Hyperledger Framework 1.4 documentation, which can be found at the following
    link: [https://hyperledger-fabric.readthedocs.io/en/release-1.4/](https://hyperledger-fabric.readthedocs.io/en/release-1.4/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'GitHub Hyperledger Framework link: [https://github.com/hyperledger/fabric](https://github.com/hyperledger/fabric)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
