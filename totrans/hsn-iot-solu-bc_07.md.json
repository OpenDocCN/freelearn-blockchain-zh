["```\n$ yo hyperledger-composer\nWelcome to the Hyperledger Composer project generator\n? Please select the type of project: Business Network\nYou can run this generator using: 'yo hyperledger-composer:businessnetwork'\nWelcome to the business network generator\n? Business network name: food-safety-b10407\n? Description: Hands-on IoT solutions with Blockchain\n? Author name: Maximiliano and Enio\n? Author email: max.santos@gmail.com\n? License: Apache-2.0\n? Namespace: com.packtpublishing.businessnetwork.foodsafety\n? Do you want to generate an empty template network? Yes: generate an empty template network\n   create package.json\n   create README.md\n   create models/com.packtpublishing.businessnetwork.cto\n   create permissions.acl\n   create .eslintrc.yml\n```", "```\n// Tracking information when an asset arrives or leaves a location\nenum LocationStatus {\n o ARRIVED\n o IN_TRANSIT\n o LEFT\n}\n\n// Location Types\nenum LocationType {\n o FACTORY\n o WAREHOUSE\n o TRANSPORTER\n o STORE\n}\n\n// A measurement sent by the transporter sensor\nconcept Measurement {\n o DateTime date\n o Double value\n}\n\n// Check if it's in the factory, warehouse\nconcept Location {\n o DateTime date\n o LocationType location\n o String locationIdentifier\n o LocationStatus status\n}\n```", "```\n// Definition of a food box\nasset FoodBox identified by foodBoxIdentifier {\n o String foodBoxIdentifier\n o Location[] assetTrackingInformation\n o Measurement[] measureTrackingInformation\n --> FoodSafetyParticipant  owner\n}\n\n// Definition of a pallet that groups food boxes\nasset FoodBoxPallet identified by foodBoxPalletIdentifier {\n o String foodBoxPalletIdentifier\n --> FoodBox foodBoxInPallet\n o Location[] assetTrackingInformation \n o Measurement[] measureTrackingInformation\n --> FoodSafetyParticipant  owner\n}\n```", "```\nabstract participant FoodSafetyParticipant identified by identifier {\n o String identifier\n o String name\n}\n\nparticipant FoodFactory extends FoodSafetyParticipant {\n}\n\nparticipant Warehouse extends FoodSafetyParticipant {\n}\n\nparticipant Transporter extends FoodSafetyParticipant {\n}\n\nparticipant Store extends FoodSafetyParticipant {\n}\n\nparticipant Consumer extends FoodSafetyParticipant {\n}\n```", "```\nrule Default {\n    description: \"Allow all participants access to all resources\"\n    participant: \"ANY\"\n    operation: ALL\n    resource: \"com.packtpublishing.businessnetwork.foodsafety.**\"\n    action: ALLOW\n}\n```", "```\n$ composer archive create -t dir -n .\nCreating Business Network Archive\nLooking for package.json of Business Network Definition\n    Input directory: /hands-on-iot-solutions-with-blockchain/ch7/food-safety-b10407\nFound:\n     Description: Hands-on IoT solutions with Blockchain\n     Name: food-safety-b10407\n     Identifier: food-safety-b10407@0.0.1\nWritten Business Network Definition Archive file to \n     Output file: food-safety-b10407@0.0.1.bna\nCommand succeeded\n```", "```\n$ ~/fabric-dev-servers/createPeerAdminCard.sh \nDevelopment only script for Hyperledger Fabric control\nRunning 'createPeerAdminCard.sh'\nFABRIC_VERSION is unset, assuming hlfv12\nFABRIC_START_TIMEOUT is unset, assuming 15 (seconds)\nUsing composer-cli at v0.20.4\nSuccessfully created business network card file to \n    Output file: /tmp/PeerAdmin@hlfv1.card\nCommand succeeded\nSuccessfully imported business network card\n    Card file: /tmp/PeerAdmin@hlfv1.card\n    Card name: PeerAdmin@hlfv1\nCommand succeeded\nThe following Business Network Cards are available:\nConnection Profile: hlfv1\n┌─────────────────┬───────────┬──────────────────┐\n│ Card Name       │ UserId    │ Business Network │\n├─────────────────┼───────────┼──────────────────┤\n│ PeerAdmin@hlfv1 │ PeerAdmin │                  │\n└─────────────────┴───────────┴──────────────────┘\n\nIssue composer card list --card <Card Name> to get details a specific card\nCommand succeeded\nHyperledger Composer PeerAdmin card has been imported, host of fabric specified as 'localhost'\n```", "```\n$ composer network install --card PeerAdmin@hlfv1 --archiveFile food-safety-b10407\\@0.0.1.bna \n√ Installing business network. This may take a minute...\nSuccessfully installed business network food-safety-b10407, version 0.0.1\n\nCommand succeeded\n$ composer network start --networkName food-safety-b10407 --networkVersion 0.0.1 --networkAdmin admin --networkAdminEnrollSecret adminpw --card PeerAdmin@hlfv1 --file networkadmin.card\nStarting business network food-safety-b10407 at version 0.0.1\n\nProcessing these Network Admins: \nuserName: admin\n√ Starting business network definition. This may take a minute...\nSuccessfully created business network card:\nFilename: networkadmin.card\n\nCommand succeeded\n```", "```\n$ composer card import --file networkadmin.card\nSuccessfully imported business network card\n    Card file: networkadmin.card\n    Card name: admin@food-safety-b10407\n\nCommand succeeded\n\n$ composer network ping --card admin@food-safety-b10407\nThe connection to the network was successfully tested: food-safety-b10407\n    Business network version: 0.0.1\n    Composer runtime version: 0.20.4\n    participant: org.hyperledger.composer.system.NetworkAdmin#admin\n    identity: org.hyperledger.composer.system.Identity#f48a787ac40102cc7753336f8b15dd20fa3765e7b9049b2aeda4dcc3816d30c1\n\nCommand succeeded\n```", "```\ntransaction updateTransportationData {\n  --> FoodBoxPallet pallet\n  o Location locationInformation\n  o Measurement measurementInformation\n}\n```", "```\n/**\n * Update pallets and boxes with measurements function.\n * @param {com.packtpublishing.businessnetwork.foodsafety.UpdateTransportationData} tx Update pallets and boxes with measurements.\n * @transaction\n */\nasync function updateTransportationData(tx) {\n\n // Get transaction parametes\n let newValue = tx.asset;\n let location = tx.locationInformation;\n let measurement = tx.measurementInformation;\n\n // Update Pallet data with measurements\n if( !newValue.assetTrackingInformation || newValue.assetTrackingInformation == undefined)\n newValue.assetTrackingInformation = [];\n if ( !newValue.measureTrackingInformation || newValue.measureTrackingInformation == undefined)\n newValue.measureTrackingInformation = [];\n\n newValue.assetTrackingInformation.push(location);\n newValue.measureTrackingInformation.push(measurement);\n\n // Update Boxes data with measurements\n let foodBox = newValue.foodBoxInPallet;\n if( !foodBox.assetTrackingInformation || foodBox.assetTrackingInformation == undefined)\n foodBox.assetTrackingInformation = [];\n\n if ( ! foodBox.measureTrackingInformation || foodBox.measureTrackingInformation == undefined)\n foodBox.measureTrackingInformation = [];\n\n foodBox.assetTrackingInformation.push(location); \n foodBox.measureTrackingInformation.push(measurement);\n\n// Get the asset registry for both assets.\n let assetRegistryFoodBoxPallet = await getAssetRegistry('com.packtpublishing.businessnetwork.foodsafety.FoodBoxPallet');\n let assetRegistryFoodBox = await getAssetRegistry('com.packtpublishing.businessnetwork.foodsafety.FoodBox');\n\n // Update the assets in the asset registry.\n await assetRegistryFoodBoxPallet.update(newValue);\n await assetRegistryFoodBox.update(foodBox);\n}\n```", "```\n$ composer participant add -c admin@food-safety-b10407 -d '{\"$class\":\"com.packtpublishing.businessnetwork.foodsafety.Consumer\",\"identifier\":\"5\",\"name\":\"Consumer\"}'\nParticipant was added to participant registry.\n\nCommand succeeded\n\n$ composer participant add -c admin@food-safety-b10407 -d '{\"$class\":\"com.packtpublishing.businessnetwork.foodsafety.Store\",\"identifier\":\"4\",\"name\":\"Store\"}'\nParticipant was added to participant registry.\n\nCommand succeeded\n\n$ composer participant add -c admin@food-safety-b10407 -d '{\"$class\":\"com.packtpublishing.businessnetwork.foodsafety.Transporter\",\"identifier\":\"2\",\"name\":\"Transporter\"}'\nParticipant was added to participant registry.\n\nCommand succeeded\n\n$ composer participant add -c admin@food-safety-b10407 -d '{\"$class\":\"com.packtpublishing.businessnetwork.foodsafety.Warehouse\",\"identifier\":\"3\",\"name\":\"Warehouse\"}'\nParticipant was added to participant registry.\n\nCommand succeeded\n\n$ composer participant add -c admin@food-safety-b10407 -d '{\"$class\":\"com.packtpublishing.businessnetwork.foodsafety.FoodFactory\",\"identifier\":\"1\",\"name\":\"Factory\"}'\nParticipant was added to participant registry.\nCommand succeeded\n```", "```\ncomposer identity issue -c admin@food-safety-b10407 -f <name of the output file for the card> -u <participant name> -a <participant class# Participant id>\n```", "```\n$ composer identity issue -c admin@food-safety-b10407 -f consumer.card -u \"Consumer\" -a \"resource:com.packtpublishing.businessnetwork.foodsafety.Consumer#1\"\nIssue identity and create Network Card for: Consumer\n\n√ Issuing identity. This may take a few seconds...\n\nSuccessfully created business network card file to \n    Output file: consumer.card Command succeeded\n\n```", "```\n$ composer card import -f consumer.card \nSuccessfully imported business network card\n    Card file: consumer.card\n    Card name: Consumer 1@food-safety-b10407\n\nCommand succeeded\n\n$ composer card list\nThe following Business Network Cards are available:\nConnection Profile: hlfv1\n┌──────────────────────────────────┬───────────────┬────────────────────┐\n│ Card Name                        │ UserId        │ Business Network   │\n├──────────────────────────────────┼───────────────┼────────────────────┤\n│ Factory 1@food-safety-b10407     │ Factory       │ food-safety-b10407 │\n├──────────────────────────────────┼───────────────┼────────────────────┤\n│ Warehouse 1@food-safety-b10407   │ Warehouse     │ food-safety-b10407 │\n├──────────────────────────────────┼───────────────┼────────────────────┤\n│ Store 1@food-safety-b10407       │ Store         │ food-safety-b10407 │\n├──────────────────────────────────┼───────────────┼────────────────────┤\n│ Consumer 1@food-safety-b10407    │ Consumer      │ food-safety-b10407 │\n├──────────────────────────────────┼───────────────┼────────────────────┤\n│ Transporter 1@food-safety-b10407 │ Transporter   │ food-safety-b10407 │\n├──────────────────────────────────┼───────────────┼────────────────────┤\n│ admin@food-safety-b10407         │ admin         │ food-safety-b10407 │\n├──────────────────────────────────┼───────────────┼────────────────────┤\n│ PeerAdmin@hlfv1                  │ PeerAdmin     │                    │\n└──────────────────────────────────┴───────────────┴────────────────────┘\n\nIssue composer card list --card <Card Name> to get details a specific card\n\nCommand succeeded\n```", "```\nrule FoodBoxFactoryCreation {\n description: \"Factories can create FoodBoxes\"\n participant: \"com.packtpublishing.businessnetwork.foodsafety.FoodFactory\"\n operation: CREATE\n resource: \"com.packtpublishing.businessnetwork.foodsafety.FoodBox\"\n action: ALLOW\n}\n```", "```\nrule FoodBoxFactoryUpdateAndRead {\n description: \"Factories can update and read owned FoodBoxes\"\n participant(p): \"com.packtpublishing.businessnetwork.foodsafety.FoodFactory\"\n operation: UPDATE, READ\n resource(b): \"com.packtpublishing.businessnetwork.foodsafety.FoodBox\"\n condition: (p == b.owner)\n action: ALLOW\n}\n```", "```\nrule FoodBoxTransportersUpdateAndRead {\n description: \"Transporters can update and read owned FoodBoxes\"\n participant(p): \"com.packtpublishing.businessnetwork.foodsafety.Transporter\"\n operation: UPDATE, READ\n resource(b): \"com.packtpublishing.businessnetwork.foodsafety.FoodBox\"\n condition: (p  == b.owner )\n action: ALLOW\n}\n\nrule FoodBoxPalletTransportersUpdateAndRead {\n description: \"ransporters can update and read owned FoodBoxes\"\n participant(p): \"com.packtpublishing.businessnetwork.foodsafety.Transporter\"\n operation: UPDATE, READ\n resource(b): \"com.packtpublishing.businessnetwork.foodsafety.FoodBoxPallet\"\n condition: (p  == b.owner )\n action: ALLOW\n}\n```", "```\nrule FoodBoxPalletWarehouseCreate {\n description: \"Warehouses can create FoodBoxPallets\"\n participant: \"com.packtpublishing.businessnetwork.foodsafety.Warehouse\"\n operation: CREATE\n resource: \"com.packtpublishing.businessnetwork.foodsafety.FoodBoxPallet\"\n action: ALLOW\n}\n\nrule FoodBoxWarehouseUpdateAndRead {\n description: \"Warehouses can update and read owned FoodBoxes\"\n participant(p): \"com.packtpublishing.businessnetwork.foodsafety.Warehouse\"\n operation: UPDATE, READ\n resource(b): \"com.packtpublishing.businessnetwork.foodsafety.FoodBox\"\n condition: (p == b.owner )\n action: ALLOW\n}\n\nrule FoodBoxPalletWarehouseUpdateAndRead {\n description: \"Warehouses can update and read owned FoodBoxes\"\n participant(p): \"com.packtpublishing.businessnetwork.foodsafety.Warehouse\"\n operation: UPDATE, READ\n resource(b): \"com.packtpublishing.businessnetwork.foodsafety.FoodBoxPallet\"\n condition: (p  == b.owner)\n action: ALLOW\n}\n\n```", "```\n// Store Rules\nrule StoreCanReadFoodBoxes {\n description: \"Stores can update and read owned FoodBoxes\"\n participant(p): \"com.packtpublishing.businessnetwork.foodsafety.Store\"\n operation: READ\n resource(b): \"com.packtpublishing.businessnetwork.foodsafety.FoodBoxPallet\"\n condition: (p  == b.owner )\n action: ALLOW\n}\n\n// Consumer Rules\nrule ConsumersCanReadFoodBoxes {\n description: \"Factories can update and read owned FoodBoxes\"\n participant: \"com.packtpublishing.businessnetwork.foodsafety.Consumer\"\n operation: READ\n resource: \"com.packtpublishing.businessnetwork.foodsafety.FoodBox\"\n action: ALLOW\n}\n\n```", "```\n{\n \"engines\": {\n \"composer\": \"^0.20.4\"\n },\n \"name\": \"food-safety-b10407\",\n \"version\": \"0.0.2\",\n...\n```", "```\n$ composer archive create -t dir -n .\nCreating Business Network Archive\n\nLooking for package.json of Business Network Definition\n Input directory: /projects/hands-on-iot-solutions-with-blockchain/ch7/food-safety-b10407\nFound:\n Description: Hands-on IoT solutions with Blockchain\n Name: food-safety-b10407\n Identifier: food-safety-b10407@0.0.2\nWritten Business Network Definition Archive file to\n Output file: food-safety-b10407@0.0.2.bna\n\nCommand succeeded\n```", "```\n$ composer network install --card PeerAdmin@hlfv1 --archiveFile food-safety-b10407\\@0.0.2.bna\n√ Installing business network. This may take a minute...\nSuccessfully installed business network food-safety-b10407, version 0.0.2\n\nCommand succeeded\n```", "```\n$ composer network upgrade --card PeerAdmin@hlfv1 --networkName food-safety-b10407 --networkVersion 0.0.2\nUpgrading business network food-safety-b10407 to version 0.0.2\n\n√ Upgrading business network definition. This may take a minute...\n\nCommand succeeded\n```", "```\ncomposer-rest-server -c \"<business card name>\" -n never -u true -w true -p <port defined for the participant server> \n```", "```\ncomposer-rest-server -c \"Factory@food-safety-b10407\" -n never -u true -w true -p 3000\n\ncomposer-rest-server -c \"Warehouse@food-safety-b10407\" -n never -u true -w true -p 3001\n\ncomposer-rest-server -c \"Store@food-safety-b10407\" -n never -u true -w true -p 3002\n\ncomposer-rest-server -c \"Consumer@food-safety-b10407\" -n never -u true -w true -p 3003\n\ncomposer-rest-server -c \"Transporter@food-safety-b10407\" -n never -u true -w true -p 3004\n```", "```\nvar iotf = require(\"ibmiotf\");\nvar mraa = require('mraa');\nvar config = require(\"./device.json\");\nvar deviceClient = new iotf.IotfDevice(config);\nvar temperatureSensor = new mraa.Aio(3);\n\nvar RESISTOR = 100000;\nvar THERMISTOR = 4250;\n\nvar getTemperature = function() {\n    var sensorReading = temperatureSensor.read();\n    var R = 1023 / sensorReading - 1;\n    R = RESISTOR * R;\n    var temperature = 1 / (Math.log(R/RESISTOR)/THERMISTOR+1/298.15)-273.15;\n    return temperature;\n};\n\ndeviceClient.connect();\ndeviceClient.on('connect', function(){\n    console.log(\"connected\");\n    setInterval(function function_name () {\n// When transporting from Factory to Warehouse\n    deviceClient.publish('status','json','{ \"foodBoxId\":\"1\", \"temperature\":+         getTemperature()}',         2);\n\n// When transporting from Warehouse to Store\n// deviceClient.publish('status','json','{ \"palletId\":\"1\", \"temperature\":+ \n// getTemperature()}', 2);\n\n },300000);\n});\n```", "```\n{\n    \"org\": \"<your IoT organization id>\",\n    \"id\": \"sample-app\",\n    \"auth-key\": \"<application authentication key>\",\n    \"auth-token\": \"<application authentication token>\"\n}\n```", "```\n// Composer Rest Server definitions\nvar request = require('request');\nvar UPDATE_BOX_URL = \"http://<composer rest server url>:3004/api/UpdateFoodBoxTransportationData\"\nvar UPDATE_PALLET_URL = \"http://<composer rest server url>:3004/api/UpdateTransportationData\"\n\n// Watson IoT definitions\nvar Client = require(\"ibmiotf\");\nvar appClientConfig = require(\"./application.json\");\nvar appClient = new Client.IotfApplication(appClientConfig);\n\nappClient.connect();]\n\nappClient.on(\"connect\", function () {\n appClient.subscribeToDeviceEvents();\n});\n\nappClient.on(\"deviceEvent\", function (deviceType, deviceId, eventType, format, payload) {\n // update food box\n // updateFoodBox(payload.temperature);\n // update pallet\n // updatePallet(payload.temperature);\n });\n```", "```\nvar updateFoodBox = function (temperature) {\n   var options = {\n      uri: UPDATE_BOX_URL,\n      method: 'POST',\n      json: {\n  \"$class\": \"com.packtpublishing.businessnetwork.foodsafety.UpdateFoodBoxTransportationData\",\n  \"asset\": \"resource:com.packtpublishing.businessnetwork.foodsafety.FoodBox#<YOUR FOODBOX ID>\",\n  \"locationInformation\": {\n    \"$class\": \"com.packtpublishing.businessnetwork.foodsafety.Location\",\n    \"date\": \"2018-12-24T15:08:27.912Z\",\n    \"location\": \"<LOCATION TYPE>\",\n    \"locationIdentifier\": \"<LOCATION ID>\",\n    \"status\": \"<LOCATION STATUS>\"\n  },\n  \"measurementInformation\": {\n    \"$class\": \"com.packtpublishing.businessnetwork.foodsafety.Measurement\",\n    \"date\": \"2018-12-24T15:08:27.912Z\",\n    \"value\": 0\n  }\n}\n    };\n}\n\nvar updatePallet = function (temperature) {\n    var options = {\n      uri: UPDATE_BOX_URL,\n      method: 'POST',\n      json: {\n  \"$class\": \"com.packtpublishing.businessnetwork.foodsafety.UpdateTransportationData\",\n  \"asset\": \"resource:com.packtpublishing.businessnetwork.foodsafety.FoodBoxPallet#<YOUR PALLET ID>\",\n  \"locationInformation\": {\n    \"$class\": \"com.packtpublishing.businessnetwork.foodsafety.Location\",\n    \"date\": \"2018-12-24T15:09:02.944Z\",\n    \"location\": \"<LOCATION TYPE>\",\n    \"locationIdentifier\": \"<LOCATION ID>\",\n    \"status\": \"<STATUS>\"\n  },\n  \"measurementInformation\": {\n    \"$class\": \"com.packtpublishing.businessnetwork.foodsafety.Measurement\",\n    \"date\": \"2018-12-24T15:09:02.944Z\",\n    \"value\": 0\n  }\n}\n    };\n}\n```", "```\n{\n  \"$class\": \"com.packtpublishing.businessnetwork.foodsafety.FoodBox\",\n  \"foodBoxIdentifier\": \"2015\",\n  \"assetTrackingInformation\": [],\n  \"measureTrackingInformation\": [],\n  \"owner\": \"resource:com.packtpublishing.businessnetwork.foodsafety.FoodFactory#1\"\n}\n```", "```\n{\n \"$class\": \"com.packtpublishing.businessnetwork.foodsafety.FoodBox\",\n \"foodBoxIdentifier\": \"1\",\n \"assetTrackingInformation\": [],\n \"measureTrackingInformation\": [],\n \"owner\": \"resource:com.packtpublishing.businessnetwork.foodsafety.Transporter#2\"\n}\n```", "```\nappClient.on(\"deviceEvent\", function (deviceType, deviceId, eventType, format, payload) {\n // update food box\n // updateFoodBox(payload.temperature);\n // update pallet\n // updatePallet(payload.temperature);\n });\n```", "```\n\"owner\": \"resource:com.packtpublishing.businessnetwork.foodsafety.Warehouse#3\"\n```", "```\n{\n \"$class\": \"org.hyperledger.composer.system.AddAsset\",\n \"resources\": [\n {\n \"$class\": \"com.packtpublishing.businessnetwork.foodsafety.FoodBoxPallet\",\n \"foodBoxPalletIdentifier\": \"3485\",\n \"foodBoxInPallet\": \"resource:com.packtpublishing.businessnetwork.foodsafety.FoodBox#2473\",\n \"assetTrackingInformation\": [],\n \"measureTrackingInformation\": [],\n \"owner\": \"resource:com.packtpublishing.businessnetwork.foodsafety.Warehouse#3\"\n }\n ],\n \"targetRegistry\": \"resource:org.hyperledger.composer.system.AssetRegistry#com.packtpublishing.businessnetwork.foodsafety.FoodBoxPallet\",\n \"transactionId\": \"0dfe3b672a78dd1d6728acd763d125f813ed0ca74450a2596b9cf79f47f054ad\",\n \"timestamp\": \"2018-12-24T14:43:34.217Z\"\n}\n```", "```\n \"owner\": \"resource:com.packtpublishing.businessnetwork.foodsafety.Transporter#2\"\n```", "```\n \"owner\": \"resource:com.packtpublishing.businessnetwork.foodsafety.Store#4\"\n```"]