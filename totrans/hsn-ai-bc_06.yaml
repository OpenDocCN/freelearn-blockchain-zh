- en: AI- and Blockchain-Driven Databases*"From store of value ... toward value of
    storage"*
  prefs: []
  type: TYPE_NORMAL
- en: Databases have been a critical component in the development of applications,
    across all generations of the web. While the advent of databases started from
    a centralized design pattern, there have been several iterations of innovations
    over the past three decades. These new patterns address key pain points of centralized
    databases.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we will dive deep into a new generation of decentralized databases
    and filesystems based on innovative design patterns. Some of these design patterns
    inspire traditional applications to blend **Artificial Intelligence** (**AI**)
    and blockchain technologies. We will observe different types of decentralized
    databases and understand how they help to perform better AI analysis alongside
    blockchains.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Centralized versus distributed data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Blockchain data—big data for AI analysis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Global databases
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data management in a DAO
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Emerging patterns for database solutions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter assumes your acquaintance with the basics of database design and
    the application of AI techniques in related scenarios.
  prefs: []
  type: TYPE_NORMAL
- en: Centralized versus distributed data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Databases have been primarily consumed in a centralized manner since their earliest
    applications, dawning in the mid-1960s. Databases were meant to provide **direct**
    **access** to the information requested by either users or client applications.
    This centralized approach was influenced majorly by the client-server architecture
    introduced in the early days. This design paradigm was popularly followed by the
    market with successful products in commercial- and consumer-level databases such
    as DB2 and dBASE, respectively. **Relational Database Management System** (**RDBMS**)-based
    databases followed the client-server model. These centralized databases managed
    data redundancy by making regular copies of the data on disks and magnetic tapes.
  prefs: []
  type: TYPE_NORMAL
- en: However, the dawn of NoSQL in the 2000s is credited with distributed databases
    that scale horizontally, with higher tolerance to failures and less chance of
    data corruption. NoSQL databases are able to manage data without schemas and facilitate
    swift operations between clients, along with reasonable data consistency maintained
    across multiple nodes. In contrast, RDBMSes needed schemas and maintained a point-to-point
    relationship between the client and the server. Backups were not visible to the
    clients, and rollbacks had to be initiated by database administrators to read
    any potentially lost data. Newer NoSQL-based databases such as MongoDB addressed
    some of these issues.
  prefs: []
  type: TYPE_NORMAL
- en: NoSQL-based databases could also power pseudo-decentralized projects by persisting
    business data on a network of computers hosted by all the stakeholders of an initiative,
    but the main limitation of such a setup is that such databases lack transparent
    record keeping. In addition, these databases do not allow the voting and execution
    of business logic with cryptographic security inherent to the network. These capabilities
    must be built externally in order to compete with blockchains.
  prefs: []
  type: TYPE_NORMAL
- en: With key background information regarding centralized and distributed databases,
    let's now understand the motivations for using decentralized databases in the
    following section.
  prefs: []
  type: TYPE_NORMAL
- en: Motivations for using decentralized databases
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Over the past three decades, most user data on the internet has been stored
    in either a centralized or a distributed fashion. The common issue with both approaches
    is that very few stakeholders administer, manage, and sometimes *own* all the
    data. Recent events of breaches and data abuse at some of the reputed social networking
    sites and online aggregator services highlight the fact that we are no longer
    in control of our own data. Careless administration of data can lead to such detrimental
    events and create panic among users and business stakeholders.
  prefs: []
  type: TYPE_NORMAL
- en: In the past few years, multiple accounts of data breaches and abuse have called
    for fundamental innovation in how data can be defined, stored, accessed, and managed.
    This has motivated many individuals and organizations across the world to build
    decentralized databases in the past decade.
  prefs: []
  type: TYPE_NORMAL
- en: 'Some of the common properties of decentralized databases are detailed as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Allow anybody to store and access information across boundaries
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allow anybody to participate in persisting the data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Persist the updated data and record the changes made to the data in a traceable
    manner
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allow all users to control and manage their data by facilitating the persistence
    of encrypted data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'These values are well represented and contrast with traditional databases,
    as shown in the following diagram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/bdc9086f-380c-4713-9885-b2321425aee7.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig 4.1: Comparing the values of traditional database patterns with decentralized
    database patterns'
  prefs: []
  type: TYPE_NORMAL
- en: In the preceding diagram, we can observe the *y* axis representing the modes
    of accessing the business data or user data. Along the *x* axis, the mutable properties
    of the data are represented. The first quadrant defines whether the data is immutable
    and accessible to the general public. The third quadrant defines whether the data
    is mutable and inaccessible to the masses. As we can see from the preceding diagram,
    decentralized databases and filesystems fall under the first quadrant. We can
    also observe that most traditional and distributed databases fall under the third
    quadrant.
  prefs: []
  type: TYPE_NORMAL
- en: Immutability does not mean permanence—decentralized databases offering immutability
    may not store all the versions of changes forever. The data might get garbage
    collected and recent changes may be persisted.
  prefs: []
  type: TYPE_NORMAL
- en: With this basic information on the motivations for decentralized databases and
    their values, let's now contrast data management techniques and analyze consumption
    patterns.
  prefs: []
  type: TYPE_NORMAL
- en: Contrast and analysis
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Decentralized databases organize information in a new manner that offers control
    back to the users, by allowing users to specify where data can be stored, along
    with effective governance.
  prefs: []
  type: TYPE_NORMAL
- en: 'Before we move forward with the analysis of using databases in Web 2.0 and
    Web 3.0, let''s round up the key differences between all three types of databases
    (centralized, distributed, and decentralized databases) in the following table:'
  prefs: []
  type: TYPE_NORMAL
- en: '|  | **Centralized ****database** | **Distributed ****database** | ** Decentralized
    database** |'
  prefs: []
  type: TYPE_TB
- en: '| **Ownership** | Owned and hosted by one company. | One or more than one company
    can host the database. | Anyone with sufficient system resources can join and
    host the database. |'
  prefs: []
  type: TYPE_TB
- en: '| **Data definition** | Most of the centralized databases are RDBMS-based,
    hence data definition is mandatory. Schemas are required to store data. | Most
    distributed databases are NoSQL-based, hence data definition is not mandatory.
    Schemas are optionally used. | Most decentralized databases use content addressing,
    hence there is no need for schemas to store data. |'
  prefs: []
  type: TYPE_TB
- en: '| **Failure** | Single point of failure. The point-to-point connection between
    the app and the database will not work, and the app cannot function until the
    database is fixed. | There is no single point of failure. Apps can read from another
    node if the database fails to provide information from one node. | There is no
    single point of failure. Apps can read from another node if the database fails
    to provide information from one node. |'
  prefs: []
  type: TYPE_TB
- en: '| **Redundancy management** | Backups of the data are stored on disks and magnetic
    tapes, securely stored in a physical location. | Replication of data is fixed,
    and all the nodes may comply with the replication policy set by the database admin.
    | There is no replication policy in public networks. There is a guarantee of replication
    upon incentivization only. However, policies can be built for permissioned decentralized
    databases used in consortiums. |'
  prefs: []
  type: TYPE_TB
- en: '| **Access and transparency** | The connection to the database is closed. Only
    dedicated applications can access the database with credentials. | The connection
    to the database is neither closed nor open, but it is permissioned. Only permitted
    apps can access the database. | Users can access the data openly, with just a
    hash of the file or data.Users who care about privacy need to encrypt their data
    before storing it. |'
  prefs: []
  type: TYPE_TB
- en: With the contrasts made in the preceding table, the analysis continues as follows.
  prefs: []
  type: TYPE_NORMAL
- en: In the second generation of Web (Web 2.0), applications have predominantly depended
    on centralized and distributed databases to leverage the new fuel in the market,
    which is **user information**. After multiple breaches, scandals, and reports
    of data abuse, the internet citizen is warier about where data should reside,
    and what degree of control should go back to applications.
  prefs: []
  type: TYPE_NORMAL
- en: As we are entering Web 3.0, most decentralized applications may not consider
    using traditional databases, as they do not support the properties of decentralized
    databases. Also, it is important to realize that some of the legacy applications
    in various domains running on Web 2.0 are considering using decentralized databases,
    to ensure that new demands from conscious users are met.
  prefs: []
  type: TYPE_NORMAL
- en: Having understood the basic contrasts between Web 2.0 and Web 3.0, let's now
    understand how data persisted on decentralized databases can be consumed to perform
    analytics.
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain data – big data for AI analysis
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'As you may be aware, blockchains generate enormous amounts of data due to their
    transactional nature. At the time of writing, the size of some of the prominent
    blockchain networks is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Blockchain** | **Total size of the blockchain (approx. in GB)** |'
  prefs: []
  type: TYPE_TB
- en: '| Bitcoin | 323 |'
  prefs: []
  type: TYPE_TB
- en: '| Ethereum | 4,233 |'
  prefs: []
  type: TYPE_TB
- en: Some experts in the industry have speculated that the size of blockchains will
    soar 10 times more, due to an increase in the number of users and the adoption
    of public networks in the **business-to-business** (**B2B**) landscape.
  prefs: []
  type: TYPE_NORMAL
- en: The growing size of blockchain data enables new avenues of growth for data science.
    The application of AI and analytical practices on this giant heap of transactional
    data in the blockchain can create a large impact on most of the current blockchain
    products. Analytics derived from qualified data sources such as blockchain can
    also lead to new digital transformation projects. In order to facilitate this,
    we need a secondary source of information that can persist user data, business
    data, and the transactional data generated by the blockchain. Decentralized databases
    can persist this data in a cryptographically secure and verifiable manner.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following diagram depicts how AI models can leverage decentralized databases:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/3c266366-259d-40a5-a55b-e4f68efac181.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig 4.2: Generic illustration of AI modeling using decentralized databases'
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding diagram, data residing on the decentralized databases
    is qualified to be used for training suitable AI models. Most of the transactional
    data stored on the decentralized databases is inherently valid to be considered
    a data point, meaning that the transactions are signed by the user wallet with
    an intent. Hence, such transactions are not trivial in their nature. When suitable
    AI models are trained using this transactional data, they can produce better results.
    The results generated by training AI models with such qualified data can be used
    in systems and applications of various sorts.
  prefs: []
  type: TYPE_NORMAL
- en: Let's now explore the improvements that may be possible through using decentralized
    databases.
  prefs: []
  type: TYPE_NORMAL
- en: Building better AI models using decentralized databases
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: With more data about to reside on the blockchain, it is safe to assume that
    AI modeling becomes easier and more ethically aligned. Training AI can be enhanced
    by transactional data confirmed with private keys and fees paid by users. Such
    data need not be inherited from third parties but, instead, could be accessed
    from blockchains such as Ethereum and secondary decentralized database networks
    such as the** InterPlanetary File System** (**IPFS**). This also empowers current
    models, such as predictive analytics models, in detecting fraudulent attempts
    and Sybil attacks in an effective manner.
  prefs: []
  type: TYPE_NORMAL
- en: Immutability of data – increasing trust in AI training and testing
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Clean and structured data has been in demand by data science for almost a decade
    now. In the midst of data scandals, getting legitimate access to perfect data
    is almost always complicated, due to compliance issues in following some of the
    cross-border data-harboring rules. By using blockchain, a **Public Key Infrastructure**
    (**PKI**) inherently comes to our rescue, protecting the privacy of user data
    with a joint signature between data vendors and users. This may serve as **proof
    of consent** and maintains accountability in the AI industry to build accurate
    but ethical models.
  prefs: []
  type: TYPE_NORMAL
- en: Better control of data and model exchange
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Projects such as Ocean Protocol, which will be discussed in the upcoming section,
    have been proactive in establishing fair and open markets for data providers as
    well as consumers. Blockchain enables these transactions or the purchase of data
    in an ethical manner, without consciously giving away privacy elements.
  prefs: []
  type: TYPE_NORMAL
- en: Let's now explore more details on blockchain analytics in the following section.
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain analytics
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Most applications on public blockchains derive value based on the transactional
    transparency achieved by the network. Lately, this supporting feature has been
    leveraged by various institutions, ranging from for-profit entities to law enforcement
    agencies, to track user behavior. While some of the analytical capabilities have
    helped society, many others are considered as strategic **Intellectual Property**
    (**IP**) by corporations of all sizes to acquire market share by using these smart
    algorithms for better **User Experience** (**UX**).
  prefs: []
  type: TYPE_NORMAL
- en: In retrospect, blockchain analytics practices have also attracted unwelcomed
    criticism on how they affect the privacy of the user by mining too deep into the
    transactions. Chainanalysis, Neutrino, and Elliptic are some of the early movers
    in this space that have an active community and customers.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the following diagram, we can observe the application of blockchain oracles
    and decentralized databases to effectively run models:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ef8f890d-7676-466b-9f50-18bd238fe25c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig 4.3: Blockchain data analytics with oracle'
  prefs: []
  type: TYPE_NORMAL
- en: Let's now explore more about global decentralized databases in the following
    section.
  prefs: []
  type: TYPE_NORMAL
- en: Global databases
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, you will be introduced to some of the most popular decentralized
    databases. These databases use innovative cryptographic and networking techniques
    to address some of the key issues such as censorship, surveillance, and permissioned
    access to confidential information. Several efforts are being made by the projects
    outlined next to bring a new order to how data can be treated in the public sphere
    as well as the enterprise sphere.
  prefs: []
  type: TYPE_NORMAL
- en: Let's now understand some of the top global decentralized databases.
  prefs: []
  type: TYPE_NORMAL
- en: IPFS
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**IPFS **is a distributed filesystem that allows users to host and receive
    content in a **peer-to-peer** (**P2P**) manner, eliminating any need for intermediaries,
    for storing or accessing data from any corner of the world. IPFS allows users
    to store and serve data in a censorless manner. The data remains persisted in
    the network as long as somebody in the network values the data. Although there
    may not be a monetary incentive for users who persist the data on their computers,
    the data may be valuable and reusable for other users in the network. Hence, data
    on IPFS can be virtually hosted forever, as long as the need for the data exists
    in the network. Notably, IPFS has been considered as one among the many *de facto*
    decentralized databases by DApp developers for their applications. Content accessed
    by anybody on IPFS is cryptographically verified, ensuring that information has
    not been tampered with.'
  prefs: []
  type: TYPE_NORMAL
- en: 'IPFS has been used in many cases to circumvent transparency challenges, where
    access to global information was inhibited. Some of the notable uses of IPFS as
    a global database are listed as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: The 2017 Catalan independence referendum document was hosted on IPFS, bypassing
    the High Court of Justice of Catalonia's order to block the original website.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Filecoin**, a decentralized storage network, uses IPFS to leverage unused
    storage space in computers and incentivizes users to host data for a fee. Fees
    are collected from users in the form of micropayments to serve smaller chunks
    of data from the hosted computer using the Filecoin token. These tokens are paid
    to the owner of the computer hosting the data with the help of smart contracts.
    Reportedly, Filecoin was one of the largest **Initial Coin Offerings** (**ICOs**)
    ever, grossing USD 250 million.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wikipedia was mirrored on IPFS when access to the online encyclopedia was restricted
    in Turkey on April 29, 2017\. This circumvention provided access to Wikipedia
    without visiting the official website, which was blocked.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following screenshot depicts how Wikipedia was inaccessible in Turkey:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/43253c0c-3d96-43bd-bc87-1ad231274f4c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig 4.4: Screenshot of the Wikipedia page unable to be accessed in Turkey on
    April 29, 2017'
  prefs: []
  type: TYPE_NORMAL
- en: You can check out this screenshot  by Chidgk1 at the following link: [https://upload.wikimedia.org/wikipedia/commons/1/18/Wikipedia_from_Turkey_in_Chrome.png](https://upload.wikimedia.org/wikipedia/commons/1/18/Wikipedia_from_Turkey_in_Chrome.png).
    Here is the license to the screenshot, [https://commons.wikimedia.org/wiki/File:Wikipedia_from_Turkey_in_Chrome.png](https://commons.wikimedia.org/wiki/File:Wikipedia_from_Turkey_in_Chrome.png).
  prefs: []
  type: TYPE_NORMAL
- en: 'The following diagram depicts the internal components of IPFS and the dependencies
    among them to provide storage and access to data:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/28540690-a71c-4428-93aa-c70146dc3075.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig 4.5: All the internal components and dependencies of IPFS'
  prefs: []
  type: TYPE_NORMAL
- en: You can check out this diagram using the following shortened link: [https://git.io/Jf03g](https://git.io/Jf03g).
  prefs: []
  type: TYPE_NORMAL
- en: To understand more about the underlying protocols supported by IPFS, visit the
    official documentation of IPFS, available at [https://docs.ipfs.io/](https://docs.ipfs.io/).
  prefs: []
  type: TYPE_NORMAL
- en: With a basic understanding of IPFS, let's now understand MóiBit.
  prefs: []
  type: TYPE_NORMAL
- en: MóiBit
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**MóiBit** is a personal decentralized secure storage network with the power
    of immutability and provenance of blockchain systems. It offers software-defined
    decentralized file storage services and groundbreaking measures to reduce the
    unneeded cost of storing data on a blockchain, yet apps can store their data in
    a reliable and secure environment provided by IPFS. Simply put, MóiBit extends
    some of the enterprise features to IPFS, thereby enabling swift development and
    integration of apps into MóiBit, in just the way you would integrate an app with
    a cloud database.'
  prefs: []
  type: TYPE_NORMAL
- en: Unlike IPFS, MóiBit offers permissioned networks by deploying a group of nodes
    that cannot be discovered and used by public networks. This allows enterprises
    to dedicate an infrastructure and enjoy the technical benefits of IPFS with their
    stakeholders in a federated manner. MóiBit also supports client-level encryption
    and many other flexible features through its **Software Development Kit** (**SDK**).
  prefs: []
  type: TYPE_NORMAL
- en: To understand more about MóiBit, visit the official website at [https://www.moibit.io/](https://www.moibit.io/).
    MóiBit API documentation is also available at [https://apidocs.moibit.io/](https://apidocs.moibit.io/).
  prefs: []
  type: TYPE_NORMAL
- en: Solid
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Solid is a clever combination of the three powerful words in the age of the
    internet—**social linked data**. Solid is a decentralized data store, converging
    some of the key concepts of decentralization such as, identity, ownership of user
    data, seamless integration with applications, and offering backward compatibility.
    Notably, the project is led by Sir Tim Berners-Lee, the inventor of the **World
    Wide Web** (**WWW**). Solid's aim to give back users control of their data is
    made possible by the powerful combinations of P2P networking and linked data.
  prefs: []
  type: TYPE_NORMAL
- en: All data pertaining to a user is stored in a **Personal Online Datastore** (**POD**).
    PODs can be hosted on a PC, an on-premises server, or a **Virtual Machine** (**VM**)
    managed in the cloud. This decision is at the discretion of the user. Applications
    depending on the user's information need active consent from the user to access
    personal data. Some examples of personal data are health records, financial information,
    and so on.
  prefs: []
  type: TYPE_NORMAL
- en: To understand more about Solid, visit the official website at [https://solidproject.org/](https://solidproject.org/).
    Solid's detailed specifications are also available at [https://github.com/solid/specification](https://github.com/solid/specification).
  prefs: []
  type: TYPE_NORMAL
- en: Ocean Protocol
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Ocean Protocol** is a decentralized protocol with services for users to consume
    storage and compute. The protocol exhibits a trust framework that offers services
    to share user data in a safe manner, enabled by traceability and privacy. Similar
    to the global databases discussed previously, users are offered granular control
    over their personal data. In simple terms, users can provide access to their data
    and earn revenue, and consumers access data by buying the data.'
  prefs: []
  type: TYPE_NORMAL
- en: Notably, Ocean Protocol also offers a wide range of third-party marketplaces
    and services that allow users to commercialize their data. This means that interested
    nodes can become a data provider by consent and earn revenue from data consumers.
    All these commercial activities are made possible through keeper smart contracts.
    The data marketplace and services are enabled by a tokenized layer that offers
    compute, storage space, and consented user data for sale.
  prefs: []
  type: TYPE_NORMAL
- en: To understand more about Ocean Protocol, visit the official website at [https://oceanprotocol.com/](https://oceanprotocol.com/).
    Detailed documentation on Ocean Protocol is also available at [https://docs.oceanprotocol.com/](https://docs.oceanprotocol.com/).
  prefs: []
  type: TYPE_NORMAL
- en: Storj
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Storj**, pronounced as *storage*, is a decentralized cloud-storage platform
    that claims to be censorless, with no user monitoring or downtime. The Storj platform
    serves normal users as well as developers through the Storj API. The platform
    is powered by the Storj protocol, a P2P storage smart contract wherein a vendor
    willing to share an unused amount of storage can lend their system''s storage
    to any Storj customer for a price, without having to know each other. The contract,
    once signed on a mutually agreeable price for the storage, regularly monitors
    whether the information is still available in the host. The storage host can respond
    along with verifiable cryptographic proof to ensure the contract that data is
    made available, as agreed. If the response is valid, the user pays the node owner,
    all of which is automated through a smart contract.'
  prefs: []
  type: TYPE_NORMAL
- en: Storj also has a network of nodes that are willing to help the storage host
    by replicating and serving the same data in the expectation of a reward. This
    opens up huge potential for a free market for smaller storage providers. Similar
    to other cloud data service providers, Storj also provides an API for developers
    to integrate their applications with Storj in order to store application and user
    data for a fraction of the price in a flexible manner, compared to complicated
    lock-in contracts from a majority of the traditional vendors.
  prefs: []
  type: TYPE_NORMAL
- en: To understand more about Storj, visit the official website at [https://storj.io/](https://storj.io/).
    Detailed documentation on Storj is also available at [https://documentation.storj.io/](https://documentation.storj.io/).
  prefs: []
  type: TYPE_NORMAL
- en: Swarm
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Swarm** is an Ethereum native distributed data storage platform. The intention
    of the Swarm project is to facilitate the persistence of Ethereum''s historic
    public data and enable storage for DApps. Similar to the Ethereum network, Swarm
    also allows anyone to participate in the network by pooling storage resources.
    In return, the individuals hosting nodes in the Swarm network will be incentivized
    with **Ether** (**ETH**) tokens, in return for dedicating their infrastructure.'
  prefs: []
  type: TYPE_NORMAL
- en: Swarm claims its P2P storage network to be **Distributed Denial of Service**
    (**DDoS**)-resistant and fault-tolerant, as well as censorless. Its protocol,
    similar to `http://`, is denoted by `bzz://`. Users can access the network through
    the Swarm public gateway. Swarm banks on the thriving Ethereum network for its
    adoption and growth.
  prefs: []
  type: TYPE_NORMAL
- en: To understand more about Swarm, visit the official website at [https://swarm.ethereum.org/](https://swarm.ethereum.org/).
    Detailed documentation on Swarm is also available at [https://swarm-guide.readthedocs.io/en/latest/](https://swarm-guide.readthedocs.io/en/latest/).
  prefs: []
  type: TYPE_NORMAL
- en: Data management in a DAO
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A **Decentralized Autonomous Organization** (**DAO**) is a computer program
    representing a group of stakeholders and entities and is not influenced by external
    environments. A DAO is programmed by a set of rules and governance protocols to
    ensure that transactions occur between parties without the chance of any conflict.
    Dash and BitShares are some of the earliest implementations of a DAO. In the past
    few months, many more DAOs have been launched on blockchains such as Ethereum
    and Bitcoin.
  prefs: []
  type: TYPE_NORMAL
- en: Aragon
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Aragon** is an open source DAO running on the Ethereum blockchain network.
    Aragon leverages Solidity smart contracts for business logic, and IPFS for decentralized
    files and governance record management, thereby creating a truly P2P operating
    system for a whole new generation of organizations, called **aragonOS**. Users
    can perform operations and govern their DAOs using the **Aragon Network Token**
    (**ANT**).'
  prefs: []
  type: TYPE_NORMAL
- en: Aragon has integrated IPFS very closely into its **command-line interface**
    (**CLI**) program. The IPFS daemon can be initiated through Aragon's CLI and manages
    pinning operations to ensure the reliable storage of critical components and files.
  prefs: []
  type: TYPE_NORMAL
- en: To understand more about Aragon, visit the official website at [https://aragon.org/](https://aragon.org/).
    Detailed documentation on using IPFS in Aragon can be found at [https://hack.aragon.org/docs/cli-ipfs-commands](https://hack.aragon.org/docs/cli-ipfs-commands).
  prefs: []
  type: TYPE_NORMAL
- en: Bisq
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Bisq** is a DAO running on the Bitcoin blockchain network. It offers a P2P
    cryptocurrency exchange service with no company or institution in control. Users
    and contributors vote on proposed updates. Governance decisions are made to the
    DAO by the BSQ token holders. A Bisq DAO is made sustainable by the following
    two approaches:'
  prefs: []
  type: TYPE_NORMAL
- en: Revenue distribution by sharing trading fees with contributors with the BSQ
    token. This makes the contributors a partial owner of the network and balances
    the power between traders and contributors.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Decision-making through voting by the owners of the BSQ tokens—the traders and
    contributors. Since they are both in charge of the issuance collectively, there
    are no centralization vectors that can help either side achieve a majority.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: At the time of writing, the Bisq community was making initial efforts in using
    the decentralized storage IPFS for hosting software binaries, documentation, network,
    and trading statistics. Proposals were also made on storing the governance proposal
    data to ensure that the access to DAO information is consistently available without
    a single point of failure.
  prefs: []
  type: TYPE_NORMAL
- en: To understand more about Bisq, visit the official website at [https://bisq.network/](https://bisq.network/).
    Current efforts on using IPFS in Bisq can be observed at [https://github.com/bisq-network/bisq/issues/2845](https://github.com/bisq-network/bisq/issues/2845).
  prefs: []
  type: TYPE_NORMAL
- en: With a fundamental understanding of why DAOs can use decentralized databases,
    let's now understand some of the emerging patterns to be applied across a few
    domains.
  prefs: []
  type: TYPE_NORMAL
- en: Emerging patterns for database solutions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Very few companies have been able to both converge technologies and address
    key issues in the respective industries. In this section, we will explore the
    key issues of respective domains and explore patterns to solve them, along with
    ideal examples.
  prefs: []
  type: TYPE_NORMAL
- en: Let's now understand the current issues in the enterprise software domain and
    explore the emerging patterns applicable.
  prefs: []
  type: TYPE_NORMAL
- en: Enterprise
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Enterprises and large organizations have been successfully scaling, thanks to
    scalable systems such as **Enterprise Resource Planning** (**ERP**) software,
    **Knowledge Management Software** (**KMS**), and **Inventory Management Software**
    (**IMS**), to name a few. However, growing requirements and a groundbreaking revolution
    in how data is managed have led to a path of blockchain applications and AI technologies.
  prefs: []
  type: TYPE_NORMAL
- en: Technical impediments
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The enterprise software domain is facing new challenges in managing huge amounts
    of data among stakeholders in a reliable manner. Here are the top three challenges
    that could render enterprise software irrelevant, if they are not resolved any
    time soon:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Data protection**: Many ERP software architectures dump the organization''s
    information into a centralized data management platform. There are also either
    weaker or unused applications of access management modules. This could lead to
    severe risks, such as insider corporate espionage, malicious attacks, ransomware,
    or backdoor vulnerabilities. Reportedly, we may recall the notorious WannaCry
    malware attack in May 2017 apparently costing the United Kingdom''s **National
    Health Service** (**NHS**) more than GBP 50 million to fix the system. Similar
    attacks could easily target ERP data, potentially impacting stakeholders, organizations,
    and millions of consumers who have been depending on the system for a long time.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Interoperability and transparency**: More than 1,000 large-scale organizations
    use ERPs to handle their operations across manufacturing, accounting, inventory
    management, logistics, **Customer Relationship Management** (**CRM**), and reporting.
    These operations in a large-scale organization have been handled by more than
    one software vendor and, hence, data interoperability has to be achieved. This
    is made possible by the APIs and other backend software programs developed to
    optimize these situations. This creates too much complexity within the organization
    among the IT team, as well as the operations team, to work together on making
    key decisions.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Reporting:** Reporting through ERP systems has streamlined management and
    enabled decision-making in an integrated manner. Reporting also provides management
    with good visibility on upcoming trends in the operations and guides them toward
    preparations. However, a lack of transparency and clarity can lead to clouded
    judgment and ineffective decision-making.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Summary of the emerging pattern
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: After delving into some of the key issues in the current enterprise software
    landscape, we will now observe some of the design patterns approaching these issues,
    leveraging AI, blockchain, and decentralized databases. Converging these technologies
    together has been an art of symphony, with the key goal of deriving meaningful
    business outcomes for organizations. AI should be applied to data originating
    from decentralized databases, with provenance supported by blockchains. Such patterns
    can introduce new efficiency in decision-making among stakeholders.
  prefs: []
  type: TYPE_NORMAL
- en: Financial services
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Financial services and the entire **Banking, Financial Services, and Insurance**
    (**BFSI**) industry support the transactional economy of most industries. Hence,
    BFSI can be considered as the financial backbone of the economy.
  prefs: []
  type: TYPE_NORMAL
- en: Technical impediments
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The following are the top three issues with regard to BFSI software:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Lack of full transparency**: Although efforts have been made to bring more
    transparency to the services made available to individuals and companies alike,
    the process still needs more revamping. Transparency in various programs in BFSI,
    such as fees and the status of loan applications, are a few day-to-day activities
    where more transparency by BFSI institutions may attract a more loyal following
    from customers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Delays in settlements**: Although businesses and individuals alike are at
    the forefront of experimenting and adopting new technologies, BFSI is more conservative
    in applying new technologies and practices in a more frequent manner. Cross-border
    payments and trade transactions end up adding more days to the turnaround time
    of business processes. The delays have a large impact on businesses as well as
    individuals.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Faulty compliance reports**: The BFSI industry has been one of the victims
    of fraud and is well known for malpractice, failing to render services and report
    anomalies on time. These has led to hefty fines on financial institutions by local
    regulatory authorities. However, the application of technology has seldom been
    seen as a major force in changing the tailwind into a constructive headwind for
    the industry.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Summary of the emerging pattern
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: AI applications and blockchain technologies can help BFSI organizations organize
    their risk components in a much more transparent manner, streamline transactions,
    and ensure quality customer service. Many attempts have been made to decentralize
    processes among BFSI organizations to ensure a smoother experience for users and
    more productivity in the workspace.
  prefs: []
  type: TYPE_NORMAL
- en: Supply chain management
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Supply chain management completes the curve of value delivery for all stakeholders
    in an industry with predictable costs and agility to respond to ever-changing
    demands. However, supply chains across various industry verticals have been facing
    multiple challenges, blocking the stakeholders from achieving the best value for
    their end consumers.
  prefs: []
  type: TYPE_NORMAL
- en: Technical impediments
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The following are the top three issues with regard to supply chain software:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Lack of deeper visibility**: Recent solutions in the supply chain space have
    aimed to facilitate real-time transactions, but there are issues concerning how
    to persist such large volumes of transactions. Public blockchains are quite costly
    to persist such large volumes of data in the long term. However, using public
    blockchains helps achieve finality and helps maintain its integrity in the long
    term. Private blockchains can only do the same with a lesser, and predictable,
    cost but carry far less value unless the consortiums are large enough, as well
    as distributed enough.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Costs are not predictable**: With dynamic demands and ever-changing requirements,
    the supply chain industry has struggled to operate at fixed costs. Although variables
    are optimized in the planning process, the international regulatory landscapes
    and climate deeply affect the planned costs. This is due to a lack of intelligence
    in the planning stage. Although climate conditions are almost always predictable,
    not all logistic systems have the capacity to adjust to the situation and respond
    with recourse in a similar cost range. Apart from the changing operational costs,
    the stakeholders of the supply chain also suffer from insufficient insurance in
    cases of loss of goods due to a calamity or unexpected natural circumstances.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Lack of full agility**: External factors such as climate conditions, regulatory
    impacts, and changing customer requirements cannot be controlled in supply chain
    operations. However, it is imperative to keep the system flexible enough to sustain
    and continue operations. Few operations in the supply chain adopt cutting-edge
    technologies to ensure agile support for the dynamics involved here.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Summary of the emerging pattern
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A smarter supply chain powered by AI, global datastores, and blockchain can
    improvise existing processes, resulting in achieving more flexibility to demands
    and also driving new business values. Exceptional visibility across the networks
    can be achieved by migrating transactional data to off-chain large-scale global
    databases such as IPFS, MóiBit, or BigchainDB. This enables full visibility to
    relevant stakeholders, enabled by the audit trail of changes, signed by the entities
    on the blockchain. Through this, AI models can be applied to the copious amount
    of historic transactional data to predict costs, and interruption, and achieve
    agility.
  prefs: []
  type: TYPE_NORMAL
- en: Healthcare
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Innovation in healthcare is gradually shifting from proprietary medicines to
    open, research-based initiatives. This approach can be strengthened by exchanging
    critical information, ranging from personal health information to lab test results.
    In the past few years, health data exchange practices have faced serious criticism
    in the industry. However, it is important to note that the interoperability of
    information is key to the growth of the healthcare industry. With interoperability,
    the industry welcomes a range of issues, discussed next.
  prefs: []
  type: TYPE_NORMAL
- en: Technical impediments
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The following are the top three issues with regard to healthcare software:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Controlled versioning**: There is a need for a transparent system which can
    create snapshots for all changes to medical records. Proper tracking of health
    records also serves as a piece of fit evidence for insurance claims, thereby leading
    the path for effective automation and a better experience for beneficiary patients.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Identity problems**: Dissemination of the patient''s identity during a treatment
    or drug trials can cause trepidation in the ecosystem and hinder momentum. Hence,
    identities pertaining to medical data must be dealt with seriously with proven
    approaches, and actively monitored by standard bodies.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Centralization**: A few agencies and institutions benefit by forming alliances
    for health data exchange, leaving the rest of the industry behind. This could
    also potentially lead other stakeholders to create double standards in the near
    future, persisting health data on individual silos. These practices naturally
    favor data theft, espionage, and hacks.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Summary of the emerging pattern
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Anonymized and encrypted health care records, and medical data pertaining to
    treatment and drug trials, can be persisted on decentralized databases to ensure
    common access among all the relevant stakeholders in the healthcare industry.
    Also, the patient is the self-owner of their medical data. This means that the
    patient can control and limit access to their personal health information by signing
    transactions on the blockchain, requiring the recipients to verify themselves
    before attempting to access the data. Hence, this emerging pattern could establish
    privacy at an atomic level, along with tightly enforced practices.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we have looked into the realm of storage by introducing you
    to the concept of centralized, distributed, and—finally—decentralized databases.
    Further, we have also contrasted the data consumption patterns between Web 2.0
    and Web 3.0 apps. We have also understood more about the core motivations and
    the need for using decentralized databases in applications and DAOs. Finally,
    at the end of this chapter, we have explored various emerging patterns that can
    be analyzed and applied.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will observe how these emerging patterns are applied
    to build smart applications for the decentralized economy, with the help of blockchain
    and AI.
  prefs: []
  type: TYPE_NORMAL
