- en: Exploring Hyperledger Fabric
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索Hyperledger Fabric
- en: The focus of this chapter is the Hyperledger Fabric project—its components,
    design, reference architecture, and overall enterprise readiness. We will also
    discuss the broader aim of **Linux Foundation** (**LF**) hosted Hyperledger projects
    and the importance of open source and open standards. The goal is to build an
    understanding of the diversity of various Hyperledger projects, and what frameworks
    and tools may be suitable for particular enterprise use cases and software consumption
    models. While the blockchain technology landscape is constantly in flux, Hyperledger
    projects represent a structure that supports a mature and peer-reviewed technology
    geared toward enterprise consumption and fueled by a diverse set of talent and
    community interests.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章重点讨论Hyperledger Fabric项目——其组件、设计、参考架构以及企业就绪性。我们还将讨论由**Linux Foundation**（**LF**）托管的Hyperledger项目的整体目标以及开源和开放标准的重要性。目标是建立对各种Hyperledger项目的多样性以及哪些框架和工具可能适合特定企业用例和软件消费模型的理解。尽管区块链技术领域不断变化，但Hyperledger项目代表着一种支持成熟和经过同行评审的技术结构，旨在供企业使用，并由多样化的人才和社区利益推动。
- en: 'This chapter will cover the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Hyperledger frameworks, tools, and building blocks
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Hyperledger框架、工具和构建模块
- en: Hyperledger Fabric component design
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Hyperledger Fabric组件设计
- en: Hyperledger Fabric – the journey of a sample transaction
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Hyperledger Fabric——一笔交易的旅程
- en: Exploring Hyperledger Fabric
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索Hyperledger Fabric
- en: Understanding governance in business networks powered by blockchain
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解由区块链驱动的企业网络治理
- en: Hyperledger frameworks, tools, and building blocks
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Hyperledger框架、工具和构建模块
- en: Now that we've looked at Hyperledger's foundations in the open computing movement,
    as well as its benefits for industry, let's talk about the frameworks, tools,
    and building blocks of Hyperledger.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经看过Hyperledger在开放计算运动中的基础，以及它对行业的好处，让我们谈谈Hyperledger的框架、工具和构建模块。
- en: Hyperledger frameworks
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Hyperledger框架
- en: 'There are five blockchain frameworks, as follows:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是五个区块链框架：
- en: '**Hyperledger Iroha**: Iroha, designed for mobile development projects, is
    based on Hyperledger Fabric and was contributed by Soramitsu, Hitachi, NTT Data,
    and Colu. It features modern, domain-driven C++ design as well as a new chain-based
    Byzantine fault tolerant consensus algorithm called **Sumeragi**.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Hyperledger Iroha**：Iroha专为移动开发项目设计，基于Hyperledger Fabric，并由Soramitsu、Hitachi、NTT
    Data和Colu贡献。它具有现代的、面向领域驱动的C++设计，以及一种名为**Sumeragi**的基于新链式拜占庭容错共识算法。'
- en: '**Hyperledger Sawtooth**: Sawtooth was contributed by Intel and includes a
    novel consensus algorithm that Intel came up with that''s called **Proof of Elapsed
    Time** (**PoET**). PoET aims to achieve distributed consensus as efficiently as
    possible. Hyperledger Sawtooth has potential in many areas, with support for both
    permissioned and permissionless deployments and recognition of diverse requirements.
    Sawtooth is designed for versatility.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Hyperledger Sawtooth**：Sawtooth由Intel贡献，包括Intel提出的一种称为**经过时间证明**（**PoET**）的新颖共识算法。
    PoET旨在尽可能有效地实现分布式共识。Hyperledger Sawtooth在许多领域具有潜力，支持许可和无许可部署，并认识到各种需求。Sawtooth被设计为多功能的。'
- en: '**Hyperledger Burrow**: Hyperledger Burrow, which was contributed by Monax
    and Intel initially, is a modular blockchain that was client-built to the specification
    of the **Ethereum Virtual Machine** (**EVM**).'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Hyperledger Burrow**：Hyperledger Burrow最初由Monax和Intel贡献，是一个模块化的区块链，客户端构建了符合**以太坊虚拟机**（**EVM**）规范的区块链。'
- en: '**Hyperledger Fabric** (**HLF**): Hyperledger Fabric, contributed by IBM, is
    designed to be a foundation for developing applications or solutions with a modular
    architecture. It allows for plug-and-play components, such as consensus and membership
    services, and leverages containers to host smart contracts called **chaincode**
    that comprise the application logic of the system. The remainder of this chapter
    will focus on Hyperledger Fabric and its design, components, architecture, and
    overall enterprise design.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Hyperledger Fabric**（**HLF**）：由IBM贡献的Hyperledger Fabric旨在成为以模块化架构开发应用程序或解决方案的基础。它允许插拔式组件，例如共识和成员服务，并利用容器托管称为**链码**的智能合约，构成系统的应用逻辑。本章余下部分将专注于Hyperledger
    Fabric及其设计、组件、架构和整体企业设计。'
- en: '**Hyperledger Indy**: Contributed initially by the Sovrin Foundation, Indy
    is a Hyperledger project made to support independent identity on distributed ledgers.
    Hyperledger Indy provides tools, libraries, and reusable components for providing
    digital identities rooted on blockchains or other distributed ledgers:'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Hyperledger Indy**：最初由Sovrin基金会贡献，Indy是一个支持分布式账本上独立身份的Hyperledger项目。Hyperledger
    Indy提供了工具、库和可重复使用的组件，用于提供基于区块链或其他分布式账本的数字身份：'
- en: '![](img/1a1c2579-96b3-40b4-85f4-1f96732284df.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1a1c2579-96b3-40b4-85f4-1f96732284df.png)'
- en: Hyperledger tools
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 区块链工具
- en: 'There are also five tools currently in the Hyperledger project—all of which
    are hosted by the LF. These tools are as follows:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 目前Hyperledger项目中还有五种工具，全部由LF托管。这些工具如下：
- en: '**Hyperledger explorer**: Hyperledger explorer, which was originally contributed
    by IBM, Intel, and DTCC, can view, invoke, deploy or query blocks, transactions
    and associated data, network information (name, status, list of nodes), chain
    codes and transaction families, as well as other relevant information stored in
    the ledger.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Hyperledger explorer**：Hyperledger explorer最初由IBM、英特尔和DTCC贡献，可以查看、调用、部署或查询区块、交易和相关数据、网络信息（名称、状态、节点列表）、链码和交易族，以及存储在账本中的其他相关信息。'
- en: '**Hyperledger cello**: Cello was also contributed by IBM. It seeks to bring
    the on demand as-a-service deployment model into the blockchain ecosystem in order
    to reduce the effort required to create, manage, and terminate blockchains. Cello
    efficiently and automatically provides a multi-tenant chain service on top of
    various infrastructures, such as bare metal, virtual machine, and other container
    platforms.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Hyperledger cello**：Cello也由IBM贡献。它旨在将按需即服务部署模型引入区块链生态系统，以减少创建、管理和终止区块链所需的工作量。Cello可以在各种基础设施上高效、自动地提供多租户链服务，例如裸金属、虚拟机和其他容器平台。'
- en: '**Hyperledger composer**: Hyperledger composer (contributed by IBM and Oxchains)
    is a set of collaboration tools for building blockchain business networks that
    accelerate the development of smart contracts and blockchain applications, as
    well as their deployment across a distributed ledger.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Hyperledger composer**：Hyperledger composer（由IBM和Oxchains贡献）是一组用于构建区块链业务网络的协作工具，可加速智能合约和区块链应用程序的开发，以及它们在分布式账本上的部署。'
- en: '**Hyperledger quilt**: Hyperledger quilt, from NTT data and Ripple, is a Java
    implementation of the interledger protocol by ripple, which is designed to transfer
    values across distributed and non-distributed ledgers.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Hyperledger quilt**：Hyperledger quilt来自NTT数据和Ripple，是Ripple的跨账本协议的Java实现，旨在在分布式和非分布式账本之间传输价值。'
- en: '**Hyperledger caliper**: Caliper, a blockchain benchmark tool that allows users
    to measure performance of a specific implementation with predefined use cases,
    is in incubation status and was contributed by developers from numerous organizations.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Hyperledger caliper**：Caliper是一个区块链基准测试工具，允许用户使用预定义的用例来衡量特定实现的性能，目前处于孵化状态，由众多组织的开发人员贡献。'
- en: The building blocks of blockchain solutions
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 区块链解决方案的构建基块
- en: 'As noted in [Chapter 1](ccf97c50-561e-41ae-99fa-784b3217619d.xhtml), *Blockchain
    – Enterprise and Industry Perspective*, blockchain promises to fundamentally solve
    the issues of *time *and *trust *in industries such as financial services, supply
    chain, logistics, and healthcare. It seeks to streamline business processes and
    thereby address inefficiencies. It''s a technology for a new generation of transactional
    applications built on trust, accountability, and transparency. There are several
    characteristics shared by every industrial blockchains, including the following:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 如[第1章](ccf97c50-561e-41ae-99fa-784b3217619d.xhtml)所述，*区块链 - 企业和行业视角*，区块链承诺在金融服务、供应链、物流和医疗保健等行业根本解决*time*和*信任*问题。它旨在简化业务流程，从而解决低效率问题。它是基于信任、责任和透明度构建的新一代交易应用程序的技术。每个工业区块链都有几个共享特征，包括以下内容：
- en: A shared single source of truth
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 共享的真实唯一数据源
- en: Secure and tamper-proof
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全且防篡改
- en: Private unlinkable identity
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 私密不可链接身份
- en: Scalable architecture
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可扩展的架构
- en: Confidential
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 机密性
- en: Auditable
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可审计的
- en: 'The diagram that follows summarizes these characteristics into four tenets:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 下图将这些特点总结为四个原则：
- en: '![](img/94d10bb4-0a2a-4572-a7a4-9d0c26b9819e.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](img/94d10bb4-0a2a-4572-a7a4-9d0c26b9819e.png)'
- en: 'Blockchain solutions are comprised of four building blocks—a shared ledger,
    privacy, trust, and smart contracts. Allow me to elaborate a bit on each of these
    building blocks:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链解决方案由四个基本构件组成——共享账本、隐私、信任和智能合约。让我稍微详细解释一下这些构件：
- en: '**Shared ledger**: With bitcoin blockchain, the intent was to democratize visibility;
    however, enterprise blockchain requires a different approach due to the regulation
    of consumer data. Append-only distributed transaction records can be achieved
    by SQL or no-SQL distributed databases.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**共享账本**：通过比特币区块链，其目的是实现可见性的民主化；然而，企业区块链由于消费者数据的监管而需要采用不同的方法。只追加不可变分布式事务记录可以通过
    SQL 或无 SQL 分布式数据库来实现。'
- en: '**Privacy through cryptography**: Privacy through cryptography is essential
    for ensuring that transactions are authenticated and verified. It is imperative
    to include cryptography in blockchain design for the sake of hardening security
    and making it more difficult to breach the distributed system. Considerations
    about cryptography change when you''re working with a less democratic or permissioned
    ledger network.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**加密保障隐私**：通过加密保障隐私对于确保交易经过认证和验证至关重要。在区块链设计中加入加密技术是至关重要的，以加强安全性并增加突破分布式系统的难度。当您在使用较少民主化或经过许可的账本网络时，有关加密的考虑会发生变化。'
- en: '**Trust systems or consensus**: Trust means using the power of the network
    to verify a transaction. Trust is essential in any blockchain system or application,
    and I prefer the term *trust* system over *consensus* system since trust is the
    foundational element that dictates a stakeholder''s investment in any blockchain
    infrastructure. The trust system is modified whenever new entrants come into the
    blockchain space and apply blockchain technology to a new use case or specialization.
    The trust model is truly the heart of blockchain—it''s what delivers the tenets
    of *trust*, *trade*, and *ownership*. Trust is what enables blockchain to displace
    the transaction system, but this can only happen when trade and ownership are
    addressed by distributed/shared ledgers. There''s still much work needed to define
    an optimized trust system for various use cases. Database solutions are in the
    works to address scale and mobile use cases, but more work is require around P2P
    and sharing economy models, as well as B2B models.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**信任系统或共识**：信任意味着利用网络的力量来验证交易。在任何区块链系统或应用中，信任都是至关重要的，我更喜欢使用*信任*系统而不是*共识*系统这一术语，因为信任是决定利益相关者投资于任何区块链基础设施的基础元素。每当新的参与者进入区块链领域并将区块链技术应用于新的用例或专业领域时，信任系统就会发生改变。信任模型真正是区块链的核心——它是传递*信任*、*交易*和*所有权*原则的基础。信任是使区块链能够取代交易系统的关键，但这只有在分布式/共享账本解决了交易和所有权时才能实现。对于各种用例，仍然需要大量工作来定义优化的信任系统。数据库解决方案正在努力解决规模和移动用例的问题，但在点对点和共享经济模型以及
    B2B 模型方面还需要更多的工作。'
- en: '**Smart contracts**: In the context of blockchain, a smart contract is a business
    agreement embedded into the transaction database and executed with transactions.
    Rules are needed in business to define the flow of value and state of a transaction,
    so that''s the function of the contract here. The contract is smart because it''s
    a computerized protocol to execute the terms of the contract. Various contractual
    clauses (such as collateral, bonding, delineation of property rights, and so forth)
    can be codified so as to enforce compliance with the terms of the contract and
    ensure a successful transaction—this is the basic idea behind smart contracts.
    Smart contracts are designed to reassure one party that the other will fulfill
    their promise. Part of the objective of such contracts is to reduce the costs
    of verification and enforcement. Smart contracts must be observable (meaning that
    participants can see or prove each other''s actions pertaining to the contract),
    verifiable (meaning that participants can prove to other nodes that a contract
    has been performed or breached), and private (meaning that knowledge of the contents/performance
    of the contract should involve only the necessary participants required to execute
    it). Bitcoin made provisions for smart contracts; however, it lacked some capabilities
    such as Turing-completeness, lack of state, and so on. Ethereum improved upon
    bitcoin''s limitations by building a blockchain with a built-in Turing-complete
    programming language, so that anyone can write smart contracts and decentralized
    applications by creating their own arbitrary rules for ownership, transaction
    formats, and state transition functions. These advances made it possible for complex
    contracts to be codified in a blockchain, such as instant transfer of credit to
    a traveler''s bank account when a flight is delayed beyond a certain duration
    or payment of employee compensation if performance goals are achieved.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**智能合约**：在区块链的背景下，智能合约是嵌入到交易数据库中并随交易执行的商业协议。在业务中需要规则来定义价值流动和交易状态，这就是合同在这里的功能。合同之所以智能，是因为它是一个计算机协议，用来执行合同的条款。各种合同条款（如抵押、担保、财产权利的划定等）可以被编码，以强制执行对合同条款的遵守，并确保交易成功——这是智能合约背后的基本理念。智能合约的设计目的之一是让一方放心另一方将履行他们的承诺。这类合同的目标之一是降低验证和执行成本。智能合约必须是可观察的（意味着参与者可以看到或证明彼此的与合同相关的行动）、可验证的（意味着参与者可以向其他节点证明合同是否已执行或违约）、以及私密的（意味着合同内容/执行的了解应仅涉及执行它所需的必要参与者）。比特币为智能合约提供了相关规定；然而，它缺乏图灵完备性、缺乏状态等能力。以太坊通过构建一个内置图灵完备编程语言的区块链，改进了比特币的局限，因此任何人都可以编写智能合约和去中心化应用，创造自己的所有权、交易格式和状态转换函数的任意规则。这些进步使得复杂的合同可以在区块链中被编码，比如在飞行延误超过一定时间后即时向旅行者的银行账户转移信用，或者在实现绩效目标时支付员工补偿等。'
- en: 'How does this work practically? Well, smart contracts are deployed as code
    on the blockchain nodes, which we might more appropriately call smart contract
    code. This code is a way of using blockchain technology to complement, or replace,
    existing legal contracts. This smart contract code is deployed on the blockchain
    node in a programming language such as Solidity or Golang. Deploying the code
    on the blockchain provides three important properties:'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这在实际中如何工作？嗯，智能合约被部署为区块链节点上的代码，我们可能更恰当地称之为智能合约代码。这个代码是利用区块链技术来补充或替代现有的法律合同。这个智能合约代码是用
    Solidity 或 Golang 等编程语言部署在区块链节点上的。在区块链上部署代码提供了三个重要的属性：
- en: Permanence and censorship resistance inherited from the blockchain,
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 区块链继承的永久性和抗审查性，
- en: The ability of the program itself to control blockchain assets, such as by transferring
    ownership or quantities of an asset among participants
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 程序本身控制区块链资产的能力，比如在参与者之间转移所有权或资产数量
- en: Execution of the program by the blockchain, ensuring that it will always execute
    as written and no-one can interfere
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 程序由区块链执行，确保始终按原样执行，没有人可以干扰
- en: In the enterprise world, smart contracts would probably involve blockchain's
    smart contract code, accompanied by a more traditional legal contract. For example,
    a smart contract code may execute on a land registry blockchain network to transfer
    ownership of a house from one party to another, so that land registry records
    are updated in real time and all participants such as the city, realtors, lawyers,
    and banks can all update their own records upon completion of the sale. However,
    the home buyer will insist on a legal contract with indemnity clauses to cover
    any undiscovered liens.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在企业世界中，智能合约可能涉及区块链的智能合约代码，以及更传统的法律合同。例如，智能合约代码可能在土地登记区块链网络上执行，将房屋所有权从一方转移到另一方，以便房屋登记记录实时更新，并且所有参与者（如城市、房地产经纪人、律师和银行）都可以在销售完成后更新自己的记录。但是，购房者将坚持要求具有补偿条款的法律合同，以Cover
    any undiscovered liens。
- en: Hyperledger Fabric component design
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Hyperledger Fabric 组件设计
- en: Let's discuss various components that facilitate the blockchain technology tenets
    of shared ledger, encryption, the trusts system, and smart contracts. The components
    represent the Hyperledger Fabric infrastructure components and provide isolation
    from chain code or smart contract development constructs. Chain code or smart
    contract development details will be discussed in detail in a separate chapter.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们讨论一下促进区块链技术原则的各种组件，例如共享账本、加密、信任系统和智能合约。 这些组件代表了 Hyperledger Fabric 的基础设施组件，并且提供了与链码或智能合约开发构造的隔离。链码或智能合约开发细节将在单独的章节中详细讨论。
- en: 'The following diagram depicts the Hyperledger Fabric infrastructure components:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图示了 Hyperledger Fabric 基础设施组件：
- en: '![](img/49d61d1e-ea29-40e6-a810-ff5a94d001a0.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](img/49d61d1e-ea29-40e6-a810-ff5a94d001a0.png)'
- en: Hyperledger Fabric infrastructure components
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: Hyperledger Fabric 基础设施组件
- en: 'Following are the infrastructure components:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是基础设施组件：
- en: '**Hyperledger Fabric CA** is an implementation of membership services but is
    not required to be used (that is, any X509-based PKI infrastructure that can issue
    EC certificates can be used)'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Hyperledger Fabric CA** 是成员服务的一个实现，但不是必须使用的（即，任何可发行 EC 证书的基于 X509 的 PKI 基础设施都可以使用）'
- en: '**Dedicated orderer nodes**'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**专用订购节点**'
- en: Implements atomic broadcast API
  id: totrans-53
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现原子广播 API
- en: Orders and batches transactions and signs each batch (block) to create a hash
    chain
  id: totrans-54
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 订购并批处理交易，并对每个批次（区块）进行签名以创建哈希链
- en: Hyperledger Fabric provides two implementations—Solo (for dev/test) and a Kafka-based
    implementation for production/fault tolerance
  id: totrans-55
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Hyperledger Fabric 提供了两种实现——Solo（用于开发/测试）和基于 Kafka 的实现用于生产/容错
- en: The ordering service is pluggable—the implementer needs to only provide an atomic
    broadcast API based on the gRPC interface definition
  id: totrans-56
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 订购服务是可插拔的——实施者只需根据 gRPC 接口定义提供原子广播 API
- en: '**Peers** are now responsible for existing smart logic (chaincode) and maintaining
    the ledger'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**节点**现在负责现有的智能逻辑（链码）和维护分类帐'
- en: Endorsement simulates transactions (that is, it executes them, but does not
    commit them)
  id: totrans-58
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 背书模拟交易（即执行交易，但不提交交易）
- en: Peers receive batches of endorsed transactions from the orderer nodes and then
    validate and commit transactions (this eliminates non-determinism)
  id: totrans-59
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 节点从订购节点接收批量背书的交易，然后验证和提交交易（这消除了不确定性）
- en: Principles of Hyperledger design
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Hyperledger 设计原则
- en: Hyperledger Fabric, again, is a blockchain implementation that is designed for
    deploying a modular and extensible architecture. It has a modular subsystem design
    so that different implementations can be plugged in and implemented over time.
    This section covers the Hyperledger Fabric reference architecture and describes
    the details on the various components/modules and their interactions and functions.
    Understanding the reference architecture facilitates better solution and technology
    design decisions, especially around scalability, security, and performance.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 再次强调，Hyperledger Fabric 是设计用于部署模块化和可扩展架构的区块链实现。它具有模块化子系统设计，以便随着时间的推移可以插入和实施不同的实现。本节介绍了
    Hyperledger Fabric 参考架构，并描述了各种组件/模块及其交互和功能的详细信息。理解参考架构有助于更好地进行解决方案和技术设计决策，特别是在可扩展性、安全性和性能方面。
- en: 'While in this book we will discuss the reference architecture of Hyperledger
    Fabric, please note that all the Hyperledger projects (the frameworks referred
    to previously) follow a design philosophy that includes the following principles:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们将讨论 Hyperledger Fabric 的参考架构，请注意所有 Hyperledger 项目（先前提到的框架）遵循包括以下原则的设计理念：
- en: '**Modular and extensible approach**: This implies modularity in all components
    of all frameworks. Components defined by Hyperledger for all projects include
    (but are not limited to) the following:'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模块化和可扩展的方法**：这意味着所有框架的所有组件都具有模块化。Hyperledger 为所有项目定义的组件包括（但不限于）以下内容：'
- en: Consensus layer
  id: totrans-64
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 共识层
- en: Smart contract (chain code) layer
  id: totrans-65
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 智能合约（链码）层
- en: Communication (gossip) layer
  id: totrans-66
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通信（八卦）层
- en: Data store (persistent, log, and ledger data)
  id: totrans-67
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据存储（持久性、日志和分类账数据）
- en: Identity services (root of trust—to identify the participants)
  id: totrans-68
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 身份服务（信任根——用于识别参与者）
- en: APIs
  id: totrans-69
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: API
- en: Pluggable cryptography
  id: totrans-70
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可插拔加密
- en: '**Interoperability**: This principle is around backward interoperability and
    NOT the interoperability between the various Hyperledger project-powered blockchain
    systems or business networks.'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**互操作性**：这一原则是关于向后互操作性，而不是关于各种 Hyperledger 项目驱动的区块链系统或业务网络之间的互操作性。'
- en: '**Focus on secure solutions**: Enterprise and therefore business network security
    is paramount, hence the focus on security-and not just of the crypto abstraction-but
    the interaction between components and the structure that governs the permissioning
    nature of permissioned blockchains. Most industries embarking on the permissioned
    blockchain are established and regulated industries.'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**专注于安全解决方案**：企业及其业务网络的安全至关重要，因此专注于安全——不仅仅是加密抽象本身，而是组件之间的交互以及管理权限化区块链的结构。大多数开始使用权限化区块链的行业都是成熟且受监管的行业。'
- en: '**Token (or coin or crypto-asset) agnostic approach**: This is discussed in
    great length in the governance section, but Hyperledger projects do not use crypto-assets,
    cryptocurrency, tokens, or coin-like constructs as incentive mechanics to establish
    trust systems. While there is a notion of asset tokenization that represents a
    physical, virtual, or dematerialized asset, tokenization of assets is a vastly
    different concept than a systemic token that is generated in the system as a virtualization
    of incentive economics.'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**代币（或硬币或加密资产）不可知的方法**：这在治理部分进行了详细讨论，但 Hyperledger 项目不使用加密资产、加密货币、代币或类似硬币的构造作为建立信任系统的激励机制。虽然有一种资产代币化的概念，表示物理、虚拟或非物质化的资产，但资产代币化是一个与系统中生成的系统性代币截然不同的概念，后者是作为激励经济学的虚拟化而在系统中生成的。'
- en: '**Focus on rich and easy-to-use APIs**: The focus here is to ensure that blockchain
    systems have not only enterprise middleware access, but access to business networks,
    existing participants, and new systems without exposing the details of blockchain
    powered business networks.'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**专注于丰富且易于使用的 API**：这里的重点是确保区块链系统不仅具有企业中间件访问权限，还能够访问业务网络、现有参与者和新系统，而不暴露区块链驱动的业务网络的细节。'
- en: CAP Theorem
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CAP 定理
- en: 'The CAP Theorem as postulated by Eric Brewer in 2000 at ACM Symposium on Principles
    of distributed computing (PODC) ([https://dl.acm.org/citation.cfm?id=343502](https://dl.acm.org/citation.cfm?id=343502))
    states that in a distributed data store it is impossible to guarantee more than
    any two of the following three properties: Consistency (C), Availability (A),
    and Partition Tolerance (P). A distributed data store thus can be characterized
    on the two properties it guarantees namely  CA, CP or AP.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 2000 年在 ACM 分布式计算原理研讨会（PODC）上由埃里克·布鲁尔（Eric Brewer）提出的 CAP 定理（[https://dl.acm.org/citation.cfm?id=343502](https://dl.acm.org/citation.cfm?id=343502)）指出，在分布式数据存储中，不可能保证以下三个属性中的超过两个：一致性（C）、可用性（A）和分区容错性（P）。因此，分布式数据存储可以根据它保证的两个属性来描述，即
    CA、CP 或 AP。
- en: More specifically, the theorem is aimed at distributed systems deployed across
    unreliable networks (networks with faults and delays such as the Internet) leading
    to a partitioning of the system components. According to CAP, in these environments,
    the system design must focus on the balance between availability and consistency.
    For example, the ACID (Atomicity, Consistency, Isolation, Durability) approach
    typically provided by RDBMS (Relational Database Management Systems) guarantees
    consistency on a single node on the expense of availability across multiple nodes
    (CP type of systems). However, note that, different configurations may yield different
    combinations namely CA or AP as well.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 更具体地说，该定理旨在分布式系统部署在不可靠网络（例如存在故障和延迟的网络，如互联网）中，导致系统组件的分区。根据CAP，在这些环境中，系统设计必须专注于可用性和一致性之间的平衡。例如，关系型数据库管理系统（RDBMS）通常提供的ACID（原子性、一致性、隔离性、持久性）方法保证了单个节点上的一致性，但以牺牲跨多个节点的可用性（CP类型系统）为代价。然而，需要注意的是，不同的配置可能会产生不同的组合，即CA或AP。
- en: In contrast, Fabric is designed similarly as many other Blockchain platforms
    as AP type of system with Eventual Consistency also referred to as BASE (Basically
    Available, Soft state, Eventual consistency).
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，Fabric与许多其他区块链平台一样，设计为AP类型系统，同时也采用了最终一致性，也被称为BASE（基本可用、软状态、最终一致性）。
- en: 'In context of blockchain CAP properties can be defined as following:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在区块链背景下，CAP属性可以定义如下：
- en: '**Consistency:** The blockchain network avoids any forks of the ledger'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**一致性：**区块链网络避免了分类账的任何分叉'
- en: '**Availability:** Transactions submitted by clients are permanently committed
    into the ledger and available on all the network peers'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可用性：**客户端提交的交易将永久写入分类账，并可在所有网络节点上使用。'
- en: '**Partition tolerance:** The blockchain network continues to operate despite
    an arbitrary number of transaction proposals or blocks are being dropped (or delayed)
    by the physical network medium between the peers'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分区容错性：**即使区块链网络中出现任意数量的交易提案或区块在节点之间的物理网络介质中被丢弃（或延迟），网络仍然可以继续运行。'
- en: 'Fabric achieves the CAP properties as follows:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: Fabric实现了以下CAP属性：
- en: '**Consistency:** By a total order of transactions and version control using
    MVCC'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**一致性：**通过使用MVCC对交易进行总序，并使用版本控制实现。'
- en: '**Availability:** By hosting a copy of the ledger on each of the peers'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可用性：**通过在每个节点上托管分类账的副本。'
- en: '**Partition tolerance:** By maintaining operation despite failed nodes (up
    to a threshold)'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分区容错性：**即使节点失败（达到阈值），也要保持运行。'
- en: As you can see, availability and partition tolerance (AP properties of the CAP
    theorem) are guaranteed by default in most blockchain systems. However, consistency
    is harder to provide.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，大多数区块链系统默认情况下保证了可用性和分区容错性（CAP定理的AP属性）。然而，一致性更难提供。
- en: 'Fabric achieves consistency by combining the following elements:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: Fabric通过结合以下元素实现了一致性：
- en: The transaction processing is split into a sequence of steps across multiple
    components of the network.
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 交易处理被分割成一系列步骤，并跨网络的多个组件执行。
- en: Clients connect to a communication channel and submit transaction proposals
    to endorsing peers and then to the ordering service.
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端连接到通信渠道，并向背书节点提交交易提案，然后提交给排序服务。
- en: The ordering service orders transactions into blocks with a total order i.e.
    the order of the transactions is guaranteed to be consistent across the whole
    network. The blocks once created are broadcasted to each member peer of the channel.
    The broadcasting protocol guarantees reliable delivery of the blocks to the peers
    in a correct order namely total-order broadcast.
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 排序服务将交易按照总序排序成区块，即保证了整个网络上的交易顺序一致。一旦创建了区块，就会广播到通道的每个成员节点。广播协议保证了将区块以正确的顺序可靠地传递给节点，即总序广播。
- en: As we will explain in Multiversion concurrency control, upon reception of the
    block on the peer, the peer uses MVCC to validate each transaction based on the
    key versions stored in the transaction ReadSet. The MVCC validation guarantees
    consistency of the resulting ledger and of the Worldstate and prevents attacks
    such as double spending. However, it can also lead to elimination of otherwise
    valid transactions, which have been submitted in an order violating the `ReadSet`
    version validation check. The transactions are then marked either valid or invalid
    in the ledger.
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 正如我们将在多版本并发控制中解释的那样，对等节点在接收到区块后，使用 MVCC 根据事务读取集中存储的键版本来验证每个事务。MVCC 验证保证了结果分类帐和世界状态的一致性，并防止了诸如双重支付之类的攻击。然而，它也可能导致被提交但顺序违反`ReadSet`版本验证检查的有效事务被消除。然后，在分类帐中将事务标记为有效或无效。
- en: The ledger then contains a sequence of totally ordered blocks, where each block
    contains a sequence of totally ordered transactions (either valid or invalid),
    yielding a ledger imposing a total order across all transactions.
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然后，分类帐包含一系列完全有序的区块，其中每个区块包含一系列完全有序的事务（有效或无效），从而形成了对所有事务强制实施总顺序的分类帐。
- en: Hyperledger Fabric reference architecture
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Hyperledger Fabric 参考架构
- en: 'Hyperledger Fabric follows a modular design, and the following are some of
    the possible components or modules that can be plugged in and implemented. Note
    that this list is not exhaustive:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: Hyperledger Fabric 遵循模块化设计，以下是一些可能的组件或模块，可以插入和实现。请注意，此列表并不详尽：
- en: '**Membership services**: This module is essentially a permissioning module
    and acts as a vehicle to establish a root of trust during network creation, but
    this is also instrumental in ensuring and managing the identity of members. Membership
    services are essentially a certificate authority as well as utilized elements
    of the **public key infrastructure** (**PKI**) for things such as key distribution,
    management, and establishing federated trust as the network grows. The membership
    services module provides a specialized digital certificate authority for issuing
    certificates to members of the blockchain network, and it leverages cryptographic
    functions provided by Hyperledger Fabric.'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**成员服务**：此模块本质上是一个许可模块，并在网络创建过程中建立信任根，但这也是确保和管理成员身份的关键。成员服务本质上是一个证书颁发机构，同时利用了**公钥基础设施**（**PKI**）的元素，用于诸如密钥分发、管理和建立随着网络增长而形成的联邦信任等方面。成员服务模块为区块链网络的成员发放证书提供了一个专用的数字证书颁发机构，并利用
    Hyperledger Fabric 提供的加密功能。'
- en: '**Transactions**: A transaction is a request to the blockchain to execute a
    function on the ledger. The function is implemented by a chaincode. Cryptography
    ensures integrity of transactions by linking the transaction to previous blocks
    and ensuring the transactional integrity, if protected, by linking the cryptogram
    or hash from previously linked blocks. Each channel in Hyperledger Fabric is its
    own blockchain.'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事务**：事务是向区块链发出的执行分类帐上功能的请求。该功能由链码实现。通过将事务链接到先前的区块，并确保交易完整性（如果受保护），通过链接先前链接的区块中的加密信息或哈希，加密确保了交易的完整性。Hyperledger
    Fabric 中的每个通道都是其自己的区块链。'
- en: '**Smart contract or chaincode services**: Chaincode is an application-level
    code stored on the ledger as a part of a transaction. Chaincode runs transactions
    that may modify the world state. Transaction logic is written as chaincode (in
    the Go or JavaScript languages), and executes in secure Docker containers. The
    transaction transforms data, scoped by chaincode on the channel from which it
    operates.'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**智能合约或链码服务**：链码是存储在分类帐上作为事务的一部分的应用级代码。链码运行可能修改世界状态的事务。事务逻辑以链码形式编写（使用 Go 或
    JavaScript 语言），并在安全的 Docker 容器中执行。事务通过链码作用的通道上的数据进行转换。'
- en: 'Here are the smart contract or chaincode elements enabled by chaincode services.
    Chaincode is installed on peers, which require access to the asset states to perform
    reads and writes. The chaincode is then instantiated on specific channels for
    specific peers. Ledgers within a channel can be shared across entire networks
    of peers or include only a specific set of participants. Peers are able to participate
    in multiple channels:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是由链码服务启用的智能合约或链码元素。链码安装在对等节点上，需要访问资产状态以执行读取和写入操作。然后，链码在特定通道上针对特定对等节点进行实例化。通道中的分类帐可以在整个对等节点网络中共享，也可以仅包括特定的参与者集。对等节点能够参与多个通道：
- en: '**Events**: The process of validating peers and chaincodes can produce events
    (pre-defined events and custom events generated by chaincode) on the network that
    applications may listen for and take actions on. These events are consumed by
    event adapters, which may further deliver events using vehicles such as WebHooks
    or Kafka. Fabric-committing peers provide an event stream to publish events to
    registered listeners. As of v1.0, the only events that get published are Block
    events. A Block event gets published whenever the committing peer adds a validated
    block to the ledger:'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件**：验证对等方和链码的过程可能会在网络上产生事件（预定义事件和由链码生成的自定义事件），应用程序可以监听这些事件并采取行动。这些事件由事件适配器消耗，事件适配器可能使用
    WebHooks 或 Kafka 等工具进一步传递事件。Fabric 提交对等方提供事件流以向已注册的监听器发布事件。截至 v1.0，唯一发布的事件是块事件。每当提交对等方向账本添加验证的区块时，都会发布一个块事件：'
- en: '![](img/9294abae-c80f-4783-9ce8-92c0c7772a30.png)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9294abae-c80f-4783-9ce8-92c0c7772a30.png)'
- en: '**Consensus**: Consensus is at the heart of any blockchain system. It also
    enables a trust system. In general, the consensus service enables digitally signed
    transactions to be proposed and validated by network members. In Hyperledger Fabric,
    the consensus is pluggable and tightly linked to the endorse-order-validation
    model that Hyperledger proposes. The ordering services in Hyperledger Fabric represent
    the consensus system. The ordering service batches multiple transactions into
    blocks and outputs a hash-chained sequence of blocks containing transactions.'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**共识**：共识是任何区块链系统的核心。它也实现了信任系统。一般来说，共识服务使得网络成员可以提出并验证数字签名的交易。在 Hyperledger
    Fabric 中，共识是可插拔的，并与 Hyperledger 提出的背书-排序-验证模型紧密关联。Hyperledger Fabric 中的排序服务代表共识系统。排序服务将多个交易打包成区块，并输出包含交易的哈希链接的区块序列。'
- en: '**Ledger**: Another component is a distributed encrypted ledger, including
    an append-only data store. This provides the ability to query and write data across
    distributed ledgers. There are two options:'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**账本**：另一个组件是分布式加密账本，包括只追加数据存储。这提供了在分布式账本上查询和写入数据的能力。有两个选择：'
- en: Level DB (default embedded KV DB) supports keyed queries, composite key queries,
    and key range queries
  id: totrans-104
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Level DB（默认嵌入式 KV 数据库）支持按键查询、复合键查询和键范围查询
- en: Couch DB (external option) supports keyed queries, composite key queries, key
    range queries, plus full data rich queries
  id: totrans-105
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Couch DB（外部选项）支持按键查询、复合键查询、键范围查询以及完整的数据丰富查询
- en: '**Client SDK**: A client SDK enables the creation of applications that deploy
    and invoke transactions atop a shared ledger. The Hyperledger Fabric Reference
    Architecture supports both Node.js and Java SDK. A software developer kit is like
    a programming kit or set of tools that provide developers with the environment
    of libraries to write and test chaincode applications. SDKs are critical in blockchain
    application development and will be discussed in detail in further chapters. Specific
    capabilities included in the SDK are the application client, chaincode, users,
    events, and crypto suite.'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**客户端 SDK**：客户端 SDK 可以创建部署和调用共享账本上交易的应用程序。Hyperledger Fabric 参考架构支持 Node.js
    和 Java SDK。软件开发工具包类似于编程工具包或一组工具，提供给开发人员编写和测试链码应用程序的库环境。SDK 在区块链应用程序开发中至关重要，并将在后续章节中进行详细讨论。SDK
    包含的特定功能包括应用程序客户端、链码、用户、事件和加密套件。'
- en: Hyperledger Fabric runtime architecture
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Hyperledger Fabric 运行时架构
- en: 'Now that we''ve looked at the reference architecture, let''s consider the runtime
    architecture for Hyperledger Fabric:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经查看了参考架构，让我们考虑一下 Hyperledger Fabric 的运行时架构：
- en: '![](img/73fd6b03-d170-4c8d-9caa-915e683e2973.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![](img/73fd6b03-d170-4c8d-9caa-915e683e2973.png)'
- en: 'The following outline demonstrates a Hyperledger Fabric runtime transaction
    processing flow:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 以下概述了 Hyperledger Fabric 运行时交易处理流程：
- en: '**Transaction proposal (application SDK)**:'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**交易提案（应用程序 SDK）**：'
- en: Transaction proposal is submitted by application SDK
  id: totrans-112
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 交易提案由应用程序 SDK 提交
- en: It receives a transaction proposal response back (includes ReadWrite set) post
    endorsement
  id: totrans-113
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它会收到交易提案响应（包括 ReadWrite 集）后的认可。
- en: It submits the transaction (includes ReadWrite set) to the ordering service
  id: totrans-114
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它将交易（包括 ReadWrite 集）提交给排序服务
- en: '**Transaction endorsement**:'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**交易背书**：'
- en: The transaction is sent to the counter-parties represented by endorsing peers
    on their channel
  id: totrans-116
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 交易被发送到其通道上代表背书对等方的交易对手
- en: Each peer executes the transaction by calling the specified chaincode function
    and signs the result, which becomes the read-write-set of the transaction
  id: totrans-117
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每个对等方通过调用指定的链码函数执行交易并签署结果，该结果成为交易的读写集
- en: Each peer may participate in multiple channels, allowing concurrent execution
  id: totrans-118
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每个对等方可以参与多个通道，允许并发执行
- en: '**Transaction submitted to the ordering service**:'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**交易提交给排序服务**：'
- en: The ordering service accepts endorsed transactions and orders them according
    to the plug-in consensus algorithm, and then delivers them on the channel
  id: totrans-120
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 排序服务接受认可的交易，并根据插件共识算法对其进行排序，然后将其传递到通道上
- en: Peers on the channel receive transactions and validate before committing to
    the ledger
  id: totrans-121
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通道上的对等方接收交易并在提交到分类账之前进行验证
- en: '**Transaction validation**:'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**交易验证**：'
- en: Validates each transaction and commit block
  id: totrans-123
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证每个交易并提交区块
- en: Validates the endorsement policy
  id: totrans-124
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证认可策略
- en: Validates ReadSet versions in state DB
  id: totrans-125
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证状态数据库中的ReadSet版本
- en: Commits the block to blockchain
  id: totrans-126
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将区块提交到区块链
- en: Commits the valid transaction to state DB
  id: totrans-127
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将有效交易提交到状态数据库
- en: Strengths and advantages of a componentized design
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分解设计的优势和优点
- en: Hyperledger Fabric's component design offers several advantages. Many of these
    strengths relate to business network governance, which is an important compliance
    and costs consideration for Hyperledger Fabric in the enterprise.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: Hyperledger Fabric的组件设计提供了几个优势。这些优势中的许多与业务网络治理有关，对于企业中的Hyperledger Fabric来说，这是一项重要的合规性和成本考虑。
- en: 'These benefits include the following:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 这些好处包括以下内容：
- en: '**Delineates development design from runtime design**: Separating development
    and runtime design is important because the delineation is important from development
    best practices and infrastructure/hybrid cloud variations, and ensuring adherence
    to the current enterprise and their connectivity to the business network''s application
    development, as well as DevOps practices.'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**将开发设计与运行时设计区分开**：分离开发和运行时设计很重要，因为这种区分对开发最佳实践和基础设施/混合云变体很重要，并确保遵守当前企业及其与业务网络应用开发的连接以及DevOps实践的连接。'
- en: '**Discerning between design imperatives and infrastructure/deployment capabilities**:
    Componentized design allows us to separate infrastructure design, which includes
    things such as network connections, security, permissioning, and contractual vehicles,
    from the overall application design of the business network blueprint that dictates
    the technology blueprint.'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**区分设计要求和基础设施/部署能力**：组件化设计使我们能够将基础设施设计（包括网络连接、安全性、许可和合同工具等）与业务网络蓝图的整体应用设计分开，后者决定了技术蓝图。'
- en: '**Incorporates network design principles**: The modularity of Hyperledger Fabric
    can address infrastructure scaling issues, such as the number of connections,
    co-location, security, container deployment practices, and so on. There are various
    considerations when it comes to network design, such as cloud deployment, hybrid
    and/or on premises, and a combination of any of the available options, which are
    dependent on the requirements of individual members in a business network. Network
    design also addresses the business challenges of network growth and the resulting
    performance and security driven **Service Level Agreements** (**SLA**) to its
    members.'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**整合网络设计原则**：Hyperledger Fabric的模块化设计可以解决基础设施扩展问题，如连接数、协同位置、安全性、容器部署实践等。在网络设计方面有各种考虑因素，如云部署、混合和/或本地部署，以及任何可用选项的组合，这取决于业务网络中各个成员的需求。网络设计还解决了网络增长及其导致的性能和安全驱动的**服务级别协议**（**SLA**）对其成员的挑战。'
- en: '**Addresses channel design principles**: Modularity, or componentized design,
    can also address isolation, data privacy, and confidentiality between participants
    and controlled/permissioned access with robust audit capability. Channel constructs
    in Hyperledger Fabric enable us to address the business blueprint requirements
    around implementing business-defined transactions that may be bilateral, trilateral,
    or event multilateral. Channels also provide an avenue to limit the visibility
    of transaction data to a few participants or provide full access when required,
    such as to a regulator. Channel design also addresses critical business requirements
    around transaction processing, data visibility, business rules enforcement, and
    so on. It also has technology implications, such as a scalability, security, and
    the costs of the infrastructure that supports the business network. Finally, channel
    design addresses the business challenges of network growth and the resulting performance
    and security-driven SLAs to members.'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**解决频道设计原则**：模块化或组件化设计也可以解决参与者之间的隔离、数据隐私和机密性，以及提供强大的审计能力的受控/许可访问。Hyperledger
    Fabric 中的频道结构使我们能够满足业务蓝图需求，实施可能是双边、三边甚至多边的业务定义交易。频道还提供了一种途径，限制交易数据的可见性仅限于少数参与者，或者在需要时提供全面访问权限，例如监管机构。频道设计还解决了交易处理、数据可见性、业务规则执行等关键业务需求。它还涉及技术影响，如可扩展性、安全性以及支持业务网络的基础设施成本。最后，频道设计解决了网络增长带来的业务挑战，以及为成员提供的性能和安全性驱动的服务水平协议。'
- en: '**Adopts Hyperledger Fabric composer model-driven development**: Hyperledger
    Composer, one of the tools discussed previously under Hyperledger tools, provides
    an avenue to modular development with a portable, standardized vehicle to add
    governance and control, similar to JEE constructs such as JAR/WAR/RAR, and so
    on. **Business network archive** (**BNA**) is an archive that can be integrated
    into DevOps practices for cross-enterprise team development and collaborative
    life cycle management capabilities. The idea is to separate chaincode development
    from infrastructure design and separate the competencies needed to maintain the
    two facets of enterprise or business network application technology practices.
    More details around Hyperledger Fabric composer will be discussed in a separate
    chapter dedicated to the composer and tooling.'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**采用 Hyperledger Fabric Composer 模型驱动开发**：Hyperledger Composer 是之前在 Hyperledger
    工具中讨论的工具之一，为模块化开发提供了一种途径，使用便携、标准化的方式增加治理和控制，类似于 JEE 结构，如 JAR/WAR/RAR 等。**业务网络存档**（**BNA**）是一种存档，可集成到
    DevOps 实践中，用于跨企业团队开发和协作的生命周期管理能力。其理念是将链码开发与基础设施设计分开，将维护企业或业务网络应用程序技术实践这两个方面所需的能力分开。有关
    Hyperledger Fabric Composer 的更多详细信息将在专门讨论 Composer 和工具的单独章节中介绍。'
- en: Each of the advantages of componentized design described previously have cost
    implications in terms of runtime/infrastructure design (that is, use of resources
    and resulting costs), flexible design (such as products and relationships morphs),
    and the longevity of the solution (the global footprint of the enterprise cloud
    infrastructure, including robust access to technical and business SMEs in the
    form of maintenance and support)—all of which are essential for compliance, governance,
    and longevity of the solution, and resulting business networks powered by blockchain.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 上述组件化设计的每一个优势在运行时/基础设施设计方面都有成本影响（即资源的使用和由此产生的成本）、灵活设计（例如产品和关系的变化）和解决方案的持久性（包括全球企业云基础设施的全球足迹，包括通过维护和支持形式的技术和业务专家的可靠访问）——所有这些对合规、治理和解决方案的持久性，以及由区块链驱动的业务网络至关重要。
- en: Hyperledger Fabric – the journey of a sample transaction
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Hyperledger Fabric——示例交易的过程
- en: 'Now, let''s look at the journey of a sample transaction with Hyperledger Fabric.
    This section will help lay the foundation of Hyperledger Fabric concepts and components
    in order to facilitate a better understanding of the layers involved in transaction
    processing:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来看看使用 Hyperledger Fabric 的示例交易的过程。本节将帮助奠定 Hyperledger Fabric 概念和组件的基础，以便更好地理解交易处理所涉及的各个层面：
- en: '![](img/9b3e3f96-0cbd-491c-ab72-fb6509941709.png)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9b3e3f96-0cbd-491c-ab72-fb6509941709.png)'
- en: Hyperledger Fabric walkthrough
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: Hyperledger Fabric 演练
- en: Fabric introduces a newly designed blockchain, preserving the transaction processing
    architecture and aiming at a secure, scalable, resilient, modular, and confidential
    design. Hyperledger Fabric (at the time of writing this book, the current version
    is 1.1) supports the execution of distributed applications supporting enterprise-friendly
    programming models. The components in Hyperledger Fabric provide a modular design,
    optimally suited for a business network made of various enterprises. Hyperledger
    Fabric introduces a model based on three steps, an *endorse-order-validate* architecture,
    designed for the distributed execution of untrusted code in an untrusted environment.
    This separation not only allows for provisioning at scale, but also ensures security
    by separation at every layer.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: Fabric引入了一种新设计的区块链，保留了交易处理架构，旨在实现安全、可扩展、弹性、模块化和保密的设计。Hyperledger Fabric（在撰写本书时，当前版本为1.1）支持执行支持企业友好编程模型的分布式应用程序。Hyperledger
    Fabric中的组件具有模块化设计，非常适合由各种企业组成的商业网络。Hyperledger Fabric引入了基于三个步骤的模型，一个*认可-排序-验证*架构，旨在在不受信任的环境中执行不受信任代码的分布式执行。这种分离不仅允许规模的供应，还通过在每一层进行分离来确保安全性。
- en: 'The transaction flow is separated into three steps, which may be run on different
    entities in the system:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 交易流程分为三个步骤，可以在系统中的不同实体上运行：
- en: '**Endorsement of a transaction and checking its validity** (**validation step**):
    This step includes members of a channel to  inspect and adhere to  endorsement
    policies which  define the acceptable agreed upon approach to validate a transaction
    proposal. Since peers need to update the ledger ( upon transaction finality) the
    peers ( that are subscribed to a channel) review the proposal and provide their
    ledgers version of (R)ead and (W)rite set. This validation step is vital as it
    provides the first step on transaction validation. This check also acts as a gate
    and prevents form  erroneous downstream processing of transaction, which can be
    computationally expensive.'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**对交易的认可和检查其有效性**（**验证步骤**）：这一步包括频道成员检查和遵守认可政策，这些政策定义了验证交易提案的可接受的协商方式。由于对等方需要更新分类帐（在交易确定性之后），因此订阅频道的对等方会审核提案并提供其分类帐版本的（R）读取和（W）写入集。这一验证步骤非常重要，因为它为交易验证提供了第一步。这一检查也起到了门禁的作用，防止了交易的计算错误下游处理，这可能具有计算成本昂贵的风险。'
- en: '**Ordering through an ordering service**: This is a consensus protocol which
    is meant to be pluggable, irrespective of transaction semantics. The pluggability
    of the consensus provides enterprise and business networks with tremendous flexibility,
    as there are consensus mechanism considerations for various types of industries,
    use cases, and interactions between network participants.'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**通过排序服务进行排序**：这是一种共识协议，旨在可插拔，不考虑交易语义。共识的可插拔性为企业和商业网络提供了巨大的灵活性，因为有各种行业、用例和网络参与者之间的交互的共识机制考虑因素。'
- en: '**Validation or transaction commitment**: This implies committing a transaction
    and therefore going through a final set of validations per application-specific
    trust assumptions.'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**验证或交易提交**：这意味着提交交易，因此需要按照应用程序特定的信任假设进行一系列最终验证。'
- en: 'A Hyperledger Fabric transaction involves three types of nodes:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: Hyperledger Fabric交易涉及三种类型的节点：
- en: '**The committing peer** is the node that maintains the ledger and state. The
    committing peer is the party that *commits* transactions and may hold the smart
    contract or chaincode.'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**提交对等方**是维护分类帐和状态的节点。提交对等方是*提交*交易并可能持有智能合约或链代码的一方。'
- en: '**The endorsing peer** is a specialized committing peer that can grant or deny
    endorsement of a transaction proposal. The endorsing peer has to hold the smart
    contract.'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**认可对等方**是一个专业的提交对等方，可以批准或否决交易提案的认可。认可对等方必须持有智能合约。'
- en: '**The ordering nodes** (service) communicate with the committing and peer nodes;
    their main function is to approve the inclusion of transaction blocks into the
    ledger. Unlike the committing peer and endorsing peer, the ordering nodes do not
    hold the smart contract or the ledger.'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**排序节点**（服务）与提交对等方节点进行通信；它们的主要功能是批准交易块被纳入分类帐。与提交对等方和认可对等方不同，排序节点不持有智能合约或分类帐。'
- en: 'Validation can be divided into two roles, endorsement and ordering:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 验证可以分为两种角色，认可和排序：
- en: Endorsing a transaction means verifying that it obeys a smart contract; endorsers
    sign the contract to complete this aspect of validation
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 签署交易意味着验证它是否遵守智能合约；背书人签署合同以完成这个验证方面
- en: Ordering verifies transactions for inclusion in the ledger; this form of validation
    helps to control what goes in the ledger and ensure its consistency
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 订购验证要包含到分类帐中的交易；这种形式的验证有助于控制录入分类帐的内容并确保其一致性
- en: What about chain code invocation? In a Hyperledger Fabric transaction, simulation
    (chaincode execution) and block validation/commit are separate.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 那么链码调用呢？在Hyperledger Fabric交易中，模拟（链码执行）和区块验证/提交是分开的。
- en: 'There are three phases involved in carrying out a chaincode operation (in other
    words, a business transaction) with Hyperledger Fabric:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 执行链码操作（换句话说，进行业务交易）涉及三个阶段；
- en: The first phase is chaincode operation execution through simulation on endorsing
    peers. It's possible to enable parallel simulation on endorsers to help improve
    concurrency and scalability since simulation won't update the blockchain state.
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一阶段是通过背书对等方的模拟执行链码操作。可以启用背书者的并行模拟以帮助提高并发性和可伸缩性，因为模拟不会更新区块链状态。
- en: Next, simulation determines the business transaction proposal, that is, the
    read set/write set, and broadcasts this to the ordering service.
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，模拟确定业务交易提案，即读取集/写入集，并将其广播到订购服务。
- en: A transaction proposal is then ordered in regard to others and broadcasts to
    committing peers (includes endorsing peers) who validate that its read set has
    not been modified since simulation and applies its write set automatically.
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，交易提案根据其他交易进行排序，并广播到提交对等方（包括背书对等方），他们验证其读取集在模拟后未被修改，并自动应用其写入集。
- en: 'Channels are also an important aspect of the transaction journey, since peers
    exchange messages using consensus by way of channels, and they ensure privacy
    between different ledgers. The following are a few notes regarding channels:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 通道也是交易过程中的一个重要方面，因为对等方通过通道以共识方式交换消息，并确保不同分类帐之间的隐私。以下是关于通道的一些注意事项：
- en: They don't have to be connected to by all nodes
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有节点都不必连接到它们
- en: Peers connect to channels through an access control policy
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对等方通过访问控制策略连接到通道
- en: The ordering services orders a transaction broadcast to a channel
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 订购服务对通道广播的交易进行排序
- en: Peers receive transactions in exactly the same order for a channel
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对等方按通道以完全相同的顺序接收交易
- en: Transactions are delivered in cryptographically linked blocks
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 交易以加密链接的区块形式交付
- en: Every peer validates the delivered blocks and commits them to the ledger
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个对等方都会验证交付的区块并将其提交到分类帐
- en: Hyperledger Fabric explored
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索Hyperledger Fabric
- en: '**Actors in the blockchain network**: A blockchain is a network-based infrastructure
    where network-centric design, development, deployment, management, and support
    constructs apply. It is therefore vital to understand various actors and their
    roles that interact with the blockchain network for various purposes such as management,
    support, business users, regulator, and so on:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '**区块链网络中的参与者**：区块链是一个基于网络的基础设施，其中应用网络中心化的设计、开发、部署、管理和支持构建。因此，了解与区块链网络进行交互以进行管理、支持、业务用户、监管等各种目的的各种参与者及其角色非常重要：'
- en: '![](img/df899e8f-20df-44c2-8061-896f674ce597.png)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
  zh: '![](img/df899e8f-20df-44c2-8061-896f674ce597.png)'
- en: 'Each actor has a role and entry point and defines a governance structure that
    aids in network governance, audit, and compliance requirements. Business network
    governance (covered in detail in the following points) is an important compliance
    and costs consideration. Users are the parties who are users of the blockchain.
    They create and distribute blockchain applications and perform operations using
    the blockchain. These actors are consistent, and are based on cloud computing
    actors and roles from ISO/IEC 17788:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 每个参与者都有一个角色和入口点，并定义了一个有助于网络治理、审计和合规要求的治理结构。业务网络治理（以下点中详细介绍）是一项重要的合规和成本考虑因素。用户是区块链的用户方。他们创建和分发区块链应用，并使用区块链执行操作。这些参与者是一致的，并基于ISO/IEC
    17788的云计算参与者和角色：
- en: '**Developers**: Blockchain developers are the actors who create applications
    for users (client-side) and develop the smart contracts (server-side) that interact
    with the blockchain, which are then used by blockchain users to initiate transactions.
    They also write code to enable the blockchain to interact with legacy applications.'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**开发人员**：区块链开发人员是为用户（客户端）创建应用程序的参与者，并开发与区块链交互的智能合约（服务器端），然后由区块链用户使用以启动交易。他们还编写代码以使区块链能够与传统应用程序交互。'
- en: '**Administrators**: Blockchain administrators perform administrative activities,
    such as deployment and configuration of the blockchain network or application.'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**管理员**：区块链管理员执行管理活动，如部署和配置区块链网络或应用程序。'
- en: '**Operators**: Blockchain operators are responsible for defining, creating,
    managing, and monitoring the blockchain network and application.'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**运营商**：区块链运营商负责定义、创建、管理和监控区块链网络和应用。'
- en: '**Auditors**: Blockchain auditors have the responsibility of reviewing blockchain
    transactions and validating their integrity from a business, legal, audit, and
    compliance perspective.'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**审计员**：区块链审计员负责审查区块链交易，并从业务、法律、审计和合规性的角度验证其完整性。'
- en: '**Business users**: This term refers to users operating in a business network.
    They interact with the blockchain using an application, but may not be aware of
    the blockchain since it will be an invisible transactional system.'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**业务用户**：此术语指在业务网络中操作的用户。他们使用应用程序与区块链交互，但可能不知道区块链，因为它将是一个不可见的交易系统。'
- en: Components in a blockchain network
  id: totrans-174
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 区块链网络中的组件
- en: In general, a blockchain system consists of a number of nodes, each of which
    has a local copy of a ledger. In most systems, the nodes belong to different organizations.
    The nodes communicate with each other in order to gain agreement on what should
    be in the ledger.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，区块链系统由许多节点组成，每个节点都有分类帐的本地副本。在大多数系统中，节点属于不同的组织。节点彼此通信以就分类帐内容达成一致。
- en: 'The process of gaining this agreement is called **consensus**, and there are
    a number of different algorithms that have been developed for this purpose. Users
    send transactionrequests to the blockchain in order to perform the operations
    the chain is designed to provide. Once a transaction is completed, a record of
    the transaction is added to one or more of the ledgers and can never be altered
    or removed. This property of the blockchain is called **immutability**. Cryptography
    is used to secure the blockchain itself and the communications between the elements
    of the blockchain system. It ensures that the ledger cannot be altered, except
    by the addition of new transactions. Cryptography provides integrity on messages
    from users or between nodes and ensures operations are only performed by authorized
    entities:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 获得这种一致性的过程称为**共识**，为此已经开发了许多不同的算法。用户向区块链发送交易请求以执行链设计的操作。一旦交易完成，交易记录将被添加到一个或多个分类帐中，并且永远不能被更改或删除。区块链的这种特性称为**不可变性**。密码学用于保护区块链本身以及区块链系统的各个元素之间的通信。它确保分类帐不能被更改，除非添加新的交易。密码学确保来自用户或节点之间的消息的完整性，并确保操作仅由授权实体执行：
- en: '![](img/ae5a8eed-daaa-4bc0-a7d2-82e0be23192a.png)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ae5a8eed-daaa-4bc0-a7d2-82e0be23192a.png)'
- en: 'The authority to perform transactions on a blockchain can use one of two models:
    permissioned or permissionless. In a permissioned blockchain, users must be enrolled
    in the blockchain before they are allowed to perform transactions. The enrollment
    process gives the user credentials that are used to identify the user when they
    perform transactions. In a permissionless blockchain, any person can perform transactions,
    but they are usually restricted from performing operations on any data but their
    own. Blockchain owners developed an executable software module called a **smart
    contract**, which is installed into the blockchain itself. When a user sends a
    transaction to the blockchain, it can invoke a smart contract module, which performs
    functions defined by the creator of the smart contract module.'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 在区块链上执行交易的权限可以采用两种模式之一：有权限或无权限。在有权限的区块链中，用户必须在允许执行交易前加入区块链。加入过程会给予用户凭证，这些凭证在用户执行交易时用于标识用户。在无权限的区块链中，任何人都可以执行交易，但通常被限制只能对自己的数据执行操作。区块链所有者开发了一个可执行的软件模块称为**智能合约**，它被安装到区块链中。当用户向区块链发送交易时，它可以调用智能合约模块，该模块执行由智能合约模块创建者定义的功能。
- en: Developer interaction
  id: totrans-179
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开发人员互动
- en: 'As discussed in the introduction of *Hyperledger Fabric Explored* section,
    blockchain developers can have many roles including creating applications for
    users (client-side) and developing smart contracts. Developers also write code
    to enable the blockchain to interact with legacy applications:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 如*Hyperledger Fabric Explored*章节的介绍中所述，区块链开发人员可以担任多种角色，包括为用户创建应用程序（客户端）和开发智能合约。开发人员还编写代码，使区块链能够与传统应用程序交互：
- en: '![](img/8d25b8f8-2745-4590-a4be-016a8e63b251.png)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8d25b8f8-2745-4590-a4be-016a8e63b251.png)'
- en: A blockchain developer's primary role is to create an application (and integration)
    and Smart Contracts and their respective interaction with ledgers and other enterprise
    systems of the business network and their participants. Due to the separation
    of the Hyperledger Fabric infrastructure, there is a clear separation between
    infrastructure constructs, such as peers, consensus, security, channels, policies,
    and developer-led activities, such as smart contract development, deployment,
    enterprise integration, API management, and front end application development.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链开发人员的主要角色是创建应用程序（和集成）和智能合约以及它们与企业网络和参与者的分类账和其他企业系统的交互。由于Hyperledger Fabric基础设施的分离，基础设施构造（如对等方、共识、安全、通道、策略）和开发人员领导的活动（如智能合约开发、部署、企业集成、API管理和前端应用程序开发）之间存在明确的分离。
- en: 'From a developer''s point of view, the following outline represents an example
    of developer interaction with Hyperledger Fabric constructs:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 从开发人员的角度来看，以下概述代表了开发人员与Hyperledger Fabric构造交互的一个例子：
- en: The developer creates an application and a smart contract
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开发人员创建应用程序和智能合约
- en: The application can invoke calls within the smart contract through an SDK
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序可以通过SDK调用智能合约内部的调用。
- en: 'The calls are processed by the business logic built into the smart contract
    through various commands and protocols:'
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这些调用通过内置于智能合约中的业务逻辑和各种命令和协议来处理：
- en: A `put` or `delete` command will go through the selected consensus protocol
    and will be added to the blockchain
  id: totrans-187
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`put`或`delete`命令将经过所选的共识协议，并将被添加到区块链中。'
- en: A `get` command can only read from the world state but is not recorded on the
    blockchain
  id: totrans-188
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get`命令只能从世界状态中读取，但不会记录在区块链上。'
- en: An application can access block information using rest APIs such as `get block
    height`
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序可以使用诸如`get block height`的rest API访问块信息。
- en: Note the use of delete here—delete can delete keys from the world state database,
    but not transactions from the blockchain, which we've already established are
    immutable.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意在此处使用了delete——delete可以从世界状态数据库中删除密钥，但不能删除区块链上的交易，因为我们已经确定这些交易是不可变的。
- en: 'The following diagram summarizes all key roles:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表总结了所有关键角色：
- en: '![](img/a9424939-cb18-403e-9fbd-e9f5f262042c.png)'
  id: totrans-192
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a9424939-cb18-403e-9fbd-e9f5f262042c.png)'
- en: Understanding governance in business networks powered by blockchain
  id: totrans-193
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解区块链驱动的商业网络中的治理
- en: Governance can be defined as the centralized or decentralized body whose sole
    responsibility is establishing a set of rules or laws in a given system to make
    binding decisions. Governance in blockchain networks comes with a set of challenges
    and, in this section, we want to discuss those challenges along with governance
    structures in blockchain networks. Within the context of blockchain, the topic
    of governance presents an interesting paradox.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 治理可以定义为中心化或分散式机构，其唯一责任是在给定系统中建立一套规则或法律，以作出约束性决定。在区块链网络中，治理带来一系列挑战，在本节中，我们想讨论这些挑战以及区块链网络中的治理结构。在区块链的背景下，治理的话题呈现出一个有趣的悖论。
- en: When a blockchain network is created, the governance structure is generally
    distributed, with input from the various stakeholders. Blockchain networks are
    characterized by decentralization and self-governance, with built-in control points
    and incentives to help maintain the right balance. Transactions go through a series
    of decentralized processing steps, with a decision that offers transaction finality
    as the output. This governance structure is based on incentive economics and consensus.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 当一个区块链网络被创建时，治理结构通常是分布式的，由各方利益相关者提供输入。区块链网络以去中心化和自我治理为特征，具有内置的控制点和激励机制，以帮助维持适当的平衡。交易经过一系列去中心化的处理步骤，决策作为输出提供交易的最终确定性。这种治理结构基于激励经济学和共识。
- en: Blockchain began with largely permissionless networks (for example, crypo-asset-based
    networks such as bitcoin, litecoin, and so on) that relied on technology-based
    systemic governance through incentives and coordination. This kind of systemic
    governance poses several challenges in the business world when it attempts to
    apply the tenets of blockchain. The enterprise world is highly regulated and therefore
    relies on permissioned blockchain models with checks and balances; this can become
    rather complicated given the various data regulations, fiduciary responsibilities,
    and the potential conflicts of interest among competing entities that are transacting
    together. There can't necessarily be the same kinds of incentives or coordination,
    due to confidentiality and privacy concerns.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链始于主要为无许可网络（例如，基于加密资产的网络，如比特币、莱特币等）的网络，依靠基于技术的系统治理通过激励和协调。当企业尝试应用区块链原则时，这种系统治理在商业世界中会带来一些挑战。企业世界受到严格监管，因此依靠具有制衡的许可区块链模型；考虑到各种数据法规、受托责任和正在进行交易的竞争实体之间的潜在利益冲突，这可能变得相当复杂。由于机密性和隐私问题，不能必然存在相同类型的激励或协调。
- en: The enterprise focus has often been on understanding blockchain technology and
    its potential impacts on business. Governance has now become an interesting emerging
    discipline in the enterprise blockchain world—and an important one. As you can
    see from the discussion of blockchain business models, there's a range of possible
    governance structures, from full decentralization and quasi-decentralization to
    fully centralized blockchain networks. The governance structure actually determines
    many other aspects of the blockchain adoption, from design to operations to the
    growth model. Business models and governance structures are close-knit and mutually
    dependent; both direct various facets of how a blockchain network operates.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 企业的重点通常是了解区块链技术及其对业务的潜在影响。治理现在已经成为企业区块链世界中一个有趣的新兴学科——也是一个重要的学科。从区块链商业模型的讨论中可以看出，存在各种可能的治理结构，从完全去中心化和准去中心化到完全集中化的区块链网络。治理结构实际上决定了区块链采用的许多其他方面，从设计到运营再到增长模型。商业模型和治理结构密切相连且相互依存；两者都直接影响区块链网络运作的各个方面。
- en: Governance structure and landscape
  id: totrans-198
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 治理结构和格局
- en: The kind of systemic governance that relies on incentives and coordination among
    network participants is inadequate for addressing more regulated industries and
    their use cases. So, I'm attempting to define a governance structure and landscape
    for the more traditional enterprise, which is a modular approach that leverages
    existing best practices.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 那种依靠网络参与者之间的激励和协调的系统治理对于解决更多受监管行业及其用例是不够的。因此，我试图为更传统的企业定义一个治理结构和格局，这是一种利用现有最佳实践的模块化方法。
- en: This model aims to facilitate progress and growth, but provide the necessary
    separation of participants in a network. The simplified governance structure I'll
    outline is built upon the core tenets of blockchain as well as principles of incentive,
    penalties, flexibility, delegation, and coordination. Keep in mind that the goal
    of leveraging blockchain is to develop networks of trust while enforcing certain
    rules of engagement. Generally, blockchain projects aim to motivate upgrades to
    technology and security and to penalize non-compliance, with the hope of ensuring
    continued participation and shared business benefits for the network powered by
    blockchain. The business governance model I again describe aids not only fair
    participation in such networks but also an equitable cost structure.  This section
    provides a high level context. We have discussed additional details in a chapter
    dedicated to Governance.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 这个模型旨在促进进步和增长，但提供了网络参与者的必要分离。我将概述的简化治理结构建立在区块链的核心原则以及激励、惩罚、灵活性、委托和协调的原则之上。请记住，利用区块链的目标是发展信任网络，同时强制执行某些参与规则。一般来说，区块链项目的目标是激励技术和安全的升级，并惩罚不遵守规定的行为，希望确保继续参与和共享区块链网络带来的商业利益。我再次描述的业务治理模型不仅有助于在这样的网络中公平参与，还有助于公平的成本结构。本节提供了一个高层次的背景。我们在专门讨论治理的章节中讨论了更多细节。
- en: Information technology governance
  id: totrans-201
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 信息技术治理
- en: The discipline of IT governance focuses on IT infrastructure, performance, cost
    structure, and risk. This creates some challenges in a decentralized blockchain
    network, since the governance framework should establish accountability to encourage
    desirable behavior and optimal functioning of the network's IT infrastructure.
    The technical design and infrastructure choices of the blockchain network ought
    to be able to adapt to the needs of its participants. Because blockchain networks
    thrive on at least some level of decentralization, IT governance should include
    distributed flexibility and distributed control.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: IT治理的学科专注于IT基础设施、性能、成本结构和风险。在分散的区块链网络中，这会带来一些挑战，因为治理框架应建立问责制，以鼓励良好行为和网络IT基础设施的最佳运行。区块链网络的技术设计和基础设施选择应能够适应参与者的需求。由于区块链网络在至少某种程度上是分散的，IT治理应包括分布式灵活性和分布式控制。
- en: 'IT governance should provide at least the following:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: IT治理应至少提供以下内容：
- en: A distributed IT management structure
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分布式IT管理结构
- en: A model for distributed maintenance, upgrades, and so on
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分布式维护、升级等模型
- en: Utilization of industry standards — COBIT, ITIL, ISO, CMMI, FAIR, and so on
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用行业标准——COBIT、ITIL、ISO、CMMI、FAIR等
- en: Resource optimization—this includes technology procurement, supplier-vendor
    relations, SLA management, skills, and talent management
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 资源优化——这包括技术采购、供应商关系、SLA管理、技能和人才管理
- en: Technology adoption and evaluation to keep up with technology evolution
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 技术采用和评估以跟上技术演进
- en: A network deployment strategy to encourage and enforce regular updates and upgrades
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络部署策略，以鼓励和强制定期更新和升级
- en: Network support services — IT SLA enforcement and membership services
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络支持服务——IT SLA执行和会员服务
- en: Risk optimization — **operational support services** (**OSSs**) and **business
    support services** (**BSSs**), IT infrastructure continuity services/planning,
    technology alignment to legal and regulatory requirements, and so on
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 风险优化——**运营支持服务**（**OSSs**）和**业务支持服务**（**BSSs**），IT基础设施连续服务/规划，技术与法律和法规要求的对齐，等等
- en: Blockchain network governance
  id: totrans-212
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 区块链网络治理
- en: 'Governance can involve the following:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 治理可以涉及以下内容：
- en: Managing participation in the network
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理参与网络
- en: Forming an equitable cost structure that's distributed fairly based on the activity
    of the participants
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 形成公平的成本结构，根据参与者的活动公平分配
- en: Allowing for like-minded participating entities to engage in transactions and
    value creation
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许志同道合的参与实体参与交易和价值创造
- en: Managing rules of engagement and social contracts with the aim of promoting
    fairness
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理参与规则和社会契约，以促进公平
- en: 'Governance of the blockchain network''s governance includes the following:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链网络治理包括以下内容：
- en: Onboarding and offboarding members
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 吸纳和退出成员
- en: Establishing a fair cost structure
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 建立公平的成本结构
- en: Detailing how data ownership works
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 详细说明数据所有权的工作方式
- en: Regulatory oversight and compliance reporting
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 监管监督和合规报告
- en: Managing a permissioning structure with central management and a voting process,
    a federated structure, and a delegated structure
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理具有中央管理和投票流程的许可结构，联邦结构和委派结构
- en: Managing business operations and SLAs
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理业务运营和SLA
- en: Network support services (the same as for IT governance)
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络支持服务（与IT治理相同）
- en: Risk optimization (the same as for IT governance)
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 风险优化（与IT治理相同）
- en: Business network governance
  id: totrans-227
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 商业网络治理
- en: Governing blockchain powered business networks will require a model that is,
    again, specific to the use case and industry, factoring in the evolution and particularities
    of that industry. This governance structure will be multi-organizational, and
    participating organizations need to have a wide understanding of how the network
    functions through their collective contributions in order to achieve the best
    outcomes. As new participants are added or removed, and the blockchain network
    evolves, its dynamics change, too.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 管理由区块链支持的业务网络将需要一个特定于用例和行业的模型，考虑该行业的发展和特殊情况。这种治理结构将是多组织的，并且参与组织需要通过他们的集体贡献对网络功能有广泛的理解，以实现最佳结果。随着新的参与者被添加或移除，并且区块链网络发展，其动态也会改变。
- en: The concept of co-creation implies bringing parties together to produce a mutually
    advantageous and valuable outcome. One example could be uniting a company with
    a group of customers to generate new ideas and hear fresh perspectives.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 共创的概念意味着将各方聚集在一起，产生互利和有价值的结果。一个例子可以是将一家公司与一群客户团结在一起，产生新的想法，并听取新的观点。
- en: 'What follows is a non-exhaustive list of what business network governance might
    include:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是商业网络治理可能包括的非尽量列表：
- en: Formulating business models, rules for how the network will operate, and legal
    charters
  id: totrans-231
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 制定商业模式，网络运作规则和法律章程
- en: Service management that is common/shared in the network, such as knowing your
    customer processes, audits, reporting, and so on
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络中通用的共享的服务管理，比如了解你的客户流程，审计，报告等
- en: Communication related to the network
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与网络相关的沟通
- en: Quality assurance and performance measurement
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 质量保证和绩效测量
- en: Monitoring and managing network security
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 监控和管理网络安全
- en: Plans for product and business network evolution
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 产品和业务网络发展计划
- en: Legal and regulatory framework enforcement
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 法律和监管框架的执行
- en: Strategies for ensuring compliance with industry-specific requirements
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保符合行业特定要求的策略
- en: Establishing stewards of the technology and network
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设立技术和网络的管理者
- en: The governance structure in a blockchain network can be an interesting challenge.
    As I've shown, there remains considerable debate about full decentralization,
    quasi-decentralization, and full centralization of blockchain networks, and this
    really hinges on the governance structure. By this, I mean that the governance
    structure of a blockchain network helps decide what kind of interaction, growth,
    technology choices, and operations are the best fit for that network. Blockchain,
    as I've stated before, is a platform that enables co-creation, and the new synergies
    that are generated from it will require some management through SLAs and a robust
    governance structure. Governance will be covered in detail in *[Chapter 10](e5d2a492-ff3d-494b-bb36-cee75a52a832.xhtml)*,
    *Governance, Necessary Evil of Regulated Industries*.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链网络的治理结构可能是一个有趣的挑战。正如我所展示的，关于区块链网络的完全去中心化，准去中心化和完全中心化仍然存在着相当大的辩论，这实际上取决于治理结构。我的意思是，区块链网络的治理结构有助于决定什么样的互动，发展，技术选择和运营最适合该网络。正如我之前所述，区块链是一个能够实现共创的平台，从中产生的新的协同效应将需要通过SLAs和健全的治理结构进行一些管理。治理将在*[第10章](e5d2a492-ff3d-494b-bb36-cee75a52a832.xhtml)*中进行详细讨论，*治理，受监管行业的必要之恶*。
- en: Summary
  id: totrans-241
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: All of this helps you attract new participants to the network, as well as sustain
    the confidence of founding and existing participants, all while maintaining business
    benefits and value.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些都有助于吸引新的网络参与者，以及维持创始和现有参与者的信心，同时保持商业利益和价值。
- en: The business models and governance structures depend on each other to properly
    govern the operation of blockchain networks. A carefully planned governance model
    will ensure harmony between the involved entities, who may function as competitors,
    co-creators, or collaborators at different times.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 业务模型和治理结构相互依赖，以正确管理区块链网络的运作。一个精心策划的治理模型将确保涉及的实体之间的和谐，它们可能在不同时间充当竞争者、共同创造者或合作者。
