- en: Introduction to Blockchain and Bitcoin
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 区块链和比特币介绍
- en: In this chapter, we will take a step-by-step approach to understanding the principles
    of "Bitcoin" and "blockchain", and their various features and characteristics.
    The buzzwords Bitcoin and blockchain relate to emerging technologies that have
    taken the world by storm. As we progress through the chapter, we will cover the
    fundamentals of these unique technologies in a detailed manner. The chapter will
    also take you through the essence of cryptography and how cryptocurrencies are
    using this innovation as a foundation. We will also look into the history of Bitcoin,
    the alternate cryptocurrencies available, and the various Bitcoin wallets, and
    we will get an understanding of the structuring of the Bitcoin block header. When
    it comes to blockchain, we will go through the different types of blockchain,
    blockchain structure, its various workings and features, the challenges faced,
    the various platforms available for blockchain, and more.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将采用一步一步的方法来了解"比特币"和"区块链"的原则，以及它们的各种特征和特性。与新兴技术相关的热词比特币和区块链已经席卷了世界。随着我们在本章的进展，我们将详细介绍这些独特技术的基本知识。本章还将带您了解密码学的本质，以及加密货币如何将这一创新作为基础。我们还将研究比特币的历史，可用的备选加密货币，以及各种比特币钱包，了解比特币区块头的结构。在涉及区块链方面，我们将了解不同类型的区块链、区块链结构、它的各种运作和特性、所面临的挑战、可用于区块链的各种平台等等。
- en: 'In this chapter, we will look into the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将了解以下主题：
- en: Cryptography and cryptocurrency
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密码学和加密货币
- en: History and introduction to Bitcoin
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 比特币的历史和介绍
- en: An introduction to blockchain
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 区块链介绍
- en: Comparing private, public, and consortium blockchains
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 比较私有、公共和联盟区块链
- en: An introduction to cryptography and cryptocurrency
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 密码学和加密货币介绍
- en: The blockchain technology is the backbone of cryptocurrency and it uses cryptography
    to keep the data secure. In this section of the chapter, we will discuss cryptography,
    cryptocurrency, and how cryptography is used in cryptocurrency implementation.
    We will also look into the workings of fiat currency cryptography, energy use
    in cryptocurrency, and also the security features of cryptography that are used. We
    will learn everything we need to know about decentralized digital money and its
    underlying architecture.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链技术是加密货币的支柱，它使用密码学来保持数据安全。在本章的这一部分，我们将讨论密码学、加密货币，以及密码学在加密货币实现中的应用。我们还将研究法定货币密码学的运作、加密货币的能源使用，以及密码学所使用的安全特性。我们将学习关于去中心化数字货币及其基础架构的一切知识。
- en: As we browse through the various parts of this section, we will learn about
    the history of Bitcoin, its alternative currencies, Bitcoin basics, and the technical
    operation of Bitcoin; then, we will browse through the technical foundation of
    the blockchain, the fundamentals of cryptography, and how it keeps data secure. From
    there, we will move on to understanding blockchain, its features, the underlying
    architecture on top of each Bitcoin, and how cryptocurrencies are implemented.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们浏览本节的各个部分时，我们将了解比特币的历史、其替代货币、比特币基础知识以及比特币的技术运作；然后，我们将浏览区块链的技术基础、密码学的基础知识，以及它如何保持数据安全。接下来，我们将继续了解区块链、它的特性，每个比特币之上的基础架构，以及如何实现加密货币。
- en: Workings and security of fiat currencies
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 法定货币的运作和安全性
- en: Before we understand cryptocurrency, let's first look at some basic currencies
    used around the world. These currencies are also known as fiat currencies.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在了解加密货币之前，让我们首先看一些世界各地使用的基本货币。这些货币也被称为法定货币。
- en: 'They are shown in the following diagram:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 它们在下图中显示：
- en: '![](img/3e1e8ca9-83db-4687-a528-96f127cbfc40.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3e1e8ca9-83db-4687-a528-96f127cbfc40.png)'
- en: 'Some of the characteristics of fiat currencies are as follows:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 法定货币的一些特征如下：
- en: These are owned by the governments of countries
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这些由各国政府持有
- en: They are centrally controlled through banks or legal entities
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们通过银行或法定实体进行集中控制
- en: They are inflationary, meaning the value of a currency decreases
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们是通货膨胀的，意味着货币的价值会下降
- en: They include various security properties to prevent counterfeiting and cheating,
    but it is not impossible to counterfeit them
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们包括各种安全属性，以防止伪造和作弊，但伪造它们并非不可能
- en: 'Since it is not impossible to counterfeit currencies, law enforcement comes
    into the picture to stop and prosecute those involved in counterfeiting fiat currencies.
    We will now look at various security features that are implemented in fiat currencies,
    as shown in the following diagram:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 由于伪造货币并非不可能，执法部门介入阻止并起诉涉及伪造法定货币的人。我们现在将看看在法定货币中实施的各种安全特性，如下图所示：
- en: '![](img/98b8c884-dc21-4927-a349-ed0e3d1bbc71.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](img/98b8c884-dc21-4927-a349-ed0e3d1bbc71.png)'
- en: You will find two watermarks. You'll also see micro lettering and identification
    marks being implemented. Most of the time, fluorescent ink is used on notes for
    detecting notes that are fake.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 你会发现两个水印。你还会看到微型字和身份标识标记被实施。大部分时间，荧光墨水被用于检测伪造的钞票。
- en: Understanding cryptocurrency and its uses
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解加密货币及其用途
- en: Cryptocurrency is a very interesting and intriguing topic that has become a
    global phenomenon. It is different from all the currencies that are found all
    over the world. Right from the working of cryptocurrency, to who owns or controls
    it, its benefits and limitations, its use and much more, are all based on new
    ideas and processes. Let's now see a brief overview of the various features of
    cryptocurrency.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 加密货币是一个非常有趣和引人入胜的话题，已成为全球现象。它不同于世界各地找到的所有货币。从加密货币的工作原理，到谁拥有或控制它，其优点和局限性，其用途等等，都基于新的思想和流程。现在让我们简要概述一下加密货币的各种特征。
- en: 'The main features of cryptocurrency are as follows:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 加密货币的主要特点如下：
- en: It is a **digital asset** used as a medium of exchange
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它是用作交换媒介的**数字资产**
- en: It secures transactions and controls supply by using **cryptography**
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它通过使用**密码学**来保护交易并控制供应。
- en: It is a subset of **alternative currencies**
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它是**替代货币**的一个子集
- en: In 2008, the first **decentralized cryptocurrency** was conceptualized
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`2008`年，第一个**去中心化加密货币**的概念被构想出来
- en: Cryptocurrency is **digital money**, while the underlying technology that enables
    the moving of digital coins or assets between individuals is called **blockchain**
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加密货币是**数字货币**，而使数字货币或资产在个人之间流动的基础技术称为**区块链**
- en: Hash function
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 哈希函数
- en: The main cryptography techniques used in cryptocurrency are a hash function
    and a digital signature.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在加密货币中使用的主要密码学技术是哈希函数和数字签名。
- en: 'Let''s look at each of these briefly. The hash function is a mathematical function
    with the following properties:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们简要地看一下每一个。哈希函数是具有以下特性的数学函数：
- en: Any input that we provide, be it a string, number, floating number, or anything,
    can be of any size
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们提供的任何输入，无论是字符串、数字、浮点数还是其他任何东西，都可以是任何大小
- en: It produces a fixed-size output such as a 128-bit hash outcome or even a 256-bit
    outcome
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它产生固定大小的输出，例如`128`位哈希结果，甚至是`256`位结果。
- en: It is collision-resistant
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它是抗碰撞的
- en: It hides the data within it
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它隐藏其中的数据。
- en: 'Let''s now look at an example of a hash function in the following diagram:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看一个哈希函数的例子，如下图所示：
- en: '![](img/19bf1a3f-4e28-4e2b-9927-1f30d72a8043.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](img/19bf1a3f-4e28-4e2b-9927-1f30d72a8043.png)'
- en: Let's look at the hash function being used here. In the preceding diagram, we
    gave** Fox**, one string, as an input to the encryption module and we applied
    a hash function to it. It gives a specific fixed hash outcome, which is also known
    as a **digest hash sum**. Let's say we pass another statement that says **The
    red fox runs across the ice** and we apply a hash function to it. It gives us
    a specific hash sum, also known as a **digest**. Then, we add another statement, **The
    red fox walks across the ice**, and we see that it changes the hash function as
    the input has been changed. This is the key feature that the hash function brings.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看这里使用的哈希函数。在前面的图表中，我们给了**Fox**一个字符串作为输入，并将哈希函数应用于它。它给出了一个特定的固定哈希结果，也被称为**摘要哈希值**。假设我们传递另一个语句，说**The
    red fox runs across the ice**，并对其应用哈希函数。它给出了一个特定的哈希值，也称为**摘要**。然后，我们添加另一个语句，**The
    red fox walks across the ice**，我们看到它改变了哈希函数，因为输入已经改变。这是哈希函数带来的关键特性。
- en: Digital signature
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数字签名
- en: This is the second building block of cryptocurrency and is digitally analogous
    to the hand written signatures that we usually make.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这是加密货币的第二个构建模块，数字上类似于我们通常进行的手写签名。
- en: 'The properties of the digital signature are as follows:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 数字签名的特性如下：
- en: You can create your own signatures, but they can be verified by another person
    too
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以创建自己的签名，但也可以由另一个人验证
- en: The signature is tied to a particular document or message so that it cannot
    be used again and again for different documents and messages
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 签名与特定文档或消息绑定，以便不能将其用于不同的文档和消息。
- en: 'Let''s now look at an example of a digital signature in the following diagram:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们在下面的图表中看一个数字签名的示例：
- en: '![](img/50c6acfc-01a1-4615-8fb1-729272ae2e43.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/50c6acfc-01a1-4615-8fb1-729272ae2e43.png)'
- en: Let's take an example and say that there is a string in the document which states
    that "**I agree to pay $5000 for the software**". Since this is the document that
    is being signed, we first apply a hash function to it. It gives us a hash or digest
    of the document, which is again fixed in size. Then, we apply our private key,
    or a specific key, to encrypt it and we get the outcome as a digital signature.
    This digital signature is signed specifically for this input, which states that
    "I agreed to pay $5,000 for the software".
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们举个例子，假设文档中有一个字符串，其中声明“**我同意支付$5000购买软件**”。由于这是被签署的文档，我们首先对其应用哈希函数。它给我们提供了文档的哈希或摘要，其大小再次固定。然后，我们应用我们的私钥或特定密钥对其进行加密，得到的结果是数字签名。此数字签名专门针对这个输入进行签名，其声明“我同意支付$5,000购买软件”。
- en: Here, we saw how cryptography and cryptocurrency are digital assets that are
    widely used. We also saw how cryptocurrency uses cryptography and its techniques,
    such as hash functions and digital signatures.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们看到了密码学和加密货币是广泛使用的数字资产。我们还看到了加密货币如何使用密码学及其技术，如哈希函数和数字签名。
- en: An introduction to Bitcoin
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 对比特币的介绍
- en: Bitcoin is the first decentralized digital currency, and as such it is a revolutionary
    technology invention. It changed the way we compute things and the way we operate
    software and computers. Bitcoin and blockchain are considered to be the next big
    wave of change after the internet.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 比特币是第一个去中心化的数字货币，因此它是一项革命性的技术发明。它改变了我们计算事物的方式以及我们操作软件和计算机的方式。比特币和区块链被认为是继互联网之后的下一个重大变革浪潮。
- en: 'Now, let''s look at the following properties of Bitcoin:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看比特币的以下属性：
- en: It's an international network of payments.
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它是一个国际支付网络。
- en: It uses cryptography to control its creation and management, rather than relying
    on central authorities such as governments, banks, union territories, or intermediaries.
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它使用密码学来控制其创建和管理，而不是依赖于政府、银行、联合领土或中介等中央权威。
- en: It's not printed but is produced by people using software that solves mathematical
    problems.
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它不是印刷出来的，而是由使用软件解决数学问题的人产生的。
- en: It is controlled and limited in supply, which arrests the hyperinflation problem.
    For example, whenever African countries were short of currency notes, they had
    to print more notes, which resulted in hyperinflation and brought the value of
    the currency down.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它受到控制，并且供应量有限，这抑制了通货膨胀问题。例如，每当非洲国家缺少货币票据时，它们不得不印刷更多的票据，这导致了通货膨胀，并使货币价值下降。
- en: Since the arrival of Bitcoin, the way Bitcoin programs are written means there
    will always be a maximum of 21 million Bitcoins available across the globe. The
    moment 21 million Bitcoins have been mined, the program will not generate any
    more new Bitcoins. Hence, Bitcoins will be limited in supply and this will arrest
    the problem of hyperinflation.
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自比特币问世以来，比特币程序的编写方式意味着全球范围内始终只有 2100 万比特币。一旦挖出 2100 万比特币，程序将不再生成任何新的比特币。因此，比特币将供应有限，这将遏制通货膨胀问题。
- en: History of Bitcoin
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 比特币的历史
- en: Bitcoin was conceptualized by Satoshi Nakamoto in 2008. We do not know whether
    it is a person or a group of people. This anonymous person or group of persons
    still remains a mystery. What we know is that Nakamoto has claimed to be a man
    living in Japan born on April 15^(th), 1975\. However, there are a lot of theories
    and speculation about the identity of Nakamoto. Some people say that the identity
    of Nakamoto is based on a number of cryptography and computer science experts
    living in the US and the EU, not necessarily Japanese people. In November 2017,
    Nakamoto was believed to own up to roughly 1 million Bitcoins, the value of this
    1 million comes to be 7.2 billion US dollars, which is a huge amount of money
    owned by someone who is not known to anybody in the world.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 比特币是由中本聪在2008年概念化的。我们不知道中本聪是一个人还是一群人。这个匿名的人或一群人仍然是一个谜。我们所知道的是，中本聪声称自己是一个于1975年4月15日出生在日本的男子。然而，有很多关于中本聪身份的理论和揣测。有些人说，中本聪的身份是基于美国和欧盟的密码学和计算机科学专家，不一定是日本人。在2017年11月，据信中本聪拥有大约100万比特币，这100万的价值为72亿美元，这是一个未知于世界任何人拥有的巨额财富。
- en: Alternative cryptocurrencies to Bitcoin
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 比特币的替代加密货币
- en: Altcoins is an alternate cryptocurrency to Bitcoin. Once Bitcoin became popular,
    people realized the value, robustness, and flexibility Bitcoin brought and also
    started liking the fact that Bitcoin appreciated in value. They simply took the
    source code of the Bitcoin protocol available from GitHub repositories, forked
    it, modified it as per their needs, and created alternative cryptocurrencies. With
    the increasing popularity of Bitcoin, the usage and rate of Bitcoin have skyrocketed.
    Leaving that aside, the next question that arises is "how do we store or possess
    this virtual currency securely in digital form?".
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: Altcoins是比特币的替代加密货币。一旦比特币变得受欢迎，人们意识到比特币带来的价值、稳健性和灵活性，也开始喜欢比特币升值的事实。他们简单地使用GitHub存储库中可用的比特币协议源代码，分叉它，根据他们的需求修改它，并创建替代加密货币。随着比特币的日益普及，比特币的使用和价值也飙升。抛开这些不谈，接下来出现的问题是“我们如何安全地在数字形式中存储或拥有这种虚拟货币？”。
- en: Bitcoin wallets
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 比特币钱包
- en: There are several types of wallet available, in which we can hold our Bitcoins
    safely. Each of these wallets has their own function and ways to operate.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种类型的钱包可供选择，我们可以安全地保存比特币。每种钱包都有自己的功能和操作方式。
- en: 'The different kinds of the wallet are as follows:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 不同类型的钱包如下：
- en: '**Software wallet**: The software wallet is a Bitcoin application that sits
    on your computer''s hard drive and allows you to completely control and secure your
    Bitcoins. Bitcoin Armory is an example of a software wallet and is supposed to
    be the most stable and secure wallet of all.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**软件钱包**：软件钱包是安装在计算机硬盘上的比特币应用程序，可以完全控制和确保你的比特币安全。Bitcoin Armory是软件钱包的一个例子，被认为是所有钱包中最稳定和安全的。'
- en: '**Web wallet**: The next type of wallet is a web wallet. Web wallets are more
    convenient than software wallets since they can be accessed to use your funds,
    Bitcoins, or assets from any device. So, you can access your web wallet on your
    Android or iOS device, your desktop and even on the internet.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**网络钱包**：下一种钱包类型是网络钱包。与软件钱包相比，网络钱包更便利，因为可以从任何设备访问并使用你的资金、比特币或资产。因此，你可以在安卓或iOS设备、台式电脑甚至互联网上访问你的网络钱包。'
- en: '**Cold wallet**: The next type of wallet is called a cold wallet. Cold wallets
    are simply any kind of Bitcoin wallet that is not connected to the internet. These
    can be in paper form, or you can have wallets on USB drives as well.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**冷钱包**：下一种类型的钱包被称为冷钱包。冷钱包只是任何不连接到互联网的比特币钱包。这些可以是纸质形式的，或者你也可以在USB驱动器上拥有钱包。'
- en: '**Brain wallet**: The next type of wallet is the brain wallet. The brain wallet
    has its address generated by a computer program by hashing the passphrase with
    words that the user enters.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**脑钱包**：脑钱包是下一种类型的钱包。脑钱包的地址是通过计算机程序通过对用户输入的口令进行哈希处理来生成的。'
- en: '**Hardware wallet**: The next type of wallet is the hardware wallet. The hardware
    wallet can only be accessed through physical contact with the wallet by the designated
    person, who owns the wallet. It stores the user''s private keys in a secure hardware
    drive that is accessible only to the user and usually uses a fingerprint scanner
    or biometrics to access it.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**硬件钱包**: 下一种钱包类型就是硬件钱包。硬件钱包只能通过持有者与钱包的实际接触来访问。它将用户的私钥存储在安全的硬件驱动器中，只有用户可以访问，通常使用指纹扫描仪或生物识别来访问。'
- en: An introduction to the blockchain
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 区块链简介
- en: 'In this section, we will look at the architecture of blockchain, how it works,
    and what the salient features are that make it so disruptive. Blockchain was created
    by Satoshi Nakamoto as an infrastructure for Bitcoin and it is treated as the
    biggest thing since the internet. Blockchain, at a high level, consists of three
    major components, which are shown in the following diagram:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将看看区块链的架构，它是如何工作的，以及使其如此颠覆性的突出特点。区块链是由中本聪创建的比特币基础设施，并且被视为自互联网以来最重大的事物。在高层次上，区块链包括三个主要组件，如下图所示：
- en: '![](img/c6208c57-ec4b-423b-ab46-0e4a9b15546a.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c6208c57-ec4b-423b-ab46-0e4a9b15546a.png)'
- en: 'Let''s now look into the following three major components of blockchain:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来看看区块链的以下三个主要组成部分：
- en: '**P2P Network**: A **p****eer-to-peer network** (**P2P**) helps maintain a
    consistent copy of the distributed ledger. All the transactions that are captured
    on the blockchain in the form of blocks are maintained across the network of nodes
    running the blocks and programs by the distributed ledger.'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**P2P 网络**: 一个**对等网络**(**P2P**)有助于维护一个分布式账本的一致拷贝。所有以区块链形式捕获的交易都由运行区块和程序的节点网络维护的。'
- en: '**Private Key Cryptography**: This component is used by blockchain for the
    security and hash functions that make it immutable.'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**私钥加密**: 这个组件由区块链用于安全性和使其不可变的哈希函数。'
- en: '**Blockchain Program**: This component is used by blockchain as a protocol
    to execute steps that make it secure.'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**区块链程序**: 这个组件由区块链作为协议使用来执行使其安全的步骤。'
- en: Workings of blockchain
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 区块链的工作方式
- en: 'Now, let''s look at how a blockchain implementation works and what all the
    things are that are involved in completing the flow of execution. Let''s take
    the example of a Bitcoin, shown in the following workflow for blockchain:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来看看区块链实现是如何运作的，以及完成执行流的所涉及的所有事物。让我们以比特币为例，在下面的区块链工作流程中展示：
- en: '![](img/ef741a20-8c1a-4ad0-94d9-d53f9c0d065c.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ef741a20-8c1a-4ad0-94d9-d53f9c0d065c.png)'
- en: 'In the preceding diagram, we see how blockchain works and the steps mentioned
    are as follows:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的图中，我们看到区块链的工作方式，并且提到的步骤如下：
- en: Let's say someone requests a transaction in Bitcoin; for example, person A wants
    to send Bitcoin to person B. That person or entity requests a transaction that
    results in debiting person A's wallet and crediting person B's wallet with one
    Bitcoin.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 假设有人要求在比特币中进行交易；例如，A想将比特币发送给B。那个人或实体请求一笔交易，导致从A的钱包中扣除一比特币并向B的钱包存入一比特币。
- en: Now, this requested transaction is broadcasted to the P2P network, consisting
    of computers known as nodes, which are spread across the globe.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，这个请求的交易被广播到遍布全球的计算机节点网络，这些计算机节点被称为节点。
- en: Now, once the transaction is propagated, the transaction is picked up by the
    network of nodes, they validate the nodes that are running the blockchain programs,
    and they validate the transaction and the user status using known algorithms that
    are common across all nodes.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，一旦交易被传播，交易就会被节点网络接收，它们通过运行区块链程序的节点来验证交易和用户状态，使用在所有节点上通用的已知算法。
- en: In our example, we talked about person A sending one Bitcoin to person B, which
    involves the cryptocurrency as well. The verification part also involves checking
    whether person A initiating the transaction for one Bitcoin really owns that Bitcoin
    or not.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在我们的例子中，我们谈到A发送一比特币给B，这也涉及加密货币。验证部分还涉及检查A是否真正拥有该比特币。
- en: One must avoid double booking and fake transactions altogether. Verification
    may also involve contracts, records, agreements, or documents that need verification.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '必须避免重复预订和伪造交易。验证还可能涉及需要验证的合同、记录、协议或文件。 '
- en: Once verified, the transaction is then combined with other transactions to create
    a new block of data for a ledger. This freshly created block of a series of transactions
    then gets added to an existing blockchain in a way that is permanent (it's unalterable).
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦验证完成，交易就会与其他交易合并，以创建新的数据块用于分类帐。然后，这个新创建的一系列交易块会以永久的方式（不可更改）添加到现有的区块链中。
- en: With this block added to the blockchain, the transaction is complete.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加了这个区块到区块链后，交易就完成了。
- en: Once the block is added, it remains there for the rest of the blockchain's life.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦添加了区块，它将一直保留在区块链的余生中。
- en: Features of blockchain
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 区块链的特点
- en: 'We will now discuss the following features of blockchain:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将讨论区块链的以下特性：
- en: '**Secure**: It is really impossible for anyone to tamper with transactions
    or ledger records present in the blockchain, which makes it more secure, so it
    is seen as a reliable source of information.'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**安全的**：任何人都无法篡改区块链中的交易或分类帐记录，这使得它更加安全，因此被视为可靠的信息来源。'
- en: '**Global reach**: Blockchain has been adopted worldwide and has the backing
    of many investors from banking and non-banking sectors, which makes it a globally
    accepted technology stack.'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**全球范围**：区块链已在全球范围内得到采用，并得到了来自银行和非银行领域的许多投资者的支持，这使得它成为一种全球接受的技术堆栈。'
- en: '**Automated operations**: Operations are fully automated through software.
    Private companies are not needed to handle operations, which is why there is no
    mediation required to carry out the transactions, and trust is assured, so people
    can carry out their own transactions.'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自动化操作**：操作完全通过软件自动化。不需要私人公司处理操作，因此无需进行任何调解即可进行交易，并且保证了信任，因此人们可以自行进行交易。'
- en: '**Open source**: Blockchain is an open source technology. All the operations
    are carried out by the open source community.'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**开源的**：区块链是一种开源技术。所有的操作都是由开源社区进行的。'
- en: '**Distributed**: Blockchain works in a distributed mode, in which records are
    stored in all nodes in the network. If one node goes down, it doesn''t impact
    any other nodes or any other records, because they are globally distributed across
    all the nodes.'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分布式的**：区块链以分布式模式工作，其中记录存储在网络中的所有节点中。如果一个节点崩溃了，它不会影响任何其他节点或任何其他记录，因为它们是全球分布在所有节点之间的。'
- en: '**Flexible**: Blockchain is programmable, using basic programming concepts
    and programming semantics, which makes blockchain very flexible.'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**灵活的**：区块链是可编程的，使用基本的编程概念和编程语义，这使得区块链非常灵活。'
- en: Structure of blockchain
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 区块链的结构
- en: 'In this section, we will learn about the following aspects of blockchain: its
    structure; its building blocks; and its core parts that make it disruptive, robust,
    strong, and tamperproof.'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们将学习区块链的以下方面：其结构；其构建模块；以及使其具有颠覆性、强大、坚固和防篡改的核心部分。
- en: Let's have a look at the structure of the blockchain. The blockchain structure
    is very similar to that of **linked lists** or **binary trees**. Linked lists
    or binary trees are linked to each other using pointers, which point to the previous
    or next list elements on the nodes in the linked list. The structure of blockchain
    is not really different from that of binary trees, but the major difference is
    that blockchain is tamperproof and it is also very easy to find out if any tampering
    has taken place.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一下区块链的结构。区块链的结构与**链表**或**二叉树**非常相似。链表或二叉树通过指针连接到彼此，这些指针指向链表中节点上的前一个或下一个列表元素。区块链的结构与二叉树的结构并没有真正的不同，但主要的区别在于区块链是防篡改的，而且很容易发现是否发生了任何篡改。
- en: 'In the following diagram, we will look at a representation of how blockchain
    is constructed and how it is a linked list:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在下图中，我们将看到区块链是如何构建的以及它是如何成为一个链接列表的表示：
- en: '![](img/85d5ab41-6284-4798-8862-b97c1fed5991.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](img/85d5ab41-6284-4798-8862-b97c1fed5991.png)'
- en: Let's now discuss the structure and elements of the blockchain.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们讨论一下区块链的结构和要素。
- en: The blockchain is a linked list that is built with hash pointers instead of
    pointers. This is the exact reason why blockchain, though it resembles a linked
    list, is different because, in the linked list we have been using the pointers
    to point to previous nodes for the elements in the lists, but in the case of the
    blockchain, the pointers are hash pointers and not just simple pointers.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链是一个使用哈希指针而不是指针构建的链表。这正是为什么尽管区块链类似于链表，但不同的原因，因为在链表中，我们一直使用指针指向列表中元素的前一个节点，但在区块链的情况下，指针是哈希指针，而不仅仅是简单的指针。
- en: So, typically, any block in the blockchain consists of three parts, or feet
    such as a **Header**, **Merkle**, and **Transaction's Id list**. This is a newly
    created block.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，通常，区块链中的任何块由三部分或三脚组成，如**标头**、**Merkle**和**交易 ID 列表**。这是一个新创建的区块。
- en: 'We can see the structure of blockchain in the following diagram:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在以下图表中看到区块链的结构：
- en: '![](img/1c839415-25d0-4106-bc5a-752eb5141b1f.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1c839415-25d0-4106-bc5a-752eb5141b1f.png)'
- en: 'We will now look into the following blocks and their elements:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将查看以下区块及其元素：
- en: '**Header**: This block contains the version information of the block, the nonce,
    the previous block ID, and the timestamp that is being hashed again at the time
    the block is created.'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**标头**：此块包含块的版本信息、随机数、上一个块 ID 和创建块时再次进行哈希处理的时间戳。'
- en: '**Merkle**: This block is a hash built from the block''s transaction identifiers.'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Merkle**：此块是由块的交易标识符构建的哈希。'
- en: '**Transaction''s Id list**: This block represents the transactions themselves.
    It''s a list of records, identification hashes, that are included in the block''s
    Merkle tree.'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**交易 ID 列表**：此块代表交易本身。它是块的 Merkle 树中包含的记录、标识哈希的列表。'
- en: The block is then created with all of the preceding details. This newly created
    block gets added to the blockchain.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 然后使用所有前述详细信息创建区块。这个新创建的区块被添加到区块链中。
- en: 'Now, let''s look at what the Merkle tree is, as follows:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看一下 Merkle 树是什么，如下所示：
- en: In the blockchain structure, it's also known as a binary hash tree. It's a data
    structure used for summarizing and verifying the integrity of large sets of data.
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在区块链结构中，它也被称为二进制哈希树。它是用于摘要和验证大型数据集完整性的数据结构。
- en: It not only summarizes the data that is being captured on a particular block,
    but it also verifies the integrity of the data, which makes sure that the data
    represented in the block is integrated and not tampered with. It contains cryptographic
    hashes, which are used to make sure integrity is maintained across the block.
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它不仅总结了特定块上捕获的数据，还验证了数据的完整性，从而确保块中表示的数据是完整且未被篡改的。它包含用于确保跨块维护完整性的密码哈希。
- en: It's an upside-down tree where the root is at the top and the leaves are at
    the bottom.
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它是一棵颠倒的树，根在顶部，叶子在底部。
- en: 'Now, let''s look at a representation of the Merkle tree in the following diagram:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看一下以下图表中 Merkle 树的表示：
- en: '![](img/56f3d09e-826f-47ab-b1f3-419dfdbc805a.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![](img/56f3d09e-826f-47ab-b1f3-419dfdbc805a.png)'
- en: 'Here is a brief overview of what the top hash, data blocks, and Merkle root
    stand for, as follows:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是对顶部哈希、数据块和 Merkle 根代表的简要概述：
- en: In the preceding diagram, we can see **Top Hash, **which is the root of the
    Merkle tree, and there are leaf nodes or leaves that make up the entire tree.
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在上述图表中，我们可以看到**顶部哈希**，它是 Merkle 树的根，还有组成整个树的叶节点或叶子。
- en: '**Data Blocks** are transactions that have been captured and hashed. They are
    paired and hashed multiple times, and that''s how you reach the top of the Merkle
    tree.'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据块**是已捕获和哈希的交易。它们被成对哈希多次，这就是你到达 Merkle 树顶部的方式。'
- en: A block of one or more new records is collected, and such records are then paired
    and hashed together multiple times until a single hash remains. This single hash
    is called the **Merkle root** of that Merkle tree.
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 收集一个或多个新记录的块，然后将这些记录成对进行哈希处理多次，直到仅剩下一个哈希。这个单一的哈希称为该 Merkle 树的**Merkle 根**。
- en: If any change or tampering occurs in any part of the transaction data, we can
    see this compromise in a bold and clear manner. Hence, the Merkle tree is important
    in the implementation of blockchain and is a major contributor to making sure
    that blockchain data has not been tampered with.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 如果交易数据的任何部分发生更改或篡改，我们可以清晰明了地看到这种妥协。因此，Merkle 树在区块链的实施中非常重要，并且是确保区块链数据没有被篡改的主要贡献者。
- en: Structuring the Bitcoin block header
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构造比特币区块头
- en: 'Now, we will look into the structure of the Bitcoin block header, in which
    the header consists of a block and each block holds the following three sets of
    block metadata:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将看一下比特币区块头的结构，其中头包含一个区块，每个区块都包含以下三组区块元数据：
- en: A reference to a previous block hash
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对先前块哈希的引用
- en: The difficulty, timestamp, and nonce parts of the header
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 头部的难度、时间戳和随机数部分
- en: The Merkle root
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Merkle根
- en: 'Let''s look at the various terms represented in the following diagram:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看以下图表中表示的各种术语：
- en: '![](img/c6e8efce-ffbb-4a16-a0e0-5292319aa6ab.png)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c6e8efce-ffbb-4a16-a0e0-5292319aa6ab.png)'
- en: 'The following is an elaboration of the terms mentioned in the preceding diagram:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是前面图表中提到的术语的详细说明：
- en: '**Version**: The first part of the header is the **4 bytes** of version. A
    version number tracks software protocol upgrades. It is really important to capture
    that data as part of the block itself because, if there are any changes made in
    subsequent versions of the program, it becomes necessary to capture which program
    or node is running each program to send the transactions and blocks across the
    internet.'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**版本**：头部的第一部分是版本的**4字节**。版本号跟踪软件协议的升级。将这些数据作为区块的一部分捕获非常重要，因为如果在程序的后续版本中进行了任何更改，就需要捕获运行每个程序或节点的程序或节点是哪个以便将交易和区块发送到互联网上。'
- en: '**Previous Hash Block**: The second part of the header is the **32 bytes**
    previous hash block or previous hash block code. It''s a reference to the hash
    of the previous block in the chain. It''s not just a link to the previous block,
    it''s a hashed pointer to the previous block, which makes sure that the new block
    added maintains the sequence of the blocks or the chain.'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**上一个哈希块**：头部的第二部分是**32字节**的上一个哈希块或上一个哈希块代码。这是对链中上一个区块的哈希的引用。它不仅仅是对上一个区块的链接，而是上一个区块的哈希指针，这确保了新添加的区块维护了区块或链的序列。'
- en: '**Merkle Root**: The third part of the header is the **32 bytes** of the Merkle
    root. We just looked at the Merkle root, which is a hash root of the Merkle tree.
    It is a final hash code of all the transactions that were captured as part of
    the block.'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Merkle根**：头部的第三部分是Merkle根的**32字节**。我们刚刚看过Merkle根，它是Merkle树的根哈希。它是作为区块的一部分捕获的所有交易的最终哈希码。'
- en: '**Timestamp:** The fourth part of the header is the **4 bytes** of timestamp. It
    is the approximate time taken for the creation of this block. We use the term
    approximate because once the block is created, it takes a few milliseconds to
    get added to the actual blockchain as the transactions are verified by different
    nodes.'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**时间戳**：头部的第四部分是时间戳的**4字节**。这是创建此区块所花费的大约时间。我们使用“大约”这个术语是因为一旦区块创建完成，它就需要几毫秒的时间才能被添加到实际的区块链，因为交易是由不同的节点验证的。'
- en: '**Difficulty target**: The fifth part of the header is the **4 bytes** that
    capture the difficulty target. It''s the proof of work algorithm of the blocks.
    It is given for a particular node that is running the Bitcoin blockchain program.'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**难度目标**：头部的第五部分是**4字节**，用于捕获难度目标。这是区块的工作量证明算法。它是为运行比特币区块链程序的特定节点提供的。'
- en: '**Nonce**: The sixth part of the header is **4 bytes** of the nonce. It is
    the counter used for the **Proof of Work** (**PoW**) algorithm. Whichever node
    is first in calculating and solving the mathematical problem actually yields the
    result of the problem-solving solution and the result contains this nonce, which
    is used to capture the transaction and verifies that the PoW being carried by
    the node is correct.'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**随机数**：头部的第六部分是**4字节**的随机数。这是用于**工作量证明**（**PoW**）算法的计数器。首先计算和解决数学问题的任何节点实际上都产生了问题解决方案的结果，结果包含了这个随机数，用于捕获交易并验证节点进行的PoW是否正确。'
- en: Thus, we can see that this is the typical structure of a Bitcoin block header,
    which is roughly 80 bytes of information that is captured in each of the blocks.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们可以看到这是比特币区块头的典型结构，大约80字节的信息被捕获在每个区块中。
- en: Representing the blockchain structure
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 表示区块链结构
- en: 'Now, we will look at the overall structure of the Bitcoin blockchain header
    in the following diagram:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将看一下以下图表中比特币区块链头的整体结构：
- en: '![](img/3726f7a3-5eb6-4964-8dc8-9244a961da4c.png)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3726f7a3-5eb6-4964-8dc8-9244a961da4c.png)'
- en: In this example, **Block 16** represents the previous block's hash and consists
    of the timestamp of creation, the transaction root is also known as the Merkle
    root, and the nonce is the algorithm-cum-counter that has to be verified. All
    of the hidden information on the transactions is hashed again, and that hash is
    captured in **Block 17**. It consists of the previous block's hash, the timestamp,
    the Merkle root, and the nonce.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 在本例中，**区块16**代表了上一个区块的哈希，包括创建时间戳，交易根也被称为Merkle根，nonce是必须验证的算法-累加器。所有交易的隐藏信息都被再次哈希化，并且该哈希被捕获在**区块17**中。它包括上一个区块的哈希、时间戳、Merkle根和nonce。
- en: In the sections for **Data 1**, **Data 2**, **Data 3**, and **Data 4** in the
    preceding diagram, all the data is paired and hashed multiple times. Thus, the
    data keeps going in the upward direction until it gets to one final hash. These
    blocks keep moving and the entire Merkle tree is formed by the transactions that
    are captured in the blocks. This is what makes it so strong, robust, tamperproof,
    integrated, and immutable. This is the beauty of blockchain.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面图表的**数据1**、**数据2**、**数据3**和**数据4**部分中，所有数据都被多次配对和哈希化。因此，数据一直向上移动，直到达到一个最终哈希为止。这些区块不断移动，整个Merkle树是由捕获在区块中的交易形成的。这就是它如此强大、强壮、防篡改、集成和不可变的原因。这就是区块链的美妙之处。
- en: Challenges with blockchain
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 区块链的挑战
- en: After looking at the building blocks, structure, and core parts of the blockchain,
    we are now going to learn about the various types of blockchain implementations
    available, and we will also look at their features and benefits. As we already
    know, the Bitcoin blockchain became popular for its immutability, security, robustness, and
    transparency. The industry was in need of the Bitcoin blockchain architecture,
    but there were challenges that came up.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在看完了区块链的构建块、结构和核心部分之后，我们现在要了解可用的各种区块链实现，我们还将了解它们的特点和优势。正如我们已经知道的那样，比特币区块链因其不可变性、安全性、强大性和透明性而受到欢迎。行业需要比特币区块链架构，但也出现了一些挑战。
- en: 'The challenges faced by the industry are as follows:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 行业面临的挑战如下：
- en: '**How will it cater to an enterprise''s specific needs**: We know that the
    Bitcoin blockchain is open source, which is open to all kinds of solutions. If
    the IT industry or various enterprises wanted to use this blockchain architecture,
    they would not be able to use it as their needs are different.'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**如何满足企业的特定需求**：我们知道比特币区块链是开源的，对各种解决方案都是开放的。如果IT行业或各种企业想要使用这种区块链架构，它们将无法满足自己的需求，因为它们的需求各不相同。'
- en: '**How can we use other currencies with blockchain**: Enterprises that were
    willing to use the blockchain architecture due to its immutability, security, and
    transparency wanted to track their own assets, which wasn''t possible in Bitcoin
    blockchain as it was using Bitcoin and other Altcoins as currency.'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**如何使用区块链与其他货币**：愿意使用区块链架构的企业由于其不可变性、安全性和透明性而希望跟踪自己的资产，但这在比特币区块链中是不可能的，因为它使用的是比特币和其他替代币作为货币。'
- en: '**How will it allow us to define specific roles and permissions on the blockchain**:
    Different enterprises have their own roles, privileges, and permissions that have
    to be captured and executed on the blockchain nodes. In the case of the Bitcoin
    blockchain, we know that each and every node plays the same role across the globe.'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**如何允许我们在区块链上定义特定角色和权限**：不同的企业有着自己的角色、特权和权限，这些必须在区块链节点上进行捕捉和执行。就比特币区块链而言，我们知道全球每个节点都扮演着相同的角色。'
- en: So, these challenges triggered the need for specific changes to blockchain for
    industries, enterprises, and IT companies, in order to use blockchain for their
    own purposes, which in turn gave birth to different blockchain versions or variants.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，这些挑战促使了对区块链进行特定改变的需求，以供行业、企业和IT公司使用，从而衍生出了不同的区块链版本或变体。
- en: Types of blockchain
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 区块链类型
- en: 'Let''s have a look at the following types of blockchain:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看以下几种区块链类型：
- en: '**Public**: Public blockchains have ledgers visible to everyone on the internet
    and anyone can verify and add a block of transactions to the blockchain. Some
    examples are Bitcoins, Ethereum, Dash, Factom, and the hundreds of Altcoins that
    are available in the market today.'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**公共区块链**：公共区块链的账本对所有人都是可见的，任何人都可以验证并添加一个交易块到区块链中。一些例子包括比特币、以太坊、达世币、法图姆和市场上今天可用的数百种替代币。'
- en: '**Private**: The second type of blockchain is the private blockchain. All permissions
    are kept centralized to an organization. Private blockchains allow only specific
    people with specific roles in the organization to verify transaction blocks, but
    everyone on the internet is allowed to view them. This also depends on the organization''s
    decision. Some examples are **MultiChain** and **Blockstack**.'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**私有**：第二种区块链类型是私有区块链。所有权限都集中在一个组织中。私有区块链只允许组织中具有特定角色的特定人员验证交易块，但允许互联网上的所有人查看它们。这也取决于组织的决定。一些例子是**MultiChain**和**Blockstack**。'
- en: '**Consortium**: The third and most popular type of blockchain is a consortium. It''s
    controlled by a consortium of members. These members are from top companies who
    came forward to make changes to blockchain for specific purposes. So, only a predefined
    set of nodes have access to write data or blocks to the blockchain. Some examples
    are **Ripple**, **R3**, **Hyperledger 1.0**, and **Hyperledger 2.0**.'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**联盟**：第三种也是最流行的区块链类型是联盟。它由一个成员联盟控制。这些成员来自于顶级公司，他们出面为特定目的改变区块链。因此，只有预定义的一组节点可以访问将数据或块写入区块链。一些例子是**Ripple**、**R3**、**Hyperledger
    1.0**和**Hyperledger 2.0**。'
- en: Permission and permissionless blockchain implementations
  id: totrans-154
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 权限和无许可区块链实施
- en: 'Now, let''s look at the difference between a **permission** and a **permissionless**
    blockchain implementation, shown in the following diagram:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看一下在下图中显示的**权限**和**无许可**区块链实施之间的区别：
- en: '![](img/6162f8a3-b1b8-4717-9cc8-27cf1386255c.png)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6162f8a3-b1b8-4717-9cc8-27cf1386255c.png)'
- en: 'Let''s explore the difference between a permission and a permissionless blockchain
    as follows:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们探讨权限区块链和无许可区块链之间的差异如下：
- en: '**Permission****less blockchain**:Since the network is open, it''s called a
    permissionless blockchain. Anybody can participate and contribute to the consensus.
    Now, the consensus varies in all the nodes that are participating in blockchain
    mining. Even one individual can set up the mining and start running the blockchain
    implementation. It''s a public network, that is available for everyone to play
    a specific role, or rather, a generic role.'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**无许可区块链**：由于网络是开放的，因此被称为无许可区块链。任何人都可以参与并为共识做出贡献。现在，参与区块链挖矿的所有节点的共识都有所不同。甚至一个人可以设置挖矿并开始运行区块链实施。这是一个公共网络，每个人都可以扮演特定角色，或者说是通用角色。'
- en: '**Permission blockchain**:It restricts the actors who can contribute to the
    consensus of the system state and provides role-based access to the blockchain
    for actors who are participating in the implementation.'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**权限区块链**：它限制了可以对系统状态达成共识的参与者，并为参与实施的参与者提供基于角色的区块链访问。'
- en: 'The following table depicts the difference between the public and private blockchains:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格描述了公共和私有区块链之间的区别：
- en: '![](img/212d750e-0f34-4ac8-af28-ca7258a2fd9f.png)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
  zh: '![](img/212d750e-0f34-4ac8-af28-ca7258a2fd9f.png)'
- en: 'So, let''s take a look at the following features that are being provided by
    these implementations:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，让我们看一下以下实现提供的功能：
- en: '**Access**:In terms of access, the public blockchain is open with read and
    write access to the database for any node that is running the blockchain implementation.On
    the other hand, the private blockchain needs permission to have read or write
    access to the database.'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**访问**：就访问而言，公共区块链对于运行区块链实施的任何节点都是开放的，可以读写数据库。另一方面，私有区块链需要许可才能读取或写入数据库。'
- en: '**Speed**:In terms of speed, the public blockchain is slower. The reason for
    this is that it''s public and the volume, size, and number of nodes that participate
    in the blockchain are higher, so it takes some time to capture the transactions. When
    it comes to private blockchains, they have specific roles which are played by
    limited nodes that help to make the implementation of the transaction faster.'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**速度**：就速度而言，公共区块链较慢。这是因为它是公共的，参与区块链的节点的数量、大小和数量更多，因此需要一些时间来捕获交易。而当涉及到私有区块链时，它们具有由有限节点扮演的特定角色，这有助于加快交易的实施。'
- en: '**Security**:The way the public blockchain works is on the premise of PoW or
    the **Proof of Stake** (**PoS**), while the security in the private blockchain
    is provided by preapproved participants that can only participate or contribute
    to the blockchain.'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**安全性**：公共区块链的工作方式是基于 PoW 或 **股权证明**（**PoS**）的前提，而私有区块链中的安全性是由预先批准的参与者提供的，这些参与者只能参与或贡献到区块链中。'
- en: '**Identity**: In terms of the public blockchain, it provides anonymity or a
    pseudonym to the actors contributing to the blockchain. But, in the private blockchain, the identity
    is known by including each of the nodes that are participating.'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Identity**：就公共区块链而言，它为参与区块链的参与者提供匿名或伪名。但是，在私有区块链中，每个参与节点的身份都是已知的。'
- en: '**Assets: **The public provides native assets, even in cryptocurrencies like
    Bitcoin, Ether, and all Altcoins. But, in the private blockchain, the purpose
    is to use any asset, thus providing a feature that tracks the assets on the blockchain.'
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Assets**：公共提供本地资产，即使在诸如比特币、以太币和所有备选币种之类的加密货币中也是如此。但在私有区块链中，目的是使用任何资产，从而提供跟踪区块链上资产的功能。'
- en: Here is an example. Let's say two organizations agree to execute some work,
    and transfer or exchange assets or currency after the transition gets executed.
    So, the agreement that they make can be an asset on the private blockchain.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个例子。假设两个组织同意执行一些工作，并在交易执行后转移或交换资产或货币。因此，他们达成的协议可以成为私有区块链上的资产。
- en: Platforms for blockchain
  id: totrans-169
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 区块链平台
- en: 'Let''s take a look at the various platforms that have implementations of blockchain:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看有哪些实现区块链的各种平台：
- en: '**Hyperledger**: The first is Hyperledger, which is consortium-built. It''s
    an open source collaborative effort created to advance cross-industry blockchain
    technologies. It''s a very famous platform.'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Hyperledger**：第一个是Hyperledger，它是由贡献共同构建的。这是一个开源的协作努力，旨在推进跨行业的区块链技术。这是一个非常有名的平台。'
- en: '**Ethereum**: The second is Ethereum or Enterprise Ethereum, which has two
    variants. The first is an open blockchain platform that lets anyone build and
    use decentralized applications that run on blockchain technology. Like Bitcoin,
    no one controls or owns Ethereum, and Enterprise Ethereum is a similar consortium
    to Hyperledger.'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Ethereum**：第二个是以太坊或企业以太坊，它有两个变种。第一个是一个开放的区块链平台，任何人都可以在上面构建和使用运行在区块链技术上的去中心化应用程序。与比特币一样，没有人控制或拥有以太坊，而企业以太坊则是与Hyperledger类似的联合体。'
- en: '**IBM Bluemix**: This is a **Platform as a Service** (**PaaS**) that''s built
    on top of the Hyperledger project, and it offers additional security and infrastructure
    facilities for enterprises to use the Hyperledger blockchain implementation for
    their own purposes.'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**IBM Bluemix**：这是一个建立在Hyperledger项目之上的**平台即服务**（**PaaS**），为企业提供了额外的安全性和基础设施设施，供其使用Hyperledger区块链实现用于其自身目的。'
- en: '**MultiChain**: This is a platform for the creation and deployment of private
    blockchains or permission blockchains, either within or between organizations.'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**MultiChain**：这是一个用于创建和部署私有区块链或许可区块链的平台，可以在组织内或组织间使用。'
- en: '**Corda**:It''s adistributed ledger platform with a pluggable consensus that
    gives flexibility for enterprises to plug in their own consensus or smart contracts
    for their own purposes.'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Corda**：它是一个具有可插拔一致性的分布式账本平台，为企业提供了为其自身目的插入自己的共识或智能合约的灵活性。'
- en: '**Openchain**: This is a well suited for organizations wishing to issue and
    manage digital assets. It takes a different approach than the standard Bitcoin
    approach in implementing blockchain as it works on the partitioned consensus system
    in which every Openchain instance has only one authority to verify transactions,
    based on the assets that are being exchanged.'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Openchain**：这非常适合希望发行和管理数字资产的组织。它采用了与标准比特币方法不同的方法来实现区块链，因为它基于分区一致性系统工作，其中每个Openchain实例仅有一个权威来验证交易，这取决于正在交换的资产。'
- en: These are just a few examples of blockchain implementations; other than these,
    there are numerous implementations of platforms available today.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 这些只是区块链实现的几个示例；除了这些之外，今天还有许多平台的实现。
- en: Summary
  id: totrans-178
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we began with the fundamentals of cryptography and cryptocurrency.
    We also got an understanding of its workings and techniques. Then we moved on
    to an introduction to Bitcoin, its history, and the various wallets and alternate
    currency available apart from Bitcoin. We then looked at what blockchain is, its
    structure, features, and the various types available. This chapter has given us
    a bigger picture of what makes Bitcoin and blockchain the next major innovation
    after the internet.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们从加密货币和加密货币的基础知识开始。我们还了解了其工作原理和技术。然后我们进入了对比特币的介绍，其历史以及除比特币外可用的各种钱包和备选货币。然后我们看了一下区块链是什么，其结构，特征以及各种类型。本章为我们提供了比特币和区块链成为互联网之后的下一个主要创新的更大局面。
- en: In the next chapter, we will focus on decentralization. You will become familiar
    with decentralization, which sits at the core of blockchain as an innovation,
    and you will get insights into how decentralization works, what can be decentralized,
    and what its impact on the world is. We will also go through the pros and cons
    of decentralization, giving you a holistic overview of it. Stay tuned!
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将重点关注**去中心化**。您将熟悉去中心化，作为区块链创新的核心，并了解去中心化是如何运作的，什么可以被去中心化，以及它对世界的影响。我们还将讨论去中心化的优缺点，为您提供一个全面的概述。请继续关注！
