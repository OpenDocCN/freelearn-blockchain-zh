["```\n.PHONY: composer\ncomposer:\n  echo \">> Building composer package within Docker container\"\n  docker run --rm -v $(COMPOSER_PATH):/src -v $(DIST_DIR):/dist -w /src node:8.11 sh -c \"$(COMPOSER_BUILD_CMD)\"\n```", "```\nsudo: required\nservices:\n- docker\ndist: trusty\ncache: \n  directories:\n  - node_modules\nscript:\n- make build\n- make test\n```", "```\n[...]\n\"scripts\": {\n  \"prepare\": \"mkdirp ../dist && composer archive create --sourceType dir --sourceName . -a ../dist/trade-finance-logistics.bna\",\n  \"pretest\": \"npm run lint\",\n  \"lint\": \"eslint .\",\n  \"test\": \"nyc mocha -t 0 test/*.js && cucumber-js\",\n \"coverage\": \"nyc check-coverage\",\n  \"posttest\": \"npm run coverage\"\n},  \n[...]  \n```", "```\n        \"nyc\": {\n          \"lines\": 99,\n          \"statements\": 99,\n          \"functions\": 99,\n          \"branches\": 99\n        },\n```", "```\ngem install travis\n```", "```\n$ travis setup releases\nUsername: ldesrosi\nPassword for ldesrosi: ********\nFile to Upload: ./dist/network.bna\nDeploy only from HyperledgerHandsOn/trade-finance-logistics? |yes| \nEncrypt API key? |yes| no\n```", "```\ndeploy:\n  provider: releases\n  api_key: 3ce1ab5452e39af3ebb74582e9c57f101df46d60\n  file_glob: true\n  file: ./dist/*\n  on:\n    repo: HyperledgerHandsOn/trade-finance-logistics\n```", "```\ndeploy:\n provider: releases\n api_key: ${OAUTH_TOKEN}\n file_glob: true\n file: ./dist/*\n on:\n repo: HyperledgerHandsOn/trade-finance-logistics\n tags: true\n\n```", "```\n# In this example, documentation and Header.txt are part # of the default match. Default owners if nothing else \n# matches.\n*       @ldesrosi\n# Code related should be validated by Rama.  \n# JavaScripts files could have been separated \n# into tests versus logic by using folder's structure\n*.qry   @rama\n*.acl   @rama\n*.cto   @rama\n*.js    @rama\n# Package.json should be reviewed by everyone\npackage.json    @ldesrosi @rama @ODOWDAIBM\n```", "```\n        Git add -A\n        Git commit -m \"Setting initial code ownership.\"\n```", "```\n        Git push\n```", "```\ngpg --full-generate-key\n```", "```\ngpg: key 3C27847E83EA997D marked as ultimately trusted\ngpg: directory '/Users/yourID/.gnupg/openpgp-revocs.d' created\ngpg: revocation certificate stored as '/Users/yourID/.gnupg/openpgp-revocs.d/962F9129F27847E83EA997D.rev'\npublic and secret key created and signed.\npub   rsa4096 2018-02-03 [SC]\n      962F9129FC0B77E83EA997D\nuid    Your Name (GitHub Signing Identity) <yourID@email.com>\nsub   rsa4096 2018-02-03 [E]\n```", "```\ngpg --armor --export <<email-you-use-to-generate-the-key>>\n```", "```\n-----BEGIN PGP PUBLIC KEY BLOCK-----mQINBFp1oSYBEACtkVIlfGR5ifhVuYUCruZ03NglnCmrlVp9Nc417qUxgigYcwYZ\n[â€¦]\nvPF4Gvj2O/l+95LfI3QAH6pYOtU8ghe9a4E=\n-----END PGP PUBLIC KEY BLOCK-----\n```", "```\ngit config --global user.signingkey 3C27847E83EA997D\n```", "```\ntransaction MergeAssets {\n--> Asset mergeFrom\n--> Asset mergeTo\n}\n\n```", "```\n/**\n  * Sample transaction\n  * @param {org.example.biznet.MergeAssets} tx\n  * @transaction\n  */\nfunction onMergeAssets(tx) {\n  var assetRegistry;\n  var mergeFromAsset = tx.mergeFrom;\n  var mergeToAsset = tx.mergeTo;\n  mergeToAsset.value += tx.mergeFrom.value;\n\n  return getAssetRegistry('org.example.biznet.SampleAsset')\n    .then(function(ar) {\n      assetRegistry = ar;\n      return assetRegistry.update(mergeToAsset);\n    })\n    .then(function() {\n      return assetRegistry.remove(mergeFromAsset);\n    });\n}\n```", "```\ngit add -A \ngit commit -m \"Testing master branch protection.\"\n```", "```\ngit push\n```", "```\n$ git push\nCounting objects: 3, done.\nDelta compression using up to 8 threads.\nCompressing objects: 100% (2/2), done.\nWriting objects: 100% (3/3), 367 bytes | 367.00 KiB/s, done.\nTotal 3 (delta 0), reused 0 (delta 0)\nremote: error: GH006: Protected branch update failed for refs/heads/master.\nremote: error: Waiting on code owner review from ldesrosi.\nTo https://github.com/HyperledgerHandsOn/trade-finance-logistics.git\n ! [remote rejected] master -> master (protected branch hook declined)\nerror: failed to push some refs to 'https://Github.com/yourID/trading-smart-contract.Git'\n```", "```\ngit reset HEAD^\n```", "```\ngit stash\n```", "```\ngit checkout -b Feat-1 origin/master\n```", "```\ngit stash pop\n```", "```\ngit add -A\ngit commit -m \"Testing commit signing.\"\ngit push\n```", "```\ngit config --global commit.gpgsign true\n```", "```\ngit commit --amend -S -m \"Testing commit signing.\"\n```", "```\ngit push origin test --force\n```", "```\n describe('MergeAssets()', () => {\n it('should change the value to ' + assetType + ' to 200', () => {\n const factory = businessNetworkConnection.getBusinessNetwork().getFactory();\n // Create the asset 1\n const asset1 = factory.newResource(namespace, assetType, 'ASSET_001');\n asset1.value = 100;\n // Create the asset 2\n const asset2 = factory.newResource(namespace, assetType, 'ASSET_002');\n asset2.value = 100;\n\n // Create a transaction to change the asset's value property\n const mergeAssetTx = factory.newTransaction(namespace, 'MergeAssets');\n mergeAssetTx.mergeFrom = factory.newRelationship(namespace, assetType, asset1.$identifier);\n mergeAssetTx.mergeTo = factory.newRelationship(namespace, assetType, asset2.$identifier);\n\n let assetRegistry;\n return businessNetworkConnection.getAssetRegistry(namespace + '.' + assetType).then(registry => {\n   assetRegistry = registry;\n   // Add the asset to the appropriate asset registry\n   return assetRegistry.add(asset1);\n }).then(() => {\n   return assetRegistry.add(asset2);\n }).then(() => {\n   // Submit the transaction\n   return businessNetworkConnection.submitTransaction(mergeAssetTx);\n }).then(() => {\n  // Get the asset\n  return assetRegistry.get(asset2.$identifier);\n }).then(newAsset => {\n  // Assert that the asset has the new value property\n  newAsset.value.should.equal(200);\n });\n});\n});\n```", "```\nnpm test\n```", "```\ngit add -A\ngit commit -S -m \"Added new test case\"\ngit push origin Feat-\n```", "```\ncurl https://Github.com/HyperledgerHandsOn/trade-finance-logistics/releases/download/v1.1.0/network.bna -L -o network.bna\n```", "```\ncomposer network install -a ./network.bna -c <card-name>\ncomposer network upgrade -n trade-finance-logistics -v 0.0.1 -c <card-name>\n```"]