- en: Alternate Blockchains
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous chapters, we learned about blockchain, its structure, components,
    mechanism and the biggest use case of blockchain, Bitcoins. In the last chapter,
    we discussed cryptocurrency wallets, and their role and usage with a blockchain.
    Most of our discussion surrounds Bitcoins and other cryptocurrency.
  prefs: []
  type: TYPE_NORMAL
- en: The success of Bitcoin brought a lot of attention to the technology and the
    underlying blockchain ledger system, and the community started creating alternate
    cryptocurrency based on blockchain, making slight modifications to the parameters
    of Bitcoin, each time trying to improve in one way or another. Subsequently, various
    organizations started creating alternatives to blockchain by making slight modifications
    or changes but keeping the core definition of blockchain, that being a public
    ledger, intact. Some of the projects trying to create alternative blockchain did
    not gain much attention, but others managed to get a lot of attention and community
    support.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will discuss the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Uses of blockchain in various verticals such as government, healthcare, medical
    research, supply chain, fine art, shipping, energy, enterprise, and so on
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Ripple payment system
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Stellar payment network
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tendermint
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Monax
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Various uses of blockchain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Distributed ledger technology is said to be the biggest revolution in computers
    after the internet; blockchain is and will be revolutionizing and impacting on
    each individual in years to come.
  prefs: []
  type: TYPE_NORMAL
- en: 'Blockchain is used in currency-related applications such as Bitcoins and Altcoins,
    but, apart from that, there are various other use cases of blockchain in other
    industries that entail completely different monetary usage. The following diagram
    depicts some of the industries where blockchain is being used:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/21ae7e9d-51bd-4d1d-aea7-e70a31d78d8e.png)'
  prefs: []
  type: TYPE_IMG
- en: Government
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Various governments across the globe are using blockchain to store public records
    or any other information across various government sectors, such as healthcare,
    identity management, taxation, voting, and financial services.
  prefs: []
  type: TYPE_NORMAL
- en: By having a decentralized database, it will make it easy for the governments
    to reduce fraud and also introduce certain checks before the data is entered into
    the distributed ledger system.
  prefs: []
  type: TYPE_NORMAL
- en: Healthcare
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Medical records of an individual need authentication for correct information,
    and it is important to have access to health records that are complete in all
    aspects. Blockchain can be used in facilitating data sharing and record keeping.
    Sensitive medical data can become easily accessible to doctors and other relevant
    people of the healthcare community.
  prefs: []
  type: TYPE_NORMAL
- en: Medical research
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Researchers in the medical community are always thriving to make better innovations
    and techniques that can improve clinic care. With data being present on blockchain,
    researchers can access the authentic data with ease and also add theories/results
    based on an apt approval cycle. The system's interoperability can help in multiple
    levels, along with offering precision and authenticity.
  prefs: []
  type: TYPE_NORMAL
- en: Supply chain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Supply chain management is one of the most scattered bottlenecks of a business
    process. There has always been a need for efficiency in supply chain management.
    There is a lack of compatibility because of the use of multiple software systems,
    with each one having various data points required for smoother movement. Blockchain
    can provide each participant in the supply chain process with access to relevant
    information reducing communication or data errors, as seen in the following diagram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a4a712de-4853-48d3-92b8-2839afce572c.png)'
  prefs: []
  type: TYPE_IMG
- en: Copyright
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A blockchain can be used to resolve copyright claims, since any entry in the
    blockchain-based system can only be introduced after it has been approved by the
    consensus system, thus making sure that the copyright is maintained.
  prefs: []
  type: TYPE_NORMAL
- en: Fine art
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The art industry depends on the authentication of artwork; although blockchain
    cannot authenticate artwork or whether a painting is original or forged, it can
    be used to authenticate ownership.
  prefs: []
  type: TYPE_NORMAL
- en: Shipping
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A number of projects have come up that are using blockchain within the maritime
    logistics industry to bring transparency in international trade. Various global
    shippers are using blockchain for the same reason, to introduce blockchain-based
    techniques and to weed out any bottlenecks that distributed ledger technology
    solved for the industry.
  prefs: []
  type: TYPE_NORMAL
- en: Energy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Blockchain can help to maximize efficiency in the energy distribution sector
    by keeping a track on energy allocation and implementing efficient distribution.
    Energy production and research for new sustainable resources can be monitored
    by using a blockchain to maintain authenticity and consensus in the same sense,
    as can be seen here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/2c50ea25-ca13-48b6-9e12-4846e4661e26.png)'
  prefs: []
  type: TYPE_IMG
- en: Computation and data storage
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Computation resources get wasted around the globe. Data centers and data lakes
    are always in need of efficient data maintenance. Using a blockchain can ensure
    security and improvement.
  prefs: []
  type: TYPE_NORMAL
- en: Identification and social security
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: User identification is an important use case of blockchain being used in governments,
    but can also be used by other organizations for social security and other identification
    processes, as required.
  prefs: []
  type: TYPE_NORMAL
- en: Enterprise
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Enterprises can use blockchain in various cases such as coordination among departments,
    intra-office and inter-office communication, data migration, and various other
    tasks. Microsoft, IBM, Google, Amazon, and other companies have already started
    beta testing the usage of blockchain in various enterprise departments.
  prefs: []
  type: TYPE_NORMAL
- en: Ripple
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Ripple acts as a real-time gross settlement and remittance network built by
    Ripple company, and founded in 2012\. It allows payments between parties in seconds.
    It operates with its own coin, known as **Ripple** (**XRP**), and also supports
    non-XRP payments. Ripple has proposed a new decentralized global network of banks
    and payment providers, known as RippleNet. This network uses Ripple's transaction
    settlement technology at its core. RippleNet is proposed to be independent of
    banks and payment providers, setting a standardized network for real-time payment
    settlement.
  prefs: []
  type: TYPE_NORMAL
- en: 'Ripple networks consist of various nodes that perform each of their own defined
    tasks. The first nodes that facilitate the system are called **user nodes**. The
    user nodes use Ripple for payment and transactions, such as to make and receive
    payments. The second type of node in Ripple is the validator node. These nodes
    are part of a consensus mechanism in the Ripple network. Nodes in the **unique
    node list** (**UNL**) are part of the Ripple network and trusted for the consensus
    mechanism. Anyone can become a validator node or a user node. The following diagram
    displays the flow of transactions that take place in the Ripple network. The transaction
    begins in the collection phase, and then proceeds to move through the consensus
    phase. The final phase, which is the ledger closing phase, creates the block of
    the certain transaction for the next set of transactions to be received:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a0a51b62-d634-439c-8ad6-0cf833816b5f.png)'
  prefs: []
  type: TYPE_IMG
- en: For the consensus mechanism, Ripple uses the **Ripple Protocol Consensus Algorithm**
    (**RPCA**). RPCA works neither on **Proof of Work** (**PoW**) nor **Proof of Stake**
    (**PoS**) systems; instead, its consensus mechanism works on a correctness-based
    system. The consensus process works on a voting system by seeking acceptance from
    the validator nodes in an iterative manner so that a required number of votes
    is received. Once the required number of votes is received, the changes are validated
    and the ledger is closed. Once the change in the ledger is accepted and the ledger
    is closed, an alert is sent to the network.
  prefs: []
  type: TYPE_NORMAL
- en: 'A Ripple network consists of various elements, which together make the transactions
    in Ripple successful:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Validator**: This element is the participant in the consensus protocol.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Ledger**: This contains elements such as the ledger number, account settings,
    transactions, timestamp, and ledger validation flag.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Open ledger**: This is the ledger on which the voting takes place. An open
    ledger contains the proposed transactions.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Unique node list**: This is the list of nodes that a validating server uses
    to seek votes and move the consensus ahead.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Proposer**: This element proposes new transactions that are to be made part
    of the consensus process.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Transactions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Transactions are created by the Ripple network nodes in order to update the
    ledger. A transaction is required to be digitally signed and validated for it
    to be part of the consensus process. Each transaction costs a small amount of
    XRP, just like Gas in Ethereum. There are various types of transactions in Ripple
    Network: payments related, order related, and account related.'
  prefs: []
  type: TYPE_NORMAL
- en: 'There are also various developer APIs available in the Ripple network to work
    with the transactions and payments, along with integration on RippleNet. Interledger
    works with RippleNet to enable compatibility with different networks. The following
    diagram depicts what a block consists of in a Ripple network transaction:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/b38a1e65-d8c2-44a6-84f7-d0d999e70b01.png)'
  prefs: []
  type: TYPE_IMG
- en: Stellar
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Stellar network is for the exchange of any currency, including custom tokens.
    Stellar has a consensus system that is more commonly known as the **Stellar consensus
    protocol** (**SCP**), which is based on the **Federated Byzantine Agreement**
    (**FBA**). SCP is different from PoW and PoS with its prime focus to offer lower
    latency for faster transactions.
  prefs: []
  type: TYPE_NORMAL
- en: 'It has four main properties:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Decentralized property**: It allows participation by anyone without any central
    party'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Low latency**: It addresses the much-desired requirement of fast transaction
    processing'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Flexible trust**: It allows users to choose which parties they trust for
    a specific purpose'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Asymptotic security**: It makes use of digital signatures and hash functions
    for providing the required level of security on the network'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Stellar network maintains a distributed ledger that saves every transaction
    and is replicated on each Stellar server connected to the network. The consensus
    is achieved by verifying a transaction among servers, and updating the ledger
    with updates of the very same transaction. The Stellar ledger can also act as
    a distributed exchange order book as users can store their offers to buy or sell
    currencies.
  prefs: []
  type: TYPE_NORMAL
- en: Tendermint
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Tendermint provides a secure and consistent state machine replication functionality.
    Its main task is to develop a secure and high-performance, easily replicable state
    machine. It is Byzantine Fault Tolerant, that is, even if one in three of the
    machines fail, Tendermint will keep on working.
  prefs: []
  type: TYPE_NORMAL
- en: 'The two prime components of Tendermint are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**The Tendermint Core**: The Tendermint Core enables secure replication of
    transactions on each node present in the network. It is a consensus engine.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The Tendermint Socket Protocol** (**TMSP**): TMSP is an application interface
    protocol that allows interfacing with any programming language and helps to process
    transactions.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Tendermint consensus algorithm is a round-based mechanism where validator
    nodes initiate new blocks in each round being done. A locking mechanism is used
    to ensure protection against a scenario when two different blocks are selected
    for closing at the same height of the blockchain. Each validator node syncs a
    full local replicated ledger of blocks that contain transactions. Each block contains
    a header that consists of the previous block hash, timestamp of the proposed block,
    present block height, and the Merkle root hash of all transactions present in
    that block.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following diagram shows the flow between the consensus engine and the client
    apps via the Tendermint Socket protocol:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/40f5ee2c-f52f-4957-820e-a6c22d987124.png)'
  prefs: []
  type: TYPE_IMG
- en: Participants of the Tendermint protocol are generally referred to as **validators**. Each
    validator takes turns to propose blocks of transactions. They also vote on them
    just like the Ripple voting system discussed previously. If a block is unable
    to commit, the protocol moves on to the next round. A new validator then proposes
    a block for that same height. Voting requires two stages to successfully commit
    a block. These two stages are commonly known as the pre-vote and pre-commit stage.
    A block is committed only if more than two in three of the validators pre-commit
    for the same block and in the same round.
  prefs: []
  type: TYPE_NORMAL
- en: Validators are unable to commit a block for a number of reasons. These would
    include the current proposer being offline, or issues with the quality or speed
    of the network. Tendermint also allows the validators to confirm if a validator
    should be skipped. Each validator waits for a small amount of time to receive
    a proposal block from the concerned proposer. Only after this voting can take
    place can they move to the next round. This dependence on a time period makes
    Tendermint a synchronous protocol despite the fact that the rest of the protocol
    is asynchronous in nature, and validators only progress after hearing from more
    than two-thirds of the validator sets. One of the simplifying elements of Tendermint
    is that it uses the same mechanism to commit a block as it does to skip to the
    next round.
  prefs: []
  type: TYPE_NORMAL
- en: Tendermint guarantees that security is not breached if we assume that less than
    one-third of the validator nodes are Byzantine. This implies that the validator
    nodes will never commit conflicting blocks at the same height. There are a few
    locking rules that modulate the paths that can be followed. Once a validator pre-commits
    a block, it is locked on that block. In such cases, it must pre-vote for the block
    it is to be locked on, and it can only unlock and pre-commit for a new block.
  prefs: []
  type: TYPE_NORMAL
- en: Monax
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Monax is a blockchain and a smart contract technology that was founded in 2014\.
    It started its journey as Eris Industries, but changed its name to Monax in October
    of 2016.
  prefs: []
  type: TYPE_NORMAL
- en: Monax has a lot to offer. Some of these include various frameworks, SDKs, and
    tools that allow accelerated development of blockchains and their deployment for
    businesses. The idea behind the Monax application platform is to enable development
    of ecosystem applications that use blockchains in their backend. It also allows
    integration with multiple blockchains and enables various third-party systems
    to interact with other blockchain systems, and offers a high level of compatibility.
    This platform makes use of smart contracts written in solidity language. It can
    interact with blockchains such as Ethereum or Bitcoin. All commands are standardized
    for different blockchains, and the same commands can be used across the platform.
  prefs: []
  type: TYPE_NORMAL
- en: 'Monax is being actively used for the following applications:'
  prefs: []
  type: TYPE_NORMAL
- en: Fleet leasing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Corporate governance
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Intellectual property rights
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Legal processes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we were introduced to alternative blockchains. We discussed
    the various use cases of blockchains other than cryptocurrency. Some of these
    included government, healthcare, medical research, supply chains, copyright, fine
    art, shipping, energy, and so on. As well as this, we discussed Ripple, which
    is a new blockchain used for fast payments and offers various modifications and
    improvements compared to the Bitcoin blockchain. After that, we discussed the
    Stellar payment protocol and its prime properties, which help to accelerate payments
    in Stellar. Tendermint is another blockchain software, which was discussed and
    brought to our attention.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will discuss, in detail, Hyperledger and some of the
    prominent projects based on the Hyperledger protocol. We will also discuss detailing
    and other parameters of the Hyperledger protocol.
  prefs: []
  type: TYPE_NORMAL
