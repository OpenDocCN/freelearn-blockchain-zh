["```\ndifficulty = difficulty_1_target/current_target\ndifficulty_1_target = 0x00000000FFFF0000000000000000000000000000000000000000000000000000\n```", "```\n$ Bitcoin-cli getblockhash 0\n000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\n\n$ Bitcoin-cli getblockheader 000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\n{\n ...\n \"height\": 0,\n ...\n \"bits\": \"1d00ffff\",\n \"difficulty\": 1,\n ...\n}\n```", "```\n // Go back by what we want to be 14 days worth of blocks\n int nHeightFirst = pindexLast->nHeight - (params.DifficultyAdjustmentInterval()-1);\n assert(nHeightFirst >= 0);\n const CBlockIndex* pindexFirst = pindexLast->GetAncestor(nHeightFirst);\n assert(pindexFirst);\n```", "```\n // Limit adjustment step\n int64_t nActualTimespan = pindexLast->GetBlockTime() - nFirstBlockTime;\n if (nActualTimespan < params.nPowTargetTimespan/4)\n nActualTimespan = params.nPowTargetTimespan/4;\n if (nActualTimespan > params.nPowTargetTimespan*4)\n nActualTimespan = params.nPowTargetTimespan*4;\n\n   // Retarget\n    const arith_uint256 bnPowLimit = UintToArith256(params.powLimit);\n    arith_uint256 bnNew;\n    bnNew.SetCompact(pindexLast->nBits);\n    bnNew *= nActualTimespan;\n    bnNew /= params.nPowTargetTimespan;\n\n    if (bnNew > bnPowLimit)\n        bnNew = bnPowLimit;\n```"]