["```\n$ dotnet neo-cli.dll \n```", "```\n$ dotnet neo-cli.dll /rpc \n```", "```\nNEO-CLI Version: 2.7.4.0 \nneo> \n```", "```\ncreate wallet neo_wallet.db3 \npassword: *** \naddress: ASxUka4WqmEkD2mJtGy37J9NeuTe8bTtYF \npubkey: 0374c66e892d7a8cbbbd4c8bd5b7b71ec83819a90c2327d7057b1234072291b5d8 \n\nopen wallet neo_wallet.db3 \n```", "```\n$ np-prompt \nNEO cli. Type 'help' to get started \nneo> \n```", "```\n$ np-api-server --port-rpc 10332 \n```", "```\n$ curl -X POST http://localhost:10332 -H 'Content-Type: \n application/json' -d '{ \"jsonrpc\": \"2.0\", \"id\": 5, \"method\": \n \"getversion\", \"params\": [] }' \n\n{\"jsonrpc\": \"2.0\", \"id\": 5, \"result\": {\"port\": 8080, \"nonce\": \n 1439440988, \"useragent\": \"/NEO-PYTHON:0.6.6/\"}} \n```", "```\n$ np-prompt -p \n```", "```\n$ docker pull cityofzion/neo-privatenet\n$ docker run --rm -d --name neo-privatenet -p 20333-20336:20333-\n 20336/tcp -p 30333-30336:30333-30336/tcp cityofzion/neo-privatenet \n```", "```\nopen wallet neo_wallet.db3\nwallet \n```", "```\n{ \n  \"path\": \"neo_wallet.db3\", \n  \"addresses\": [ \n    { \n      \"version\": 0, \n      \"script_hash\": \"AK2nJJpJr6o664CWJKi1QRXjqeic2zRp8y\", \n      \"frozen\": false, \n      \"votes\": [], \n      \"balances\": { \n        \"0xc56f33fc6ecfcd0c225c4ab356fee59390af8560be0e930faebe74\n a6daff7c9b\": \"100000000.0\", \n        \"0x602c79718b16e442de58778e148d0b1084e3b2dffd5de6b7b16cee\n 7969282de7\": \"16024.0\" \n      }, \n      \"is_watch_only\": false \n    } \n  ], \n  \"height\": 20066, \n  \"percent_synced\": 100, \n  \"synced_balances\": [ \n    \"[NEO]: 100000000.0 \", \n    \"[NEOGas]: 16024.0 \" \n  ], \n  \"public_keys\": [ \n    { \n      \"Address\": \"AK2nJJpJr6o664CWJKi1QRXjqeic2zRp8y\", \n      \"Public Key\": \"031a6c6fbbdf02ca351745fa86b9ba5\n a9452d785ac4f7fc2b7548ca2a46c4fcf4a\" \n    } \n  ], \n  \"tokens\": [], \n  \"claims\": { \n    \"available\": \"143992.0\", \n    \"unavailable\": \"480.0\" \n  } \n} \n```", "```\nsend NEO AZ81H31DMWzbSnFDLFkzh9vHwaDLayV7fU 100 \n[Password]> *** \nRelayed Tx: 53b72dbce63a28a01432c1ddcc82aed8c28fb1fa338cab812c979\n d56cc8e4410 \n```", "```\n{ \n  \"txid\": \"0x53b72dbce63a28a01432c1ddcc82aed8c28fb1fa338cab812\n c979d56cc8e4410\", \n  \"type\": \"ContractTransaction\", \n  \"version\": 0, \n  \"attributes\": [ \n    { \n      \"usage\": 32, \n      \"data\": \"23ba2703c53263e8d6e522dc32203339dcd8eee9\" \n    } \n  ], \n  \"vout\": [ \n    { \n      \"n\": 0, \n      \"asset\": \"0xc56f33fc6ecfcd0c225c4ab356fee59390af8560be0e930\n faebe74a6daff7c9b\", \n      \"value\": \"100\", \n      \"address\": \"AZ81H31DMWzbSnFDLFkzh9vHwaDLayV7fU\" \n    }, \n    { \n      \"n\": 1, \n      \"asset\": \"0xc56f33fc6ecfcd0c225c4ab356fee59390af8560be0e930\n faebe74a6daff7c9b\", \n      \"value\": \"99999900\", \n      \"address\": \"AK2nJJpJr6o664CWJKi1QRXjqeic2zRp8y\" \n    } \n  ], \n  \"vin\": [ \n    { \n      \"txid\": \"2b8907db07ebbc3ea2244162ff3d696e7b80874d3ddc3f1fc52\n e427d91cd91c3\", \n      \"vout\": 0 \n    } \n  ], \n  \"sys_fee\": \"0\", \n  \"net_fee\": \"0\", \n  \"scripts\": [ \n    { \n      \"invocation\": \"40f6b2e5c2ca932a536284136c254119096813ee35\n d494c939d9e26a7b6247f0801284a34c39e0194c35d1db68bf54fa1de2852\n b86182d86a673a206dcf64c6f04\", \n      \"verification\": \"21031a6c6fbbdf02ca351745fa86b9ba5a9452d785\n ac4f7fc2b7548ca2a46c4fcf4aac\" \n    } \n  ], \n  \"height\": 20594, \n  \"unspents\": [ \n    { \n      \"n\": 0, \n      \"asset\": \"0xc56f33fc6ecfcd0c225c4ab356fee59390af8560be0e930\n faebe74a6daff7c9b\", \n      \"value\": \"100\", \n      \"address\": \"AZ81H31DMWzbSnFDLFkzh9vHwaDLayV7fU\" \n    }, \n    { \n      \"n\": 1, \n      \"asset\": \"0xc56f33fc6ecfcd0c225c4ab356fee59390af8560be0e930\n faebe74a6daff7c9b\", \n      \"value\": \"99999900\", \n      \"address\": \"AK2nJJpJr6o664CWJKi1QRXjqeic2zRp8y\" \n    } \n  ] \n} \n```", "```\nfrom boa.builtins import concat \n\ndef main(name): \n  return concat(\"Hello \", name) \n```", "```\nbuild hello.py test 07 07 False False Alice \n```", "```\nCalling hello.py with arguments ['Alice'] \nTest deploy invoke successful \nUsed total of 19 operations \nResult [{'type': 'String', 'value': 'Hello Alice'}] \nInvoke TX gas cost: 0.0001 \n```", "```\nimport contract hello.avm 07 07 False False Alice \n```", "```\nPlease fill out the following contract details: \n[Contract Name] > Hello World \n[Contract Version] > 1.0.0 \n[Contract Author] > Alice \n[Contract Email] > alice@neotest.com \n[Contract Description] > Basic smart contract \nCreating smart contract.... \n{ \n  \"hash\": \"0x6ed9fabe179b236ca7c22deb72a02bdf65b57b84\", \n  \"script\": \n \"54c56b6a00527ac40648656c6c6f206a00c37e6c75665ec56b6a00527ac46a515\n 27ac46a51c36a00c3946a52527ac46a52c3c56a53527ac4006a54527ac46a00c36\n a55527ac461616a00c36a51c39f6433006a54c36a55c3936a56527ac46a56c36a5\n 3c36a54c37bc46a54c351936a54527ac46a55c36a54c3936a00527ac462c8ff616\n 1616a53c36c7566\", \n  \"parameters\": \"07\", \n  \"returntype\": \"07\" \n} \nUsed 100.0 Gas \n```", "```\ntestinvoke 0x6ed9fabe179b236ca7c22deb72a02bdf65b57b84 Alice \n```", "```\nTest invoke successful \nTotal operations: 19 \nResults ['48656c6c6f20416c696365'] \nInvoke TX GAS cost: 0.0 \nInvoke TX fee: 0.0001 \n```", "```\nfrom boa.interop.Neo.Runtime import Log, Notify \nfrom boa.interop.Neo.Storage import Get, Put, GetContext \nfrom boa.interop.Neo.Runtime import GetTrigger,CheckWitness \nfrom boa.builtins import concat \n\ndef main(operation, args): \n  nargs = len(args) \n  if nargs == 0: \n    print(\"No asset id supplied\") \n    return 0 \n\n  if operation == 'query': \n    asset_id = args[0] \n    return query_asset(asset_id) \n\n  elif operation == 'delete': \n    asset_id = args[0] \n    return delete_asset(asset_id) \n\n  elif operation == 'register': \n    if nargs < 2: \n      print(\"required arguments: [asset_id] [owner]\") \n      return 0  \n    asset_id = args[0] \n    owner = args[1] \n    return register_asset(asset_id, owner) \n\n  elif operation == 'transfer': \n    if nargs < 2: \n      print(\"required arguments: [asset_id] [to_address]\") \n      return 0 \n    asset_id = args[0] \n    to_address = args[1] \n    return transfer_asset(asset_id, to_address) \n```", "```\ndef register_asset(asset_id, owner): \n  msg = concat(\"RegisterAsset: \", asset_id) \n  Notify(msg) \n\n  if not CheckWitness(owner): \n    Notify(\"Owner argument is not the same as the sender\") \n    return False \n\n  context = GetContext() \n  exists = Get(context, asset_id) \n  if exists: \n    Notify(\"Asset is already registered\") \n    return False \n\n  Put(context, asset_id, owner) \n  return True \n```", "```\ndef query_asset(asset_id): \n  msg = concat(\"QueryAsset: \", asset_id) \n  Notify(msg) \n\n  context = GetContext() \n  owner = Get(context, asset_id) \n  if not owner: \n    Notify(\"Asset is not yet registered\") \n    return False \n\n  Notify(owner) \n  return owner \n```", "```\ndef transfer_asset(asset_id, to_address): \n  msg = concat(\"TransferAsset: \", asset_id) \n  Notify(msg) \n\n  context = GetContext() \n  owner = Get(context, asset_id) \n  if not owner: \n    Notify(\"Asset is not yet registered\") \n    return False \n\n  if not CheckWitness(owner): \n    Notify(\"Sender is not the owner, cannot transfer\") \n    return False \n\n  if not len(to_address) != 34: \n    Notify(\"Invalid new owner address. Must be exactly 34 \n characters\") \n    return False \n\n  Put(context, asset_id, to_address) \n  return True \n```", "```\ndef delete_asset(asset_id): \n  msg = concat(\"DeleteAsset: \", asset_id) \n  Notify(msg) \n\n  context = GetContext() \n  owner = Get(context, asset_id) \n  if not owner: \n    Notify(\"Asset is not yet registered\") \n    return False \n\n  if not CheckWitness(owner): \n    Notify(\"Sender is not the owner, cannot transfer\") \n    return False \n\n  Delete(context, asset_id) \n  return True \n```", "```\nThis document was created by Alice. \n```", "```\nf572f8ce40bf97b56bad1c6f8d62552b8b066039a9835f294ea4826629278df3 \n```", "```\nbuild poo.py test 0710 05 True False query \n [\"f572f8ce40bf97b56bad1c6f8d62552b8b066039a9835f294ea4826629278\n df3\"] \n\nTest deploy invoke successful \nUsed total of 113 operations \nResult [{'type': 'ByteArray', 'value': ''}] \nInvoke TX gas cost: 0.0001 \n```", "```\nimport poo.avm 0710 05 True False \n{ \n  \"hash\": \"0x60a7ed582c6885addf1f9bec7e413d01abe54f1a\", \n  \"script\": \"....\", \n  \"parameters\": \"0710\", \n  \"returntype\": \"05\" \n} \nUsed 500.0 Gas \n```", "```\ntestinvoke 0x60a7ed582c6885addf1f9bec7e413d01abe54f1a register \n [\"f572f8ce40bf97b56bad1c6f8d62552b8b066039a9835f294ea4826629278\n df3\", \"AK2nJJpJr6o664CWJKi1QRXjqeic2zRp8y\"] \n```", "```\ntestinvoke 0x60a7ed582c6885addf1f9bec7e413d01abe54f1a transfer \n [\"f572f8ce40bf97b56bad1c6f8d62552b8b066039a9835f294ea4826629278\n df3\", \"AZ81H31DMWzbSnFDLFkzh9vHwaDLayV7fU\"] \n```", "```\ntestinvoke 0x60a7ed582c6885addf1f9bec7e413d01abe54f1a query \n [\"f572f8ce40bf97b56bad1c6f8d62552b8b066039a9835f294ea4826629278\n df3\"] \n\nTest invoke successful \nTotal operations: 118 \nResults ['415a3831483331444d577a62536e46444c466b7a683976487761444\n c617956376655'] \nInvoke TX GAS cost: 0.0 \nInvoke TX fee: 0.0001 \n```", "```\nqueryAsset(assetID) {\n  const props = { \n    scriptHash: '60a7ed582c6885addf1f9bec7e413d01abe54f1a', \n    operation: 'query', \n    args: [assetID.hexEncode()]\n  }; \n  const Script = Neon.create.script(props); \n\n  rpc.Query.invokeScript(Script).execute('http://localhost:30333')\n .then((res) => { \n    return res.result.stack[0].value.hexDecode() \n  }); \n} \n```", "```\n$ geth --rpc --rpcapi db,eth,net,web3,personal --cache=2048 \n --rpcport 8545 --rpcaddr 127.0.0.1 \n```", "```\n$ geth -rinkeby \n```", "```\n$ npm install -g ganache-cli \n```", "```\n$ ganache-cli \n```", "```\nWeb3 = require('web3') \nweb3 = new Web3(new \n Web3.providers.HttpProvider(\"http://localhost:8545\")); \nweb3.eth.getBlockNumber(console.log); \n```", "```\n$ npm install -g truffle \n```", "```\n$ truffle init \n```", "```\nmodule.exports = { \n  networks: { \n    development: { \n      host: '127.0.0.1', \n      port: 8545, \n      network_id: '*' } \n  } \n}; \n```", "```\n$ truffle console \n```", "```\npragma solidity ^0.4.23; \n\ncontract Hello { \n\n  function greetUser(bytes user) view public returns (bytes) { \n    return abi.encodePacked(\"Hello \", user); \n\n  } \n} \n```", "```\nvar Hello = artifacts.require(\"./Hello.sol\"); \nmodule.exports = function(deployer) { \n  deployer.deploy(Hello); \n}; \n```", "```\n$ truffle compile \n```", "```\n$ truffe migrate \nDeploying Hello... \n  ... 0x4d85f83c2ffcf1405eb7b610e0f34c99f42b4189f11fbb5ffb782b6eb4d96316 \n  Hello: 0x149cd2285f8b8a72a5f8b7286aceb94fb54c1aee \n```", "```\n$ truffle console \ntruffle(development)> \nHello.deployed().then((instance) => instance.greetUser(\"Alice\")); \n```", "```\npragma solidity ^0.4.23; \n\ncontract ProofOfOwnership { \n  mapping (bytes32 => address) public assetOwners; \n```", "```\n  function registerAsset(bytes32 asset) public { \n    if (address(assetOwners[asset]) == address(0))\n      {\n        assetOwners[asset] = msg.sender;\n      }\n  } \n```", "```\n  function queryAsset(bytes32 asset) view public returns (address) \n  { \n    return assetOwners[asset]; \n  } \n```", "```\n  function transferAsset(bytes32 asset, address owner) public { \n    if (assetOwners[asset] == msg.sender) \n    { \n      assetOwners[asset] = owner; \n    } \n  } \n```", "```\n  function deleteAsset(bytes32 asset) public { \n    if (assetOwners[asset] == msg.sender) \n    { \n      assetOwners[asset] = \n 0x0000000000000000000000000000000000000000; \n    } \n  } \n} \n```", "```\nvar ProofOfOwnership= artifacts.require(\"./ProofOfOwnership.sol\"); \nmodule.exports = function(deployer) { \n  deployer.deploy(ProofOfOwnership); \n}; \n```", "```\n$ truffle migrate \nDeploying ProofOfOwnership... \n  ... 0x0902a793d20a3846935fffa9558fb8a2f59f74edd2ef811189c9dcdd0a0aedcc \n  ProofOfOwnership: 0xc58b4e456b840ca924ddc1c971932febec717e95 \n```", "```\nThis document was created by Alice. \n```", "```\nc9f50a3bdd2efccb7e34fbd8b42e9675 \n```", "```\n$ truffle console \ntruffle(development)> \nProofOfOwnership.deployed().then((instance)=>\n instance.registerAsset(\"c9f50a3bdd2efccb7e34fbd8b42e9675\", \n {from: \"0xebe41ec4c574fde7a1d13d333d17267ca93df491\"})); \n```", "```\nProofOfOwnership.deployed().then((instance)=>\n instance.transferAsset(\"c9f50a3bdd2efccb7e34fbd8b42e9675\", \n \"0xfda013eecad647a2593aacbb3c18445f051d0f52\", \n {from: \"0xebe41ec4c574fde7a1d13d333d17267ca93df491\"})); \n```", "```\nProofOfOwnership.deployed().then((instance)=>\n instance.queryAsset(\"c9f50a3bdd2efccb7e34fbd8b42e9675\")); \n```", "```\nimport Web3 from 'web3'; \nimport { default as contract } from 'truffle-contract'; \nimport contract_artifacts from \n './contracts/ProofOfOwnership.json'; \n```", "```\nconst web3 = window.web3; \nif (typeof web3 !== 'undefined') \n{ \n  this.web3 = new Web3(web3.currentProvider); \n  this.user_address = this.web3.eth.accounts[0] \n} \nelse \n{ \n  this.web3 = new Web3\n (new Web3.providers.HttpProvider(\"http://localhost:8545\")); \n} \n```", "```\nthis.poo = contract(contract_artifacts); \nthis.poo.setProvider(this.web3.currentProvider); \n```", "```\nregisterAsset(assetID) \n{ \n  try { \n    let user_address = this.user_address; \n    this.poo.deployed().then(function(contractInstance) { \n\n      contractInstance.registerAsset(assetID, {gas: 1400000, from: user_address}).then(function(c) { \n        console.log(c.toLocaleString()); \n      }); \n    }); \n  } \n  catch (err) { \n    console.log(err); \n  } \n} \n```", "```\n  queryAsset(assetID) \n  { \n    try { \n      let user_address = this.user_address; \n      this.poo.deployed().then(function(contractInstance) { \n\n        contractInstance.queryAsset\n (assetID, {gas: 1400000, from: user_address}).then(function(c) { \n          console.log(c.toLocaleString()); \n        }); \n      }); \n    } \n    catch (err) { \n      console.log(err); \n    } \n  } \n```"]