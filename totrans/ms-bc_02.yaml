- en: Chapter 2. Decentralization
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Decentralization is not a new concept; it has been used in strategy, management,
    and governance for a long time. The basic idea of decentralization is to distribute
    control and authority to peripheries instead of one central authority being in
    full control of the organization. This results in several benefits for organizations.
    such as increased efficiency, quicker decision making, better motivation, and
    a reduced burden on top management.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, the concept of decentralization will be discussed in the context
    of blockchain; the goals of both are similar, whereby no single central authority
    is in control. Methods of decentralization and routes to decentralization with
    some examples will also be presented. Also, the decentralization of the blockchain
    ecosystem, decentralized applications, and platforms for decentralization will
    be discussed in detail. Many exciting applications and ideas emerge out of the
    decentralized blockchain technology, and will be introduced in this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Decentralization using blockchain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Decentralization is a core benefit and service provided by the blockchain technology.
    Blockchain by design is a perfect vehicle for providing a platform that does not
    need any intermediaries and can function with many different leaders chosen via
    consensus mechanisms. This model allows anyone to compete to become the decision-making
    authority. This competition is governed by a consensus mechanism and the most
    commonly used method is known as **Proof of Work** (**PoW**).
  prefs: []
  type: TYPE_NORMAL
- en: Decentralization is applied in varying degrees from semi-decentralized to fully
    decentralized depending on the requirements and circumstances. Decentralization
    can be viewed from a blockchain perspective as a mechanism that provides a way
    to remodel existing applications and paradigms or build new applications in order
    to give full control to users.
  prefs: []
  type: TYPE_NORMAL
- en: '**Information and communication technology** (**ICT**) has conventionally been
    based on a centralized paradigm whereby database or application servers are under
    the control of a central authority, such as a system administrator. With bitcoin
    and the advent of the blockchain technology, this model has changed and now the
    technology that allows anyone to start a decentralized system (and operate it
    with no single point of failure or single trusted authority) is available. It
    can either be run autonomously or by requiring some human intervention depending
    on the type and model of governance used in the decentralized application running
    on the blockchain.'
  prefs: []
  type: TYPE_NORMAL
- en: An upcoming diagram shows different types of system that currently exist, that
    is, central, distributed, and decentralized. This concept was first published
    in 1964 in a paper by *Paul Baran* on *distributed communication networks* in
    the context of communication networks.
  prefs: []
  type: TYPE_NORMAL
- en: Centralized systems are conventional (client--server) IT systems whereby there
    is a single authority that controls the system and is solely in-charge of all
    operations on the system. All users of a central system are dependent on a single
    source of service. Online service providers, such as eBay, Google, Amazon, Apple's
    App Store, and the majority of other providers, use this common model of delivering
    services. On the other hand, in a distributed system, the data and computation
    are spread across multiple nodes in the network. Sometimes, this term is confused
    with parallel computing. While there is an overlap in the definition, the main
    difference between both these systems is that in a parallel system, computation
    is performed by all nodes simultaneously in order to achieve a result, whereas
    in a distributed system, computation may not happen in parallel and data is only
    replicated on multiple nodes that users view as a single coherent system. Both
    of these models are used with variations in order to achieve failure tolerance
    and speed. In this model, there is still a central authority that has control
    over all nodes and governs processing. This means that the system is still centralized
    in nature.
  prefs: []
  type: TYPE_NORMAL
- en: '![Decentralization using blockchain](img/B05975_02_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Different types of network/system
  prefs: []
  type: TYPE_NORMAL
- en: The key difference between a decentralized system and distributed system is
    that in a distributed system, there still exists a central authority that governs
    the entire system, whereas in a decentralized system, no such authority exists.
    A decentralized system is a type of network whereby nodes are not dependent on
    a single master node; instead, control is distributed among many nodes. For example,
    this is analogous to a model where each department in an organization has its
    own database server that they are in charge of, thus taking away the power from
    the central server and distributing it to the sub-departments that manage their
    own databases.
  prefs: []
  type: TYPE_NORMAL
- en: A real innovation in the decentralized paradigm that has started this new era
    of decentralization applications is decentralized consensus, which was introduced
    with bitcoin. This enables a user to agree on something via a consensus algorithm
    without the need for a central trusted third party, intermediary, or service provider.
  prefs: []
  type: TYPE_NORMAL
- en: Methods of decentralization
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are two methods that can be used to achieve decentralization. These methods
    are discussed in detail in the following sections.
  prefs: []
  type: TYPE_NORMAL
- en: Disintermediation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This can be explained with the help of an example. Imagine you want to send
    money to your friend in another country. You go to a bank that will transfer your
    money to the bank in the country of your choice for a fee. In this case, the bank
    keeps a central database that is updated, confirming that you have sent the money.
    With blockchain technology, it is possible to send this money directly to your
    friend without the need for a bank. All you need is the address of your friend
    on the blockchain. This way, the intermediary is no longer required and decentralization
    is achieved by disintermediation. However, it is debatable how practical decentralization
    is in the financial sector by disintermediation due to heavy regulatory and compliance
    requirements. Nevertheless, this model can be used not only in finance but also
    in many other different industries.
  prefs: []
  type: TYPE_NORMAL
- en: Through competition
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this method, a group of service providers compete with each other in order
    to be selected for the provision of services by the system. This paradigm does
    not achieve complete decentralization, but to a certain degree ensures that an
    intermediary or service provider is not monopolizing the service. In the context
    of blockchain technology, a system can be envisioned in which smart contracts
    can choose an external data provider from a large number of providers based on
    their reputation, previous score, reviews, and quality of service. This will not
    result in full decentralization, but it allows smart contracts to make a free
    choice based on the criteria mentioned earlier. This way, an environment of competition
    is cultivated among service providers, whereby they compete with each other to
    become the data provider of choice.
  prefs: []
  type: TYPE_NORMAL
- en: In the following diagram, varying levels of decentralization are shown. On the
    left-hand side, there is a conventional approach where a central system is in
    control; on the right-hand side, complete disintermediation is achieved; and in
    middle, competing intermediaries or service providers are shown. In the middle,
    intermediaries or service providers are selected based on reputation or voting,
    thus achieving partial decentralization.
  prefs: []
  type: TYPE_NORMAL
- en: '![Through competition](img/B05975_02_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Scale of decentralization
  prefs: []
  type: TYPE_NORMAL
- en: While there are many benefits of decentralization--including but not limited
    to transparency, efficiency, cost saving, development of trusted ecosystems, and
    in some cases privacy and anonymity--some challenges, such as security requirements,
    software bugs, and human errors, also need to be looked at thoroughly. For example,
    in a decentralized system such as bitcoin or Ethereum, where security is usually
    provided by private keys, how can it be ensured that a smart property associated
    with these private keys cannot be rendered useless if, due to a human error, the
    private keys are lost or if, due to a bug in the smart contract code, the decentralized
    application is vulnerable to attack by adversaries? Before we embark on a journey
    to decentralize everything using blockchain and decentralized applications, it
    is important to understand that not everything is required to (or can be) decentralized.
  prefs: []
  type: TYPE_NORMAL
- en: Routes to decentralization
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Even though there are systems that existed before bitcoin or blockchain that
    can be classed as decentralized to a certain degree, such as BitTorrent or Gnutella
    file sharing, with the advent of the blockchain technology many initiatives are
    being taken in order leverage this new technology for decentralization. Usually,
    the bitcoin blockchain is the first choice for many as it has proven to be the
    most resilient and secure blockchain with a market cap of almost 12 billion dollars.
    An alternative approach is to use other blockchains, such as Ethereum, which is
    currently the tool of choice of many developers for building decentralized applications.
  prefs: []
  type: TYPE_NORMAL
- en: How to decentralize
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'A framework has been proposed by *Arvind Narayanan* and others that can be
    used to evaluate the decentralization requirements of a variety of things in the
    context of blockchain technology. The framework basically proposes four questions
    that, once answered, provide a clear idea as to how a system can be decentralized.
    These questions are listed as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: What is being decentralized?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What level of decentralization is required?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What blockchain is used?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What security mechanism is used?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The first question simply asks what system is being decentralized. This can
    be any system, for example an Identity system or trading. The next question can
    be answered by specifying the level of decentralization required by looking at
    the scale of decentralization discussed earlier. It can be full disintermediation
    or partial disintermediation. The third question is quite straightforward, where
    developers can make a choice as to which blockchain is suitable for a particular
    application. It can be bitcoin blockchain, Ethereum blockchain, or any other blockchain
    that is deemed fit for a specific application. Finally, a key question needs to
    be answered about the security mechanism as to how the security of a decentralized
    system can be guaranteed. It can be Atomicity, for example, whereby either the
    transaction executes in full or does not execute at all. In other words, it is
    all or nothing. This ensures the integrity of the system. Other mechanisms can
    include reputation, which allows varying degrees of trust in a system.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In this section, an example of the application of the afore mentioned framework
    is provided.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the first example, a money transfer system is selected, which is required
    to be decentralized. In this case, the four questions mentioned earlier can be
    answered in order to evaluate the decentralization requirements. The answers are
    shown as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Answer 1**: Money transfer system.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Answer 2**: Disintermediation.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Answer 3**: Bitcoin.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Answer 4**: Atomicity.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: By answering these four questions, it can be shown how a payment system can
    be decentralized. Based on the preceding answers, it can be stated that the money
    transfer system can be decentralized by removing the intermediary and will be
    implemented on the Bitcoin blockchain with security guarantee provided via Atomicity.
  prefs: []
  type: TYPE_NORMAL
- en: Similarly, this framework can be used for any other system that needs to be
    evaluated for decentralization. By answering these four simple questions, it becomes
    quite clear as to what approach can be taken to decentralize the system.
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain and full ecosystem decentralization
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In order to achieve complete decentralization, it is necessary that the environment
    around the blockchain is also decentralized. Blockchain itself is a distributed
    ledger that runs on top of conventional systems. These elements include storage,
    communication, and computation. There are other factors, such as Identity and
    Wealth, that are traditionally based on centralized paradigms and there's a need
    to decentralize these aspects too in order to achieve a fully decentralized ecosystem.
  prefs: []
  type: TYPE_NORMAL
- en: Storage
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Data can be stored directly in a blockchain, and with this, it does achieve
    decentralization, but a major disadvantage of this approach is that blockchain
    is not suitable for storing large amounts of data by design. It can store simple
    transactions and some arbitrary data but is certainly not suitable for storing
    images or large blobs of data, as is the case in traditional database systems.
    A better alternative is to use **distributed hash tables** (**DHTs**). DHTs were
    originally used in peer-to-peer file sharing software, such as BitTorrent, Napster,
    Kazaa, and Gnutella. DHT research was made popular by CAN, Chord, Pastry, and
    Tapestry projects. BitTorrent turns out to be the most scalable and fast network,
    but the issue is that there is no incentive for users to keep the files indefinitely.
    Users do not usually keep files permanently, and if nodes leave the network that
    has data required by someone, there is no way to retrieve it except having the
    required nodes rejoin the network again so that the files become available once
    more. Two main requirements here are high availability and link stability, which
    means that data should be available when required and network links should also
    always be accessible. **Inter Planetary File System** (**IPFS**) by *Juan Benet*
    possesses both of these properties and the vision is to provide a decentralized
    World Wide Web by replacing the HTTP protocol. IPFS uses Kademlia DHT and merkle
    **DAG** (**Directed Acyclic Graph**) to provide the storage and searching functionality,
    respectively.
  prefs: []
  type: TYPE_NORMAL
- en: The incentive mechanism is based on a protocol known as Filecoin that pays incentives
    to nodes that store data using the BitSwap mechanism. The BitSwap mechanism allows
    nodes to keep a simple ledger of bytes sent or bytes received under a one-to-one
    relationship. Also, a Git-based version control mechanism is used in IPFS to provide
    structure and control over the versioning of data.
  prefs: []
  type: TYPE_NORMAL
- en: There are other alternatives, such as Ethereum swarm, storj, and maidsafe. Ethereum
    has its own decentralized and distributed ecosystem that uses Swarm for storage
    and the whisper protocol for communication. Maidsafe is aiming to provide a decentralized
    World Wide Web. All these projects will be discussed later in the book in more
    detail.
  prefs: []
  type: TYPE_NORMAL
- en: BigChainDB is another storage layer decentralization project aimed at providing
    a scalable, fast, and linearly scalable decentralized database as opposed to a
    traditional filesystem. BigChainDB complements decentralized processing platforms
    and file systems such as Ethereum and IPFS.
  prefs: []
  type: TYPE_NORMAL
- en: Communication
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: It is generally considered that the Internet (the communication layer in blockchain)
    is decentralized. This is true to some extent as the original vision of the Internet
    was to develop a decentralized system. Services such as e-mail and online storage
    are all now based on a paradigm where the service provider is in control and users
    trust them to give them access to the service when required. This model is based
    on the trust of the central authority (the service provider) and users are not
    in control of their data; even passwords are stored on trusted third-party systems.
    There is a need to provide control to individual users in such a way that access
    to their data is guaranteed and is not dependent on a single third party. Access
    to the Internet (the communication layer) is based on Internet service providers
    (ISPs) that act as a central hub for Internet users. If the ISP is shut down for
    political or any other reasons, then no communication is possible in this model.
    An alternative is to use mesh networks. Even though they are limited in functionality
    as compared to the Internet, they still provide a decentralized alternative where
    nodes can talk directly to each other without a central hub such as an ISP.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: An example of a Meshnet is Firechat ([http://www.opengarden.com/firechat.html](http://www.opengarden.com/firechat.html)),
    which allows iPhone users to communicate with each other directly in a peer-to-peer
    fashion without the Internet.
  prefs: []
  type: TYPE_NORMAL
- en: Now imagine a network that allows users to be in control of their communication;
    no one can shut it down for political or censorship reasons. This could be the
    next step toward decentralizing communication networks in the blockchain ecosystem.
    It must be noted that this model may only be required in a jurisdiction where
    the Internet is censored and controlled by the government.
  prefs: []
  type: TYPE_NORMAL
- en: As mentioned earlier, the original vision of the Internet was to build a decentralized
    network; however, over the years, with the advent of large-scale service providers
    such as Google, Amazon, and eBay, the control is shifting toward the big players.
    For example, e-mail is a decentralized system at its core; anyone can run an e-mail
    server with minimal effort and can start sending and receiving e-mails, but there
    is a better alternative available that is already providing a managed service
    for end users, so there is a natural inclination toward selecting a centralized
    service as it is more convenient and free. Free services, however, are being offered
    at the cost of valuable personal data and many users are not aware of this fact.
    This is one example that shows how the Internet has moved toward centralization.
    Blockchain has once again given this vision of decentralization to the world and
    now concerted efforts are being made to harness this technology and gain the benefits
    that it can provide.
  prefs: []
  type: TYPE_NORMAL
- en: Computation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Decentralization of computing or processing is achieved by a blockchain technology
    such as Ethereum, where smart contracts with embedded business logic can run on
    the network. Other blockchain technologies also provide similar processing layer
    platforms where business logic can run over the network in a decentralized manner.
  prefs: []
  type: TYPE_NORMAL
- en: The following diagram shows the decentralized ecosystem overview where, on the
    bottom layer, Internet or Meshnets provides a decentralized communication layer,
    then a storage layer uses technologies such as IPFS and BigChainDB to enable decentralization,
    and finally, you see the blockchain that serves as a decentralized processing
    layer. Blockchain can, in a limited way, provide a storage layer too, but that
    seriously hampers the speed and capacity of the system; therefore, other solutions
    such as IPFS and BigChainDB are more suitable to store large amounts of data in
    a decentralized way. At the top, the Identity and Wealth layers are shown. Identity
    on the Internet is a very big topic and systems such as bitAuth and OpenID have
    provided authentication and identification services with varying degrees of decentralization
    and security assumptions.
  prefs: []
  type: TYPE_NORMAL
- en: Blockchain is capable of providing solutions to various problems. A concept
    relevant to Identity known as *Zooko's Triangle* requires that a naming system
    in a network protocol be secure, decentralized, and meaningful to humans. It is
    conjectured that a system can have only two of these properties simultaneously,
    but with the advent of blockchain, in the form of Namecoin, this problem was resolved.
    This, however, is not a panacea and comes with its own challenges, such as reliance
    on users to store and maintain private keys securely. This opens up other general
    questions about the suitability of decentralization. Perhaps decentralization
    is not appropriate in every scenario. Well-reputed centralized systems tend to
    work better in many cases.
  prefs: []
  type: TYPE_NORMAL
- en: '![Computation](img/image_02_003.jpg)'
  prefs: []
  type: TYPE_IMG
- en: There are many projects underway that are developing solutions for a wider distributed
    blockchain system.
  prefs: []
  type: TYPE_NORMAL
- en: With the emergence of the decentralization paradigm, different terminologies
    and buzz words are now appearing in the media and in academic literature. With
    the advent of the blockchain technology, it is now possible to build software
    versions of traditional physical organizations. In the context of decentralization,
    the upcoming concepts are worth discussing.
  prefs: []
  type: TYPE_NORMAL
- en: Smart contract
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A smart contract can be thought of as a small decentralized program. Smart contracts
    do not necessarily need a blockchain to run; however, due to the security benefits
    that the blockchain technology provides, it is now becoming almost a standard
    to use blockchain as a decentralized execution platform for smart contracts. A
    smart contract usually contains some business logic and a limited amount of data.
    Actors or participants in the blockchain use these smart contracts or they run
    autonomously on behalf of the network participants.
  prefs: []
  type: TYPE_NORMAL
- en: These small programs reside on the blockchain and execute business logic if
    some specific criteria are met. More information on smart contracts will be provided
    in [Chapter 6](ch06.html "Chapter 6. Smart Contracts"), *Smart Contracts*, which
    is dedicated to a detailed discussion of smart contracts.
  prefs: []
  type: TYPE_NORMAL
- en: Decentralized organizations
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Decentralized organization** (**DOs**) are software programs that run on
    a blockchain and are based on the idea of real human organizations with people
    and protocols. Once a DO, in the form of a smart contract or a set of smart contracts,
    is added to the blockchain, it becomes decentralized and parties interact with
    each other based on the code defined within the DO software.'
  prefs: []
  type: TYPE_NORMAL
- en: Decentralized autonomous organizations
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Just like DOs, a **Decentralized autonomous organization** (**DAO**) is also
    a computer program than runs on top of a blockchain and embedded within it are
    governance and business logic rules. DAO and DO are basically the same thing,
    but the main difference is that DAOs are autonomous, which means that they are
    fully automated and contain artificially intelligent logic, whereas DOs lack this
    feature and rely on human input in order to execute business logic.
  prefs: []
  type: TYPE_NORMAL
- en: Ethereum blockchain led the way with the introduction of DAOs for the first
    time. In DAO, the code is considered the governing entity rather than humans or
    paper contracts. A *Curator*, however, is a human entity that participates as
    someone who maintains this code and acts as a proposal evaluator for the community.
    DAOs are capable of hiring external *Contractors* if enough input is received
    from the token holders (participants). The most famous DAO project is *The DAO* ([https://daohub.org](https://daohub.org))
    as it raised 168 million US dollars in its crowd-funding phase. The DAO project
    was designed to be a venture capital fund which was aimed at providing a decentralized
    business model with no single entity as an owner. Unfortunately, this was hacked
    due to a bug in the DAO code and millions of dollars' worth of **Ether currency**
    (**ETH**) were siphoned out of the DAO into a child DAO created by the hackers.
    It required a hard fork on the Ethereum blockchain to reverse the impact of the
    hack and initiate the recovery of the funds. This incident opened up a debate
    on the security, quality, and the need for thorough testing of the code in smart
    contracts in order to ensure integrity and adequate control. There are projects
    underway, especially in Academia, that are looking to formalize smart contract
    coding.
  prefs: []
  type: TYPE_NORMAL
- en: Currently, DAOs do not have any legal status even though they may contain some
    intelligent code that enforces some protocols and conditions, but these rules
    have no value in the current real-world legal system. One day, perhaps an *autonomous*
    * agent* that is commissioned and permissioned by a law enforcement agency or
    a regulator containing rules and regulations could be embedded in a DAO, to ensure
    the integrity of the DAO from a legal and compliance perspective. An **Autonomous Agent**
    (**AA**) is a piece of code that runs without human intervention. The fact that
    DAOs are purely decentralized entities makes it possible to run them in any physical
    jurisdiction. Therefore, they raise a big question as to how a current legal system
    would work with such a varied mix of different jurisdictions and geographies.
  prefs: []
  type: TYPE_NORMAL
- en: Decentralized autonomous corporations
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**DAOs**, **Decentralized autonomous corporations** (**DACs**) are a similar
    concept but are considered a smaller subset of DAOs. The definitions of DACs and
    DAOs can sometimes overlap, but a general difference is that DAOs are usually
    considered to be nonprofit, whereas DACs can make money via shares offered to
    the participants and by paying dividends. These corporations can run a business
    automatically without human intervention based on the logic programmed within
    them.'
  prefs: []
  type: TYPE_NORMAL
- en: Decentralized autonomous societies
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Decentralized autonomous societies** (**DASs**) are a concept whereby entire
    societies can function on a blockchain with the help of multiple complex smart
    contracts and a combination of DAOs and **Decentralized applications** (**DAPPs**)
    running autonomously. This model does not mean an outlaw approach, nor is it based
    on a totally libertarian ideology; instead, many services that a government offers
    can be delivered via blockchain, such as Government Identity Card systems, passport
    issuance, and records of deeds, marriages, and births. Another theory is that,
    if a government is corrupt and central systems do not provide the satisfactory
    levels of trust that a society needs, then the society can start its own virtual
    society on a blockchain that is driven by decentralized consensus and is transparent.
    This might be seen as a libertarian or cypherpunk dream but is entirely possible
    on a blockchain.'
  prefs: []
  type: TYPE_NORMAL
- en: Decentralized applications
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: All ideas mentioned earlier come under the larger umbrella of decentralized
    applications. All DAOs, DACs, and DOs are basically decentralized applications
    that run on top of a blockchain in a peer-to-peer network. This is the latest
    advancement in technology with regard to decentralization. Decentralized applications
    or DAPPs are software programs that can run on their own blockchain, use another
    already existing established blockchain, or use only protocols of an existing
    blockchain solution. These are called Type I, Type II, and Type III DAPPs.
  prefs: []
  type: TYPE_NORMAL
- en: Requirements of a decentralized application
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In order for an application to be considered a decentralized application, it
    must meet the following criteria. This definition was provided by *David Johnston*
    and others in their whitepaper called *The General Theory of Decentralized Applications,
    Dapps*:'
  prefs: []
  type: TYPE_NORMAL
- en: The DAPP should be fully open source and autonomous and no single entity should
    be in control of a majority of its tokens. All changes to the application must
    be consensus-driven based on the feedback given by the community.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Data and records of operations of the application must be cryptographically
    secured and stored on a public, decentralized blockchain in order to avoid any
    central points of failure.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A cryptographic token must be used by the application in order to provide access
    and rewards to those who contribute value to the applications, for example, miners
    in bitcoin.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The tokens must be generated by the decentralized application according to a
    standard cryptographic algorithm. This generation of tokens acts as a proof of
    the value to contributors (for example, miners).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Operations of a DAPP
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Establishment of consensus by a DAPP can be achieved using consensus algorithms
    such as Proof of Work and Proof of Stake. So far, only PoW has been found to be
    incredibly resistant to 51% attacks, as is evident from bitcoin. Furthermore,
    a DAPP can distribute tokens (coins) via mining, fundraising, and development.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Examples of some decentralized applications are provided here.
  prefs: []
  type: TYPE_NORMAL
- en: KYC-Chain
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This application provides a facility to manage **Know Your Customer** (**KYC**)
    data in a secure and convenient way based on smart contracts.
  prefs: []
  type: TYPE_NORMAL
- en: OpenBazaar
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This is a decentralized peer-to-peer network that allows commercial activities
    directly between sellers and buyers instead of relying on a central party, as
    opposed to conventional providers such as eBay and Amazon. It should be noted
    that this system is not built on top of a blockchain; instead, distributed hash
    tables are used in a peer-to-peer network in order to enable direct communication
    and data sharing between peers. It makes use of bitcoin as a payment network,
    however.
  prefs: []
  type: TYPE_NORMAL
- en: Lazooz
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This is a decentralized equivalent of Uber. It allows peer-to-peer ride sharing
    and users can be incentivized by *proof of movement* and can earn Zooz coins.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: There are many other DAPPS that have been built on the Ethereum blockchain and
    are showcased at [http://dapps.ethercasts.com/](http://dapps.ethercasts.com/).
  prefs: []
  type: TYPE_NORMAL
- en: Platforms for decentralization
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are many platforms available for decentralization now. Many companies
    around the world have introduced platforms that promise to make distributed application
    development easy, accessible, and secure for users. Some prominent names are discussed
    here.
  prefs: []
  type: TYPE_NORMAL
- en: Ethereum
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Ethereum tops the list as being the first blockchain that introduced a Turing-complete
    language and the concept of a virtual machine. This is in contrast to the limited
    scripting language in bitcoin and many other cryptocurrencies. With the availability
    of this Turing-complete language called Solidity, endless possibilities have opened
    for the development of decentralized applications. This was proposed in 2013 by
    *Vitalik Buterin* and provides a public blockchain to develop smart contracts
    and decentralized applications. Currency tokens on Ethereum are called Ethers.
  prefs: []
  type: TYPE_NORMAL
- en: Maidsafe
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Maidsafe provides a **SAFE** (**Secure Access for Everyone**) network that is
    made up of unused computing resources, such as storage, processing power, and
    the data connections of its users. The files on the network are divided into small
    chunks of data that are encrypted and distributed throughout the network randomly.
    This data can only be retrieved by its respective owner. One key innovation is
    that duplicate files are automatically rejected on the network, which helps reduce
    the need for additional computing resources to manage the load. It uses Safecoin
    as a token to incentivize its contributors.
  prefs: []
  type: TYPE_NORMAL
- en: Lisk
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Lisk is a blockchain application development and cryptocurrency platform. It
    allows developers to use JavaScript to build decentralized applications and host
    them in their own respective sidechains. Lisk uses the **Delegated Proof of Stake**
    (**DPOS**) mechanism for consensus whereby 101 nodes can be elected to secure
    the network and propose blocks. It uses the Node.js and JavaScript backend whereas
    the frontend allows the use of standard technologies, such as CSS3, HTML5, and
    JavaScript. Lisk uses LSK coin as a currency on the blockchain. Another derivative
    of Lisk is Rise, which is a Lisk-based decentralized application and digital currency
    platform. It has more focus on the security of the system.
  prefs: []
  type: TYPE_NORMAL
- en: A more practical introduction to these platforms and others will be supplied
    in later chapters.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter introduced the concept of decentralization, which is the core service
    offered by the blockchain technology. Although the concept of decentralization
    is not new, it gained renewed significance in the world of blockchain. As such,
    various applications based on decentralized architecture have been introduced
    recently. The chapter started with an introduction to the idea of decentralization.
    Next, decentralization from the blockchain perspective was discussed. Moreover,
    ideas related to different layers of decentralization in the blockchain ecosystem
    were introduced. There are several new concepts and terms that have emerged with
    the advent of the blockchain technology and decentralization from the blockchain
    perspective, such as DAOs, DAPPs, and various others. An introduction to all these
    terms was also provided in this chapter. Finally, decentralized applications with
    some examples were discussed. In the next chapter, fundamental concepts that are
    necessary to understand the Blockchain ecosystem will be presented. Mainly, cryptography
    will be introduced, which provides a crucial foundation for the blockchain technology.
  prefs: []
  type: TYPE_NORMAL
