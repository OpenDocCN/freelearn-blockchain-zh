- en: A Technical Dive into Blockchain
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Because digital ubiquity raises more and more concern for decision-makers to
    be able to thrive and adapt their businesses to emerging trends and shifts in
    consumption habits, new technologies have to be well apprehended. Blockchain,
    as a matter of fact, is a new enabler that must be understood properly when considering
    an innovation strategy for your company.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: First of all, there are different types of blockchain but the general idea behind
    them is the same. Mainly, they aim to solve trust issues between strangers willing
    to exchange value in the digital world. Secondly, even though we can distinguish
    several kinds of blockchain such as public or semi-private infrastructures (more
    on that in [Chapter 9](e768d501-bd11-4725-96d3-4898bdf5e063.xhtml), *Infrastructures
    and Cloud-Based Solutions*), they all integrate similar components.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: Throughout this chapter, we will discover how the network empowers the blockchain,
    how hashes allow transactions and information to be secured, how digital identities
    are managed, and how game theory and economics enable responsible behavior. We
    will also have a look at the original problem that blockchain was the answer to
    and eventually discover what kind of consensus protocol can be implemented to
    achieve mass coordination within the network. Each component will be described
    as a sole instrument but we shall adopt a holistic view when we combine them all
    together. Therefore, one section can appear unclear when read separately but,
    by the end of this chapter, you should appreciate the functioning of the whole
    infrastructure and the role of each feature that come together to form a blockchain.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: Enliven the blockchain with the network
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cryptography and hash functions
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The data structure
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Managing digital identities
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Byzantine Generals Problem
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The incentive mechanism
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Achieving consensus
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: No network, no blockchain
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A blockchain's most important component is the network—which is the community
    empowering it. The role of the community is to ensure that the truth is correctly
    recorded in the shared database.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: 'The following diagram is an overview of a blockchain layer:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/5cb00ce4-f2c6-415b-ba9a-f5dd4d477830.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
- en: To understand this in a better way, let's look at a metaphorical example.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: Truth in the network
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Imagine a US Open final is happening next weekend between Roger Federer and
    Rafael Nadal. Being a big fan of Roger Federer and being sure he will win the
    game, Alice bets $10 on the betting website Betwin. On the other hand, Bob, who
    is an experienced gambler, thinks that Rafael Nadal will win. Bob decides to place
    a $10 bet on the Betwin platform on Rafael Nadal's victory.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: Because Betwin is a private company, its objective is to maximize its profit.
    To do so, the company could tell Alice that Rafael Nadal won the game and tell
    Bob that Roger Federer won the game. In this manner, Betwin could hold both bets
    without having to pay either Alice or Bob.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 因为 Betwin 是一家私人公司，其目标是最大化利润。为了做到这一点，该公司可以告诉 Alice 拉斐尔·纳达尔赢得了比赛，并告诉 Bob 罗杰·费德勒赢得了比赛。这样，Betwin
    可以同时持有这两个赌注，而不必支付 Alice 或 Bob 任何一方。
- en: '*Why is this method preposterous for Betwin?*'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '*为什么这种方法对 Betwin 来说荒谬？*'
- en: The evident explanation is that Alice and Bob will not only believe Betwin to
    know the result of the game. They will check press releases, have a look at internet
    news, or ask their friends. And unless Betwin can make the press, the internet
    news, and Alice and Bob's friends announce the result that suits them best, their
    method will not work. In short, Alice and Bob do not trust only one third party,
    but instead, rely on the network to know the truth. And until there is no proof
    that Betwin controls the network, Alice and Bob will always know the truth.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 显而易见的解释是，Alice 和 Bob 不仅相信 Betwin 知道比赛结果。他们会查看新闻稿，查看互联网新闻，或询问朋友。除非 Betwin 能够让新闻稿、互联网新闻以及
    Alice 和 Bob 的朋友公布最符合他们利益的结果，否则他们的方法将行不通。简而言之，Alice 和 Bob 不仅仅信任一个第三方，而是依赖于网络来了解真相。除非有证据证明
    Betwin 控制网络，否则 Alice 和 Bob 将永远知道真相。
- en: In a blockchain, the information that the majority of the community agrees on
    as being true is recorded on the database that is shared among all members.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在区块链中，大多数社区认为真实的信息记录在共享给所有成员的数据库上。
- en: The information added to the database is also checked with previous information
    already registered. In our example, Novak Djokovic cannot win the US Open final
    because there is information in the database stating that he already lost the
    previous round.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 添加到数据库中的信息还会与已经注册的先前信息进行检查。在我们的例子中，诺瓦克·德约科维奇不能赢得美国公开赛决赛，因为数据库中有信息表明他已经输掉了上一轮比赛。
- en: Let's move on to look at the various key roles within a blockchain network.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续看看区块链网络中的各种关键角色。
- en: Participants in the network
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网络参与者
- en: Once again, the network is a very important feature in a blockchain—it has to
    be decentralized enough to be sure that the majority is not controlled by a single
    entity. It has to be heterogeneous enough so that the truth is represented by
    the majority. To achieve decentralization and heterogeneity, data must be distributed
    across the community. It should be distributed to anyone who wants to participate
    with no condition or barriers, forming a network of computers interacting with
    each other.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 再次强调，网络是区块链中非常重要的一个特性——它必须去中心化到足以确保大多数不受单一实体控制。它必须足够异质，以便真相由大多数代表。为了实现去中心化和异质性，数据必须分布在社区中。它应该分布给任何想要参与的人，没有条件或障碍，形成一个相互交互的计算机网络。
- en: The network layer of a blockchain is also known as a peer-to-peer network.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链的网络层也被称为对等网络。
- en: In a centralized system, devices such as phones or computers access information
    to a central server that is owned by one entity. In a decentralized system supported
    by a peer-to-peer network, all of the devices, including the servers, interact
    and communicate with each other independently. These devices are called **nodes**.
    Each node can share information with any other node, without relying on a central
    server. Examples of such networks are the infamous file-sharing applications,
    BitTorrent, uTorrent and eMule, enabling users to download from and share data.
    When you are a participant of a peer-to-peer network, you act both as a provider
    and a consumer of files retrieved through other nodes. These are the kind of networks
    that enable decentralization within a blockchain. No entity is proprietary of
    the data nor has the exclusive right to read or modify the database.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在集中式系统中，诸如手机或计算机的设备访问由一个实体拥有的中央服务器上的信息。在由对等网络支持的分散式系统中，所有设备，包括服务器，都相互独立地互动和通信。这些设备被称为**节点**。每个节点都可以与任何其他节点共享信息，而无需依赖中央服务器。此类网络的示例是臭名昭著的文件共享应用程序
    BitTorrent、uTorrent 和 eMule，使用户可以从其他节点下载和共享数据。当你是对等网络的参与者时，你既是文件的提供者，也是通过其他节点检索的文件的消费者。这些是使区块链内部分散化的网络。没有任何实体拥有数据，也没有独家权利读取或修改数据库。
- en: The story of Napster is a revealing example of the weaknesses showed in a centralized
    system, especially in terms of control. Napster was a music file-sharing application
    that was shut down in 2001 after a long legal action undertook by record companies
    complaining about a violation of copyrights. Although Napster worked upon a peer-to-peer
    network, it centrally maintained a directory of all users and files. This configuration
    allowed the US district court to cease Napster's activity once the injunction
    was issued. The seizure would probably not have happened if the application relied
    on a true decentralized peer-to-peer network where the directories were stored
    by each node.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: Napster 的故事是揭示集中系统中所显示的弱点的一个例子，特别是在控制方面。 Napster 是一个音乐文件共享应用，经过长时间的法律诉讼后于 2001
    年被关闭，此举由唱片公司进行了长时间的诉讼，抱怨侵犯了版权。尽管 Napster 基于对等网络，但它中央维护着所有用户和文件的目录。这种配置使美国地区法院能够一旦发布禁令就停止
    Napster 的活动。如果该应用程序依赖真正去中心化的对等网络，其中目录由每个节点存储，扣押可能不会发生。
- en: 'In a blockchain, there are several roles given to the participants of the network:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在区块链中，给参与者指定了几种角色：
- en: '**The users**: They utilize the application running on top of the blockchain.
    They do not own any data from that blockchain; they solely use the service.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户**：他们利用运行在区块链之上的应用程序。他们并不拥有来自该区块链的任何数据；他们仅仅使用服务。'
- en: '**The nodes**: These computers store the database on their memory and make
    it available for anyone to see the history of transactions or information.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**节点**：这些计算机在它们的内存中存储数据库，并让任何人都能查看交易或信息的历史。'
- en: '**The miners**: These computers run the software enabling the validation of
    blocks and transactions.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**矿工们**：这些计算机运行的软件验证区块和交易。'
- en: In certain blockchains, such as the one underpinning Bitcoin, anybody can become
    a miner, a node, or just a user. These kinds of blockchains are called public
    (or permissionless) as opposed to private (or permissioned) blockchains in which
    the roles are predefined for every participant. We will explore these differences
    further in the next chapters.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些区块链中，比如支撑比特币的区块链，任何人都可以成为矿工、节点或只是用户。这些区块链被称为公共（或无需许可）区块链，与私有（或受限制）区块链相对，后者的角色是为每个参与者预定义的。我们将在接下来的章节中进一步探讨这些差异。
- en: We will not technically describe how these nodes are connected but we will remember
    that, in a distributed system (in the end, that is what a blockchain is), the
    computers talk to each other to exchange information efficiently. Geolocation
    and power of the computers are variables that are taken into consideration when
    making the computers talk to each other.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不会在技术上描述这些节点是如何连接的，但我们会记住，在一个分布式系统中（最终，这就是区块链所在的地方），计算机相互交流以有效地交换信息。在使计算机相互交流时，地理位置和计算机的性能是要考虑的变量。
- en: 'Each node (and each miner) holds an identical copy of the blockchain. New miners
    and nodes download the entire history to the peers they are connected to if they
    want to be part of that network. The size of a blockchain can be pretty memory-consuming:
    at the time of writing this book, if you want to become a node of the Bitcoin
    blockchain, you must download a 223 GB file.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 每个节点（以及每个矿工）都持有区块链的相同副本。如果要成为该网络的一部分，新的矿工和节点会从它们连接到的节点那里下载整个历史记录。区块链的大小可能会占用相当多的内存：在撰写本书时，如果你想成为比特币区块链的一个节点，你必须下载一个
    223 GB 的文件。
- en: 'The responsibility of the miner is to do the following:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 矿工的责任是做以下事情：
- en: Construct a new block with new transactions.
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建一个新的区块，包含新的交易。
- en: Find the correct answer to the mathematical problem (the nonce) to validate
    the block.
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 找到数学问题的正确答案（随机数），以验证区块。
- en: Spread it across the network for everyone to see and check.
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将其传播到网络中，让每个人都能看到和检查。
- en: For the blockchain to evolve, transactions need to occur continuously and get
    compiled in blocks by the miners who calculate the resulting hash before adding
    the block to the chain.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让区块链持续发展，交易需要不断发生，并由计算出结果哈希的矿工整理成区块，然后将其添加到链中。
- en: But how do the miners ensure that the suggested block does not include fake
    transactions? And how do they add it to the chain?
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 但是矿工们如何确保建议的区块不包括虚假交易？他们又如何将其添加到链上呢？
- en: Cryptography
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 密码学
- en: 'We talked about cryptography and hash functions in the first chapter where
    we defined what it was:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在第一章谈到了密码学和哈希函数，其中定义了什么是：
- en: It is a mathematical function where, knowing the output, it is almost impossible
    to find the correct input. But knowing the input of the function, it is very easy
    to find the correct output. This is made possible because a hash function always
    returns the same output for the same input.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 它是一个数学函数，在知道输出的情况下，几乎不可能找到正确的输入。但是，知道函数的输入，很容易找到正确的输出。这是可能的，因为哈希函数对于相同的输入始终返回相同的输出。
- en: A hash is a result of a mathematical function that is a transformation applied
    to an input that generates an output. *Y = f(x)* is a mathematical function where
    *x* is the input and *Y* is the output.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希是对输入应用的数学函数的结果，产生输出。*Y = f(x)* 是一个数学函数，其中 *x* 是输入，*Y* 是输出。
- en: 'In mathematical terms, we have the following:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 用数学术语来说，我们有以下情况：
- en: '*"Knowing Y, it is almost impossible to find x. But knowing x, it is very easy
    to find Y."*'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '*"知道 Y，几乎不可能找到 x。但是知道 x，很容易找到 Y。"*'
- en: The hash function is essential to make information and transactions secured
    along the blockchain.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希函数对于保护沿着区块链的信息和交易至关重要。
- en: 'There are basic properties around a hash function that we have seen in [Chapter
    1](c15da2bc-7e16-4fbe-9e6b-c76ea35ea5fb.xhtml), *Basics of Blockchains and the
    Illustration of Village Beta*:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第1章](https://cdp.packtpub.com/blockchain_for_decision_makers/wp-admin/post.php?post=25&action=edit#post_24)
    *区块链基础知识与贝塔村的图解* 中，我们已经看到了关于哈希函数的基本属性：
- en: It is deterministic, meaning that it is always the same output for the same
    input.
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它是**确定性的**，意味着相同的输入始终产生相同的输出。
- en: It has a defined range, meaning that any size of input can be injected in the
    function but it will always be the same length output. In other words, no matter
    the length of the input, the function will always return a fixed number of characters
    (in [Chapter 1](https://cdp.packtpub.com/blockchain_for_decision_makers/wp-admin/post.php?post=25&action=edit#post_24), *Basics
    of Blockchains and the Illustration of Village Beta*, the output length was 64
    characters all the time because we were using the hash function, SHA-256).
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它有一个**定义范围**，这意味着任何大小的输入都可以注入到函数中，但输出始终是相同长度的。换句话说，无论输入的长度如何，函数始终返回固定数量的字符（在[第1章](https://cdp.packtpub.com/blockchain_for_decision_makers/wp-admin/post.php?post=25&action=edit#post_24)
    *区块链基础知识与贝塔村的图解* 中，输出长度始终为64个字符，因为我们使用的是哈希函数，SHA-256）。
- en: 'But these properties are not enough to secure a transaction or a piece of information.
    There are other cryptographic properties surrounding hash functions used in a
    blockchain:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 但这些属性还不足以保护交易或信息。区块链中使用的哈希函数周围还有其他加密属性：
- en: It is **change-sensitive**, meaning that if one character of the input is modified,
    the output will totally be different.
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它是**变化敏感的**，这意味着如果更改输入的一个字符，输出将完全不同。
- en: It is **non-invertible**, meaning that it should not be possible to determine
    efficiently the input of a given output, just like a padlock is not supposed to
    be deciphered.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它是**不可逆的**，这意味着不应该有效地确定给定输出的输入，就像无法解开挂锁一样。
- en: It is **collision-resistant**. A collision happens in a hash function when two
    different inputs generate the same output. Since inputs can have any length but
    outputs are fixed-length, obviously, there will be collisions. In other words,
    there is a finite number of possible outputs for an infinite number of inputs.
    Collision resistance means that finding two different inputs for the same output
    should not be possible using smart algorithms or strategy but only by trying every
    possibility. This is what we call **brute-force**.
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它是**抗碰撞的**。当两个不同的输入生成相同的输出时，哈希函数发生碰撞。由于输入可以有任意长度，但输出是固定长度的，显然会发生碰撞。换句话说，对于无限数量的输入，有限数量的输出。抗碰撞意味着使用智能算法或策略几乎不可能找到相同输出的两个不同输入，而只能通过尝试每种可能性来找到。这就是我们所说的**穷举**。
- en: What you have to remember for this section is that the hash value of an input
    can be used as the reference of that input. The hash value is the digital fingerprint
    of the input data, which can be a document, a transaction, or any kind of information.
    We can inject any file into the hash function and use the hash value to refer
    to it, hence uniquely identifying the document, the transaction, or the information.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要记住的是，输入的哈希值可以用作该输入的参考。哈希值是输入数据的数字指纹，可以是文档、交易或任何类型的信息。我们可以将任何文件注入到哈希函数中，并使用哈希值来引用它，因此唯一标识文档、交易或信息。
- en: Understanding the data structure
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解数据结构
- en: 'A blockchain can also be defined as a sequence of blocks containing data that
    are chained together. There are two types of data:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链也可以被定义为一个包含数据的区块序列，这些数据被链接在一起。有两种类型的数据：
- en: Transactions
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 交易
- en: Block information (also called metadata)
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 区块信息（也称为元数据）
- en: 'The transaction section is built by gathering all of the transactions that
    happened in a certain period of time and gathered in the block. If I send you
    one Bitcoin, this transaction will be part of the transaction section. Three fields
    are consistently active:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 交易部分由在一定时间内发生的所有交易收集并汇总在区块中构建。如果我给你发送了一比特币，这笔交易将成为交易部分的一部分。三个字段始终处于活动状态：
- en: The recipient
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 接收方
- en: The sender
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发送方
- en: The amount
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数量
- en: 'When I send you one Bitcoin using the Bitcoin blockchain, the transaction is
    composed as follows:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 当我使用比特币区块链向你发送一比特币时，交易组成如下：
- en: The recipient is your account (your Bitcoin address).
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 接收方是您的账户（您的比特币地址）。
- en: The sender is my account (my Bitcoin address).
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发送方是我的账户（我的比特币地址）。
- en: The amount is 1 Bitcoin.
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数量为1比特币。
- en: An example of a Bitcoin address is `3QSuhbsJUZJRgYX965CwMHgsdaU8KuTg4H`.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 比特币地址的一个例子是`3QSuhbsJUZJRgYX965CwMHgsdaU8KuTg4H`。
- en: Once all of the transactions are filled in the block, the block is hashed with
    the appropriate function (that is, the mining process occurs), which will return
    the **hash value of this block**, hence, of all transactions contained in the
    block. If one transaction of this block is modified afterward, the hash will change
    dramatically (the change-sensitive property) and the block would not be secured
    anymore.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦所有交易都填入区块中，区块将使用适当的函数进行哈希处理（即，挖矿过程发生），这将返回**该区块的哈希值**，因此也是区块中包含的所有交易的哈希值。如果稍后修改了此区块的某个交易，哈希将发生巨大变化（敏感于变化的特性），区块将不再安全。
- en: Note that, depending on the blockchain, the validation span and the number of
    transactions of the block vary. For Bitcoin, one block is validated approximately
    every 10 minutes and contains several transactions fluctuating around 1,500 as
    of June 2019\. This period is defined regarding the size limit of a block, that
    is, the number of transactions it can handle in one block. It is rather the size
    of the transactions that matter than the volume. That is why Bitcoin has an average
    block limit of 1,500 transactions—because it can sometimes handle more transactions
    and sometimes fewer. Transactions can become more complex if there are several
    senders or several recipients in one transaction. To put it in perspective, the
    Bitcoin blockchain handles 1 MB blocks, whereas the Bitcoin Cash blockchain handles
    8 MB blocks.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，根据区块链的不同，区块的验证时间跨度和交易数量会有所不同。对于比特币，大约每10分钟验证一个区块，并且包含的交易数量在2019年6月左右波动在1500左右。此周期是根据区块的大小限制来定义的，即它可以处理的交易数量。重要的是交易的大小而不是数量。这就是为什么比特币的平均区块限制为1500个交易，因为有时它可以处理更多的交易，有时可以处理更少的交易。如果一个交易中有多个发送者或多个接收者，则交易可能会变得更加复杂。以此为例，比特币区块链处理1
    MB 的区块，而比特币现金区块链处理8 MB 的区块。
- en: Bitcoin Cash was created in August 2017 by a section of the Bitcoin community
    to overcome Bitcoin's scalability issues through the extension of block size.
    Just like Bitcoin, it is a cryptocurrency and a blockchain.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: Bitcoin Cash是由比特币社区的一部分于2017年8月创建的，旨在通过扩展区块大小来解决比特币的可伸缩性问题。与比特币一样，它是一种加密货币和区块链。
- en: 'Let''s now have a look at the block information part, also called metadata.
    These pieces of information refer to the block itself and not to the transactions.
    If we think back to the example of [Chapter 1](https://cdp.packtpub.com/blockchain_for_decision_makers/wp-admin/post.php?post=25&action=edit#post_24), *Basics
    of Blockchains and the Illustration of Village Beta*, they refer to the following:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们来看看区块信息部分，也称为元数据。这些信息片段是指区块本身，而不是交易。如果我们回顾[第1章](https://cdp.packtpub.com/blockchain_for_decision_makers/wp-admin/post.php?post=25&action=edit#post_24)的例子，即*区块链基础知识和
    Village Beta 村庄的说明*，它们指的是以下内容：
- en: The previous hash
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 上一个区块的哈希值
- en: The timestamp
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间戳
- en: The nonce
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 随机数
- en: The hash
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 哈希值
- en: The previous hash is the reference number found when validating the previous
    block. For the first block of a blockchain, it is 0 or any value that the network
    agrees on. Remember that hashes are what allow blocks to be chained together,
    hence making the whole chain tamper-proof. To do so, every block contains the
    hash of the previous block.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 前一个哈希是验证前一个区块时找到的参考号。对于区块链的第一个区块，它可以是0或网络同意的任何值。要记住，哈希是让区块链接在一起的要素，因此使整个链不可篡改。为了实现这一点，每个区块包含前一个区块的哈希。
- en: The timestamp is the time and date when the block is validated by the network.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 时间戳是区块被网络验证的时间和日期。
- en: The nonce is the variable to find when solving the mathematical problem to validate
    a block. When the miners are receiving new transactions, they run a complex mathematical
    problem to find the appropriate nonce that returns a correct hash.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 随机数是验证区块有效性的数学问题中需要找到的变量。矿工在接收新交易时，会运行一个复杂的数学问题，以找到适当的随机数，从而返回一个正确的哈希。
- en: Once the hash is found, the transactions are validated and the block is stored
    in the database.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦哈希被找到，交易将得到验证，并且区块将被存储在数据库中。
- en: 'In conclusion, a block is a container of all of the transactions that happened
    over a defined timespan that are hashed to return a digital fingerprint of all
    of these transactions. The following diagram is the mining process followed by
    the miners of the network:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，一个区块是在一段定义时间内发生的所有交易的容器，对这些交易进行哈希处理以返回所有这些交易的数字指纹。以下图表展示了网络矿工进行的挖矿过程：
- en: '![](img/5e7d57cd-89a0-475b-9a9e-3f3782b69841.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5e7d57cd-89a0-475b-9a9e-3f3782b69841.png)'
- en: When building a block, the miners trigger a mining process using the hash of
    the previous block, the hash of all of the transactions, and the timestamp. The
    mining process ends when one of the miners finds the correct nonce that returns
    a valid hash (usually a number starting with a predefined number of zeros), which
    is tied to the block and will serve as the previous hash for the next block.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 构建区块时，矿工会使用前一个区块的哈希、所有交易的哈希和时间戳来触发挖矿过程。挖矿过程会在其中一个矿工找到返回有效哈希（通常以一个预定义数量的零开头的数字）的正确随机数时结束，该哈希与区块相关联，并将作为下一个区块的上一个哈希。
- en: Creating identities
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建身份
- en: 'Most of the time, to use a service online, you must create an account with
    the organization that provides the service. If you want to use a social media
    application or create a bank account, you need to provide information on yourself
    for the organization to grant you access. This is the centralized model: identities
    are stored and managed on one central organization''s servers. This is totally
    incompatible with the concept of blockchain that promotes decentralization to
    achieve mass-coordination without a central entity.'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数情况下，要使用在线服务，你必须在提供服务的组织机构中创建一个账户。如果想使用社交媒体应用或创建银行账户，你需要提供关于自己的信息，让组织授予你访问权限。这是中心化模式：身份储存在和由一个中心组织的服务器上管理。这与提倡去中心化以实现无中央实体的大规模协调的区块链概念完全不兼容。
- en: So, how do we create identities that are not controlled by any third party in
    that kind of ecosystem?
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，在这种生态系统中，我们如何创建不受任何第三方控制的身份呢？
- en: Securing identities using blockchain
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用区块链确保身份安全
- en: In a blockchain, the person who sends the digital value and the person who receives
    it must be accurately determined.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在区块链中，发送数字价值的人和接收数字价值的人必须被准确定定。
- en: Cryptography allows us to achieve just that, thanks to asymmetric encryption.
    Both asymmetric and symmetric methods basically achieve security through cryptography
    when sending a message or funds to someone, as well as being used to manage identities
    in a decentralized manner. Before explaining what asymmetric encryption is, which
    is used in most blockchains, we should explain what symmetric encryption is.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 通过加密技术，我们可以达到这一点，这要归功于非对称加密。非对称和对称方法当向某人发送消息或资金时都通过加密技术实现安全，并被用于以分散的方式管理身份。在解释使用在大多数区块链中的非对称加密之前，我们应该先解释对称加密是什么。
- en: 'With the symmetric method, everyone has only one key to encrypt or decrypt
    a specific message. If I want to send you the message *Hello*, I will follow this
    process:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 使用对称方法，每个人只有一个密钥用于加密或解密特定消息。如果我想给你发消息*你好*，我将按照以下过程进行：
- en: I encrypt the message *Hello* that becomes, say, *Jrmmp.*
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我加密消息*你好*，变成了，比如说，*Jrmmp*。
- en: I send you my encrypted key.
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我发送给你我的加密密钥。
- en: You decrypt the message using my key.
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你使用我的密钥解密消息。
- en: The key is generated through an algorithm that allows someone who possesses
    the key to encrypt and decrypt the message.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 密钥是通过一种算法生成的，允许拥有密钥的人对消息进行加密和解密。
- en: But there is one important risk that exists using this encryption method. Since
    you need to send the recipient your key to allow him/her to read your messages
    (the process is called the handshake), a malicious person could intercept the
    key and use it afterward to decrypt your messages.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 但是使用这种加密方法存在一个重要的风险。 由于你需要发送接收者你的密钥才能让他/她读取你的消息（这个过程称为握手），一个恶意人士可能会拦截密钥，并在之后使用它解密你的消息。
- en: The asymmetric encryption, on the other hand, overcomes this problem. With this
    method, instead of one key, there are two keys, a public and a private key. The
    public key is communicated to anybody who wants to send you messages or digital
    value. The private key, on the contrary, is known by you and only you. It should
    never be disclosed to anyone else.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，非对称加密可以解决这个问题。 通过这种方法，不是一个密钥，而是两个密钥，一个公钥和一个私钥。 公钥被传达给任何想要向你发送消息或数字价值的人。
    相反，私钥只有你知道。 它绝对不能透露给其他人。
- en: 'If I want to send you the message *Hello*, we would follow this process:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我想发送给你消息*Hello*，我们会按照这个过程：
- en: I retrieve your public key.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我检索你的公钥。
- en: I encrypt the message *Hello* using your public key and send it to you.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我使用你的公钥加密消息*Hello*并发送给你。
- en: You decrypt the message using your private key.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你使用你的私钥解密消息。
- en: If a hacker intercepts the encrypted message I sent you, he/she won't be able
    to decrypt it because he/she doesn't possess the private key, which is the only
    key allowing the decryption of the message. In short, the public key is used to
    encrypt a message, and the private key to decrypt it.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一个黑客拦截了我发送给你的加密消息，他/她是无法解密它的，因为他/她并没有私钥，而只有私钥才能解密消息。 简而言之，公钥用于加密消息，私钥用于解密消息。
- en: 'There are two principles to remember with the asymmetric encryption''s key
    pair—private key/public key; and they are the same as we''ve seen with the hash
    function:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 对于非对称加密的密钥对——私钥/公钥，有两个原则要记住，它们和我们在哈希函数中看到的一样：
- en: One private key when hashed always gives the same public key.
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个私钥经过哈希总是给出相同的公钥。
- en: 'Knowing the public key, it is impossible to find the private key (except with
    brute-force: by trying a lot of private keys).'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 知道了公钥，要找到私钥是不可能的（除非通过暴力破解：尝试很多私钥）。
- en: Brute-forcing a one-character password is relatively simple—64 combinations
    (a,b…A, B…1, 2…). But when it comes to the Bitcoin blockchain, whose private keys
    are 51 characters long, the probability reaches 64^51 possibilities. It would
    take years to brute-force a private key on the Bitcoin blockchain.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 暴力破解一个字符的密码相对简单——64种组合（a，b…A，B…1，2…）。 但是当涉及到比特币区块链时，私钥长达51个字符，概率达到64^51个可能性。
    需要几年的时间才能暴力破解比特币区块链上的私钥。
- en: This asymmetric encryption allows you to digitally sign any kind of information,
    message or transaction. Otherwise, how would you prove in the digital world that
    you are the author of a specific message or the owner of a specific account?
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 这种非对称加密允许您在数字世界中为任何类型的信息、消息或交易进行数字签名。否则，在数字世界中，你如何证明自己是特定消息的作者或特定账户的所有者？
- en: Encryption with the private key is used to prove authenticity. If you encrypt
    your message with your own private key, then anyone can decrypt it with your public
    key, which proves that you originated the message since it could only have been
    encrypted with your private key.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 使用私钥加密用于证明真实性。 如果你用自己的私钥加密你的消息，那么任何人都可以用你的公钥解密它，这证明了你起初发表了该消息，因为只有用你的私钥才能加密它。
- en: In this scenario, your public key is your digital identity since it identifies
    statements and information made by you in the digital world. The private key is
    a kind of password to prove that you own your public key, that is, your digital
    identity.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，你的公钥是你的数字身份，因为它在数字世界中标识了由你发表的声明和信息。 私钥是一种密码，用来证明你拥有你的公钥，也就是你的数字身份。
- en: This is how we achieve decentralized identity management. Usually, the public
    key refers to the address of the account. Also, you don't have to link your real
    identity with your digital identity. Just by generating a new key pair, you would
    end up with a new digital identity. Keep in mind that this does not provide you
    with full anonymity because some information or statements sent with your digital
    identity may tie you with your real identity. That is why the Bitcoin blockchain
    is not entirely anonymous but rather pseudonymous.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我们实现去中心化身份管理的方式。通常，公钥指的是账户的地址。此外，你不需要将你的真实身份与你的数字身份关联起来。只需生成一个新的密钥对，你就会得到一个新的数字身份。请记住，这并不能为你提供完全的匿名性，因为与你的数字身份一起发送的某些信息或声明可能会将你与你的真实身份联系起来。这就是为什么比特币区块链并非完全匿名，而是伪匿名的原因。
- en: The Byzantine Generals Problem
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 拜占庭将军问题
- en: In the following chapters, we will start addressing more business-oriented topics.
    Until then, I should provide you with some context on the whys and wherefores
    of blockchain and go back to where it all started, with the Byzantine Generals
    Problem.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将开始讨论更多与业务相关的主题。在那之前，我应该给你一些关于区块链的原因和起源的背景，回到一切开始的地方，即拜占庭将军问题。
- en: 'The Byzantine Generals Problem is a real-life analogy for computer science
    that was expressed and partly answered in 1982 by Leslie Lamport, a famous American
    scientist and Turing Award winner, who raised the following question: *how can
    you achieve a consensus in the presence of traitors or faults?* Translated to
    the computer science world, this means: *how can you achieve consensus in a distributed
    system where some computers may be malfunctioning or give conflicting information?* This
    is how the issue came to be illustrated and known as the Byzantine Generals Problem.'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 拜占庭将军问题 是计算机科学中的一个现实生活类比，由著名美国科学家和图灵奖得主 Leslie Lamport 在 1982 年提出并部分解答，他提出了以下问题：*在叛徒或故障存在的情况下如何达成共识？*
    转化到计算机科学领域，这意味着：*在一些计算机可能出现故障或提供冲突信息的分布式系统中如何达成共识？* 这就是问题被称为拜占庭将军问题并得到广泛认知的原因。
- en: 'The following diagram is an illustration of the Byzantine Generals Problem:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图示是拜占庭将军问题的说明：
- en: '![](img/9f82d06d-24a0-468e-a806-224e51042694.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9f82d06d-24a0-468e-a806-224e51042694.png)'
- en: 'Source: L.Lamport, R.Shostak and M.Pease, The Byzantine Generals problem, ACM
    Transactions on Programming Languages and Systems, Vol. 4, No. 3, July 1982'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 出处：L.Lamport、R.Shostak 和 M.Pease，《拜占庭将军问题》，ACM Transactions on Programming Languages
    and Systems，Vol. 4，No. 3，1982 年 7 月
- en: 'Explanation—multiple byzantine generals surrounding a city must coordinate
    their attack to take the city. To coordinate themselves, they use messengers to
    indicate to each other which decision they took: attack or retreat. Since this
    situation happens under war circumstances, some generals could be traitors and
    some messengers could be captured or die trying to send the news.'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 解释——围绕城市的多个拜占庭将军必须协调他们的攻击以夺取城市。为了相互协调，他们使用信使向彼此指示他们做出的决定：进攻还是撤退。由于这种情况发生在战争环境下，一些将军可能是叛徒，一些信使可能被捕获或因试图传递消息而丧生。
- en: If we draw a comparison with blockchain, the generals are the miners and the
    messengers are the communication links between them. Several researchers have
    concluded that the generals can't agree on a strategy if one third or more are
    traitors.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们将区块链与之进行比较，将军就是矿工，而信使则是它们之间的通信链接。一些研究人员得出结论，如果有三分之一或更多的将军是叛徒，将无法达成一致的策略。
- en: '*So how does blockchain solve it?*'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '*那么区块链是如何解决这个问题的？*'
- en: One instrument was introduced into the blockchain to make consensus work: **incentives**.
    A blockchain usually includes incentives for the miners who validate the transactions.
    In [Chapter 1](https://cdp.packtpub.com/blockchain_for_decision_makers/wp-admin/post.php?post=25&action=edit#post_24), *Basics
    of Blockchains and the Illustration of Village Beta*, the villager who validated
    the transactions was rewarded with 5 Villagecoin.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链中引入了一个工具来使共识工作：**激励**。区块链通常为验证交易的矿工提供激励。在[第一章](https://cdp.packtpub.com/blockchain_for_decision_makers/wp-admin/post.php?post=25&action=edit#post_24)，*区块链的基础知识和
    Village Beta 村示例*中，验证交易的村民将获得 5 个 Villagecoin 作为奖励。
- en: 'In a blockchain, this is how a consensus is reached:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在区块链中，达成共识的方式如下：
- en: All of the miners start constructing their local block.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 所有的矿工开始构建他们的本地区块。
- en: A random miner solves the mathematical problem of the block.
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个随机的矿工解决了区块的数学问题。
- en: The random miner sends his/her block to the other miners.
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 随机的矿工将他/她的区块发送给其他矿工。
- en: The other miners receive the block of the random miner.
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 其他矿工收到随机矿工的区块。
- en: The other miners check that the result found by the random miner is correct
    and that the previous hash points to the previous block's hash.
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 其他矿工检查随机矿工找到的结果是否正确，以及上一个哈希是否指向前一个区块的哈希。
- en: If it is valid, they cancel the block they were building and add to the copy
    of their blockchain the new block sent by the random miner.
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果有效，他们会取消正在构建的区块，并将随机矿工发送的新区块添加到他们区块链的副本中。
- en: The random miner is rewarded with an incentive.
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 随机矿工会获得奖励。
- en: Then, the process repeats.
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，该过程重复。
- en: If a dishonest miner solved the mathematical problem and incorporated an invalid
    transaction in its block, the other miners would reject it because it contains
    an invalid transaction (the hash would totally be different). This miner would
    have to discard his/her block and, therefore, will not be able to receive any
    incentive. Let's look at how incentives work in more detail.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一个不诚实的矿工解决了数学问题并在其区块中加入了无效交易，其他矿工会拒绝它，因为它包含无效交易（哈希将完全不同）。这个矿工将不得不放弃他/她的区块，因此无法获得任何奖励。让我们更详细地看看奖励是如何工作的。
- en: Offering incentives
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提供激励
- en: Basically, incentives ensure that miners continue working for the network responsibly
    (in other words, consensually validate correct transactions). The work provided
    by the miners is rewarded by the cryptocurrency underlying the blockchain. By
    implementing rewards, people are encouraged to join the community and become miners,
    who, as a result, contribute to broadening the network. And the more miners there
    are, the larger the network and the more secured are the transactions because
    the less chance there is for the blockchain to be controlled by one party or individual.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上，激励措施确保矿工继续为网络负责地工作（换句话说，共识地验证正确的交易）。矿工提供的工作通过区块链的基础加密货币得到奖励。通过实施奖励，人们被鼓励加入社区并成为矿工，从而扩大网络。而且，矿工越多，网络越大，交易越安全，因为区块链受到一方或个人控制的可能性就越小。
- en: 'Note that the rewards are usually decreasing exponentially over time because
    a blockchain often starts with few miners before enjoying a network effect and
    attracting more miners. Joining a blockchain early as a miner ensures you to gain
    more cryptocurrency even though it is not worth much at the beginning. But as
    more miners are joining the network and as more users are using the service, the
    cryptocurrency itself starts gaining consideration, hence, value. In this manner,
    rewards for miners usually decline over time following a predefined algorithm
    as more members join the network. For Bitcoin, for example, the original block
    reward was 50 Bitcoin, planned to halve every 210,000 blocks. As of June 2019,
    the block rewards are 12.5 BTC and total supply is set to 21 million BTC, the
    last unit of which should be allocated in 2140. What is important to remember
    as a decision-maker is that incentivization is an important component of a blockchain
    because it answers the following question: what are the interests for a miner
    to continue to validate the transactions happening in the network? Put differently,
    what is the motivation of the validators to keep ensuring the truth within the
    registry?'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，奖励通常随着时间的推移呈指数下降，因为区块链在吸引更多矿工之前通常以少数矿工开始。早期加入区块链作为矿工可以确保您即使在开始时价值不大也能获得更多的加密货币。但随着越来越多的矿工加入网络，越来越多的用户使用服务，加密货币本身开始受到重视，因此价值增加。通过这种方式，随着更多成员加入网络，矿工的奖励通常会随时间按照预定义的算法下降。例如，对于比特币，原始的区块奖励是50比特币，计划每210,000个区块减半一次。截至2019年6月，区块奖励为12.5比特币，总供应量设置为21百万比特币，其中最后一单位应该在2140年分配。作为决策者要记住的重要一点是，激励是区块链的重要组成部分，因为它回答了以下问题：矿工继续验证网络中发生的交易的动机是什么？换句话说，验证者继续确保注册表中的真相的动机是什么？
- en: Understanding the consensus protocol mechanism
  id: totrans-135
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解共识协议机制
- en: As stated before, for the miners to validate a block and, hence, the transactions, they
    have to solve a mathematical problem. To solve it, there is a need for a specific
    resource. In Bitcoin, the resource is computing power. The more computing power
    a miner has, the faster he/she can solve the mathematical problem, therefore the
    faster he/she completes a block and the more likely he/she will receive Bitcoins
    as a reward. This mining process is called proof-of-work and is inherent to Bitcoin.
    It is a protocol that all of the miners of the Bitcoin blockchain should follow
    to demonstrate that they have done an appropriate work for validating the transactions.
    This ensures a selection process in which every miner uses computational power
    to find the correct nonce that will return a hash starting with a predefined number
    of zeros. Of course, not all miners have the same computing power, so it is not
    fairly random.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，要想矿工验证一个区块，从而验证交易，他们必须解决一个数学问题。为了解决这个问题，需要一种特定的资源。在比特币中，这个资源是计算能力。矿工拥有的计算能力越多，他/她解决数学问题的速度就越快，因此完成一个区块的速度就越快，而且他/她获得比特币的机会就越大。这个挖矿过程被称为工作证明，是比特币固有的。这是一种协议，比特币区块链的所有矿工都应该遵循，以证明他们已经为验证交易做了适当的工作。这确保了一个选择过程，在这个过程中，每个矿工都使用计算能力来找到一个正确的随机数，该随机数将返回一个以预定义数量的零开头的哈希值。当然，并非所有矿工都拥有相同的计算能力，因此这并不是完全公平的随机过程。
- en: The computing power of a machine is measured by the number of guesses per second.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 机器的计算能力是以每秒猜测次数来衡量的。
- en: The most powerful miners will have more chances to solve the problem compared
    to sole computers with less computing power. However, even if one owns 10% of
    the computing power of the entire network and the 90% remaining are provided by
    thousands of other miners, one will still have a 1 in 10 chance of finding the
    correct answer. This is how randomness ensures that no one can control the validation
    of the blocks and, hence, the blockchain. This also means that if one miner, or
    one organization of miners, came to control 51% or more of the computing power
    of the network, they would be the first to solve the problem in 51% of the cases.
    In other words, they would be able, in 51% of the cases, to validate or modify
    the transactions at their will.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 最强大的矿工将比计算能力较弱的独立计算机有更多的机会解决问题。然而，即使某人拥有整个网络10%的计算能力，其余90%由成千上万的其他矿工提供，他仍然有1/10的机会找到正确答案。这就是随机性确保没有人可以控制区块验证，从而控制区块链的方式。这也意味着，如果一个矿工，或者一个矿工组织，控制了网络51%或更多的计算能力，他们将成为第一个在51%的情况下解决问题的人。换句话说，他们将能够在51%的情况下验证或修改交易。
- en: 'There is one important issue behind the proof-of-work protocol that, as a decision-maker,
    you should be aware of—it is a very energy-consuming process that leverages questions
    on its sustainability. Since it takes a tremendous amount of computing power to
    find the proper hash of the block and since there are a lot of miners in the network,
    the consumption of electricity for validating the transactions on the Bitcoin
    blockchain has become a worldwide concern to the point that it has exceeded the
    consumption of electricity of Switzerland ([https://www.bbc.com/news/technology-48853230](https://www.bbc.com/news/technology-48853230)).
    The following diagram shows Bitcoin''s energy consumption as of June 2019:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 证明工作协议背后有一个重要问题，作为决策者，你应该意识到——这是一个非常消耗能源的过程，这引发了人们对其可持续性的质疑。由于需要大量的计算能力来找到区块的正确哈希值，而且网络中有大量的矿工，验证比特币区块链上的交易消耗了大量的电力，已经成为全球关注的焦点，甚至已经超过了瑞士的电力消耗量
    ([https://www.bbc.com/news/technology-48853230](https://www.bbc.com/news/technology-48853230))。以下图表显示了截至2019年6月的比特币能源消耗情况：
- en: '![](img/50f0f203-0004-4d03-8fad-0cf868b68b36.png)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![](img/50f0f203-0004-4d03-8fad-0cf868b68b36.png)'
- en: Source: [https://digiconomist.net](https://digiconomist.net)
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 来源：[https://digiconomist.net](https://digiconomist.net)
- en: Of course, other protocols can replace the energy-consuming proof-of-work. One
    of the most well known is proof-of-stake, which is being implemented in the Ethereum
    blockchain. But more on that in the next chapter, [Chapter 3](b58a1e54-07e5-4b7a-8202-b5a7064ce976.xhtml),
    *Ethereum and Smart Contracts*.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，其他协议可以替代能源消耗型的工作证明。其中一个最著名的是权益证明，正在以太坊区块链中实现。但更多相关内容将在下一章[第3章](b58a1e54-07e5-4b7a-8202-b5a7064ce976.xhtml)
    *以太坊和智能合约* 中讨论。
- en: Summary
  id: totrans-143
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: All in all, a blockchain is the combination of several instruments that come
    together to provide an infrastructure to exchange digital value and assert the
    truth without the need of a central entity.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 总的来说，区块链是几种工具的结合，它们共同提供了一个基础设施，用于交换数字价值并在没有中央实体的情况下维护真实性。
- en: As discussed throughout this chapter, a blockchain is composed of a network
    of users, nodes, and miners that respectively send/receive, store, and validate
    transactions. Cryptography (and more specifically hash functions) is used in this
    configuration to create an output (a hash) that refers to any kind of digital
    information, for example, to refer to a batch of transactions. Blocks cluster
    these transactions and include metadata associated with the block itself such
    as the previous hash, the timestamp, and the nonce. Public and private keys provide
    a way to efficiently manage identities in the digital world and more specifically
    in the network. In a blockchain, there is also an incentive mechanism where the
    underlying cryptocurrency is used as a reward to motivate miners to work for the
    common good and keep ensuring the truth across the blockchain. Finally, a consensus
    protocol comes in to enable the miners to validate the transactions continuously
    and properly.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 正如本章中所讨论的，区块链由一组用户、节点和矿工组成，它们分别发送/接收、存储和验证交易。在这种配置中使用密码学（更具体地说是哈希函数）来创建一个输出（一个哈希），该哈希指代任何类型的数字信息，例如，用于指代一批交易。区块聚合这些交易并包括与区块本身相关的元数据，例如上一个哈希、时间戳和随机数。公钥和私钥提供了一种在数字世界和网络中高效管理身份的方式。在区块链中，还有一种激励机制，其中底层加密货币被用作奖励，以激励矿工为了共同利益而工作，并继续确保区块链上的真实性。最后，一种共识协议出现，使矿工能够持续有效地验证交易。
- en: At this point, you hopefully understand how a blockchain works and what intrinsic
    principles it combines to ensure security, transparency, and immutability. So
    far, we have covered the most important characteristics. The better you appreciate
    them, the easier it will be for you to grasp the main social and economic challenges
    surrounding blockchain and eventually help you to identify the relevance of a
    blockchain for a specific use case.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 到这一步，你希望已经了解了区块链的工作原理以及它结合了哪些内在原则来确保安全性、透明度和不可变性。到目前为止，我们已经涵盖了最重要的特征。你越是欣赏它们，理解主要围绕区块链的社会和经济挑战就会更容易，最终帮助你确定区块链对特定用例的相关性。
- en: In the next chapter, we will learn about Ethereum and smart contracts.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习以太坊和智能合约。
