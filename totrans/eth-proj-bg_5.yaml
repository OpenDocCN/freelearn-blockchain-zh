- en: Ethereum Outside the PC/Web Environment
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 以太坊在PC/Web环境之外
- en: 'So far, we''ve looked at using Ethereum on your own personal computers. This
    chapter takes a look at the uses of Ethereum in various other applications: smartphones,
    being the most commonly use electronic device, are one of them. The current growth
    of technology demands an automatic system that requires us to implement the **Internet
    of Things** (**IoT**). This chapter focuses on the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经了解了如何在个人电脑上使用以太坊。本章将介绍以太坊在各种其他应用程序中的用途：智能手机是其中最常用的电子设备之一。当前技术的增长要求我们实现需要自动系统的物联网。本章重点讨论以下主题：
- en: Ethereum outside the browser
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以太坊在浏览器之外
- en: Ethereum and IoT
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以太坊和物联网
- en: Ethereum and smartphone applications
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以太坊和智能手机应用程序
- en: Further steps and resources
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 进一步的步骤和资源
- en: We are going to have a look at how people use Ethereum outside the browser,
    how people use Ethereum as the backbone of IoT, and how you can work with physical
    components in the blockchain. In addition, we will have a look at how you can
    use Ethereum in smartphone applications. We'll also discuss some further steps
    and resources that you can use. So let's get started by looking at how you can
    use Ethereum outside the browser.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将看一下人们如何在浏览器之外使用以太坊，人们如何将以太坊作为物联网的支柱，以及你如何在区块链中使用物理组件。此外，我们还将看一下你如何在智能手机应用程序中使用以太坊。我们还将讨论一些进一步的步骤和资源，供你使用。所以让我们开始看一下如何在浏览器之外使用以太坊。
- en: Ethereum outside the browser
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 以太坊在浏览器之外
- en: This section will teach us to work with Ethereum outside the browser. Standard
    libraries that can be used on Java, Python, Go, or .NET have been developed by
    the Ethereum team. These are accessible directly from GitHub at [https://github.com/ethereum](https://github.com/ethereum).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将教我们如何在浏览器之外使用以太坊。以太坊团队已经开发了可以在Java、Python、Go或.NET上使用的标准库。这些库可以直接从 GitHub（[https://github.com/ethereum](https://github.com/ethereum)）访问。
- en: One essential feature that you need in order to use Ethereum outside your browser
    is a connection to the Ethereum network. This connection can be direct—that is,
    connected directly to your application—or you can use a relay server. Even though
    using a relay server is not an optimal option, it is completely possible. To use
    a relay server, you first need to have a server of your own that is centralized
    in nature and only accepts presigned transactions.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 要在浏览器之外使用以太坊，你需要的一个必要功能是与以太坊网络建立连接。这种连接可以是直接的——即直接连接到你的应用程序——或者你可以使用一个中继服务器。虽然使用中继服务器并不是最佳选择，但完全可行。要使用中继服务器，你首先需要拥有一个自己的服务器，它是集中式的，并且只接受预签名的交易。
- en: 'Another requirement that is necessary for using Ethereum outside your browser
    is the Ethereum library of the language that you will be using to develop it.
    This is optional because we always start any transaction with raw data. To get
    a transaction going on the Ethereum network, we need to encode the raw data and
    assign a private key to it. The transaction is protected from modification because
    it is signed with a private key. After this, you can send it to the network. This
    can be done with the help of a relay server. There is some selective muting that
    takes place, and hence it is a more reliable option to make sure that you send
    the transactions to the networks by yourself. The following links can be used
    to do this, depending upon the software that you are using:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在浏览器之外使用以太坊所必需的另一个要求是你将用于开发它的语言的以太坊库。这是可选的，因为我们始终从原始数据开始任何交易。要让以太坊网络上的交易进行下去，我们需要对原始数据进行编码并分配一个私钥。交易受私钥签名保护，因此受到修改的限制。之后，你可以将其发送到网络上。这可以通过中继服务器完成。这涉及到一些选择性的静音，因此，确保你自己发送交易到网络上是更可靠的选择。根据你使用的软件，可以使用以下链接来完成这一操作：
- en: If you are a Python user, the `Web3.py` library can be used. It is freely available
    at [https://github.com/ethereum/web3.py](https://github.com/ethereum/web3.py).
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你是Python用户，可以使用`Web3.py`库。它可以在[https://github.com/ethereum/web3.py](https://github.com/ethereum/web3.py)免费获取。
- en: If you are an avid Java user, the Java library is available on the Web3J GitHub
    account, which can be found at [https://github.com/web3j/web3j](https://github.com/web3j/web3j).
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你是Java的忠实用户，Java库可以在 Web3J 的 GitHub 账户上找到，网址为 [https://github.com/web3j/web3j](https://github.com/web3j/web3j)。
- en: For any other implementations, you can find the libraries under the Ethereum
    GitHub account at [https://github.com/ethereum/](https://github.com/ethereum/). Golem
    is a great example of using Ethereum outside your browser. We have already taken
    a look at this in the first chapter. Golem computes off-chain, but verifies all
    the computing that has been done on-chain. This allows a massive amount of distributed
    computing power. For further information, you can refer to the Golem Github page
    and check out the codes in the repository at [https://github.com/golemfactory/golem](https://github.com/golemfactory/golem).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 对于任何其他实施，您可以在以太坊GitHub帐户下找到库，网址为[https://github.com/ethereum/](https://github.com/ethereum/)。Golem是一个很好的例子，它在浏览器之外使用以太坊。我们在第一章已经看过这个了。Golem在链下计算，但在链上验证完成的所有计算。这使得大量分布式计算能力成为可能。要获取更多信息，您可以参考Golem
    Github页面，并查看存储库中的代码，网址为[https://github.com/golemfactory/golem](https://github.com/golemfactory/golem)。
- en: Ethereum and IoT
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 以太坊和物联网
- en: 'In this section, we are going to take a look at Ethereum and how it helps propagate
    the IoT. In my personal opinion, Ethereum is the perfect backbone for IoT. This
    is because of two factors: dataflow and security. Data is spread out across the
    network, which is the most basic concept of IoT; this unhindered and smooth flow
    of data is an essential factor in using Ethereum to help build the IoT. Also,
    every device has its own private key that enhances the security factor. The combination
    of these two elements opens up a lot of new possibilities.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在本部分，我们将看一下以太坊以及它如何帮助传播物联网。在我个人看来，以太坊是物联网的完美支撑系统。这是因为两个因素：数据流和安全。数据分布在整个网络中，这是物联网最基本的概念；这种畅通无阻的数据流是使用以太坊来帮助建立物联网的关键因素。此外，每个设备都有自己的私钥，这增强了安全因素。这两个元素的结合带来了许多新的可能性。
- en: Let us look at a case study involving the charging of electric vehicles. At
    this moment, they are not many electric vehicles or charging stations. There is
    a high possibility that all vehicles will run on electricity in the near future.
    This would mean that more charging stations will be placed at many more locations.
    Let us consider a scenario where there are charging stations at a supermarket.
    It wouldn't be feasible to provide this facility for free. To make this process
    easier, the car could pay for the service directly. How does one do this?
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一个涉及电动车充电的案例研究。目前，电动车或充电站并不多。未来很有可能所有车辆都将使用电力。这意味着会在更多地点设置更多的充电站。让我们考虑一个在超市设置充电站的情况。为了提供这项设施是不可行的。为了使这个过程更容易，车辆可以直接支付服务费。该如何做到这点呢？
- en: There have to be two smart meters, each with their own private keys. One is
    on the charging station while the other one is on the car. The owner/user of the
    car needs to add some ethers to the address that is associated with the private
    key of the car. When the car requests electricity at a charging station, this
    would be added to the smart contract that is in charge of this transaction. The
    smart meter at the charging station would track the charge that has been consumed
    by the car and charge it accordingly. The amount here would be paid directly.
    The owner of the charging station would then withdraw the ethers as required.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 必须要有两个智能电表，每个都有自己的私钥。一个在充电站，另一个在车上。车辆的所有者/用户需要将一些以太币添加到与车辆私钥相关联的地址上。当车辆在充电站请求电力时，这将被添加到负责此交易的智能合约中。充电站的智能电表将跟踪车辆消耗的电量，并相应地扣费。这里的金额将直接支付。充电站的所有者随后会根据需要撤回以太币。
- en: This whole scenario, though hypothetical for now, has some special considerations.
    Both the car and charging station will need a computer because they each need
    to have a private key. There also needs to be a working internet connection and
    some tamper proof smart meters. Once the data is on the blockchain, no one can
    tamper with it, as it is all a part of public records. Even if the tamper proof
    meters have a flaw, it will be displayed publicly. Another way to avoid fraud
    would be to register the car's private key with the relevant authorities.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管目前整个场景都是假设的，但有一些特殊的考虑。由于每辆汽车和每个充电站都需要一台计算机，因为它们各自都需要有私钥。同时还需要一个工作中的互联网连接和一些防篡改的智能电表。一旦数据进入区块链，任何人都无法篡改它，因为这些数据都是公开记录的一部分。即使防篡改的智能电表存在漏洞，它也会公开展示出来。避免欺诈的另一种方式是向相关机构注册车辆的私钥。
- en: Ethereum and smartphone applications
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 以太坊和智能手机应用程序
- en: 'You can make smartphone applications with Ethereum support in three ways:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过三种方式制作支持以太坊的智能手机应用程序：
- en: Using a DApp browser.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 DApp 浏览器。
- en: Using Android or the iOS library.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Android 或 iOS 库。
- en: Doing everything in JavaScript, from key generation to key security and everything
    in-between. However, this is not recommended, as this makes you very vulnerable.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从密钥生成到密钥安全以及其中的所有操作，都使用 JavaScript 完成。但是，不建议这样做，因为这会使您非常脆弱。
- en: Using a DApp browser
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 DApp 浏览器
- en: 'One kind of DApp browser is Toshi. It will allow you to make use of the centralized
    application, and you can use it in pretty much the same way in which you would
    use MetaMask, but on a mobile. Another more popular option is [Status.IM](https://status.im/).
    It''s actually a secure chat, but it''s also a chat bot. You can give it commands
    such as retrieving the browser location, as shown in the following screenshot,
    and if you give it such commands, then you can trigger functions inside of the
    smart contracts:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 一种类型的 DApp 浏览器是 Toshi。它将允许您使用集中式应用程序，并且您可以以几乎与您在移动设备上使用 MetaMask 相同的方式使用它。另一个更受欢迎的选项是
    [Status.IM](https://status.im/)。它实际上是一个安全聊天，但也是一个聊天机器人。您可以给它命令，例如检索浏览器位置，如以下屏幕截图所示，如果您给它这样的命令，那么您可以触发智能合约内部的函数：
- en: '![](img/647013bd-5118-4aa7-a4d9-6412d3e9322a.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](img/647013bd-5118-4aa7-a4d9-6412d3e9322a.png)'
- en: Status.IM home page
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: Status.IM 主页
- en: 'A few applications have been developed using this method. One such application
    is WhoPays. This a contract-based bot that creates groups in which users can keep
    track of their payments to a group through commands using a new chat bot. What
    this means is that you can use chat commands to set up the group. Suppose you
    bought groceries for three people and you paid for everything. Others have to
    pay you back. You can set this arrangement up, and they can agree to an amount
    and pay you back using the application. The following screenshot shows the WhoPays
    GitHub page at [https://github.com/Nielsvdiermen/WhoPays](https://github.com/Nielsvdiermen/WhoPays):'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 使用此方法开发了一些应用程序。其中一款应用程序是 WhoPays。这是一个基于合同的机器人，可以创建用户可以通过新的聊天机器人使用命令跟踪他们向群组支付的款项。这意味着您可以使用聊天命令设置组。假设您为三个人购买了杂货，并且您支付了所有费用。其他人必须向您支付。您可以设置此安排，他们可以同意一笔金额，并使用应用程序向您支付。以下屏幕截图显示了
    WhoPays GitHub 页面，网址为 [https://github.com/Nielsvdiermen/WhoPays](https://github.com/Nielsvdiermen/WhoPays)：
- en: '![](img/59dfb700-29d9-41d9-88c4-e543ab28a6a0.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](img/59dfb700-29d9-41d9-88c4-e543ab28a6a0.png)'
- en: WhoPays
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: WhoPays
- en: 'Another example is [favor.network](https://github.com/karalabe/favor.network).
    Here, you can request favors from people and pay them to fulfill those favors:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个例子是 [favor.network](https://github.com/karalabe/favor.network)。在这里，您可以向人们请求帮助，并支付他们来完成这些帮助：
- en: '![](img/27347195-ec59-4e13-8347-725afb94b51e.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](img/27347195-ec59-4e13-8347-725afb94b51e.png)'
- en: Favor.network
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: Favor.network
- en: These applications either won or were placed very high at the [Status.IM](https://status.im/)
    Hackathon. I highly recommend that you check these applications out and use them
    to learn exactly how you can work with [Status.IM](https://status.im/).
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 这些应用程序要么赢得了[Status.IM](https://status.im/)黑客马拉松的奖项，要么排名非常靠前。我强烈建议您查看这些应用程序并使用它们来学习如何与
    [Status.IM](https://status.im/) 一起工作。
- en: Using Android or the iOS library
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Android 或 iOS 库
- en: In December 2016, Ethereum released a version of their desktop client that also
    works on mobile platforms so that you can just import these libraries into your
    Android application or your iOS application and use Ethereum in the same way that
    you would use it on a desktop.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在 2016 年 12 月，以太坊发布了一个也可以在移动平台上运行的桌面客户端版本，因此您只需将这些库导入到您的 Android 应用程序或 iOS 应用程序中，并以与在桌面上使用它相同的方式使用以太坊。
- en: 'The following screenshot shows the go-ethereum GitHub repository at [https://github.com/ethereum/go-ethereum/wiki/Building-Ethereum](https://github.com/ethereum/go-ethereum/wiki/Building-Ethereum):'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了 [go-ethereum GitHub 仓库](https://github.com/ethereum/go-ethereum/wiki/Building-Ethereum)：
- en: '![](img/d4055bee-f01e-42e1-b3f8-47f0ad9f9a52.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d4055bee-f01e-42e1-b3f8-47f0ad9f9a52.png)'
- en: Go-Ethereum GitHub repository
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: Go-Ethereum GitHub 仓库
- en: Further steps and resources
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步的步骤和资源
- en: I want to mention Infura. Infura is basically a relay server for the Ethereum
    and IPFS network that you don't have to manage yourself, making it trustless again.
    This will exist pretty much for as long as some people are not running their own
    Ethereum node. Visit [www.infura.io](http://www.infura.io) for more information.
    It is of course highly recommended that you run your own nodes, but in case you
    can't, check out Infura. You can remotely send resigned transactions to this server
    and they will propagate them into the network.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我想提一下 Infura。Infura 基本上是以太坊和 IPFS 网络的中继服务器，你不必自己管理，这使得它再次变得不可信任。只要还有人没有运行自己的以太坊节点，它就会存在。访问
    [www.infura.io](http://www.infura.io) 了解更多信息。当然，强烈建议你运行自己的节点，但如果你不能的话，可以看看 Infura。你可以远程发送交易到这个服务器，它们将把它们传播到网络中。
- en: Another resource for you to check out is the Ethereum GitHub page, which we
    have mentioned before. Here, you can find all the projects, such as the Ethereum
    Improvement Protocol, the remix, and yellow paper, which has all the technical
    specifications of Ethereum. You can find out everything about the Solidity programming
    language and the different clients that have been built. You can adapt these clients
    and then use them in your own projects to connect to the Ethereum network. So
    just check it out!
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个你可以查看的资源是以太坊的 GitHub 页面，我们之前已经提到过。在这里，你可以找到所有的项目，比如以太坊改进协议、remix 和黄皮书，其中包含了以太坊的所有技术规范。你可以了解关于
    Solidity 编程语言和已构建的不同客户端的一切。你可以调整这些客户端，然后在你自己的项目中使用它们来连接以太坊网络。所以只要去看一看吧！
- en: Another source of information is the Ethereum Subreddit, which you can find
    at [www.reddit.com/r/ethereum/](http://www.reddit.com/r/ethereum/). You can find
    a lot of info and a lot of news here; something for you to check out if you want
    to keep up to date.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个信息来源是以太坊 Subreddit，你可以在 [www.reddit.com/r/ethereum/](http://www.reddit.com/r/ethereum/)
    找到它。你可以在这里找到很多信息和很多新闻；如果你想要保持更新，这是一个值得你关注的地方。
- en: Another resource is CoinDesk you can find at [www.coindesk.com](http://www.coindesk.com).
    You probably know this one, but this has a lot of news regarding not only Ethereum,
    but everything blockchain.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个资源是 CoinDesk，你可以在 [www.coindesk.com](http://www.coindesk.com) 找到它。你可能已经知道这个，但这里有很多关于以太坊和区块链的新闻。
- en: Consensys is a company, which you can find at [https://new.consensys.net/](https://new.consensys.net/).
    They have been leveraging Ethereum pretty much since its inception, and they have
    a lot of projects that they are working on. They partner with a lot of very big
    companies, such as Microsoft. They are pretty much committed to making Ethereum
    enterprise-ready.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: Consensys 是一家公司，你可以在 [https://new.consensys.net/](https://new.consensys.net/)
    找到它。他们几乎从以太坊创立之初就一直在利用以太坊，他们有很多正在进行中的项目。他们与许多非常大的公司合作，例如微软。他们几乎致力于使以太坊适用于企业。
- en: Last but not least, do check out State Of The DApps, which you can find at [www.stateofthedapps.com](http://www.stateofthedapps.com).
    Here, you can find a lot of applications that have been made. You can sort through
    them and see if they have any prototypes, or maybe some live applications. Almost
    all of these applications are open source. This is going to be by far your biggest
    resource because what better way is there to learn than from existing applications,
    right? So, if you check these out, I'm sure you will be well on your way to totally
    mastering Ethereum very soon.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 最后但并非最不重要的是，请务必查看 State Of The DApps，你可以在 [www.stateofthedapps.com](http://www.stateofthedapps.com)
    找到它。在这里，你可以找到很多已经制作的应用程序。你可以对它们进行分类，并查看它们是否有任何原型，或者可能有一些正在运行的应用程序。几乎所有这些应用程序都是开源的。这绝对是你最大的资源，因为有什么比从现有的应用程序中学习更好的方式呢？所以，如果你查看这些，我相信你很快就会完全掌握以太坊。
- en: Summary
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we understood how Ethereum is run outside the browser. We learnt
    how Ethereum can be used for various IoT applications. Then we went on to see
    how Ethereum is implemented on smartphone devices in Android as well as iOS using
    various methods. Then you were given some links to various resources that can
    help you master Ethereum. In this book, we have covered almost everything that
    you need to build, use, and deploy your own Ethereum token, and have given you
    additional insight into what applications you can build with this knowledge of
    Ethereum.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们了解了以太坊是如何在浏览器之外运行的。我们学习了以太坊如何用于各种物联网应用。然后，我们继续看到以太坊如何在安卓和iOS智能手机设备上使用各种方法实现。接着，您将获得一些链接到各种资源，这些资源可以帮助您掌握以太坊。在本书中，我们几乎涵盖了您构建、使用和部署自己的以太坊代币所需的一切，并为您提供了有关利用这些以太坊知识构建哪些应用的额外见解。
