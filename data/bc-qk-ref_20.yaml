- en: Creating Your Own Currency
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建您自己的货币
- en: Up until now, we have talked extensively about blockchain, Bitcoin's, and Altcoins.
    We have discussed various intricacies involved in Bitcoin's, its blockchain, and
    other elements that form the blockchain. Ethereum has been a good topic of interest
    for most parts of the book so far. We have also read about other blockchain-based
    projects that comprise currency-based projects.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经广泛讨论了区块链、比特币和替代币。我们讨论了比特币、其区块链和组成区块链的其他元素的各种复杂性。到目前为止，以太坊一直是本书大部分内容的主要讨论对象。我们还阅读了其他基于区块链的项目，其中包括基于货币的项目。
- en: Ethereum has made it possible to make decentralized applications despite having
    little development knowledge. There are various tokens available at exchanges
    that are built on top of Ethereum and other similar projects, and are being recognized
    by backers and the community.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管对区块链和比特币的开发知识有限，以太坊已经实现了制作去中心化应用程序的可能性。在交易所上有各种基于以太坊和其他类似项目构建的代币，得到了支持者和社区的认可。
- en: 'In this chapter, we will be discussing the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论以下主题：
- en: Types of cryptocurrency
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加密货币的类型
- en: Setting up Litecoin
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置 Litecoin
- en: Forking the Litecoin repository
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分叉 Litecoin 存储库
- en: Creating one's own coin on top of the Litecoin repository
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Litecoin 存储库顶部创建自己的代币
- en: Understanding types of cryptocurrency
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解加密货币的类型
- en: There are three ways in which one's own cryptocurrency can be created. Each
    has its own benefits over the other. Prior to creating a currency, it is important
    to know all the intricacies involved, and what your coin offers compared to other
    existing coins currently available at exchanges. A list of popular coins can be
    found at [https://coinmarketcap.com](https://coinmarketcap.com).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 有三种方式可以创建自己的加密货币。每种方式都比其他方式有其自身的优势。在创建货币之前，重要的是了解涉及其中的所有复杂性，以及您的货币与当前在交易所上可用的其他现有货币相比提供了什么。您可以在[https://coinmarketcap.com](https://coinmarketcap.com)找到流行的货币列表。
- en: Tokens based on existing blockchains
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基于现有区块链的代币
- en: These are the tokens that are based on existing blockchain platforms, such as
    Ethereum, Omni, NEO, and so on. We have already discussed development on token
    in the previous [Chapter 15](588b84f6-baef-4ea3-895e-bd66f523452b.xhtml), *Ethereum
    Development*. A token helps in creating a coin faster, and supports a quick go-to
    market strategy so that most of the time can be invested in further development
    of a self-hosted blockchain.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这些代币是基于现有区块链平台的，例如以太坊、Omni、NEO等。我们已经在之前的[第 15 章](588b84f6-baef-4ea3-895e-bd66f523452b.xhtml)中讨论了代币的开发，*以太坊开发*。代币有助于更快地创建代币，并支持快速的上市策略，以便大部分时间可以投入到自托管区块链的进一步开发中。
- en: There are examples of various blockchain projects, which start as a token and
    post a successful ICO once they start their own fully supported blockchain complete
    with a coin. Since it is faster and easier to develop a token as compared to a
    coin, it becomes easy for such projects to gain traction and also get launched
    in no time, and most of the time can be invested in other important tasks such
    as whitepaper creation, ICO, and so on.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 有各种区块链项目的示例，它们开始作为代币，一旦它们启动了拥有完整支持的区块链和代币的项目，就会成功进行 ICO。由于与货币相比，开发代币更快且更容易，因此这类项目可以很容易地获得动力，并且在很短时间内启动，大部分时间可以投入到其他重要任务中，例如白皮书的创建、ICO等。
- en: Creating a new blockchain from scratch
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从头开始创建一个新的区块链
- en: In this method, creation of one's own blockchain from scratch can be done. Taking
    hints from Bitcoin and other blockchain platforms will be helpful to create the
    coin, which will allow you to integrate new features and also to use different
    consensus techniques.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种方法中，可以从零开始创建自己的区块链。借鉴比特币和其他区块链平台的经验将有助于创建代币，这将允许您集成新功能，并使用不同的共识技术。
- en: A forked blockchain with one's own genesis block
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 具有自己起源块的分叉区块链
- en: Our prime focus in this chapter is about this type of coin development; we will
    be creating our own coin complete with its own blockchain, after the introduction
    of Platforms such as Ethereum, Counterparty, NEO, and so on. There have been limited
    resources with creating one's own blockchain by taking fork of an existing coin
    such as Bitcoin, Litecoin, etc. and work on that to create own cryptocurrency.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的主要焦点是关于这种类型的货币开发；我们将在引入以太坊、Counterparty、NEO等平台后，创建完整的具有自己区块链的代币。通过采用比特币、Litecoin等现有货币的分叉来创建自己的区块链资源有限。
- en: Litecoin's development
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Litecoin 的开发
- en: Litecoin is one of the first cryptocurrencies built on top of Bitcoin. Litecoin's
    source was forked from Bitcoin's core code, including the wallet and other sources
    of Bitcoin. The major change that Litecoin has over Bitcoin is that the PoW algorithm
    is script instead of Bitcoin's SHA-256\. Apart from this, Litecoin has a coin
    supply limit of 84,000,000 LTC, and the block time is 2.5 minutes.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 莱特币是基于比特币构建的首批加密货币之一。莱特币的源代码从比特币的核心代码中分叉，包括比特币的钱包和其他资源。莱特币相对于比特币的主要变化是PoW算法是脚本而不是比特币的SHA-256。此外，莱特币的硬币供应限制为84,000,000
    LTC，区块时间为2.5分钟。
- en: The process
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 这个过程
- en: 'In this chapter, we will be forking Litecoin source code and working on top
    of that. Here is a brief overview of the steps involved:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们将从莱特币源代码中分叉并在其基础上进行工作。以下是涉及步骤的简要概述：
- en: Making the layout and the requirements of the project.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 制定项目的布局和要求。
- en: Opting of the algorithm, various algorithms can be opted for this process. In
    this chapter, we are going forward with the script algorithm, which is used in
    Litecoin itself.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择算法，有多种算法可供选择。在这一章中，我们将使用脚本算法，这是莱特币本身使用的。
- en: '**Consensus type**: PoW, PoS, or any other consensus type can be used based
    on community support. In this chapter, we will be using the PoW consensus type,
    which will require miners to mine for the coin and also confirm transactions.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**共识类型**：可以根据社区支持使用PoW、PoS或其他共识类型。在这一章中，我们将使用PoW共识类型，这需要矿工为硬币挖矿并确认交易。'
- en: '**Coin name**: The name of the coin has to be decided.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**硬币名称**：必须决定硬币的名称。'
- en: '**Coin abbreviation**: Such as for Bitcoin, BTC is used, and for Litecoin,
    LTC is used; similarly, an abbreviation is required, so better to have the abbreviation
    be similar to the coin name.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**硬币缩写**：例如，比特币使用BTC，莱特币使用LTC；类似地，硬币需要一个缩写，所以最好让缩写与硬币名称相似。'
- en: '**Port for connection**: It is important to select the port for connection
    with the network; this port will be used by every node connected to the blockchain
    network.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**连接端口**：重要的是选择与网络连接的端口；这个端口将由连接到区块链网络的每个节点使用。'
- en: '**Block reward**: It is important to set the block reward, that is, the amount
    of coins that will be rewarded when a block is mined by the miners.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**区块奖励**：重要的是设置区块奖励，即在矿工挖矿成功时获得的硬币数量。'
- en: '**Block halving time**: This is the time when the block reward will be halved,
    for example, in Bitcoin the block reward is halved every 210,000 blocks, which
    controls the production of the coins.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**区块减半时间**：这是区块奖励减半的时间，例如，在比特币中，每隔210,000个区块奖励减半，这控制了硬币的生产。'
- en: '**Coin supply limit**: This is the limit of coins that will be produced by
    all the miners in total; this is generally controlled by the block halving time,
    since after a certain amount of blocks, it will not be feasible to mine any more
    blocks.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**硬币供应限制**：这是所有矿工总共生产的硬币数量的限制；这通常由区块减半时间控制，因为在一定数量的区块后，挖矿更多区块将不可行。'
- en: '**Coinbase maturity**: It is important to set the number of blocks that are
    to be mined before the mined coins can be spent which were received in a block
    mining reward.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Coinbase成熟度**：重要的是设置在区块挖矿奖励中获得的硬币在可以花费之前需要挖矿的区块数量。'
- en: '**Confirmations**: This is the number of blocks that are to be mined before
    a transaction is confirmed.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**确认**：这是在确认交易之前需要挖矿的区块数量。'
- en: '**Difficulty re-adjustment time**: For example, Bitcoin has a difficulty re-adjustment
    time of two weeks; similarly, it is required to set this time during the development
    process.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**难度重新调整时间**：例如，比特币的难度重新调整时间是两周；类似地，在开发过程中也需要设置这个时间。'
- en: '**Block mining time**: Total time which should be spent in the mining of a
    block.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**区块挖矿时间**：挖一个区块所需的总时间。'
- en: '**Seed node**: This is the node that is the starting node of the coin; it is
    important to have a node that is always online till enough nodes are synced and
    connected to the network. It is acceptable to have multiple seed node addresses
    available. We can also opt for DNS seeds, which are nothing but DNS servers which
    contains addresses for the seed nodes on the blockchain network.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**种子节点**：这是硬币的起始节点；重要的是要有一个始终在线的节点，直到足够多的节点同步并连接到网络为止。可以接受多个种子节点地址的存在。我们还可以选择DNS种子，它们只不过是包含区块链网络种子节点地址的DNS服务器。'
- en: '**Wallet UI**: The core wallet is built on a QT framework, and its GUI can
    be changed as per requirements.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**钱包UI**：核心钱包建立在QT框架上，其GUI可以根据需求更改。'
- en: '**Graphic assets**: Icons for the coin and other graphic assets can be chosen
    and replaced in the Litecoin source; it is also suggested to maintain the sizing
    properties of the icons.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**图形资源**：可以在Litecoin源代码中选择并替换加密货币的图标和其他图形资源；建议保持图标的尺寸属性。'
- en: Creating one's own cryptocurrency
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建自己的加密货币
- en: Once the previously listed parameters are defined, it is time to work on the
    source code and make the required changes, as needed.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦定义了先前列出的参数，就是时候处理源代码并进行必要的更改了。
- en: Setting up Litecoin
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置Litecoin
- en: It is important to set up the Litecoin environment in our local machine; the
    source code is available on GitHub here: [https://github.com/litecoin-project/litecoin](https://github.com/litecoin-project/litecoin).
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在本地机器中设置Litecoin环境是很重要的；源代码在GitHub上可用：[https://github.com/litecoin-project/litecoin](https://github.com/litecoin-project/litecoin)。
- en: Platform selection
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 平台选择
- en: It is important to select the build platform on which the environment is to
    be set up. You can find the required build instruction in the `doc` subfolder
    of the source code. There, required instruction files for the preferred platforms
    are present for you to follow the steps to install the Litecoin core and the Wallet.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '选择要设置环境的构建平台是很重要的。您可以在源代码的`doc`子文件夹中找到所需的构建指令。那里为您提供了每个首选平台的所需指令文件，以便您按照这些步骤安装Litecoin核心和钱包。 '
- en: In this section, we will be working on Max OS X build instructions, although
    instructions for other platforms are also available in the suggested instruction
    path.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将使用Max OS X构建指令，尽管还提供了其他平台的指令。
- en: Preparation
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Installation of `xcode` is necessary for compilation of required dependencies.
    The following command should be executed in the terminal:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 编译所需依赖项需要安装`xcode`。应在终端中执行以下命令：
- en: '[PRE0]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Installation of `brew`, which is a package manager for macOS, is needed next.
    The following command is used to install `brew`:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来需要安装在macOS上的软件包管理器`brew`。以下命令用于安装`brew`：
- en: '[PRE1]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](img/5b3ca76a-550c-45c7-bea9-f54c4824df89.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5b3ca76a-550c-45c7-bea9-f54c4824df89.png)'
- en: Dependency installation
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 依赖项安装
- en: 'Once `brew` is installed, the next step is to install the required dependencies
    using the following command:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 安装了`brew`之后，下一步是使用以下命令安装所需的依赖项：
- en: '![](img/04a61ce7-96ca-4344-92a0-0db43e019510.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](img/04a61ce7-96ca-4344-92a0-0db43e019510.png)'
- en: '[PRE2]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The preceding command will install all the required dependencies, as needed:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令将根据需要安装所有必要的依赖项：
- en: '![](img/15580c17-4d9b-4792-aa19-8ce9ed160222.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](img/15580c17-4d9b-4792-aa19-8ce9ed160222.png)'
- en: Build instructions
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建指令
- en: 'The first step is to clone the Litecoin in the root or any other directory:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是在根目录或其他目录中克隆Litecoin：
- en: '[PRE3]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Installation of `BerkleyDb` is performed with the following command:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令执行`BerkleyDb`的安装：
- en: '[PRE4]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Building of Litecoin-core uses the following make command:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: Litecoin-core的构建使用以下make命令：
- en: '[PRE5]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](img/029b442d-fe7f-4223-b029-013ce0402dab.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](img/029b442d-fe7f-4223-b029-013ce0402dab.png)'
- en: 'You can run unit tests to make sure the build is successful without any errors:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以运行单元测试，确保构建成功且没有任何错误：
- en: '[PRE6]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Deployment of the `.dmg` which contains the `.app` bundles, is shown here:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 展示了包含`.app`包的`.dmg`的部署：
- en: '![](img/4fbbb793-9674-47fa-b532-639e045b71ed.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4fbbb793-9674-47fa-b532-639e045b71ed.png)'
- en: '[PRE7]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![](img/e523f7fd-f916-4a25-bf45-4d7ed240bda2.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e523f7fd-f916-4a25-bf45-4d7ed240bda2.png)'
- en: Setting up our own coin
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置我们自己的加密货币
- en: Now, it is time to work on our own coin; for this, it is important to check
    out the clone directory and Litecoin, and make a copy in case any of the steps
    turn out to be fatal.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，是时候着手处理我们自己的加密货币了；为此，重要的是检查克隆目录和Litecoin，并进行备份，以防有任何步骤出现致命错误。
- en: As per the parameters we have listed in one of the previous sections, it is
    time to replace the parameters at the requisite locations.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 根据我们在之前某个部分列出的参数，现在是在必要的位置替换参数的时候了。
- en: The `src` directory contains the Litecoin core source code where most of the
    parameters are to be set. In the `chainparams.cpp` file, change the abbreviation
    from `LTC` to the abbreviation of our choice. Similarly, all other files where
    the abbreviation seems fit is to be changed as suggested.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '`src`目录包含Litecoin核心源代码，大多数参数需在其中设置。在`chainparams.cpp`文件中，将缩写从`LTC`更改为我们选择的缩写。同样，建议更改其他文件中看起来合适的缩写。'
- en: Port selection
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 端口选择
- en: Now, the ports need to be changed, so that our blockchain works at the relevant
    port for all the nodes in the network.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，需要更改端口，以便我们的区块链在网络中的所有节点的相关端口上运行。
- en: The connection port should be changed in the `init.cpp` file.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在`init.cpp`文件中应更改连接端口。
- en: The RPC port should be changed in the `bitcoinrpc.cpp` file.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在`bitcoinrpc.cpp`文件中应更改RPC端口。
- en: The setting of block-related parameters
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 区块相关参数的设置
- en: 'In the `validation.cpp` file, the following parameters should be edited:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在`validation.cpp`文件中，应编辑以下参数：
- en: Block value
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 区块价值
- en: Block reward
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 区块奖励
- en: Block time
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 区块时间
- en: Difficulty re-target time
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 难度重新定位时间
- en: Difficulty re-target scale
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 难度重新定位比例
- en: 'The block value should be changed in the `GetBlockSubsidy()` function:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在`GetBlockSubsidy()`函数中应更改区块值：
- en: '[PRE8]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Amount limit
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 金额限制
- en: 'Now, it is time to set the coin limit and the minimum value, and the same can
    be done in the `amount.h` file:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，是时候设置硬币限制和最小值了，可以在`amount.h`文件中完成相同的操作：
- en: '[PRE9]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The coinbase maturity number
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: coinbase成熟度数字
- en: 'To change the coinbase maturity, in the `qt` subfolder, the `transactionrecord.cpp`
    file should be changed to set the required number of blocks that are to be found
    before the mined coins can be spent:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 要更改coinbase的成熟度，在`qt`子文件夹中，应更改`transactionrecord.cpp`文件以设置在挖矿的硬币可花费之前要找到的所需区块数：
- en: '[PRE10]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: We have to change the transaction confirm count in the `transactionrecord.cpp`
    file to set this parameter, as per our requirements.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 我们必须将`transactionrecord.cpp`文件中的交易确认计数更改为设置此参数，根据我们的要求。
- en: Genesis block creation
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创世块创建
- en: 'The genesis block is created from the `LoadBlockIndex()` function, which is
    present inside the `validation.cpp` file:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 创世块是从`validation.cpp`文件中的`LoadBlockIndex()`函数创建的：
- en: '[PRE11]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Further, in `chainparams.cpp`, the paraphrase is to be changed to the requisite
    parameter of choice. In Litecoin, the following parameter is used:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，在`chainparams.cpp`中，应将释义更改为所需的参数选择。在Litecoin中，使用以下参数：
- en: '[PRE12]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Wallet address
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 钱包地址
- en: The wallet address is an important part of the blockchain, as without having
    correct private and public keys it is not possible to perform the relevant changes
    on the source of Litecoin. The starting letter can be set in the `base58.cpp`
    file.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 钱包地址是区块链的重要组成部分，如果没有正确的私钥和公钥，就无法对Litecoin的源进行相关更改。起始字母可以在`base58.cpp`文件中设置。
- en: Checkpoints
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查点
- en: 'Checkpoints are hardcoded into the Litecoin Core client. With checkpoints set,
    all transactions are valid up to the checkpoint condition valid. This is set in
    case anyone wants to fork the blockchain and start form the very same block; the
    checkpoint will render false and won''t accept any further transactions. The `checkpoints.cpp`
    file helps in managing the checkpoints in a blockchain source code:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 检查点被硬编码到Litecoin Core客户端中。设置检查点后，所有交易都有效直到检查点条件有效。这是为了以防有人想要分叉区块链并从完全相同的区块开始；检查点将会失效，并且不会接受任何进一步的交易。`checkpoints.cpp`文件帮助管理区块链源代码中的检查点：
- en: '[PRE13]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Creatives and graphics
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创意和图形
- en: Icons and other graphics can be set and replaced from the `src/qt/res/icons` directory,
    which contains all the images and the main logo of the coin.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 可以从`src/qt/res/icons`目录设置和替换图标和其他图形，该目录包含所有图像和硬币的主标志。
- en: The files `bitcoin.png` and `about.png` contain the logo for the specific coin.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 文件`bitcoin.png`和`about.png`包含特定硬币的标志。
- en: Summing up
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: 'By following the preceding points, the coin can be created and made to work
    by using the Litecoin source; once the coin is created and made to work, the next
    steps will be to test for actual production level usage. Further steps include
    compiling the coin source and using the QT-based wallet:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 通过遵循上述要点，可以使用Litecoin源代码创建和运行硬币；一旦硬币被创建并运行，下一步将是测试实际生产级别的使用。进一步的步骤包括编译硬币源代码并使用基于QT的钱包：
- en: '![](img/ea7dce4c-f758-4381-9691-7ad71a1dbcb0.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ea7dce4c-f758-4381-9691-7ad71a1dbcb0.png)'
- en: Summary
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we discussed the creation of our own cryptocurrency, since
    we had already discussed the creation of tokens based on the Ethereum platform
    in [Chapter 15](588b84f6-baef-4ea3-895e-bd66f523452b.xhtml), *Ethereum Development*.
    In this chapter, we worked on the creation of our own blockchain, by taking a
    fork of Litecoin, and then making the required changes to create the desired coin
    with the relevant parameters.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们讨论了创建我们自己的加密货币，因为我们已经在[第 15 章](588b84f6-baef-4ea3-895e-bd66f523452b.xhtml)
    *以太坊开发* 中讨论了基于以太坊平台的代币的创建。在本章中，我们致力于创建我们自己的区块链，通过对 Litecoin 进行分叉，然后进行必要的更改，以创建具有相关参数的所需硬币。
- en: In the following chapters, we will address both sides of the coin in terms of
    blockchain's future, that is, scalability and other challenges that blockchain
    is facing. Furthermore, we will discuss the future of blockchain, and how it is
    going to shape the future of the internet and technology, not just in terms of
    currency-based industries, but also in terms of other industries in which blockchain
    acts as a game changer.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将就区块链未来的两个方面进行讨论，即可扩展性和区块链面临的其他挑战。此外，我们将讨论区块链的未来，以及它将如何塑造互联网和技术的未来，不仅仅是在基于货币的行业方面，还包括其他行业，在这些行业中，区块链充当了一个颠覆者。
