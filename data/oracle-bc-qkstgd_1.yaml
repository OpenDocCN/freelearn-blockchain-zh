- en: Exploring Blockchain and BaaS
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索区块链和BaaS
- en: Blockchain is perceived to be a disruptive game-changing technology that will
    have an impact as huge as the internet in the next two decades. This programmable
    economy has use cases and applications in almost every industry. Blockchain has
    grown from being a buzzword to something of great interest to enthusiasts and
    real implementers. Evangelists are not confined to **proof of concepts** (**PoCs**),
    but have started real implementations and have started demonstrating concrete
    achievements. Although the adoption is slow, Gartner projects (at [https://www.gartner.com/](https://www.gartner.com/)
    on June 3, 2019) that adoption will be $3.1 trillion by 2030.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链被认为是一种具有颠覆性、改变游戏规则的技术，其影响将在未来二十年与互联网一样巨大。这个可编程经济在几乎每个行业都有用例和应用。区块链已经从一个时髦词发展成为对热衷者和实际实施者都非常感兴趣的东西。传道者们不再局限于**概念证明**（**PoCs**），而是已经开始实际的实施，并开始展示具体的成就。尽管采用速度较慢，但根据Gartner在2019年6月3日的预测（在[https://www.gartner.com/](https://www.gartner.com/)上），到2030年采用率将达到3.1万亿美元。
- en: Blockchain is a world where users are in full control of transactions and the
    information around them. The information flowing around is true, trusted, accurate,
    consistent, accepted, complete, timely available, widely available, transparent,
    and immutable. Blockchain, a type of **distributed ledger technology** (**DLT**),
    removes the risk of a central point of failure, while the underlying cryptography
    and algorithms will ensure the security in this immutable world. As the *trust*
    is in the blockchain network itself, there is no need for a trusted central third
    party. Welcome to the blockchain world, a world of distributed double-entry systems.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链是一个让用户完全掌控交易和周围信息的世界。周围流动的信息是真实的、可信的、准确的、一致的、被接受的、完整的、及时可用的、广泛可用的、透明的和不可变的。区块链是一种**分布式分类帐技术**（**DLT**），它消除了中心化失效风险，而底层的密码学和算法将确保在这个不可变的世界中的安全性。由于*信任*存在于区块链网络本身，所以无需信任的中央第三方。欢迎来到区块链世界，一个分布式双向记账系统的世界。
- en: This chapter starts with accounting systems, centralized and decentralized ledgers,
    and coins the term *distributed double-entry system*. This chapter gradually moves
    toward the definition and analogy of blockchain and demonstrates the power of
    equity offered by **peer-to-peer** (**P2P**) networks. Here, you will also walk
    through various types of blockchain networks, such as permissioned and permissionless
    or public and private. This chapter then graduates toward the layered structure
    of the blockchain architecture and structure of transaction, as well as the blocks
    and the transaction flow. Finally, it covers how you can approach a blockchain
    solution and defines the cloud approach to ease blockchain adoption—from PoC to
    production using a **Blockchain-as-a-****Service** (**BaaS**) platform such as
    the **Oracle Blockchain Platform** (**OBP**).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 这一章从会计系统、集中式和分散式分类帐开始，并创造了术语*分布式双向记账系统*。本章逐渐向区块链的定义和类比发展，并展示了**点对点**（**P2P**）网络提供的权益力量。在这里，您还将了解各种类型的区块链网络，例如许可和非许可，或公共和私有。本章然后逐渐向区块链架构的分层结构和交易结构以及区块和交易流程发展。最后，它介绍了您如何应对区块链解决方案，并定义了通过**区块链即服务**（**BaaS**）平台，如**Oracle区块链平台**（**OBP**）来简化区块链采用的云方法—从PoC到生产。
- en: Accounting system – single and double–entry
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 会计系统 - 单式和复式
- en: Before we jump into blockchain and delve into Hyperledger Fabric and the Oracle
    Cloud solution, we need to start with two core principles—ledger and accounting.
    In an accounting system, business transactions are recorded in journals and ledgers.
    Fine-grained details of every transaction are entered into various journals. Summarized
    information from the journals is then transferred (also known as posted) to a
    ledger. It is the information from the ledger that becomes the source for trail
    balances and various financial statements. Every transaction is recorded in journals
    and then posted to a ledger that records this information in various accounts,
    such as asset accounts, liability accounts, equity accounts, revenue accounts,
    and expense accounts.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们深入讨论区块链、深入了解 Hyperledger Fabric 和 Oracle Cloud 解决方案之前，我们需要从两个核心原则开始 - 总账和会计。在会计系统中，业务交易记录在日记账和总账中。每笔交易的细节都被输入到各种日记账中。从日记账中的汇总信息然后转移到总账中（也称为过账）。总账中的信息成为试算平衡表和各种财务报表的来源。每笔交易都记录在日记账中，然后过账到总账中，该总账将此信息记录在各种账户中，例如资产账户、负债账户、所有者权益账户、收入账户和费用账户。
- en: For any organization's accounting system, the ledger is the backbone. Anything
    that has financial value is posted to the organization's ledger. However, these
    ledgers are centralized ledgers and the organization has full control over them.
    We will talk about centralized and decentralized ledgers later in this chapter.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 对于任何组织的会计系统来说，总账是其支柱。任何具有财务价值的事物都会被记录到组织的总账上。然而，这些总账是中央化的总账，组织对其拥有完全控制权。我们将在本章后面讨论中央化和分散化的总账。
- en: Accounting system – single–entry
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 会计系统 - 单式记账
- en: Accounting systems address the purpose of producing an operating document to
    display ownership of assets, to protect assets, and various other tasks. Essentially,
    an accounting system is a powerful means to check the loss of assets due to malicious
    human activity, software, and so on, and to keep track of activities and transactions
    around those assets. Historically, as activities around assets were minimum, single-entry
    accounting was good enough to prove the ownership of assets. It is a form of accounting
    system where each transaction is a single-entry in the journal.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 会计系统旨在产生一份运营文档，显示资产所有权，保护资产以及执行各种其他任务。基本上，会计系统是一种强大的手段，用于检查资产损失，这些损失是由恶意人为活动、软件等造成的，并跟踪围绕这些资产的活动和交易。历史上，由于围绕资产的活动很少，单式记账足以证明资产的所有权。这是一种每笔交易在日记账中只有一次记账的记账系统。
- en: A single-entry account system resembles the check register that individuals
    use to track their checks, deposits, and balances. The information recorded is
    minimal and is owned by that individual. It's an efficient system for very small
    businesses that work on a cash basis of accounting, which have fairly low transactions
    each day. There are no credit-based transactions and the assets that are owned
    are very few and far between. Most importantly, there is no need to publish income,
    financial, and balance statements. Historically, it would have worked very well
    and, even today, it might work fine for very small firms that meet the aforementioned
    attributes.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 单式记账系统类似于个人用于跟踪支票、存款和余额的支票注册。记录的信息很少，由个人拥有。这对于每天交易很少的以现金为基础的非常小型企业来说是一种高效的系统。没有基于信用的交易，拥有的资产非常少。最重要的是，无需发布收入、财务和资产负债表。从历史上看，它可能非常有效，即使在今天，对于那些符合上述属性的非常小的公司来说，它可能也会运行良好。
- en: There are various challenges with single-entry accounting systems—there are
    no scientific or systematic rules to record, post, and report on the transactions.
    It appears as an incomplete system as it does not have both the aspects of the
    accounts being recorded; hence, it fails to reflect the truth about the profit
    or loss and will miss reflecting the true financial position of the organization.
    With all of these shortcomings, a single-entry is vulnerable to frauds and various
    errors in the ledger. Hence, to check on vulnerability, you need to trust a centralized
    authority; therefore, historically, there was the need for a king to check for
    vulnerabilities and maintain trust around the ledger. However, since trade has
    expanded its boundaries, you need a mechanism to allow one ledger owner to trade
    with another ledger owner. This immediately led to a double-entry accounting system.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 单录入会计系统存在各种挑战——没有科学或系统的规则来记录、过账和报告交易。它看起来像是一个不完整的系统，因为它没有记录账户的两个方面；因此，它无法真实反映利润或损失的情况，并且将无法反映组织的真实财务状况。由于所有这些缺点，单录入系统容易受到欺诈和账簿中各种错误的影响。因此，为了检查脆弱性，您需要信任一个集中的权威；因此，从历史上看，需要国王检查脆弱性并维护账簿周围的信任。然而，随着贸易的扩展，您需要一种机制来允许一个账簿所有者与另一个账簿所有者进行交易。这立即导致了双录入会计系统的出现。
- en: Accounting system – double–entry
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 会计系统 - 双录入
- en: The double-entry system offers error checks that are not inherently available
    in a single-entry system. Each account has two columns and each transaction is
    reflected in two accounts. Two entries are pushed for each transaction; however,
    every transaction has a debit entry in one account and an equivalent credit entry
    to another account. An example of a double-entry account system would be if an
    organization wants to purchase a new laptop for $2,000\. In this case, the organization
    will enter a debit of $2,000 to an expense account and a credit of $2,000 to a
    cash account to show a decrease from the balance sheet.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 双录入系统提供了单录入系统中本质上无法获得的错误检查。每个账户都有两栏，每笔交易都反映在两个账户中。每笔交易都会产生两笔记录；但是，每笔交易在一个账户中有借方记录，而在另一个账户中有等额的贷方记录。双录入账户系统的一个示例是，如果一个组织想要购买一台价值$2,000的新笔记本电脑。在这种情况下，该组织将会在支出账户中记录$2,000的借方和在现金账户中记录$2,000的贷方，以显示资产负债表中的减少。
- en: 'Double-entry accounting is a way to show both of the effects of a transaction.
    For example, if an organization purchases a laptop, the accounting entry does
    not clarify whether the laptop was purchased for cash, in exchange for another
    laptop, or on credit. Information like this can only be available if both of the
    effects on a transaction are accounted for. In the accounting system, these two
    effects are known as debit and credit. A double-entry accounting system follows
    the principle of duality, which means that, for every debit entry, there is a
    mandatory equivalent credit entry. Debit entries demonstrate effects such as an
    increase in assets and expenses and a decrease in equity, income, and liability.
    Similarly, credit entries demonstrate effects such as a decrease in assets and
    expenses and an increase in equity, income, and liability. The double-entry system
    ensures that the accounting equation remains in equilibrium:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 双录入会计是一种展示交易影响的方式。例如，如果一个组织购买了一台笔记本电脑，会计分录并不清楚这台笔记本是用现金购买的，以换取另一台笔记本，还是赊购。只有当交易的两个影响都被记录时，这样的信息才能够得到。在会计系统中，这两个影响被称为借方和贷方。双录入会计系统遵循了对偶原理，这意味着，对于每笔借方记录，都必须有一个等额的贷方记录。借方记录显示诸如资产和费用增加，以及权益、收入和负债减少等影响。类似地，贷方记录显示诸如资产和费用减少，以及权益、收入和负债增加等影响。双录入系统确保会计等式保持平衡：
- en: '*Assets = Liabilities + Equities*'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '*资产 = 负债 + 权益*'
- en: At the end of the reporting period, the total debits equalize the total credit.
    A balance sheet follows the equation, where the total assets are the sum of liabilities
    and equities. Any deviation from this equation will highlight an error.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在报告期末，总借方等于总贷方。资产负债表遵循该等式，其中总资产等于负债和权益的总和。任何偏离该等式的情况都会突显出错误。
- en: Interestingly, a single-entry account system accounts for only revenue and expenses
    and does not monitor equities, liabilities, and assets. However, a double-entry
    system accounts for revenue, expenses, equity, liabilities, and assets, which
    makes it easy and precise to derive and calculate profits and loss, helps to detect
    fraud, reduces errors, and allows the generation of various financial statements.
    As both aspects of a transaction are recorded, it is easier to keep the account
    complete. Maintaining the double-entry system involves time, money, skill, and
    labor. There are chances of errors and mistakes. During an accounting year, transactions
    are posted and adjusted in final accounts; there are difficulties in adjusting
    transactions if tracking transactions is a challenge.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的是，单式记账系统只记录收入和支出，不监控所有权、负债和资产。然而，双式记账系统记录收入、支出、所有权、负债和资产，这使得轻松准确地得出和计算利润和损失、有助于检测欺诈、减少错误，并允许生成各种财务报表。由于交易的双方面都有记录，因此更容易让账簿保持完整。维护双重记账系统牵涉时间、金钱、技能和劳动。存在出错和疏漏的可能。在一个会计年度内，交易被记录并调整在最终账户中；如果跟踪交易是一个挑战，调整交易将会有困难。
- en: In the double-entry system, the first entry demonstrates what you have, while
    the second entry clarifies how you received it. If these entries are not in equilibrium,
    it is a clear indication that counterparty exposure might not be effectively accounted
    for which leads to audits and corrections. In the double-entry account system,
    it is mandatory to account for every single movement of the value of the counterparty.
    It has been a simple, proven, and effective accounting system for many years.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在双重记账系统中，第一笔记录说明你拥有什么，而第二笔记录澄清你是如何得到它的。如果这些记录不平衡，那就清楚地表明对手方风险可能未被有效地计入，这会导致审计和纠正。在双重记账系统中，对对手价值的每一次变动都必须进行记账。多年来，这一简单、经得起检验、有效的会计系统一直是强制性的。
- en: However, think about when there is no exposure to the counterparty. A what-if
    system does not know who owns it and is liable for the assets and the value recorded
    in the journal, which are posted in the ledger. To send or receive an asset of
    value, there must be a counterparty to receive and send it. Such fundamentals
    were far from question until today. A transaction is recorded in an organization's
    ledger, and the same transaction is recorded in the counterparty's ledger; for
    example, a supplier's ledger or bank's ledger. It reflects the counterparty's
    perspective for the same transaction. Various documents and statements such as
    contracts, invoices, notes, bank statements, and receipts support these transactions.
    This is prone to errors, such as reconciliation errors and missing cash, which
    then leads to disputes. This needs dispute resolution, and to check all of these,
    organizations invest in recording, analyzing, and auditing.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，考虑一下当不存在对手方风险的情况。假设系统不清楚谁拥有它并对资产和账簿中记录的价值负有责任。要发送或接收具有价值的资产，必须有对手方来接收和发送。直到今天，这些基础问题远未解决。组织的账簿记录了一项交易，对手方的账簿也记录了相同的交易；例如，供应商的账簿或银行的账簿。这反映了对手方对同一交易的看法。各种文件和陈述，如合同、发票、票据、银行对账单和收据，支持这些交易。这很容易出错，比如对账错误和现金缺失，进而导致争议。这需要争议解决，并且为了核对所有这些，组织投资于记录、分析和审计。
- en: The double-entry account system worked well for hundreds of years. In this section,
    we will not emphasize the need for a triple-entry accounting system; however,
    we will delve into distributed ledgers. Double-entry mandates the need for each
    organization and its counterparty to maintain its own ledger, which in turn reflects
    the *truth*. However, there are multiple copies of the truth. In addition, the
    organization and the counterparty invest time, resources, and money to perform
    truth-reconciliation to actually derive and agree on a single truth.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 双重记账系统已经运作了几百年。在这一部分，我们不会强调三重记账系统的需求，而是会深入探讨分散化账簿。双重记账要求每个组织及其对手方维护自己的账簿，这反映了*真相*。然而，存在多个副本的真相。此外，组织和对手方投入时间、资源和金钱来执行真相调和，最终得出并达成一个统一的真相。
- en: Centralized versus distributed ledgers
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 中央化对分散化账簿
- en: This section highlights centralized and decentralized ledgers and distributed
    ledgers, and outlines the differences between them.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 本节突出了中央化和去中心化账簿以及分散化账簿，并概述了它们之间的差异。
- en: 'The following diagram shows different types of systems:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表显示了不同类型的系统：
- en: '![](img/e0a571a6-4569-4b4e-a866-03a468000727.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e0a571a6-4569-4b4e-a866-03a468000727.png)'
- en: Types of systems and ledgers
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 系统和分类帐的类型
- en: Throughout this section, we will refer to the preceding diagram to understand
    the layout of various types of ledgers. Before we drill into the differences between
    centralized and distributed ledgers, let's understand the different types of system.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将参考前面的图表来了解各种类型的分类帐的布局。在我们深入研究集中式和分布式分类帐之间的区别之前，让我们先了解一下不同类型的系统。
- en: 'From the perspective of *control*, there are two types of systems—centralization
    and decentralization systems:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 从*控制*的角度来看，系统有两种类型——集中化和去中心化系统：
- en: '**Centralized system**: One entity controls the entire system, where an entity
    can be a person or an enterprise.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**集中式系统**：一个实体控制整个系统，其中实体可以是一个人或一个企业。'
- en: '**Decentralized system**: In a decentralized system, there could be multiple
    entities controlling the system. There is no single point of control, and the
    control is shared between various independent entities.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**去中心化系统**：在去中心化系统中，可能有多个实体控制系统。没有单一的控制点，控制权是在各个独立实体之间共享的。'
- en: 'From the perspective of *location*, there are two types of systems—centralized
    and distributed systems:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 从*位置*的角度来看，系统有两种类型——集中式和分布式系统：
- en: '**Centralized system**: All the constituting parts of the system, such as servers,
    ledgers, and so on, are co-located and exist at the same location'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**集中式系统**：系统的所有组成部分，如服务器、分类帐等，都是共位的，存在于同一个位置。'
- en: '**Distributed system**: All the constituting parts of the system, such as servers,
    ledgers, and so on, are NOT co-located and exist at different locations'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分布式系统**：系统的所有组成部分，如服务器、分类帐等，都不是共位的，而是存在于不同的位置。'
- en: 'These categories of the system lead to the following variants of the system:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这些系统的分类导致了以下系统变体：
- en: '**Distributed yet centralized system**: Distributed yet centralized system
    is the category of system wherein the system is distributed, from the location''s
    perspective, yet the system is controlled by a central authority or central entity.
    For example, cloud service providers offer various services such as compute, storage,
    SaaS, PaaS, IaaS, and so on. These services are offered via servers and databases
    that are distributed. However, the entire system is controlled by the cloud service
    provider. Such a system can be termed a distributed yet centralized system.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分布式但集中化系统**：分布式但集中化系统是系统的一类，从位置的角度来看，系统是分布式的，但系统由一个中央权威或中央实体控制。例如，云服务提供商提供各种服务，如计算、存储、SaaS、PaaS、IaaS
    等。这些服务是通过分布式的服务器和数据库提供的。然而，整个系统由云服务提供商控制。这样的系统可以称为分布式但集中化系统。'
- en: '**Distributed system**: Distributed systems, from the control''s perspective,
    are decentralized, whereas from the location''s perspective, they are distributed.
    This means that no single entity is the owner or authority of the system and the
    system doesn''t have just one location—it is widely distributed. DLT and its type,
    such as blockchain, are such distributed systems, where control is not with one
    entity. Hence, no single entity can alter or modify the system (decentralized).
    Also, DLT and blockchain are based on the P2P network, where nodes (peers or participants)
    are independent and globally spread (distributed).'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分布式系统**：从控制的角度来看，分布式系统是去中心化的，而从位置的角度来看，它们是分布式的。这意味着没有单一实体是系统的所有者或管理者，系统也不只存在于一个地点——它被广泛分布。DLT
    及其类型，如区块链，就是这种分布式系统，其中控制不在一个实体手中。因此，没有单一实体可以改变或修改系统（去中心化）。另外，DLT 和区块链是基于 P2P 网络的，其中节点（对等方或参与者）是独立的，并且全球分布（分布式）。'
- en: A distributed system is a superset of a decentralized system, and is based on
    a P2P network.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统是去中心化系统的超集，并且基于 P2P 网络。
- en: Centralized ledgers
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 集中式分类帐
- en: The double-entry accounting system we've discussed so far highlights an accounting
    system that has a centralized ledger. Anything with a financial value is recorded
    in journals and posted to ledgers. These ledgers are just like the central repository
    of the posted transactions, and they are the backbone of any organization.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们讨论的复式记账系统强调了一个具有集中式分类帐的会计系统。任何具有财务价值的事物都记录在日记帐中并发布到分类帐中。这些分类帐就像发布交易的中央仓库一样，它们是任何组织的支柱。
- en: However, centralized ledger systems have various drawbacks as well. For example,
    banks control the transactions that are posted into the bank's ledgers and they
    maintain total control over bank statements. In this case, they can penalize you
    at any given time and can transact money from your account at any given time.
    If such a centralized institute has malicious intent, then the consequences could
    be manifold; they could close down their business without prior notification,
    which prohibits any further transactions. These examples are used mostly by the
    blockchain evangelists who lean more toward complete decentralization of trust
    authorities.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，中心化的分类账系统也有各种缺点。例如，银行控制着输入到银行分类账的交易，并且他们对银行对账单拥有绝对控制权。在这种情况下，他们可以随时惩罚你，并且可以随时从你的账户中转账。如果这样一个中心化的机构有恶意意图，后果可能是多方面的；他们可以在没有事先通知的情况下关闭他们的业务，从而禁止任何进一步的交易。这些例子主要被倾向于完全去中心化信任机构的区块链狂热者使用。
- en: Let's look at a more viable challenge, pertaining to banks. Double-entry mandates
    the need for each bank to maintain its own ledger to reflect their perspective
    of truth, and as more banks are transacting with each other, they need to reconcile
    their version of the truth to derive a single version of the truth. Banks today
    spend time, money, and resources to ensure a consensus over the single truth.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看一个更可行的挑战，涉及到银行。**双向记账**要求每个银行都要维护自己的分类账，以反映他们对真实的看法，随着越来越多的银行相互交易，他们需要调和他们对真相的看法，以得出一个统一的真相。如今，银行花费时间、金钱和资源来确保对单一真相达成共识。
- en: Obviously, they have their ledger and hence their own system, which allows the
    financial industry to avoid any chance of a single point of control and single
    point of failure. In addition, it becomes more interesting as a customer opens
    an account with a bank and puts his/her money with a level of trust in that banking
    institute. Now, the onus is on the banking institution to safeguard your money
    and information. On the other hand, the bank will invest a lot of time, money,
    resources, and effort into building and maintaining a system and then spend even
    more time, money, resources, and effort on integrating and checking with other
    banking institutes to ensure that their mastered system is in consensus with the
    other banking institutes' system to reach a common truth.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，它们有自己的分类账和系统，这使得金融行业能够避免出现单一控制点和单一故障点的任何机会。此外，当客户在银行开立账户并将他/她的资金寄存在银行时，他/她对该银行有一定程度的信任。现在，责任在银行机构上，要保护你的资金和信息。另一方面，银行将投入大量时间、金钱、资源和精力来构建和维护一个系统，然后花费更多的时间、金钱、资源和精力与其他银行机构进行整合和核查，以确保他们的掌握的系统与其他银行机构的系统一致，以达成共识。
- en: If you analyze this closely, you will see that each bank's ledger is actually
    replicating the functionality of the other banking institutions. Now, what if
    one of the banking institute's systems fail? Is this going to lead to a situation
    where reconciliation is not possible? Doesn't this sound more like a single point
    of failure? The answers lie in the distributed ledger discussed in the following
    section and throughout the book.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你仔细分析，你会发现每家银行的分类账实际上正在复制其他银行机构的功能。现在，如果其中一家银行的系统失败了怎么办？这会导致无法协调的局面吗？这不是更像一个单一故障点吗？答案在下一节和整本书中讨论的分布式分类账中。
- en: Distributed ledgers
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分布式分类账
- en: Across the world, in the economical, legal, political, and institutional systems,
    the key elements are transactions, contracts, and documents. They dictate the
    relationship between countries, enterprises, organizations, communities, and individuals
    and, most importantly, they are perceived to offer trust. Interestingly, these
    have not joined the digital transformation to a greater extent and for the greater
    cause. So, what is the solution? Distributed ledgers and DLT, along with blockchain,
    offer the solution to such critical challenges. In this section, we will explore
    more about distributed ledgers and DLTs.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在全球范围内，在经济、法律、政治和制度系统中，关键要素是交易、合同和文件。它们决定了国家、企业、组织、社区和个人之间的关系，最重要的是，它们被认为提供了信任。有趣的是，这些要素在数字化转型中的参与程度还不是很大，也没有为更大的事业做出贡献。那么，解决方案是什么？分布式分类账和分布式账本技术（DLT），以及区块链，为这些关键挑战提供了解决方案。在本节中，我们将更多地探讨分布式分类账和DLTs。
- en: In a distributed ledger, there is no central authority or a central administrator.
    It is an asset database that is shared over the network, where each party on the
    network has an identical copy of the ledger. These assets can be financial, legal,
    and electronic assets. Changes to the value of these assets are reflected throughout
    the network, and each copy of the ledger is appended.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在分布式分类账中，没有中央机构或中央管理员。这是共享在网络上的资产数据库，网络上的每个参与方都有分类账的相同副本。这些资产可以是金融、法律和电子资产。这些资产价值的改变会在整个网络中反映出来，每个分类账的副本都会被附加。
- en: Many organizations, governments, and institutes use a central database of the
    ledger, which we discussed in the *Centralized ledgers* section. A centralized
    ledger needs a central authority to be trusted by transacting parties; however,
    in a distributed ledger, the need for a third party is omitted, which is one of
    the gravitational forces behind the attraction to DLT. Here, I have quietly used
    the term DLT because a distributed ledger can be pronounced as a shared ledger
    or a DLT, and they are one and the same.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 许多组织、政府和机构使用了我们在*中心分类账*部分讨论过的分类账的中央数据库。中央分类账需要一个可信赖的中央机构来被交易各方信任；然而，在分布式分类账中，第三方的需求被省略掉了，这是吸引人们对DLT的吸引力之一。在这里，我悄悄地使用了DLT这个术语，因为分布式分类账可以被发音为分享分类账或DLT，它们是同一个概念。
- en: What's disruptive about a DLT is that the ledger database is distributed, spread
    on all of the nodes or computing devices across the network, and each node has
    an identical copy of the ledger, where nodes update themselves independently.
    All of the participating nodes reach an agreement to establish a single truth
    (true copy) for the ledger through a process called **consensus**. Once a consensus
    is reached, the distributed ledger is updated automatically and the latest truth
    (true agreed copy) of the ledger is appended on each node separately. While reading
    this paragraph, you might think about the reconciliation process of banks to establish
    trust and an agreement on the ledger. With DLT, trust (reconciliation) and consensus
    (agreement) happen seamlessly and automatically.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: DLT所颠覆性的地方在于分类账数据库是分布在网络中的所有节点或计算设备上，每个节点都有一个相同的分类账副本，节点独立地更新自己。所有参与的节点通过一种称为**共识**的过程达成一致意见，建立分类账的单一真相（真实的副本）。一旦达成一致，分布式分类账会被自动更新，最新的真相（真实的协议副本）会被分别附加在每个节点上。在阅读这一段时，你可能会想到银行的协调过程来建立对分类账的信任和一致性。使用DLT，信任（协调）和一致性（协议）会无缝自动地发生。
- en: What we just found out is that there is no central authority in the previous
    story to maintain the distributed ledger. DLT empowers systems to reduce the dependencies
    on various central authorities such as banks, lawyers, governments, regulatory
    offices, and third-party authorities. Distributed ledgers omit the need for a
    central authority to validate, authenticate, and process transactions. Transitions
    on DLT are timestamped and have a cryptographic unique identity, where all records
    in question are available for the participants to view, and this ensures that
    the verifiable and auditable history of the transaction is stored immutably.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚发现的是在先前的故事中没有中央机构来维护分布式分类账。DLT赋予系统减少对各种中央机构（如银行、律师、政府、监管办公室和第三方机构）的依赖的能力。分布式分类账省略了需要中央机构来验证、认证和处理交易的需求。DLT上的过渡是被时间戳标记并且具有加密的唯一标识，被质疑的所有记录可以供参与者查看，这确保了交易的可验证和可核对的历史被不可变地存储。
- en: In the decentralized distributed ledger, the transaction is replicated to the
    distributed ledger, which means all the participating nodes' copies of the ledger
    are appended; however, there is no central single database. It is the network
    that is decentralized. Such a system needs a decentralized consensus as there
    is no single point of contract, or single authority or party. Hence, to ensure
    trustlessness, consensus is a must. In a traditional database system, a single
    party acts on behalf of the transacting clients to modify the state of the system.
    However, in a distributed ledger, any party can record, and the protocols and
    algorithms govern the posting of transactions on the network's ledger.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在分散的分布式总账中，交易被复制到分布式总账中，这意味着所有参与节点的总账副本都被追加；然而，没有中央单一数据库。网络是分散的。这样的系统需要分散的共识，因为没有单一的联系点、单一的权威或方。因此，为了确保无信任，共识是必要的。在传统的数据库系统中，单一方代表交易客户行事，以修改系统的状态。然而，在分布式总账中，任何一方都可以记录，协议和算法管理着交易在网络总账上的发布。
- en: 'The following table lists some of the differences between a centralized ledger
    and a distributed ledger:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 下表列出了中心化账本和分布式账本之间的一些区别：
- en: '| **Centralized ledger** | **Distributed ledger** |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| **中心化账本** | **分布式账本** |'
- en: '| Reconciliation is required (both internal and external). | Reconciliation
    is not required; however, a consensus is required to reach an agreement. |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| 需要协调（内部和外部）。 | 不需要协调；然而，需要达成一致意见。'
- en: '| There''s no restriction on DB operations. | It''s append-only. |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| 没有对数据库操作的限制。 | 它只能追加。 |'
- en: '| There''s a single point of failure. | It''s distributed; hence, there''s
    no single point of failure. |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| 存在单一故障点。 | 它是分布式的；因此，没有单一故障点。 |'
- en: '| There''s a single point of contact. | It''s decentralized; hence, there''s
    no single authority. |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| 存在单一联系点。 | 它是分散的；因此，没有单一的权威。 |'
- en: '| There are third parties, middlemen, and gatekeepers. | It''s P2P. There''s
    no central party, and appending to the ledger is governed by the consensus. |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| 存在第三方、中间人和门户。 | 这是点对点的。没有中央方，并且追加到总账的行为受到共识的约束。 |'
- en: '| Backup and disaster recovery are required. | Resilience and availability
    increases as more and more participating nodes get to the network. |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| 需要备份和灾难恢复。 | 随着越来越多的参与节点加入网络，韧性和可用性增加。'
- en: '| Actions can be performed on behalf of someone. | There''s cryptographic authentication
    and authorization. |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| 可以代表某人执行操作。 | 存在加密身份验证和授权。'
- en: '| NA | It''s immutable as the data added to the ledger stays immutable. |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| NA | 添加到总账的数据是不可变的。'
- en: '| NA | There''s direct interaction of the nodes, allowing initiation of direct
    transactions of assets such as currency, real assets such as land titles or documents,
    and so on. |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| NA | 节点之间存在直接交互，允许启动资产的直接交易，例如货币、房产证书或文件等。'
- en: Equipped with the knowledge of ledgers, let's now dive into DLT and blockchain
    and understand the difference between them.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 有了总账知识，现在让我们深入了解 DLT 和区块链，并理解它们之间的区别。
- en: DLT and blockchain
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DLT 和区块链
- en: Blockchain is a P2P network, where the ledger is distributed and transactions
    are posted to the ledger only upon consensus. Such a P2P network, along with various
    components such as smart contracts, cryptography, and algorithms, help to build
    a blockchain network that delivers trust. Blockchain allows participating parties
    (nodes) to establish consensus without an intermediary, which leads to a single
    distributed truth (ledger). There's no reconciliation, no delays, and no intermediary,
    and transactions are recorded in real time over an immutable ledger forever.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链是一个点对点网络，其中总账是分布式的，并且只有在达成共识后才会将交易发布到总账。这样的点对点网络，以及智能合约、加密学和算法等各种组件，有助于构建一个提供信任的区块链网络。区块链允许参与方（节点）在没有中介的情况下建立共识，这导致单一的分布式真相（总账）。没有协调、没有延迟和没有中介，交易将永远实时记录在一个不可变的总账上。
- en: 'We have not covered the details about blockchain and, in this section too,
    we will just touch on the definition and jump into the difference between blockchain
    and DLT. So far, we know about distributed ledgers. Blockchain technology concentrates
    on securely and efficiently building an immutable record of transactions, also
    known as activities of high importance. Blockchain (one form of DLT) is the most
    accepted DLT; however, DLT by itself has a lot of potential for the future. There
    are various types of DLTs, as displayed in the following diagram:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还没有涵盖有关区块链的详细信息，在这一部分中，我们也只是简要介绍了定义，并深入讨论了区块链与DLT之间的区别。到目前为止，我们知道分布式分类帐。区块链技术专注于安全高效地构建交易的不可变记录，也称为高重要性的活动。区块链（DLT的一种形式）是最受接受的DLT；然而，DLT本身对未来有很多潜力。有各种类型的DLT，如下图所示：
- en: '![](img/4f7d8dfc-d527-43d0-8d3a-247794d339bb.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4f7d8dfc-d527-43d0-8d3a-247794d339bb.png)'
- en: DLT
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: DLT
- en: Blockchain groups data into blocks, chains them together, and firmly secures
    them through cryptography. Blockchain is an always growing append-only chain of
    blocks, where agreed upon transactions are appended only to the blocks. They can
    never be altered or deleted and this immutability has various use cases. Now,
    by virtue of the fact that blockchain is a form of DLT, it's the ledger that is
    distributed on the blockchain network. Each node has a copy of the ledger and
    transactions are only added securely when they reach a consensus by the participating
    nodes.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链将数据分组成块，将它们链接在一起，并通过密码学牢固地保护它们。区块链是一个不断增长的仅追加链，经过协商一致的交易只追加到块中。它们永远不会被改变或删除，这种不可变性具有各种用途。现在，由于区块链是DLT的一种形式，它是在区块链网络上分布的分类帐。每个节点都有一个分类帐副本，只有当交易达成共识时，才会安全地添加到其中。
- en: DLT is a broader term to highlight those technologies that allow the distribution
    of information among participants (public or private). Blockchain is one of the
    types of DLT that got wider acceptance and is very popular and, as a result, it
    turned out to be the synonym of DLT. DLT focus on a technology that does not have
    central authority, and interestingly, blockchain is a chain of blocks, while DLT
    neither mandates any requirement for chains nor for blocks. For the vision of
    blockchain, DLT resonated well; hence, every blockchain is a DLT. However, it
    is not mandatory for a DLT to be a blockchain. Here's an analogy of DLT and blockchain
    with the term vehicle and car, respectively. Hence, our equation is—every car
    is a vehicle; however, not every vehicle need be a car.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: DLT是一个更广泛的术语，用于突出显示那些允许参与者（公共或私人）之间分发信息的技术。区块链是DLT的一种类型，得到了广泛的接受并且非常流行，因此它成为了DLT的代名词。DLT专注于没有中央权威的技术，有趣的是，区块链是一系列块，而DLT既不要求链条也不要求块。对于区块链的愿景，DLT产生了共鸣；因此，每个区块链都是一个DLT。但是，DLT不一定是区块链的必要条件。以下是关于DLT和区块链的类比，分别使用了术语车辆和汽车。因此，我们的等式是——每辆汽车都是一辆车辆；然而，并不是每辆车辆都必须是一辆汽车。
- en: 'The following table summarizes the differences between DLT and blockchain:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格总结了DLT和区块链之间的区别：
- en: '| **DLT** | **Blockchain** |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| **DLT** | **区块链** |'
- en: '| It''s a ledger that is distributed over the network. | It''s a P2P distributed
    ledger. |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| 这是一个分布在网络上的分类帐。 | 这是一个P2P分布式分类帐。 |'
- en: '| The ledger remains immutable. | Transactions are grouped into blocks, and
    blocks are immutable. |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| 分类帐保持不变。 | 交易被分组到块中，块是不可变的。 |'
- en: '| DLT includes a consensus algorithm that ensures an agreement. | Blocks are
    added to the chain when a consensus is reached and each block has transactions.
    |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| DLT包括一个确保协议的共识算法。 | 当达成共识时，块被添加到链中，每个块都有交易。 |'
- en: '| There''s no central authority or centralized data storage. | There''s no
    central authority or centralized data storage. |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| 没有中央权威或集中式数据存储。 | 没有中央权威或集中式数据存储。 |'
- en: 'A few other DLTs that have received popularity and acceptance are as follows:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 另外一些受欢迎和接受的DLT如下：
- en: Chain Core
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chain Core
- en: Corda
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Corda
- en: '**Directed acyclic graph** (**DAG**)'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**有向无环图**（**DAG**）'
- en: Hash graph
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 哈希图
- en: peaq
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: peaq
- en: Quorum
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Quorum
- en: In conclusion, DLT has broadly– and blockchain has specifically– created a system
    where the world can have a P2P distributed ledger that is trusted, immutable,
    secure, and consensus-based. There are various types of DLT, such as blockchain
    and DAG, and while blockchain has received wider acceptance, DAG is gaining momentum
    slowly but steadily. For the sake of this book, we will be concentrating on DLTs
    such as Hyperledger Fabric and blockchain. However, whichever DLT it is, the core
    benefits of DLTs are transparency, immutability, efficiency, and the absence of
    a third party.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 总的来说，DLT 广泛地创建了一个系统——而区块链则特别地创建了一个系统，这个系统可以让世界拥有一个点对点的分布式账本，这个账本是可信的、不可变的、安全的，并且是基于共识的。DLT
    有各种类型，比如区块链和 DAG，虽然区块链获得了更广泛的认可，但 DAG 正在缓慢而稳定地获得动力。就这本书而言，我们将集中讨论 Hyperledger
    Fabric 和区块链等 DLT。不过，无论是哪种 DLT，其核心优势都包括透明度、不可变性、高效性和没有第三方的存在。
- en: '**DLTs that are blockchain**:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '**是区块链的 DLT**：'
- en: Blockchain is a form of DLT where data is stored in the form of blocks. These
    blocks are linked and encrypted. Hence, it can also be termed an encrypted linked-list
    of blocks, where you can trace the provenance of the block (this means you can
    reach back to the genesis block). This linked-list of blocks (also known as a
    chain of blocks) is ever-growing. Such a massive growth leads to slow transactional
    speed and needs large storage capacity on a P2P network.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链是一种数据以块的形式存储的 DLT 形式。这些块是链接并加密的。因此，它也可以被称为块的加密链表，你可以追溯块的起源（这意味着你可以追溯到创世块）。这种块的链表（也称为区块链）是不断增长的。这种庞大的增长导致了交易速度缓慢，并且在点对点网络上需要大量的存储空间。
- en: '**Blockchain technology as a platform**:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '**区块链技术作为平台**：'
- en: Let's start by talking about the first application of blockchain technology—cryptocurrency.
    However, cryptocurrencies are not discussed further in this book. For cryptocurrency
    transactions, a ledger is distributed over the P2P network. Any user (node) can
    join the network without permission and can start transacting. As long as the
    user (node) adheres to transaction protocol, transactions can be executed. If
    they are valid, they will be added to the blockchain network. Similarly, any node
    can participate in the consensus process and start validating transactions.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我们先来谈谈区块链技术的第一个应用——加密货币。不过，本书不会进一步讨论加密货币。对于加密货币交易，账本被分布在点对点网络上。任何用户（节点）都可以无需许可加入网络，并开始交易。只要用户（节点）遵循交易协议，交易就可以被执行。如果交易有效，它们将被添加到区块链网络中。同样地，任何节点都可以参与共识过程，并开始验证交易。
- en: Such blockchain networks are public and offer read access to everyone via explorer
    applications. Such transaction information does not contain user details. They
    just have the transaction details. Such public blockchain networks do not incur
    costs to system administrators as the mining is performed by participating nodes
    and the miners are paid incentives for their efforts to validate the transaction.
    In turn, the miner can afford the infrastructure themselves by taking care of
    the server, machines, and electricity costs. You can think of such an infrastructure
    as crowd-funded, crowd-maintained, and crowd-validated. The cost is shared among
    the participating nodes. With this approach, the upfront and maintenance cost
    for the infrastructure is greatly reduced in comparison to centralized systems.
    Some of the popular currencies are Litecoin, Ripple, EOS, Bitcoin, Ethereum (Ether),
    and so on.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 这样的区块链网络是公开的，并通过浏览器应用程序向每个人提供读取权限。这样的交易信息不包含用户详细信息。它们只包含交易细节。这样的公共区块链网络不会对系统管理员产生费用，因为挖矿是由参与节点执行的，并且矿工会因为他们验证交易的努力而获得奖励。反过来，矿工可以通过照顾服务器、机器和电费来负担起基础设施的成本。你可以把这样的基础设施想象成是由人群资助、人群维护和人群验证的。成本是由参与节点共同分担的。通过这种方法，与集中式系统相比，基础设施的前期和维护成本大大降低了。一些流行的货币包括
    Litecoin、Ripple、EOS、Bitcoin、Ethereum（Ether）等等。
- en: Other than cryptocurrency, a blockchain platform fuels growth for permissionless
    networks or permissioned networks. It can be used as a platform for various types
    of transactions and consensus that represent an asset (a thing of value). Permissionless
    networks include Ethereum, while permissioned networks include Hyperledger Fabric
    and R3 Corda.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 除了加密货币，区块链平台还为无许可网络或有许可网络的增长提供支持。它可以作为各种类型交易和共识的平台，这些交易和共识代表了一个资产（有价值的东西）。无许可网络包括以太坊，而有许可网络包括
    Hyperledger Fabric 和 R3 Corda。
- en: '**DLTs that are not blockchain**:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '**不是区块链的 DLT**：'
- en: There are various DLTs that are *not* blockchain, such as DAG, Hashgraph, and **Digital
    Asset Holdings** (**DAH**). They are also based on distributed ledger concepts;
    however, they are not based on a chain of blocks (also known as blockchain). They
    are mostly effective and their transaction volume is extremely high. DAH is mostly
    relevant to use cases such as financial services and banks. Hashgraphs are permissioned
    DLTs based on voting algorithms. DAG (table) is another DLT that is not based
    on blockchain. It is currently used for IOTA and micropayments.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 有各种不是区块链的 DLT，比如 DAG、Hashgraph 和 **数字资产控股**（**DAH**）。它们也基于分布式账本的概念；然而，它们不是基于区块链（也称为区块链）的块链。它们大多是有效的，其交易量极高。DAH
    主要与金融服务和银行等用例相关。Hashgraphs 是基于投票算法的有权限 DLT。DAG（表）是另一个不基于区块链的 DLT。目前它被用于 IOTA 和微支付。
- en: 'Comparing blockchain and DAG:'
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 比较区块链和 DAG：
- en: Both blockchain and DAG are DLTs. However, let's look at the differences between
    these two for a better perspective on their technologies.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链和 DAG 都是 DLT。然而，让我们来看看这两者之间的区别，以更好地了解它们的技术。
- en: 'The following table compares DLT - Blockchain and DAG:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格比较了 DLT - 区块链和 DAG：
- en: '| **Properties** | **Blockchain** | **Directed Acyclic Graph** |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| **特性** | **区块链** | **有向无环图** |'
- en: '| Structure | It is a linked-list of blocks where transactions are grouped
    into blocks. | It is a network of linked transactions. There are *no* blocks of
    transactions. |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| 结构 | 它是一个区块链，交易被分组到块中。 | 它是一个链接交易的网络。没有交易块。 |'
- en: '| Data structure | It''s a linked list (list of blocks). | It''s a tree (tree
    of transactions). |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| 数据结构 | 它是一个链接列表（块列表）。 | 它是一个树（交易树）。 |'
- en: '| Consensus | Transactions are validated block by block to meet the consensus.
    | Transactions are validated by one another. |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| 共识 | 交易按块验证以满足共识。 | 交易互相验证。 |'
- en: '| Features | It offers transparency and immutability. | It offers high scalability
    and a negligible fee. |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| 特征 | 提供透明度和不可变性。 | 提供高可扩展性和微不足道的费用。 |'
- en: '| Use case | It''s suitable for use cases with low volume and high worth of
    transactions. | It''s suitable for high volume, of transactions. |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| 用例 | 适用于交易量低、价值高的用例。 | 适用于高交易量的用例。 |'
- en: '| Pitfalls | There''s a high transaction cost, storage and bandwidth requirements,
    and computing power (for permissionless scenarios). | Low transaction volume can
    lead to attacks. For private versions of DAG, it uses coordinators, which do not
    allow DAG to be fully decentralized. |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| 陷阱 | 交易成本高，存储和带宽要求高，计算能力也高（用于无需许可的场景）。 | 低交易量可能导致攻击。对于 DAG 的私有版本，它使用协调者，这不允许
    DAG 完全去中心化。 |'
- en: '| Approach | It''s a linear, utilitarian DLT that offers near real-time updates
    for transactions and offers disintermediation. | It has a non-linear approach
    that actually results in faster transactions as the network grows. |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| 方法 | 它是一个线性的、实用的 DLT，为交易提供几乎实时的更新，并提供去中心化。 | 它采用非线性方法，实际上在网络增长时结果更快的交易。 |'
- en: Accounting system – triple–entry or distributed double–entry
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 会计系统 - 三重会计或分布式双重会计
- en: Let me pull you back to accounting systems again. We've already talked about
    single-entry and double-entry accounting systems. Focusing more on ledgers drove
    us to familiarize ourselves with centralized and distributed decentralized ledgers.
    In addition, even before we had the definition of blockchain cemented in this
    chapter, we tried to compare it with DLT. Now, we are back to square one, to answer
    another important question about blockchain in the accounting world.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 让我再次引导您回到会计系统。我们已经讨论过单式记账和复式记账系统。更多地关注分类账使我们熟悉了集中式和分布式去中心化分类账。此外，即使在本章中我们还没有将区块链的定义巩固下来之前，我们也试图将其与
    DLT 进行比较。现在，我们回到了起点，回答另一个关于会计世界中的区块链的重要问题。
- en: There are various discussions around the triple-entry accounting system. Many
    advocates believe that a triple-entry accounting system is an advanced enhancement
    to the age-old and proven double-entry accounting system. Debit and credit remain
    the two prime entries, and the third vertex entry is an immutable link to all
    of the previous debits and credits, which means all of the ledger entries have
    an immutable cryptographic seal.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 有很多关于三重会计系统的讨论。许多倡导者认为三重会计系统是对古老而经得起考验的双重会计系统的先进增强。借贷和贷方仍然是两个主要的条目，而第三个顶点条目是对所有以前的借贷和贷方的不可变链接，这意味着所有的账目条目都有一个不可变的加密封印。
- en: Let's say two organizations are performing a transaction; one will post a debit
    to their account for the amount received while the other organization will post
    a credit to their account for the amount spent. However, these postings are into
    different ledgers. We have seen this previously in the banking institute example.
    Now, these organizations have separate copies of ledgers and then they will **reconcile**
    it to ensure that they have a common 'true' understanding. DLT will ensure that
    there aren't two ledgers. There will be one ledger, which will remains distributed,
    and blockchain technologies will ensure that the transactions that are posted
    to the distributed ledger are immutable and securely sealed. Immutability will
    ensure that it is never tampered with, and cryptography will take care of the
    security aspects. As a result, enterprise and business do not need to reconcile
    ledgers as there are no separate silos ledgers.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 假设两个组织正在进行一笔交易；一个组织将在其账户中发布收到的金额的借方，而另一个组织将在其账户中发布花费的金额的贷方。然而，这些发布是到不同分类帐中的。我们在银行机构的例子中以前已经见过这种情况。现在，这些组织有不同的分类帐副本，然后它们将对其进行**调和**以确保它们有一个共同的“真实”理解。分布式分类帐技术将确保没有两个分类帐。将存在一个分类帐，它将保持分布式，而区块链技术将确保发布到分布式分类帐的交易是不可变的并且安全密封的。不可变性将确保它永远不会被篡改，而加密技术将处理安全方面的问题。因此，企业和商业不需要调和分类帐，因为不存在单独的分类帐。
- en: Although there are various definitions of a triple-entry accounting system,
    it will be extremely difficult to replace the proven double-entry accounting system.
    Triple-entry accounting is a complex term; we do not deny the fact that there
    are enormous benefits of posting transactions to a distributed ledger in a blockchain
    network. Posting and recording transactions in a distributed, append-only, immutable
    ledger has many benefits, and we will touch on these in this book.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管有各种各样对于三重记账系统的定义，但要取代经过验证的双重记账系统将会非常困难。三重记账是一个复杂的术语；我们不否认在区块链网络中将交易发布到分布式分类帐有巨大的好处这一事实。在分布式、仅追加、不可变的分类帐中发布和记录交易有很多好处，我们将在本书中详细介绍这些。
- en: For example, as soon as a contract is signed, a block is created on the blockchain
    and a transaction is posted to the distributed ledger in the blockchain network.
    Someone can issue a purchase order against that contract, and this transaction is
    appended as a block to the blockchain too, which means it is posted to the distributed
    ledger as well. Bills can be issued against those purchase orders and payments
    can be associated with those bills in separate transactions and recorded to the
    distributed ledger. You have a chain of blocks, which displays transactions from
    contracts to payments, in a single distributed ledger. This means you have an
    excellent audit record and real-time visibility of transactions by all of the
    transacting parties. Permissioned DLTs, such as Hyperledger Fabric, can further
    enable you to provide restricted access to those transactions. Moreover, those
    posted transactions need no reconciliations and are immutable and omnipresent.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，一旦签署了合同，区块链上就会创建一个区块，并且交易会发布到区块链网络中的分布式分类帐。有人可以针对该合同发出购买订单，这笔交易也会作为一个区块附加到区块链中，这意味着它也被发布到分布式分类帐中。可以针对这些购买订单发出账单，并且可以将支付与这些账单关联在不同的交易中，并记录到分布式分类帐中。您拥有一个区块链，其中显示了从合同到付款的交易，在一个单一的分布式分类帐中。这意味着您拥有出色的审计记录，并且所有交易方都能实时查看交易。像超级账本面料（Hyperledger
    Fabric）这样的权限分布式账本技术还可以进一步使您能够对这些交易提供受限制的访问。此外，这些发布的交易无需调和，是不可变的并且无处不在的。
- en: We just learned that, in a distributed ledger on a blockchain network, transactions
    are immutable and no one can falsify them. Transactions are timestamped, verified,
    agreed upon via a consensus, and trusted; this offers an easy way to retrieve,
    access, analyze, and audit in real time, anytime. A chain of transactions, in
    the blocks, are tied together and are distributed across the blockchain network,
    where each participating node has the same copy of the ledger (single truth over
    the network). In this equation, we have not witnessed a single authority/party
    as there is no central trusted party; the trust is in the blockchain network and
    the distributed ledger. Welcome to the blockchain world, a world of distributed
    double-entry systems.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚学到，在区块链网络上的分布式账簿中，交易是不可变的，没有人可以伪造它们。交易被时间戳记录、验证，并通过共识达成一致，值得信赖；这提供了一种在任何时候实时检索、访问、分析和审计的简便方法。交易链，在区块中被捆绑在一起，并分布在区块链网络中，每个参与节点都拥有相同的账簿副本（网络上的单一真相）。在这个方程中，我们没有见到一个单一的权威/方，因为没有中央可信方；信任在区块链网络和分布式账簿中。欢迎来到区块链世界，一个分布式复式系统的世界。
- en: In conclusion, I personally believe in the distributed double-entry accounting
    system. You can term it a triple-entry account system if you want to. However,
    the essence of such an accounting system remains the same—a double-entry accounting
    system that is distributed, secure, and immutable. In this equation, DLT offers
    the distribution of the ledger, and blockchain technology will ensure the cryptography,
    security, digital receipt, and immutability of the single distributed ledger.
    Therefore, throughout this book, we will use the term distributed double-entry
    accounting system, which you can still term as a triple-entry accounting system.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，我个人相信分布式的复式记账系统。你可以把它称为三重记账系统，如果你愿意的话。然而，这种会计系统的本质保持不变——分布式、安全和不可变的复式记账系统。在这个方程中，DLT
    提供了账簿的分布，而区块链技术将确保单一分布式账簿的密码学、安全性、数字收据和不可变性。因此，在本书中，我们将使用分布式复式记账系统这个术语，你仍然可以称之为三重记账系统。
- en: Blockchain definition and analogy
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 区块链的定义和类比
- en: With all of these fact checks about ledgers, types of systems, and knowing about
    the difference between DLT and blockchain, let's get into the definition and analogy
    of blockchain. Blockchain is a P2P network, where the ledger is distributed and
    transactions are posted to the ledger, but only upon consensus. Such a P2P network,
    along with various components, such as smart contracts, cryptography, and algorithms,
    help build a blockchain network that delivers trust. Blockchain allows participating
    parties (nodes) to establish consensus, without an intermediary, which leads to
    a single distributed truth (ledger). There's no reconciliation, no delays, and
    no intermediary, and transactions are recorded in real time over an immutable
    ledger forever.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 通过对账簿、系统类型的事实检查以及了解 DLT 与区块链之间的区别，让我们来了解区块链的定义和类比。区块链是一个 P2P 网络，账簿是分布式的，交易只有在共识达成后才会被发布到账簿上。这样的
    P2P 网络，以及各种组件，比如智能合约、密码学和算法，帮助构建了一个能够提供信任的区块链网络。区块链允许参与方（节点）在没有中间人的情况下建立共识，这导致了一个单一的分布式真相（账簿）。没有调解、没有延迟，交易是实时记录在永久不变的账簿上的。
- en: Let's use an analogy for blockchain. Let's refer to blockchain as a notebook.
    Each page represents a block on this blockchain. You can record data of any kind,
    such as medical records and financial transactions, on this page, which is also
    known as a block, where each page (block) is chained to the previous page (block).
    This chain is not just a link to the previous page; it also contains information
    about the page in such a way that, once the data on the page is defined and added
    to the notebook, it cannot be changed. If it is changed, information about the
    page is changed. Then, the chain it holds with the other page is changed and so
    on. This is noticeable since the chain link is broken. Hence, the lines on each
    chained page are immutable.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们用一个类比来解释区块链。我们将区块链比作一个笔记本。每一页代表区块链上的一个区块。你可以在这一页上记录任何类型的数据，比如医疗记录和金融交易，这也被称为一个区块，其中每一页（区块）都与前一页（区块）相连。这个链不仅仅是到前一页的链接；它还包含有关页面的信息，一旦页面上的数据被定义并添加到笔记本上，就不能被更改。如果更改了，页面的信息也会更改。然后，它与其他页面的链接也会更改，以此类推。这是因为链上的连接被中断了。因此，每个链接页面上的行都是不可变的。
- en: Blockchain technology also includes smart contracts, which are intelligent programmatic
    contracts, also known as rules; these are defined and executed when an event of
    a certain type occurs on the blockchain network. It is called blockchain because
    the chain of blocks are a linked list of the blocks, where each block has one
    or many transactions. These transactions are verified and validated by the blockchain
    network in a given time span. The blockchain protocol's consensus algorithm, adopted
    for that blockchain network, defines the rules and incentive of the participating
    nodes. We will cover this in detail in the consensus algorithm section.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链技术还包括智能合约，这是智能程序化合约，也称为规则；这些在区块链网络上的某种类型事件发生时被定义和执行。它被称为区块链，因为区块的链是一个块的链表，其中每个块有一个或多个交易。这些交易在一定时间段内由区块链网络验证和验证。区块链协议的共识算法，采用了该区块链网络的规则和参与节点的激励。我们将在共识算法部分详细介绍这一点。
- en: Blockchain is a chain of blocks, where each block has transactions that are
    recorded on a ledger (blockchain), which is distributed over all of the participating
    nodes in the blockchain network. This distributed ledger is the distributed double-entry
    ledger (as discussed previously), which records transactions for any digital asset
    or an asset of value. For a blockchain network, transactions are recorded on the
    distributed ledger from when it (the ledger) started, and they remain there immutably,
    forever. Hence, financial statements can be generated, traced, and validated from
    the start of the network. Interestingly, as the ledger is distributed and a copy
    of it is on all of the participating nodes, any node can verify the transaction
    and announce the transaction verification to reach consensus.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链是一个块的链，每个块上记录着在分布在区块链网络的所有参与节点上的分类帐（区块链）上记录的交易。这个分布式分类帐是分布式的双向分类帐（如前所述），用于记录任何数字资产或有价值的资产的交易。对于区块链网络，交易从它（分类帐）开始被记录，它们永远保持不变地留在那里。因此，可以从网络开始生成、追踪和验证财务报表。有趣的是，由于分类帐是分布式的，并且所有参与节点都有其副本，任何节点都可以验证交易并宣布交易验证以达成共识。
- en: Analogy
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 类比
- en: Let's look at another analogy. Let's journey to a technology-less time. There
    was a beautiful village with a few families where, instead of currency, they exchanged
    goods.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们再看一个类比。让我们回到一个没有技术的时代。有一个美丽的村庄，有几个家庭，他们不是用货币，而是用商品进行交换。
- en: A vegetable farmer would trade vegetables for rice, and a rice farmer would
    trade rice for peanuts, and so on. It worked fine until they started making promises
    to each other. Promises (transactions) were the credits, where a farmer would
    buy vegetables without giving away the rice; instead, the rice farmer would promise
    the vegetable farmer they would return rice when it was harvested. Similarly,
    the fruit farmer would get rice, with the promise of delivering oranges at the
    time of harvest.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 一个蔬菜农民会用蔬菜交换大米，一个大米农民会用大米交换花生，依此类推。这种方式运作得很好，直到他们开始相互承诺为止。承诺（交易）是信用，其中一个农民会买蔬菜而不交出大米；相反，大米农民会承诺在大米收获时还蔬菜农民大米。同样，水果农民会得到大米，并承诺在收获时交付橙子。
- en: The vegetable farmer trusted the rice farmer; however, over time, there were
    several promises transacted between various farmers and it was difficult to track
    those promises, which resulted in a breach of trust. Finally, the villagers appointed
    a person to keep track of these promises. This person was given the title LedgerMan
    (centralized third party). Soon, the LedgerMan established trust; however, he
    was overwhelmed with promises and started demanding a fee (transaction cost).
    The villagers agreed to pay him a portion of the promise as a fee. This eventually
    turned the LedgerMan into a rich person. Later, the LedgerMan indulged in corruption,
    started accepting bribes to tamper with the ledger, bribed villagers to keep his
    position safe, and sometimes enhanced the fee.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 蔬菜农民信任大米农民；然而，随着时间的推移，各种农民之间进行了几次承诺交易，跟踪这些承诺变得困难，这导致了信任的破裂。最终，村民们任命了一个人来跟踪这些承诺。这个人被赋予了名为分类帐人的头衔（中央第三方）。很快，分类帐人建立了信任；然而，他被承诺淹没，并开始要求费用（交易成本）。村民们同意付给他一部分承诺作为费用。最终，这将分类帐人变成了一个富有的人。后来，分类帐人沉溺于腐败，开始接受贿赂以篡改分类帐，贿赂村民以保住自己的位置，并有时增加费用。
- en: Soon, the villagers realized the challenges of having a LedgerMan (a centralized
    system). Hence, they decided that, instead of a single LedgerMan keeping the promises,
    promises would now be kept by everyone (decentralized). There would not be a single
    person holding the promises; the villagers would meet at a designated place to
    make promises, and every promise would be recorded by each villager (P2P network).
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 很快，村民们意识到拥有一个分类帐管理人（集中式系统）的挑战。因此，他们决定，不再由单个分类帐管理人保留承诺，而是由每个人保留承诺（去中心化）。不会有一个人持有承诺；村民们会在指定地点聚集以进行承诺，并且每个村民都会记录每个承诺（P2P网络）。
- en: Once a week, they would validate the promises by reading out their version of
    the promise. If the majority of the villagers reached an agreement (consensus)
    over a promise, that promise would be considered valid and would be considered
    as truth (ledger). In the event of an issue, the promise, which had most of the
    entries, would be considered a correct promise and would help to resolve any promise-based
    issues (longest chain). Over the course of time, they added security and various
    other bells and whistles.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 每周，他们会通过朗读他们对承诺的版本来验证这些承诺。如果大多数村民就某项承诺达成一致（共识），那么该承诺将被视为有效，并被视为真实（账本）。在出现问题时，具有大部分条目的承诺将被视为正确的承诺，并有助于解决基于承诺的任何问题（最长链）。随着时间的推移，他们增加了安全性和各种其他功能。
- en: We will revisit this story and extend it as well. For now, we understand that
    blockchain is a solution (protocol) that allows a leaderless (decentralized) group
    of peers (P2P) to reach an agreement (consensus) on a transaction, and the moment
    they occur (synchronized), they are recorded (post) on an omnipresent tamper-proof
    (immutable) distributed linked-list (ledger), where each peer holds a copy (distributed)
    of it. We just learned that blockchain is a P2P network; now, let's find out exactly what a
    P2P network is.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将重新讲述这个故事，并进行扩展。目前，我们了解到区块链是一种解决方案（协议），它允许无领导（去中心化）的对等节点（P2P）就交易达成一致（共识），并且一旦发生（同步），它们就会被记录（发布）在一个无处不在的防篡改（不可变）的分布式链表（分类帐）上，其中每个节点都持有其副本（分布式）。我们刚刚了解到区块链是一个P2P网络；现在，让我们确切地了解一下 P2P网络到底是什么。
- en: Blockchain components
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 区块链组件
- en: 'Blockchain comprises various components that work in tandem in a blockchain
    network. We will cover some of these components in this chapter, as well as a
    few others, such as member services, will be discussed in detail in subsequent
    chapters. The following is a list of blockchain components:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链由各种组件组成，在区块链网络中协同工作。在本章中，我们将介绍其中一些组件，以及一些其他组件，如成员服务，将在后续章节中详细讨论。以下是区块链组件的列表：
- en: '**Ledger**: A ledger is a distributed ledger where transactions are recorded/posted
    immutably. Being a type of DLT, blockchain ensures immutability of transaction
    history, right from the genesis block to the current block. We have covered single-entry
    and double-entry accounting in this chapter. A blockchain ledger is a secure implementation
    of a distributed double-entry accounting system.'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分类帐**：分类帐是一个分布式分类帐，交易被不可变地记录/发布在其中。作为一种DLT类型，区块链确保了交易历史的不可变性，从创世区块到当前区块。在本章中，我们已经涵盖了单式记账和复式记账。区块链分类帐是分布式复式记账系统的安全实现。'
- en: '**Peer network and nodes**: A P2P network is a computer network where computers
    (peers/nodes) are distributed and share the network''s workload to reach the end
    goal. Nodes perform transactions on the blockchain. There are two kinds of nodes—full
    node and light node. DLT types such as blockchain or Hyperledger can be public
    or private. In public blockchain, each node has equity; however, they can operate
    with distinct roles, such as miners, as full nodes, where the entire copy of the
    blockchain will be replicated on such nodes. They can also act as light nodes
    and can hold key or block header values only.'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**对等网络和节点**：P2P网络是一种计算机网络，其中计算机（对等节点）分布并共享网络的工作量以达到最终目标。节点在区块链上执行交易。有两种类型的节点
    —— 完整节点和轻节点。像区块链或超级账本（Hyperledger）这样的分布式分类帐技术可以是公共的或私有的。在公共区块链中，每个节点都有权益；然而，他们可以以不同的角色运行，例如作为矿工，作为完整节点，其中区块链的完整副本将被复制到这些节点上。他们也可以作为轻节点，并且只能持有密钥或区块头值。'
- en: '**Smart contracts or chaincode**: For a blockchain such as Ethereum, and a
    DLT such as Hyperledger, smart contracts, or chaincode, are the code logic that
    is executed on a blockchain network. Participating nodes or blockchain clients
    can issue transactions against that business logic (smart contracts or chaincode).
    With the inclusion of a blockchain layer, the ledger will store not only the immutable
    transactions but also the immutable code.'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**智能合约或链码**：对于像以太坊这样的区块链，以及像Hyperledger这样的DLT，智能合约或链码是在区块链网络上执行的代码逻辑。参与节点或区块链客户端可以根据该业务逻辑（智能合约或链码）发出交易。随着区块链层的加入，账本不仅存储不可变的交易，还存储不可变的代码。'
- en: '**Membership services**: For DLTs such as Hyperledger, membership services
    offer identity and security solutions, which ensure the participation of users
    on a blockchain network. Authentication and authorization are functions of membership
    services. They are mostly used in private and permissioned blockchains or DLTs.'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**会员服务**：对于像Hyperledger这样的DLT，会员服务提供了身份和安全解决方案，确保用户参与区块链网络。认证和授权是会员服务的功能。它们主要用于私有和许可的区块链或DLT。'
- en: '**Events**: It''s the responsibility of the blockchain or DLTs to raise events
    when certain defined actions happen on the blockchain/DLT. Events are effective
    ways to allow other subscriber applications or systems to interact with the blockchain
    network.'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件**：区块链或DLT负责在区块链/DLT上发生特定定义的操作时引发事件。事件是让其他订阅应用程序或系统与区块链网络交互的有效方式。'
- en: '**Consensus**: The consensus algorithm (or protocol) is the core for the existence
    of blockchain platforms. Needless to say, a blockchain network cannot exist without
    consensus. The consensus layer is the most critical and crucial layer for any
    blockchain (Ethereum or Hyperledger, or any other). Consensus is responsible for
    validating the blocks, ordering the blocks, and ensuring that everyone agrees
    on it. Visit the *Consensus algorithm* subsection, in this chapter for details
    about consensus algorithms.'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**共识**：共识算法（或协议）是区块链平台存在的核心。毋庸置疑，区块链网络在没有共识的情况下无法存在。共识层是任何区块链（以太坊或Hyperledger等）中最关键和至关重要的层。共识负责验证块、排序块，并确保每个人都对其达成一致意见。有关共识算法的详细信息，请访问本章节的*共识算法*一节。'
- en: In the previous section, we discussed ledgers and distributed systems in detail.
    In this section, we will focus on the P2P network. This chapter, *Exploring Blockchain
    and BaaS*, and [Chapter 2](66a7f3de-72ef-49e8-95fb-c65908888e2e.xhtml), *Construing
    Distributed Ledger Tech and Blockchain*, cover all the enlisted components in
    detail.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一节中，我们详细讨论了账本和分布式系统。在本节中，我们将专注于P2P网络。本章*探索区块链和BaaS*和[第二章](66a7f3de-72ef-49e8-95fb-c65908888e2e.xhtml)*理解分布式分类账技术和区块链*将详细介绍所有列出的组件。
- en: P2P network
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: P2P网络
- en: Blockchain technology leverages the internet and runs on a P2P network of computers.
    These computers run the blockchain protocol, which allows these computers to keep
    a copy of the ledger. This ledger includes transactions that are packaged in blocks
    and chained together in a genesis block. The inclusion of blocks in the chain
    is agreed over consensus, without an intermediary.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链技术利用互联网并在计算机的P2P网络上运行。这些计算机运行区块链协议，允许这些计算机保留账本的副本。这个账本包括被打包在一起形成链的交易，起始区块。将块加入链中是通过共识达成一致，无需中介。
- en: A blockchain distributed ledger runs on a P2P network, where transactions are
    validated using cryptography by consensus algorithms. A blockchain network defines
    the consensus algorithm for it, which is essentially the rule to validate transactions
    on the blockchain P2P network. Upon reaching the consensus, blocks are added to
    the ledger. The node adding the block to the network is then offered incentive
    (depending on the type of blockchain). Hence, the highlights are that, in the
    P2P network of a distributed ledger, transactions are verified using cryptography
    and validated using consensus.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链分布式分类账在P2P网络上运行，交易通过共识算法使用密码学进行验证。区块链网络为其定义了共识算法，这基本上是验证区块链P2P网络上交易的规则。一旦达成共识，块就会被添加到账本中。将块添加到网络中的节点然后会获得激励（根据区块链类型而定）。因此，重点在于，在分布式分类账的P2P网络中，交易使用密码学进行验证并通过共识进行确认。
- en: 'The following diagram shows types of networks:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 下图显示了网络的类型：
- en: '![](img/b67b0271-5350-47c8-835a-d91083d1dbcb.png)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b67b0271-5350-47c8-835a-d91083d1dbcb.png)'
- en: P2P network
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: P2P网络
- en: As shown in the previous diagram, a **Centralized** network has a central node,
    which defines and governs the validation and verification of the transactions.
    All other connecting nodes rely on the central authority. The central authority
    has full access and control of the data, information, and state of the transactions.
    Although it's a network that is highly regulated, it's also centrally controlled.
    On one hand, it's safe and secure as long as trust holds true between the central
    authority and participating nodes; however, human error, malicious intent, single
    point of failure, and power being in the hands of a single authority has its own
    challenges. It is suited for very small organizations, where decisions can be
    taken quickly and even the smallest decision is visible. **Decentralized** networks
    are almost the same as centralized ones; however, here, the central node itself
    is distributed. This means the centralization of authority is distributed. In
    a decentralized network, each node is not directly connected to node; however,
    in a P2P network, each node is connected to other nodes.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 如前图所示，**集中式**网络有一个中心节点，该节点定义和管理交易的验证和核实。所有其他连接节点依赖中央权威。中央权威可以完全访问和控制数据、信息和交易状态。尽管这是一个受严格监管的网络，但也是中央控制的。一方面，只要中央权威和参与节点之间的信任保持真实，就是安全可靠的；然而，人为错误、恶意意图、单一故障点和权力掌握在一个单一权威手中也存在自己的挑战。它适用于非常小的组织，可以迅速做出决策，甚至最小的决策也是可见的。**去中心化**网络与中心化网络几乎相同；然而，在这里，中心节点本身是分布式的。这意味着权威的集中化是分布式的。在去中心化网络中，每个节点不直接连接到节点；但在P2P网络中，每个节点都连接到其他节点。
- en: Network of equity or the peer-to-peer network
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[股权网络](https://wiki.example.org/equity_network)或点对点网络'
- en: A P2P network leverages the network; however, the attachment and detachment
    of nodes is completely voluntary. The network is a network of *equity*, where
    each peer is the same as any other peer, and it is fair and impartial. One peer
    offers computing resources to other peers, without the need for a central authority
    to control, govern, or maintain the network. Even though it has equity, each node
    has a fair chance of adopting the role of the miner or can turn itself into a
    full node. Each node keeps a copy of the distributed ledger, and this protocol
    of the blockchain network ensures resilience and immutability of the blockchain
    network. A blockchain network can resurrect the entire system as long as there
    is a single node that holds the copy of the distributed ledger.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: P2P网络利用网络；然而，节点的连接和断开完全是自愿的。该网络是一个*平等*的网络，其中每个对等节点与任何其他对等节点一样平等和公正。一个对等节点向其他对等节点提供计算资源，而不需要中央权威来控制、管理或维护网络。即使它具有公平性，每个节点都有公平的机会扮演矿工的角色，或者可以将自己变成完整节点。每个节点都保存分布式账本的副本，这一区块链网络的协议确保了区块链网络的弹性和不可变性。只要有一个节点保留了分布式账本的副本，区块链网络就可以复活整个系统。
- en: On a P2P network, information is recorded and replicated between all of the
    participating nodes; hence, the power, consistency, reliability, and trust in
    the P2P network grows more and more, as more and more nodes join the blockchain
    network. Also, as there is no single point of failure and no single authority,
    the system is not vulnerable to hacking, loss of data, inconsistency, human errors,
    or a single part controlling the network agenda, and so power and privacy remains
    with each node. Note that it's the consensus algorithms that ensure the synchronization
    of data on the blockchain. There are various consensus algorithms, such as **proof
    of work** (**PoW**) and **proof of stake** (**PoS**). We will be talking about
    them in detail in this book.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 在P2P网络上，信息在所有参与节点之间记录和复制；因此，随着越来越多的节点加入区块链网络，P2P网络的权力、一致性、可靠性和信任也会越来越多。此外，由于没有单一故障点和单一权威，系统不容易遭受黑客攻击、数据丢失、不一致性、人为错误或单一部分控制网络议程，因此权力和隐私仍然留给每个节点。请注意，正是共识算法确保了区块链上数据的同步。有各种共识算法，例如**工作证明**（**PoW**）和**股权证明**（**PoS**）。我们将在本书中详细讨论它们。
- en: Layered structure of the blockchain architecture
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 区块链架构的分层结构
- en: This section covers the layered architecture of blockchain. In this section,
    we will be diverging to Ethereum and Hyperledger Fabric as well. While discussing
    the Hyperledger Fabric infrastructure, we will drill into the OBP's infrastructure
    as well.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 本节介绍了区块链的分层架构。在本节中，我们还将涉及以太坊和Hyperledger Fabric。在讨论Hyperledger Fabric基础设施时，我们也会深入了解OBP的基础设施。
- en: 'The following diagram displays the layered architecture of blockchain:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 下图显示了区块链的分层架构：
- en: '![](img/9752b5e2-1c80-438e-b129-b0466cfbced9.png)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9752b5e2-1c80-438e-b129-b0466cfbced9.png)'
- en: Blockchain layered architecture
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链分层架构
- en: Hardware and infrastructure layer
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 硬件和基础架构层
- en: The content of the blockchain is hosted on a server that resides in a data center
    on this beautiful planet. While browsing the web or using any applications, clients
    request content or data from application servers, commonly referred to as client-server
    architecture. However, today, clients can connect with peer clients as well and
    share data among each other. Such a massive collection of computers sharing data
    with each other is termed a P2P network. Blockchain is a P2P network of computers
    that computes transactions, validates them, and stores them in an ordered form
    in a shared ledger. This results in a distributed database that records all the
    data, transactions, and other relevant information. Each computer in a P2P network
    is called a *node*. Nodes are responsible for validating transactions, organizing
    them into blocks, broadcasting them to the blockchain network, and so on. Upon
    reaching consensus, nodes commit the block to the blockchain network and update
    their local ledger copy. This layer comprises of virtualization (creation of virtual
    resources such as storage, network, servers etc.). Significantly, nodes are the
    core of this layer. When a device gets connected to a blockchain network, it is
    termed and considered as a node. On a blockchain network, these nodes are decentralized
    and distributed.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链的内容托管在位于这个美丽星球的数据中心中的服务器上。在浏览网页或使用任何应用程序时，客户端会从应用服务器请求内容或数据，通常称为客户端-服务器架构。但是，今天，客户端也可以连接到对等客户端，并在彼此之间共享数据。这样一个庞大的计算机集合彼此之间共享数据被称为P2P网络。区块链是一个P2P网络，它计算交易，验证它们，并以有序的形式将它们存储在共享账本中。这导致了一个分布式数据库，记录了所有数据、交易和其他相关信息。P2P网络中的每台计算机都被称为一个*节点*。节点负责验证交易，将其组织成块，将其广播到区块链网络中等。在达成共识后，节点将块提交到区块链网络并更新其本地账本副本。这一层包括虚拟化（创建虚拟资源，如存储、网络、服务器等）。值得注意的是，节点是这一层的核心。当设备连接到区块链网络时，它被称为节点并被视为节点。在区块链网络上，这些节点是分散和分布式的。
- en: Ethereum - Infrastructure layer
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 以太坊 - 基础架构层
- en: Let's look at the nodes in Ethereum. Anyone and everyone can run an Ethereum
    node on their machine. This will enable their machine to participate on the Ethereum
    blockchain network. Nodes can run a client (compatible client), such as Geth,
    Parity, or Pantheon, to connect to Ethereum blockchain. Geth is written in Go,
    Parity is written in Rust, and Pantheon is written in Java. A node (node-running
    client), can be either a light node (client) or a full node (client). Light nodes
    store the cache, while full nodes (client) store the dataset, which grows linearly
    with time. Light nodes (clients) get high assurance from the Ethereum blockchain
    network about the state of the Ethereum, and they can participate to verify the
    execution of transactions. On the other hand, any node that participates in the
    full enforcement of consensus and downloads the entire blockchain to the node’s
    local storage is known as a full node (client). Full nodes verify signatures,
    format the data of the transactions and blocks, check double spending, and so
    on. They essentially validate the transactions and use a gossip protocol to relay
    this information to other nodes, called peers.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看以太坊中的节点。任何人都可以在自己的计算机上运行一个以太坊节点。这将使他们的计算机能够参与到以太坊区块链网络中。节点可以运行一个客户端（兼容的客户端），如Geth、Parity或Pantheon，以连接到以太坊区块链。Geth是用Go语言编写的，Parity是用Rust语言编写的，Pantheon是用Java语言编写的。一个节点（运行节点的客户端）可以是轻节点（客户端）或全节点（客户端）。轻节点存储缓存，而全节点（客户端）存储数据集，随时间线性增长。轻节点（客户端）从以太坊区块链网络中获得有关以太坊状态的高保证，并且他们可以参与验证交易的执行。另一方面，任何参与全面执行共识并将整个区块链下载到节点本地存储的节点被称为全节点（客户端）。全节点验证签名，格式化交易和区块的数据，检查双重支付等。它们基本上验证交易并使用八卦协议将此信息传递给其他节点，称为对等节点。
- en: These Ethereum nodes (clients) run the **Ethereum Virtual Machine** (**EVM**).
    EVM is a Turing complete software; a stake-based virtual machine that enables
    untrusted code to be executed by a global P2P network of computers. EVM handles
    the internal state and computation. Ethereum blockchain is a Turing complete blockchain
    where developers can also develop programs (smart contracts) for the blockchain.
    EVMs are like JVMs, and they run on each node on the blockchain. EVMs are like
    transaction engines, which are responsible for changing the blockchain's world
    state. EVMs run as sandboxes and offer an execution environment for the smart
    contracts.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 这些以太坊节点（客户端）运行**以太坊虚拟机**（**EVM**）。EVM是一个图灵完备的软件；一个基于股权的虚拟机，使不可信代码能够被全球点对点计算机网络执行。EVM处理内部状态和计算。以太坊区块链是一个图灵完备的区块链，开发人员还可以为区块链开发程序（智能合约）。EVM类似于
    JVM，它们在区块链上的每个节点上运行。EVM就像交易引擎一样，负责改变区块链的世界状态。EVM作为沙盒运行，并为智能合约提供执行环境。
- en: Hyperledger Fabric – Infrastructure Layer
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[超级账本](https://wiki.example.org/feynmans_learning_method)– 基础架构层'
- en: This blockchain network, which is based on Hyperledger Framework, is comprised
    of peer nodes, and these nodes host ledgers and chaincode (also known as smart
    contracts). Essentially, peers host instances of the ledger and chaincode, which
    keeps an eye on single points of failure. As peer nodes are responsible for hosting
    the ledger and chaincode, applications and administrators need to interact with
    these peer nodes. A node in Hyperledger Fabric can host more than one ledger.
    In some cases, a peer node can only host a ledger, and not the chaincode (it is
    rare, but possible). Most nodes have at least one chaincode installed to update
    or query the node’s ledger. A node can host multiple chaincode and multiple ledgers
    too, which are powered by channels. You will learn more about channels and the
    Hyperledger Fabric architecture in [Chapter 3](6aaa9b0a-84b6-4fca-82c3-864e22d616b0.xhtml),
    *Delving into Hyperledger Fabric*.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 这个基于超级账本框架的区块链网络由对等节点组成，这些节点托管账本和链码（也称为智能合约）。基本上，对等体托管账本和链码的实例，这些实例关注单点故障。由于对等节点负责托管账本和链码，应用程序和管理员需要与这些对等节点进行交互。在超级账本中，一个节点可以托管多个账本。在一些情况下，对等节点只能托管一个账本，而无法托管链码（这种情况很少，但有可能）。大多数节点至少安装了一个链码，以更新或查询节点的账本。一个节点也可以托管多个链码和多个账本，由通道支持。您将在[第
    3 章](6aaa9b0a-84b6-4fca-82c3-864e22d616b0.xhtml)，*深入了解超级账本*中了解更多关于通道和超级账本架构的信息。
- en: To access the chaincode or ledger, applications and administrators (via admin
    applications) will always connect with peers via Fabric **software development
    kit** (**SDK**) APIs. These APIs allow applications to execute transactions on
    the blockchain network and receive events related to the confirmation of the process.
    There are two types of transaction—query and update transactions. For query transaction,
    consensus is not required, as the peer will return the result immediately from
    its local copy of the ledger. However, for update transactions, no individual
    peer can update the ledger because other peers need to agree before updating the
    ledger. This process of reaching an agreement to update the ledger is termed *consensus*.
    You can read more about the ledger-update transaction process in [Chapter 3](6aaa9b0a-84b6-4fca-82c3-864e22d616b0.xhtml),
    *Delving into Hyperledger Fabric*.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问链码或账本，应用程序和管理员（通过管理应用程序）将始终通过超级账本**软件开发工具包**（**SDK**）API连接到对等体。这些API允许应用程序在区块链网络上执行交易，并接收与流程确认相关的事件。有两种类型的交易——查询交易和更新交易。对于查询交易，不需要共识，因为对等体将立即从其账本的本地副本返回结果。然而，对于更新交易，没有个体对等体可以更新账本，因为其他对等体在更新账本之前需要达成一致。达成一致更新账本的过程被称为*共识*。您可以在[第
    3 章](6aaa9b0a-84b6-4fca-82c3-864e22d616b0.xhtml)，*深入了解超级账本*中详细阅读关于账本更新交易过程。
- en: A specific set of applications and peers can communicate via channels, since
    a channel is a partition – a pathway of communication – between the specific application
    and peer(s). Hyperledger Fabric is for enterprises and it caters to private-permissioned
    (consortium) and private-permissionless use cases. Various like-minded organizations
    form a consortium to build a blockchain business network. Hence, peers are owned
    by various organizations. These organizations offer resources for the setup, maintenance,
    and operations of the blockchain network. One of the resources is nodes (peers),
    and the business network can continue to exist as long as one organization with
    one peer remains alive on the blockchain business network.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 特定的一组应用程序和对等体可以通过通道进行通信，因为通道是特定应用程序和对等体之间的一个分区——通信的路径。Hyperledger Fabric适用于企业，并为私有许可（联盟）和私有无许可用例提供支持。各种志同道合的组织组成联盟，建立区块链业务网络。因此，对等体由各种组织拥有。这些组织为区块链网络的设置、维护和运营提供资源。资源之一是节点（对等体），只要在区块链业务网络上有一个组织拥有一个对等体仍然存活，业务网络就可以继续存在。
- en: The administrators of that organization assign nodes to the blockchain business
    network. Each organization has a certificate authority, which assigns a digital
    certificate to these nodes. This digital certificate (X.509) is the digital identity
    of these peers. This digital identity helps in identifying the owning organization
    of the peer when the peer tries to connect to a channel on the blockchain business
    network. A channel has policies, which determine the rights and privileges of
    the peer. This mapping of the peer’s role in an organization and the peer’s identity
    to an organization is provided the **Membership Service Provider** (**MSP**).
    Anything that interacts with the blockchain business network, such as peers, applications,
    admins, orderers, and so on, must have an identity and an associated MSP to enable
    their integration with it.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 该组织的管理员分配节点给区块链业务网络。每个组织都有一个证书颁发机构，它为这些节点分配数字证书。这个数字证书（X.509）是这些对等体的数字身份。当对等体尝试连接到区块链业务网络上的通道时，这个数字身份有助于识别对等体的所属组织。通道具有策略，这些策略确定对等体的权限和特权。这个对等体在组织中的角色与对等体的身份与组织的映射由**成员服务提供者**（**MSP**）提供。与区块链业务网络交互的任何东西，如对等体、应用程序、管理员、订单者等，都必须有一个身份和一个关联的MSP，以使它们能够与之集成。
- en: Orderers nodes ensure the consistency of the ledger across the blockchain business
    network. Let’s take a quick glance at the transaction flow of a blockchain network
    based on Hyperledger Fabric. This entire process is mediated by orderers (orderers'
    nodes), where all the peers reach a consensus on the content of the transaction,
    and also the order of the transactions.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 订单节点确保区块链业务网络上账本的一致性。让我们快速了解一下基于Hyperledger Fabric的区块链网络的交易流程。整个过程由订单者（订单节点）进行调解，在此过程中，所有对等体就交易内容以及交易顺序达成一致。
- en: '**Transaction Flow**: Transactions in a Hyperledger Fabric-based blockchain
    network happen in a multi-phase process. Please visit the *Transaction flow* section
    of [Chapter 3](6aaa9b0a-84b6-4fca-82c3-864e22d616b0.xhtml), *Delving into Hyperledger
    Fabric*,for more details. Here is the glimpse of the transaction flow:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '**交易流程**：Hyperledger Fabric基于区块链网络中的交易发生在一个多阶段过程中。请访问[第三章](6aaa9b0a-84b6-4fca-82c3-864e22d616b0.xhtml)的*深入了解Hyperledger
    Fabric*，以获取更多详细信息。以下是交易流程的简要介绍：'
- en: '**First phase** (**endorsing phase**): The application initiates a ledger-update
    transaction. This transaction request is handled by endorsing peers (nodes as
    endorsers). These nodes endorse the proposed ledger update and send the endorsement
    to the application. However, no commits are performed to the ledger.'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**第一阶段**（**背书阶段**）：应用程序发起账本更新交易。这个交易请求由背书对等体（作为背书者的节点）处理。这些节点背书所提议的账本更新并将背书发送给应用程序。然而，对账本不执行任何提交。'
- en: '**Second phase** (**ordering phase**): Proposal response from endorsed transaction,
    from various applications are received by the orderers'' nodes. These nodes order
    the transactions into blocks.'
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**第二阶段**（**排序阶段**）：来自各种应用程序的背书交易的提案响应被订单者节点接收。这些节点将交易排序成块。'
- en: '**Third phase** (**distribution phase**): Finally, ordered blocks are distributed
    to all the peers in the blockchain business network. These peers will validate
    the transaction and, upon successful validation, commit the transaction to the
    local copy of the ledger.'
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**第三阶段**（**分发阶段**）：最后，有序的区块被分发到区块链业务网络中的所有对等方。这些对等方将验证交易，并在验证成功后将交易提交到账本的本地副本。'
- en: 'Orderers'' nodes are the mediators of the entire transaction process. This
    transaction process is known as a consensus, as all the peers in the blockchain
    business network have agreed about the transactions and the data of the transactions.
    The ordering service leverages a message-oriented architecture, Ordering service
    can be implemented in one of the following three ways:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 订单节点是整个交易过程的中介。此交易过程称为共识，因为区块链业务网络中的所有对等方都就交易和交易数据达成了一致意见。订购服务利用了面向消息的架构，订购服务可以以以下三种方式之一实现：
- en: Solo
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 独立
- en: Kafka
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kafka
- en: Raft
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Raft
- en: 'The following table highlights the features of various order service implementations:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格突出显示了各种订单服务实现的特点：
- en: '| Features | **Solo** | **Kafka** | **Raft** |'
  id: totrans-165
  prefs: []
  type: TYPE_TB
  zh: '| 特点 | **独立** | **Kafka** | **Raft** |'
- en: '| Number of nodes | Single ordering node | Multiple ordering nodes from one
    organization. | Multiple ordering nodes from different organizations. |'
  id: totrans-166
  prefs: []
  type: TYPE_TB
  zh: '| 节点数量 | 单个订购节点 | 一个组织的多个订购节点。 | 来自不同组织的多个订购节点。 |'
- en: '| Fault-tolerant | Not fault-tolerant | **Crash fault-tolerant** (**CFT**),
    which uses a ledger and follows node configuration. Uses ZooKeeper ensemble for
    management. | CFT based on Raft protocol. |'
  id: totrans-167
  prefs: []
  type: TYPE_TB
  zh: '| 容错 | 非容错 | **崩溃容错**（**CFT**），它使用一个账本并遵循节点配置。使用 ZooKeeper 集合管理。 | 基于 Raft
    协议的 CFT。 |'
- en: '| Implementation | Development and testing (not for production) | Production
    grade, however has management overhead. | Production grade and easier to implement
    than Kafka. |'
  id: totrans-168
  prefs: []
  type: TYPE_TB
  zh: '| 实施 | 开发和测试（非生产环境） | 生产级别，但存在管理开销。 | 生产级别，比 Kafka 更容易实现。 |'
- en: '| Distributed order service |  | Kafka clusters are practically run by one
    organization (maybe a founder organization). Hence, all the ordering actually
    goes to one single organization. Hence it''s partially decentralized. | Allows
    distributed ordering service as various organizations can contribute their nodes
    to form a distributed order service. Hence, it is fully decentralized. |'
  id: totrans-169
  prefs: []
  type: TYPE_TB
  zh: '| 分布式订单服务 |  | Kafka 集群实际上由一个组织（可能是一个创始组织）运行。因此，所有的订购实际上都送到一个单一的组织。因此它是部分分散的。
    | 允许分布式订购服务，因为各个组织可以贡献其节点来形成分布式订购服务。因此，它是完全分散的。 |'
- en: 'From a physical presence perspective, nodes can reside in one of the following
    locations:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 从物理存在的角度来看，节点可以位于以下位置之一：
- en: Cloud tenanted or owned by one of the organizations
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由一个组织租用或拥有的云
- en: Data center or on-premise owned by one of the organizations
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据中心或由一个组织拥有的本地环境
- en: On a local machine
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在本地机器上
- en: Essentially, identity of the peer associates its affiliation with an organization
    and determines that it is owned by that organization. These nodes are the basis
    and core of the blockchain network. They are of different types and perform various
    functions, such as endorsement, ordering, committing, and hosting chaincode, and
    ensure the consistency of the ledger. So far, we've discussed infrastructure from
    an Ethereum and Hyperledger Fabric perspective. If you want to check the infrastructure
    offerings for a specific vendor, you can visit the *Oracle's Baas – OBP* section
    of this chapter.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 从本质上讲，对等方的身份将其与组织关联起来，并确定其由该组织拥有。这些节点是区块链网络的基础和核心。它们具有不同的类型并执行各种功能，例如认可、排序、提交和托管链码，并确保账本的一致性。到目前为止，我们已经从以太坊和超级账本
    Fabric 的角度讨论了基础设施。如果您想要查看特定供应商的基础设施提供情况，您可以访问本章的*Oracle's Baas – OBP*部分。
- en: Data layer
  id: totrans-175
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据层
- en: Blockchain is a decentralized, massively replicated database (distributed ledger),
    where transactions are arranged in blocks, and placed in a P2P network. The current
    state of all accounts is stored in such a database. A network (public or private)
    is comprised of many nodes and without a common consensus, data cannot be altered.
    The data structure of a blockchain can be represented as a linked-list of blocks,
    where transactions are ordered. The blockchain's data structure includes two primary
    components—pointers and a linked list. The pointers are the variables, which refer
    to the location of another variable, and linked list is a list of chained blocks,
    where each block has data and pointers to the previous block. A **Merkle tree**
    is a binary tree of hashes. Each block contains a hash of the Merkle root with
    information such as the hash of the previous block, timestamp, nonce, the block
    version number, and the current difficulty target. A Merkle tree offers security,
    integrity, and irrefutability for the blockchain technology. Merkle trees, along
    with cryptography and consensus algorithms, are the basis of the blockchain technology.
    For example, Ethereum blockchain uses a Patricia tree database to store information.
    Patricia tree (Trie) is a Merkle tree, which is like a key-value store. Just like
    Merkle tree, a Patricia tree has a *root hash*. This root hash can be used to
    refer to the entire tree. Hence, you cannot modify the content of the tree without
    modifying the root hash. Each block contains a list of transactions that happened
    since the last block, and after applying those transactions, the root hash of
    the Patricia tree represents the new state (*state tree*).
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链是一个去中心化、大规模复制的数据库（分布式分类账），其中交易被排列在区块中，并放置在P2P网络中。所有账户的当前状态都存储在这样的数据库中。一个网络（公共或私有）由许多节点组成，若没有共同的共识，数据就不能被更改。区块链的数据结构可以表示为区块的链表，其中交易被排序。区块链的数据结构包括两个主要组成部分——指针和链表。指针是变量，它们指向另一个变量的位置，而链表则是由链接的区块组成的列表，每个区块都有数据和指向前一个区块的指针。一个*Merkle树*是哈希的二叉树。每个区块都包含Merkle根哈希的信息，如上一个区块的哈希、时间戳、随机数、区块版本号以及当前难度目标。Merkle树为区块链技术提供了安全性、完整性和不可辩驳性。Merkle树，连同密码学和共识算法，是区块链技术的基础。例如，以太坊区块链使用Patricia树数据库来存储信息。Patricia树（Trie）是一种Merkle树，它类似于键值存储。就像Merkle树一样，Patricia树有一个*根哈希*。这个根哈希可以用来指代整棵树。因此，你不能在不修改根哈希的情况下修改树的内容。每个区块包含自上一个区块以来发生的交易列表，并且在应用这些交易后，Patricia树的根哈希代表了新状态（*状态树*）。
- en: 'The genesis block (the first block) does not contain the pointer, as it''s
    the first in the chain. The following diagram shows the connected list of blocks
    in a blockchain:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 创世区块（第一个区块）不包含指针，因为它是链中的第一个。下图显示了区块链中块的连接列表：
- en: '![](img/ced27515-cb58-4f75-99c1-1bc7ac739ee9.png)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ced27515-cb58-4f75-99c1-1bc7ac739ee9.png)'
- en: Blockchain structure
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链结构
- en: Depending on the type of blockchain, data is stored in blocks. For example,
    Hyperledger Fabric's blocks will include channel information, while a Bitcoin
    blockchain will have data about the sender, receiver, and the amount. We've used
    the term *hash* a few times already. A hash is a unique digest of the data. A
    cryptographic hash algorithm (such as the SHA 256 algorithm) can generate a fixed
    length hash value of the data. These hashes help in identifying blocks easily
    and also help to detect any changes that are made to the blocks. Each block has
    a hash of the previous block; hence, blockchain is essentially a chain of hashes.
    Any new node connected to the blockchain will receive a copy of the blockchain
    network. Only upon consensus are blocks added to the local blockchain.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 根据区块链的类型，数据被存储在区块中。例如，超级账本的区块将包括通道信息，而比特币区块链将包含有关发送者、接收者和金额的数据。我们已经多次使用了术语*哈希*。哈希是数据的唯一摘要。密码哈希算法（例如SHA
    256算法）可以生成数据的定长哈希值。这些哈希有助于轻易识别区块，同时也有助于检测对区块所做的任何更改。每个区块都有前一个区块的哈希；因此，区块链本质上是一个哈希链。任何连接到区块链的新节点都将接收区块链网络的拷贝。只有在一致性达成后，才会将区块添加到本地区块链。
- en: Transactions are digitally signed on the blockchain to ensure the security and
    integrity of the data stored on it. They secure information about the block, transactions,
    transacting parties, and so via a digital signature, which uses asymmetric cryptography.
    Transactions are signed using a private key, and anyone in possession of the public
    key can verify the signer. The digital signature checks for tampering. Digital
    signatures guarantee integrity as the data that is encrypted is also signed. Hence,
    any tampering will invalidate the signature. As the data is already encrypted,
    it cannot be detected. Even if it is detected, it cannot be tampered with. A digital
    signature secures the sender's (owner) identity as well. Private keys are linked
    to owners (users); hence, signatures are legally associated with the owner and
    cannot be repudiated. In this section, we talked about transactions in detail.
    We will walk through the transaction flow for Ethereum-based blockchain platforms
    in the next section.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 交易在区块链上进行数字签名，以确保存储在其中的数据的安全性和完整性。它们使用非对称加密的数字签名来保护有关区块、交易、交易方等信息。交易使用私钥进行签名，持有公钥的任何人都可以验证签名者。数字签名用于检查篡改。数字签名保证了完整性，因为加密的数据也被签名了。因此，任何篡改都会使签名无效。由于数据已经加密，因此无法检测到。即使检测到了，也无法篡改。数字签名还保护了发送者（所有者）的身份。私钥与所有者（用户）相关联；因此，签名在法律上与所有者相关联，无法否认。在本节中，我们详细讨论了交易。在下一节中，我们将详细介绍基于以太坊的区块链平台的交易流程。
- en: Network layer
  id: totrans-182
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网络层
- en: The network layer, also known as the P2P layer, is the one that is responsible
    for internode communication. It takes care of discovery, transactions, and block
    propagation. This layer can also be termed as propagation layer. This P2P layer
    ensures that nodes can discover each other and can communicate, propagate and
    synchronize with each other to maintain valid current state of the blockchain
    network. Visit the following *Transaction flow* subsection, in this chapter to
    experience the P2P layer in terms of transaction broadcast, transaction proposals,
    transaction validation and transaction commit. This layer also takes care of the
    world state propagation. A P2P network is a computer network where computers (nodes)
    are distributed and share the network’s workload to reach the end goal. Nodes
    perform transactions on the blockchain. There are two kinds of nodes—full node
    and light node. Full nodes ensure the verification and validation of transactions,
    mining, and the enforcement of consensus rules. They are responsible for maintaining
    trust in the network. Light nodes only keep the header of the blockchain (keys)
    and can send transactions.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 网络层，也称为P2P层，负责节点间通信。它负责发现、交易和区块传播。这一层也可以称为传播层。这个P2P层确保节点可以发现彼此并可以相互通信、传播和同步，以维护区块链网络的有效当前状态。在本章的以下
    *交易流* 小节中，体验P2P层的交易广播、交易提议、交易验证和交易提交。这一层还负责世界状态的传播。P2P网络是一种计算机网络，其中计算机（节点）分布并共享网络的工作负载以达到最终目标。节点在区块链上执行交易。有两种节点——全节点和轻节点。全节点负责验证和验证交易、挖矿和强制共识规则的执行。它们负责维护网络的信任。轻节点只保留区块链的头（键）并可以发送交易。
- en: Transaction flow
  id: totrans-184
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 交易流
- en: 'The transaction flow described here highlights the interaction between nodes
    in a P2P network layer. The following diagram displays the transaction flow for
    the Ethereum blockchain:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 此处描述的交易流程突出了P2P网络层中节点之间的互动。以下图表显示了以太坊区块链的交易流程：
- en: '![](img/160e266c-1996-47c4-aeaa-14fc54645d8b.png)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
  zh: '![](img/160e266c-1996-47c4-aeaa-14fc54645d8b.png)'
- en: Blockchain transaction flow
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链交易流程
- en: 'The following bullet points highlight the transaction flow of Ethereum blockchain,
    as shown in the preceding diagram:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的要点突出了以太坊区块链的交易流程，如上图所示：
- en: '**T****ransaction Initiated**: A light node or a full node that has an Ethereum
    client digitally signs and initiates the transaction'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**交易初始化**：轻节点或具有以太坊客户端的全节点数字签名并初始化交易'
- en: '**Local Node Verification**: Once the local Ethereum node receives the transaction,
    the local Ethereum node will perform the following checks:'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**本地节点验证**：一旦本地以太坊节点接收到交易，本地以太坊节点将执行以下检查：'
- en: Check the digital signature's consistency with the sender's address and transaction's
    content
  id: totrans-191
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查数字签名与发件人地址和交易内容的一致性
- en: Check if the sender has enough gas to fuel the transaction being processed
  id: totrans-192
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查发送方是否有足够的gas来支持正在处理的交易
- en: Check if the transaction will result in a smart contract's functions to fail
  id: totrans-193
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查交易是否会导致智能合约功能失败
- en: '**Broadcast to Blockchain Network**: Transactions are broadcasted to the blockchain
    P2P network, where the full nodes will perform the following checks:'
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**向区块链网络广播**：交易被广播到区块链P2P网络，全节点将执行以下检查：'
- en: Repeat the aforementioned validation checks
  id: totrans-195
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重复上述验证检查
- en: Full nodes communicate with each other
  id: totrans-196
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 全节点相互通信
- en: Miner nodes will put the transaction in a pending block and start the consensus
    (for example, PoW) so that it can try to solve the puzzle
  id: totrans-197
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 矿工节点将交易放入待处理区块，并启动共识（例如，PoW），以便尝试解决谜题
- en: '**Validated, mined, and adde****d to the block**: Following steps ensure the
    block validation and addition to blockchain :'
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**验证、挖矿和添加到区块链**：以下步骤确保区块的验证和添加到区块链：'
- en: Once the transaction is validated and mined, it's added to the valid block
  id: totrans-199
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一旦交易经过验证和挖矿，它将被添加到有效区块
- en: The miner will solve the puzzle and find the valid block, which will be added
    to the blockchain
  id: totrans-200
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 矿工将解决谜题并找到有效区块，该区块将被添加到区块链
- en: '**Valid Block added to the Blockchain**: The valid block is appended to the
    blockchain and broadcasted to nodes:'
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**有效区块添加到区块链**：有效区块被追加到区块链并广播给节点：'
- en: The miner node will append the valid block to the blockchain.
  id: totrans-202
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 矿工节点将有效的区块追加到区块链。
- en: The miner will broadcast the valid block to nodes.
  id: totrans-203
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 矿工将有效的区块广播到节点。
- en: Upon appending the block to the blockchain, the miner will broadcast this to
    blockchain peer nodes, and each node will again validate the block to ensure the
    consistency of the current (new) block with the previous block. Once validation
    is successful, the node will broadcast to its nodes and so on.
  id: totrans-204
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在将区块追加到区块链后，矿工将向区块链对等节点广播此信息，每个节点都会重新验证区块，以确保当前（新）区块与前一个区块的一致性。一旦验证成功，节点将向其节点广播，依此类推。
- en: '**Transaction Completed**: The initiating node will sync the local copy with
    the blockchain and execute the transaction:'
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**交易已完成**：发起节点将本地副本与区块链同步并执行交易：'
- en: Finally, the block reaches the node that initiated the transaction
  id: totrans-206
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，区块到达发起交易的节点
- en: The local node will sync its local copy with the blockchain and will execute
    the transactions in the block
  id: totrans-207
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本地节点将与区块链同步本地副本，并执行区块中的交易。
- en: Transaction is marked as completed
  id: totrans-208
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 交易标记为已完成
- en: Consensus layer
  id: totrans-209
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 共识层
- en: 'The consensus protocol is the core to the existence of blockchain platforms.
    As the saying goes, *behind every blockchain, there is a consensus algorithm*.
    The consensus layer is the most critical and crucial layer for any blockchain
    (Ethereum, Hyperledger, or any other). Consensus is responsible for validating
    the blocks, ordering the blocks, and ensuring everyone agrees on it. The following
    are the key points regarding the consensus layer:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 共识协议是区块链平台存在的核心。俗话说，*每个区块链都有一个共识算法*。共识层是任何区块链（以太坊，超级账本或任何其他区块链）中最关键和重要的层。共识负责验证区块，对区块进行排序，并确保每个人都同意。以下是关于共识层的关键点：
- en: Consensus protocols (algorithms) create an irrefutable set of agreements between
    nodes across the distributed P2P network.
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 共识协议（算法）在分布式P2P网络中的节点之间创建不可争议的一致协议。
- en: Consensus keeps all the nodes synchronized. Consensus ensures that all the nodes
    agree to the *truth*.
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 共识保持所有节点同步。共识确保所有节点都同意*真理*。
- en: Consensus ensures that power remains distributed and decentralized. No single
    entity can control the entire blockchain network.
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 共识确保权力保持分散和去中心化。没有单一实体可以控制整个区块链网络。
- en: Consensus guarantees that a single chain is followed and that it holds the *truth*.
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 共识确保遵循单一链，并且它持有*真理*。
- en: Consensus is the rules that nodes follow to ensure that transactions are validated
    within the boundaries of those rules and that blocks follow those rules.
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 共识是节点遵循的规则，以确保交易在这些规则的边界内得到验证，并且区块遵循这些规则。
- en: Consensus results in unanimous acceptance of *truth* among the participating
    nodes.
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 共识导致参与节点对*真理*的一致接受。
- en: For a blockchain with cryptocurrency (for example, Ethereum), consensus also
    rewards the nodes for validating the transactions and maintaining the blockchain
    network.
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于具有加密货币的区块链（例如以太坊），共识还奖励节点验证交易和维护区块链网络。
- en: By design, consensus protocols cannot be replicated as replication or imitating
    them is costly and time-consuming.
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据设计，共识协议无法被复制，因为复制或模仿它们的成本高且耗时。
- en: Reliability in a P2P network is achieved by a consensus protocol.
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: P2P网络中的可靠性是通过共识协议实现的。
- en: Consensus methods vary for different types of blockchain. For example, consensus,
    when followed by a permissionless blockchain network such as Ethereum, Bitcoin,
    and so on, is known as a probabilistic consensus. Such a consensus guarantees
    consistency of the ledger, though there is a possibility that various participants
    have different views of the blocks. This means that they remain vulnerable to
    ledger forks (also known as divergent ledgers). Permissioned blockchains such
    as Hyperledger Fabric follow deterministic algorithms. Such blockchain networks
    have specific nodes called ordering nodes; blocks validated by these ordering
    nodes are considered as final and true. Hence, there is no probability of a fork.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 不同类型的区块链使用不同的共识方法。例如，遵循类似以太坊，比特币等无许可区块链网络的共识，被称为概率性共识。这种共识保证了分类账的一致性，尽管各参与者可能对区块有不同的观点。这意味着它们容易出现分类账分叉（也称为分歧分类账）。超级账本等许可区块链遵循确定性算法。这样的区块链网络具有特定的节点称为排序节点；由这些排序节点验证的区块被认为是最终和真实的。因此，不会出现分叉的可能性。
- en: 'The following table outlines a quick comparison of some of the consensus algorithms
    mentioned in this book:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格概述了本书中提到的一些共识算法的快速比较：
- en: '| **Facts** | **PoW** | **PoS** | **PBFT** |'
  id: totrans-222
  prefs: []
  type: TYPE_TB
  zh: '| **事实** | **PoW** | **PoS** | **PBFT** |'
- en: '| Type of Blockchain | Permissionless | Permissionless and Permissioned | Permissioned
    |'
  id: totrans-223
  prefs: []
  type: TYPE_TB
  zh: '| 区块链类型 | 无许可 | 无许可和许可 | 许可 |'
- en: '| Finality of Transaction | Probabilistic | Probabilistic | Deterministic |'
  id: totrans-224
  prefs: []
  type: TYPE_TB
  zh: '| 交易的终局性 | 概率性 | 概率性 | 确定性 |'
- en: '| Needs Token | Yes | Yes | No |'
  id: totrans-225
  prefs: []
  type: TYPE_TB
  zh: '| 需要代币 | 是 | 是 | 否 |'
- en: '| Example Usage | Bitcoin, Ethereum | Ethereum | Hyperledger Fabric |'
  id: totrans-226
  prefs: []
  type: TYPE_TB
  zh: '| 示例用法 | 比特币，以太坊 | 以太坊 | 超级账本 |'
- en: Visit the *Structure of the blockchain* section for a detailed analysis of the
    various types of consensus algorithms.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 请访问*区块链结构*部分，详细分析各种共识算法。
- en: Application layer
  id: totrans-228
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应用层
- en: The application layer is comprised of smart contracts, chaincode, and dApps.
    Application layer can be further divided into two sub-layers –application layer
    and execution layer. Application layer has the applications that are used by end
    users to interact with the blockchain network. It comprises of scripts, APIs,
    user interfaces, frameworks. For these applications, blockchain network is the
    back-end system and they often connect with blockchain network via APIs. Execution
    layer is the sublayer which constitutes of smart contracts, underlying rules and
    chaincode. This sublayer has the actual code that gets executed and rules that
    are executed. A transaction propagates from application layer to execution layer,
    however the transaction is validated and executed at the semantic layer (smart
    contracts and rules). Applications sends instructions to execution layer (chaincode;
    in case of Hyperledger fabric), which performs the execution of transactions and
    ensure the deterministic nature of the blockchain (such as permissioned blockchain
    like hyperledger fabric).
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 应用层由智能合约，链码和dApp组成。应用层可以进一步分为两个子层 - 应用层和执行层。应用层包括最终用户用于与区块链网络交互的应用程序。它包括脚本，API，用户界面，框架。对于这些应用程序，区块链网络是后端系统，它们通常通过API与区块链网络连接。执行层是子层，由智能合约，基本规则和链码构成。这个子层包含实际执行的代码和已执行的规则。交易从应用层传播到执行层，但交易在语义层（智能合约和规则）进行验证和执行。应用程序将指令发送到执行层（链码；在超级账本的情况下），执行交易并确保区块链的确定性（例如超级账本之类的许可区块链）。
- en: Smart contracts to be executed on the **Ethereum runtime engine** are written
    in Solidity. It needs a compiler to syntactically prove the code. Since it is
    compiled, the bytecode is smaller and runs faster on EVM. Code executed on EVM
    is fully isolated and does not have any interaction with the network or filesystem.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 在以太坊运行引擎上执行的智能合约是用Solidity语言编写的。它需要编译器来在语法上证明代码的正确性。由于它是编译的，字节码更小，在以太坊虚拟机上运行速度更快。在以太坊虚拟机上执行的代码是完全隔离的，不会与网络或文件系统进行任何互动。
- en: '**Smart contract:** A code with business logic is identified by a unique address,
    and it resides on the EVM. A smart contract contains functions that are executed
    when a transaction is performed against those functions. Depending on the logic
    of the smart contract, a transaction can result in a change of state in the contract.
    Developers can use any language such as Solidity or Python, to write a smart contract,
    and can use a specific complier to compile the code into bytecode and then deploy
    those bytecodes to blockchain. Once deployed, a unique address is assigned to
    the smart contract. Any user on the blockchain can execute a transaction against
    that smart contract. Refer to the following transaction flow for the steps of
    a transaction on an Ethereum blockchain. Smart contracts are written in a high
    language such as Solidity and deployed to EVM for execution. However, there are
    codes that link the smart contract to the outside world; for example, inter-blockchain, logic
    execution, and so on. These are called oracles and dApps.'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '**智能合约:**  一段带有业务逻辑的代码，由唯一的地址标识，并驻留在EVM上。智能合约包含在针对这些函数执行事务时执行的函数。根据智能合约的逻辑，事务可能会导致合约状态的改变。开发人员可以使用Solidity或Python等任何语言编写智能合约，并可以使用特定的编译器将代码编译成字节码，然后将这些字节码部署到区块链上。一旦部署，智能合约就会被分配一个唯一的地址。区块链上的任何用户都可以对该智能合约执行事务。请参考以下以太坊区块链上事务步骤的事务流程。智能合约是用高级语言比如Solidity编写的，并部署到EVM上执行。然而，这些代码与外部世界相连；例如，区块链之间的逻辑执行等。这些称为Oracles和dApps。'
- en: '**Oracles**:Smart contracts operate on values and trigger contract state change,
    but only when the defined logic is met. An oracle is an agent whose task is to
    securely provide these values to a smart contract. Oracles are like data feeds
    from third-party services, which supply values to smart contracts.'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: '**Oracles**：智能合约基于值操作，并触发合同状态变化，但仅当满足定义的逻辑时。Oracle是一个旨在安全地向智能合约提供这些值的代理。Oracles类似于第三方服务的数据源，为智能合约提供值。'
- en: '**Chaincode** (**Hyperledger Fabric**): Smart contracts are the transaction
    logic that controls the life cycle of business objects, which are contained in
    the world state. Smart contracts are then packaged together into chaincode, which
    is then deployed to the blockchain business network. In Hyperledger, smart contracts
    govern the transactions, while chaincode governs the packaging and deployment
    of smart contracts. A chaincode can contain many smart contracts. For example,
    in an insurance chaincode, there can be smart contracts for claims, liability,
    processing, and so on. Chaincode defines the ledger’s data schema, initiates it,
    performs updates to ledgers (consensus-based), and responds to queries for ledger
    data. Chaincode also emits events, which allows other applications to subscribe
    to chaincode events and perform subsequent downstream functions or processes.'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: '**链码**（**Hyperledger Fabric**）：智能合约是控制业务对象生命周期的事务逻辑，这些对象包含在世界状态中。然后将智能合约打包到chaincode中，然后将其部署到区块链业务网络中。在Hyperledger中，智能合约控制交易，而chaincode控制智能合约的打包和部署。一个链码可以包含许多智能合约。例如，在一个保险链码中，可以包含针对索赔、责任、处理等的智能合约。Chaincode定义分类账的数据模式，启动它，对分类账执行更新（基于共识），并响应对分类账数据的查询。Chaincode还产生事件，这允许其他应用程序订阅chaincode事件并执行后续的下游功能或流程。'
- en: In Hyperledger Fabric, there is no VM like EVM (Ethereum). Chaincode is deployed
    on network nodes, and smart contracts run on a peer node owned by an organization,
    mostly written in standard languages such as Java, Node.js, and Go. Chaincode
    runs on a secure Docker container that's available to each blockchain instance.
    These containers are independent of other nodes in the network; however, these
    chaincodes are orchestrated by the peer nodes and act as proxies, allowing access
    to client applications via REST APIs or SDK.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 在Hyperledger Fabric中，没有像EVM（以太坊）那样的虚拟机。Chaincode部署在网络节点上，智能合约运行在由组织拥有的对等节点上，主要使用标准语言如Java、Node.js和Go编写。Chaincode在安全的Docker容器上运行，每个区块链实例都可用。这些容器独立于网络中的其他节点；然而，这些chaincode由对等节点编排并作为代理，允许通过REST
    API或SDK访问客户端应用程序。
- en: Chaincodes are initiated for channels. An administrator can define an endorsement
    policy for a chaincode for a given channel. This ensures that all the smart contracts,
    which are packaged in the chaincode, are available for that channel. Because of
    this, a chaincode might follow different endorsement policies on different channels
    based on the endorsement policy that's been configured for that channel. Smart
    contracts can communicate with other smart contracts on the same channel or other
    channels.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: Chaincodes 是为通道初始化的。管理员可以为给定通道的链码定义背书策略。这确保了链码中打包的所有智能合约都可用于该通道。由于这个原因，一个链码可能根据为该通道配置的背书策略，在不同的通道上遵循不同的背书策略。智能合约可以与同一通道或其他通道上的其他智能合约通信。
- en: '**dApps**: dApps is a distributed application that runs on top of a distributed
    technology like Blockchain, such as Ethereum, Bitcoin, or Hyperledger Fabric.
    It''s a decentralized application that leverages smart contracts or chaincode.
    dApps can be considered a web application that interacts with the smart contract
    or chaincode; however, the dApps are not controlled by a single entity or an organization.
    Once deployed, they belong to the blockchain network. dApps are user-friendly
    applications, which business users can use to transact onto a blockchain network.
    Smart contracts allow you to connect to blockchains, whereas dApps allows you
    to connect to a smart contract or chaincode. For example, if you go to LinkedIn,
    the web page calls APIs, which gather data from a database. However, in dApps
    and the smart contract world, dApps are API-based web applications that connect
    with smart contracts, which in turn execute transactions on the ledger. A few
    examples of dApps are financial applications such as invoice factoring, KYC, and
    so on.'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: '**dApps**：dApps 是运行在区块链等分布式技术之上的分布式应用程序，例如以太坊、比特币或超级账本 Fabric。它是一个利用智能合约或链码的去中心化应用程序。dApps
    可以被视为与智能合约或链码交互的 Web 应用程序；然而，dApps 不受单个实体或组织控制。一旦部署，它们就属于区块链网络。dApps 是用户友好的应用程序，业务用户可以用来在区块链网络上进行交易。智能合约允许你连接到区块链，而
    dApps 允许你连接到智能合约或链码。例如，如果你去 LinkedIn，网页会调用 API，从数据库中收集数据。然而，在 dApps 和智能合约的世界中，dApps
    是基于 API 的 Web 应用程序，它们与智能合约连接，而智能合约又在分类帐上执行交易。一些 dApps 的示例是金融应用程序，例如发票保理、KYC 等。'
- en: Structure of the blockchain
  id: totrans-237
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 区块链的结构
- en: When a user performs a transaction on a traditional system, there is a trusted
    third party involved who takes care of transaction processing, transaction logging,
    maintaining the ledgers and balances, and, in return, charge a transaction fee.
    With a DLT such as blockchain (for example, Ethereum), every participating full
    node has a copy of the ledger (blockchain). The trust is on the system itself
    as there is no party involved. Users initiate transactions, which are validated
    and grouped (in a block) and, based on consensus, the block is added to the ledger
    (blockchain).
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户在传统系统上执行交易时，涉及到一个可信的第三方，负责处理交易、记录交易、维护分类帐和余额，并收取交易费用。通过区块链等 DLT（例如以太坊），每个参与的全节点都有分类帐（区块链）的副本。信任在系统本身上，因为没有涉及任何一方。用户发起交易，交易被验证和分组（在一个区块中），并且根据共识，将区块添加到分类帐（区块链）中。
- en: This section is dedicated to the structure of block headers, transactions, adding
    transactions to a block, and finally, adding blocks to the blockchain. We have
    discussed blockchain and, in particular, Ethereum, in this section. However, we
    will be delving into DLTs such as Hyperledger in detail in subsequent chapters.
    There, we will walk through the structure, transaction flow, participants, and
    algorithms that are specific to Hyperledger Fabric. Visit [Chapter 3](6aaa9b0a-84b6-4fca-82c3-864e22d616b0.xhtml), *Delving
    into Hyperledger Fabric,* for details about Hyperledger Fabric.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 本节专注于区块头、交易、向区块添加交易，以及最终向区块链添加区块的结构。我们在本节中讨论了区块链，特别是以太坊。然而，在后续章节中，我们将详细探讨超级账本等分布式账本技术。在那里，我们将逐步介绍超级账本
    Fabric 的结构、交易流程、参与者和特定算法。有关超级账本 Fabric 的详细信息，请访问 [第 3 章](6aaa9b0a-84b6-4fca-82c3-864e22d616b0.xhtml)《深入了解超级账本
    Fabric》。
- en: Transaction state machine
  id: totrans-240
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 交易状态机
- en: The Ethereum blockchain is a transaction-based state machine that starts with
    a **genesis state**. A transaction will then lead to a change of state, where
    the recent state is termed the current state. Hence, a transaction is a representation
    of a *valid* sequence flow between two states; the blockchain should contain only
    valid state transactions that occur because of a valid transaction.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 以太坊区块链是一个基于交易的状态机，从**创世状态**开始。然后，一笔交易会导致状态的改变，最近的状态被称为当前状态。因此，一笔交易是两个状态之间*有效*序列流的表示；区块链应该只包含由于有效交易而发生的有效状态交易。
- en: Transactions are grouped into blocks. A block is chained to a previous block
    with a cryptographic hash, representing a chain of blocks called a blockchain.
    Here, the cryptographic hash is used as a reference. Blocks themselves are the
    journals, and the blockchain is the ledger where blocks record one or more transactions.
    Incentives are offered to miners, and incentivization occurs at the state transition.
    A blockchain that offers incentives to miners needs to have a consensus to transmit
    value to the miner. For example, Ethereum considers Ether as the value in the
    Ethereum blockchain, and it's used to offer incentives to the miner. The smallest
    unit of value, Wei, is used for incentivization in Ethereum.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 交易被分组到块中。一个块与前一个块用一个加密哈希链接在一起，代表一系列被称为区块链的块的链。在这里，加密哈希被用作参考。块本身是日志，区块链是记录一个或多个交易的分类帐。奖励被提供给矿工，并且奖励发生在状态转换时。一个向矿工提供奖励的区块链需要有一个共识来向矿工传递价值。例如，以太坊将
    Ether 视为以太坊区块链中的价值，并用于向矿工提供奖励。最小的价值单位 Wei 用于以太坊中的奖励。
- en: Mining is a process where various nodes solve a puzzle to validate a transaction
    so that more transactions can be added as a block within the blockchain. This
    process of validating transactions is known as mining. Many miners act at the
    same time to validate the transaction and, once done, they submit a proof of their
    work, which is mathematical proof. Miners not only have to solve the puzzle –
    they need to solve it way before other miners to be able to add their block to
    the blockchain. This is the process of miners solving a puzzle and submitting
    a PoW. The winning miner is rewarded with some form of value. If it's Ethereum,
    then a certain amount of Ether is offered as a reward to the miner.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 挖矿是一个过程，各种节点解决一个谜题以验证一个交易，以便更多的交易可以添加为区块在区块链中。这个验证交易的过程被称为挖矿。许多矿工同时行动来验证交易，一旦完成，他们提交他们工作的证明，这是数学证明。矿工不仅需要解决这个谜题
    - 他们需要在其他矿工之前解决它，才能将他们的区块添加到区块链中。这是矿工解决一个谜题并提交 PoW 的过程。获胜的矿工会获得某种形式的价值作为奖励。如果是以太坊，则向矿工提供一定数量的
    Ether 作为奖励。
- en: As Ethereum is decentralized, every node has equity and can participate in creating
    new blocks. There could be malicious participants as well who might propose a
    new path. Hence, the system makes sure to reach a consensus that follows on from
    the genesis block to the current block. Ethereum uses the **GHOST** (which stands
    for **Greedy Heaviest Observed Subtree**) protocol to check the creation of multiple
    branches in the blockchain and to follow the best valid path.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 由于以太坊是去中心化的，每个节点都拥有股权并可以参与创建新的区块。也可能会有恶意参与者提出新的路径。因此，系统确保达成一致意见，从创世区块到当前区块的后续路径。以太坊使用**GHOST**（代表**贪婪最重要观察子树**）协议来检查区块链中多个分支的创建，并遵循最佳有效路径。
- en: Types of accounts
  id: totrans-245
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 账户类型
- en: Mapping between account addresses (160-bit unique identifier) and the account
    state is termed the world state, which is maintained in the Merkle tree (Trie).
    The Trie is maintained in the state database. Since the root node is dependent
    cryptographically on all of the internal nodes' data, the root node's hash can
    be used as a global secure identity for the blockchain network.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 帐户地址（160 位唯一标识符）与帐户状态之间的映射被称为世界状态，这个世界状态保存在 Merkle 树（Trie）中。 Trie 保存在状态数据库中。由于根节点在加密上依赖于所有内部节点的数据，根节点的哈希可以被用作区块链网络的全局安全身份。
- en: Small objects constitute the shared global state of Ethereum. These objects
    interact via message-passing framework. These objects are termed as **accounts**.
    A state is associated with each account and each account has a 20-byte address,
    where accounts are identified by a 160-bit identifier. Ethereum has two kinds
    of accounts, where externally owned accounts have no codes associated and they
    can initiate new transactions. However, contract accounts have contract codes
    attached to them, along with a unique address, and they cannot initiate new transactions.
    Contract accounts can only perform contract-to-contract messaging. Remember, external
    accounts initiate transactions by signing them with their private keys and sending
    those transactions to another external account or to a contract account. If the
    transaction is sent to a contract account, this will result in the execution of
    the business logic of the contract account (smart contract's account).
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 小对象构成了以太坊的共享全局状态。这些对象通过消息传递框架进行交互。这些对象被称为**账户**。每个账户都有一个状态，并且每个账户都有一个 20 字节的地址，这些账户通过
    160 位的标识符进行标识。以太坊有两种账户，外部拥有账户没有与之关联的代码，它们能够发起新的交易。然而，合约账户有与之关联的合约代码，以及一个唯一的地址，它们不能发起新的交易。合约账户只能执行合约之间的消息传递。请记住，外部账户通过使用其私钥对其进行签名，并将这些交易发送到另一个外部账户或合约账户来发起交易。如果交易发送到一个合约账户，这将导致执行合约账户的业务逻辑（智能合约的账户）。
- en: 'Both of these accounts have an account state that is represented by four components:
    nonce, balance, storage root, and code hash. For an externally owned account,
    the nonce highlights the transactions initiated from account''s address, while
    for a contract account, it represents the contracts that have been created by
    that contract account. Balance shows the base unit of the Ether (in the Ethereum
    blockchain). The storage root holds the hash of the root node of the Merkle tree,
    while the code hash contains the hash of the code on the contract account, which
    is deployed on EVM.'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 这两种账户都有一个账户状态，由四个组件表示：nonce、余额、存储根和代码哈希。对于外部拥有账户，nonce强调了从账户地址发起的交易，而对于合约账户，它表示了由该合约账户创建的合约。余额显示了以太的基本单位（在以太坊区块链中）。存储根保存了默克尔树根节点的哈希，而代码哈希包含了部署在
    EVM 上的合约账户上的代码的哈希。
- en: Delving into Block Structure
  id: totrans-249
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 深入区块结构
- en: 'A block is comprised of a block header (`BH`), transaction set (`BT`), and
    the other block''s headers for the current block''s ommers (`BU`), as shown in
    the following code:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 一个区块由区块头（`BH`）、交易集（`BT`）和当前区块叔块的其他区块头（`BU`）组成，如下代码所示：
- en: '[PRE0]'
  id: totrans-251
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Ommers are those miners whose blocks were orphaned and didn't make it to the
    blockchain. However, they were successful in mining the block, but their block
    was added in time. Ethereum offers a low incentive to those miners as well.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 叔块是那些矿工的区块被孤立并未能进入区块链的区块。然而，他们成功地挖矿了区块，但是他们的区块未能及时添加。以太坊也向这些矿工提供了很低的激励。
- en: 'Ethereum block headers contain the following components:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 以太坊区块头包括以下组件：
- en: '**Parent Hash**: Hash of the parent block''s header'
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**父哈希**：父区块头的哈希'
- en: '**Ommers Hash**: Hash of the ommer''s list portion of the current block'
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**叔块哈希**：当前区块叔块列表部分的哈希'
- en: '**Beneficiary**: Miner''s account address, who is entitled to the incentive'
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**受益者**：矿工的账户地址，有权获得激励'
- en: '**State Root**: Hash of the Trie''s root node'
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**状态根**：Trie的根节点哈希'
- en: '**Transactions Root**: Trie''s root node''s hash that has the transaction list
    portion of the block'
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**交易根**：Trie的根节点哈希，其中包含区块的交易列表部分'
- en: '**Receipts Root**: Trie''s root node''s hash that has the receipts for each
    transaction that is listed in the block'
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**收据根**：Trie的根节点哈希，其中包含列在区块中的每笔交易的收据'
- en: '**Logs Bloom**: Log information such as logger address and log topics'
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**日志布隆**：例如记录器地址和日志主题等日志信息'
- en: '**Difficulty**: Value representing the difficulty level of the block'
  id: totrans-261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**难度**：代表区块的难度水平的值'
- en: '**Number**: Number showcasing the value of ancestor blocks; for example, for
    the genesis block, this number is zero'
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**编号**：展示祖先区块值的数字；例如，对于创世区块，这个数字是零'
- en: '**Gas Limit**: Value that shows the gas limit per block'
  id: totrans-263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Gas 限制**：显示每个区块的燃气限制的值'
- en: '**Gas Used**: Value showing the gas used for the transactions in the block'
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**已使用 Gas**：显示区块中交易使用的 gas 值'
- en: '**Timestamp**: Time at the block''s inception; essentially, it''s the system
    time'
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**时间戳**：区块初始时的时间；基本上，它是系统时间'
- en: '**Extra Data**: Array containing the block data; it''s just 32 bytes and should
    contain relevant data only'
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Extra Data**: 包含区块数据的数组；它只是32个字节，应该只包含相关数据。'
- en: '**mixHash**: A hash value that, when mixed with the nonce, will prove the sufficiency
    of the computations performed on the block'
  id: totrans-267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**mixHash**: 一个哈希值，当与nonce混合时，将证明对区块执行的计算足够。'
- en: '**Nonce**: A hash value that, when mixed with the mixHash, will prove the sufficiency
    of the computations performed on the block'
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Nonce**: 一个哈希值，当与mixHash混合时，将证明对区块执行的计算足够。'
- en: The receipt of each transaction comprises cumulative gas prices of the block
    in which the transaction resides, the set of logs created for the transaction,
    the bloom filter from the transaction log, and the transaction's status code.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 每个交易的收据包括交易所在的区块的累积气体价格、为交易创建的日志集、交易日志的布隆过滤器和交易的状态代码。
- en: Transactions
  id: totrans-270
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 交易
- en: 'A transaction is signed and created by external accounts. These transactions
    result in messages being sent between contract accounts and the creation of a
    contract account. Each transaction has the following fields:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 交易由外部账户签名和创建。这些交易导致合约账户之间发送消息和创建合约账户。每个交易具有以下字段：
- en: '**Nonce**: Enlists the number of transactions initiated by the sender'
  id: totrans-272
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Nonce**: 列出发送者发起的交易数。'
- en: '**Gas Price**: Value (price) paid in Wei for the cost of computation to execute
    the transaction'
  id: totrans-273
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Gas Price**: 以Wei为单位支付的用于执行交易的计算成本的价值（价格）。'
- en: '**Gas Limit**: Maximum gas limit for the given transaction; the given transaction
    should not cost more than this limit'
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Gas Limit**: 给定交易的最大气体限制；给定交易的成本不应超过此限制。'
- en: '**To**: Address of the recipient of the message or transaction'
  id: totrans-275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**To**: 消息或交易的接收者地址。'
- en: '**Value**: The transacted value to be transferred to the recipient'
  id: totrans-276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Value**: 要转移到收件人的已交易价值。'
- en: '**V**, **r**, **s**: Signature of the sender of the transaction'
  id: totrans-277
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**V**，**r**，**s**: 交易发送者的签名。'
- en: '**Init**: Usually associated with a contract creation transaction, which specifies
    the EVM code for the initialization of the account; it''s executed once at the
    time of creation of the account and is discarded afterwards'
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Init**: 通常与合约创建交易相关联，指定了用于账户初始化的EVM代码；它在账户创建时执行一次，然后被丢弃。'
- en: '**Data**: Message call''s input data'
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Data**: 消息调用的输入数据。'
- en: 'The following diagram shows the transaction, block, and inclusion of the block
    to the blockchain, which are discussed in detail in this section. Please refer
    to this diagram while reading about the transaction components, block header components,
    blockchain, and transaction flow. It also shows the inclusion of consensus in
    the entire process:'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 下图显示了交易、区块和区块包含到区块链中，这些在本节中详细讨论。在阅读有关交易组件、区块头组件、区块链和交易流程时，请参考此图。它还显示了在整个过程中的共识的包含：
- en: '![](img/5ebb14f0-cf1e-4826-929b-8a261d208620.png)'
  id: totrans-281
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5ebb14f0-cf1e-4826-929b-8a261d208620.png)'
- en: Transactions
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 交易
- en: 'Transactions are executed in the EVM. When a transaction is executed, it passes
    through initial validation:'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 交易在以太坊虚拟机（EVM）中执行。当执行交易时，它经过初始验证：
- en: The validity of the signature of the initiator
  id: totrans-284
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 发起者签名的有效性
- en: Validity of the transaction's nonce (must match the sender's current nonce)
  id: totrans-285
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 交易的nonce的有效性（必须与发送者的当前nonce匹配）
- en: Check the gas limit (it should be more than the intrinsic gas used by the transaction)
  id: totrans-286
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查气体限制（它应大于交易使用的固有气体）
- en: Well-formedness of the transaction
  id: totrans-287
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 交易的形式是否正确
- en: The sender's account should have sufficient funds for the upfront payment
  id: totrans-288
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 发送者账户应具有足够的资金用于预付款。
- en: 'Once the transaction has been validated successfully, the following steps are
    performed:'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦交易成功验证，将执行以下步骤：
- en: The cost of the transaction is deducted upfront from the sender's account balance.
  id: totrans-290
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 交易的成本从发送者的账户余额中预先扣除。
- en: The nonce value of the sender's account is incremented by one.
  id: totrans-291
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 发送者账户的nonce值增加1。
- en: The transaction is executed, and during transaction execution, the logic of
    the transaction in the contract (smart contract) is executed.
  id: totrans-292
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行交易，并在交易执行期间，执行合约（智能合约）中的交易逻辑。
- en: While the transaction is executing, various sub-state information is collected,
    such as log series and refund balance. In addition, the remaining gas (total gas
    limit minus intrinsic gas used) is calculated.
  id: totrans-293
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在交易执行时，收集各种子状态信息，例如日志系列和退款余额。此外，计算剩余气体（总气体限制减去固有气体使用）。
- en: Once the transaction is used to create a valid state, unused gas is refunded
    to the sender, the miner is incentivized, and gas that was used for the transaction
    is added to a gas counter, which tracks the total gas used by all of the transactions
    that are part of the block.
  id: totrans-294
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦交易用于创建有效状态，未使用的燃气将退还给发送者，矿工将获得激励，并且用于交易的燃气将添加到燃气计数器中，该计数器跟踪属于区块的所有交易使用的总燃气。
- en: Finally, the state is changed and logs are created for the transaction.
  id: totrans-295
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，状态被更改并为交易创建日志。
- en: Adding transactions to a block
  id: totrans-296
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加交易到一个区块
- en: Now, we know that transactions are executed in the EVM and that they have to
    go through various validation and processing steps.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们知道交易在EVM中执行，它们必须经历各种验证和处理步骤。
- en: 'In this section, we will walk through the steps for adding a transaction to
    the block, which are as follows:'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将逐步介绍将交易添加到区块的步骤，具体如下：
- en: '**Validate ommer**: Within the blockchain header, each ommer block must be
    a valid header'
  id: totrans-299
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**验证ommer**：在区块链头中，每个ommer区块必须是有效的头部'
- en: '**Validate transactions**: The gas that''s used for the block should be equal
    to or less than the gas that''s used for all of the transactions to be listed
    on the block'
  id: totrans-300
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**验证交易**：用于区块的燃气应该等于或小于列在区块上的所有交易使用的燃气'
- en: '**Apply the rewards, also known as incentives**: Miners are awarded'
  id: totrans-301
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**应用奖励，也称为激励**：矿工会获得奖励'
- en: '**Verify the state and block nonce**: Apply state changes to each transaction
    and define the new block'
  id: totrans-302
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**验证状态和区块nonce**：对每个交易应用状态更改并定义新的区块'
- en: Appending blocks to blockchain
  id: totrans-303
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将区块追加到区块链
- en: Now, we understand how transactions are added to a block. In this section, we'll
    look at how a block is added to the blockchain. We already know that the block
    header contains mixHash and nonce, which prove the sufficiency of the computations
    performed on the block. This sufficiency of computation is defined as the *total
    difficulty *a miner had to go through to create a new block. The algorithm for
    *total difficulty* or the *block difficulty* is called the PoW algorithm (also
    known as Ethash in Ethereum). A block is only valid if it contains PoW of a given
    difficulty (maybe soon to be replaced with PoS).
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们了解了如何将交易添加到区块中。在本节中，我们将看看如何将区块添加到区块链中。我们已经知道，区块头包含mixHash和nonce，它们证明了对区块执行的计算的充分性。计算的这种充分性被定义为矿工创建新区块所必须经历的*总难度*。
    *总难度*或*区块难度*的算法称为PoW算法（在以太坊中也称为Ethash）。只有包含给定难度的PoW的区块才有效（可能很快会被PoS替换）。
- en: A seed is calculated for each block by scanning the header of the block until
    that point in time. From the seed, a pseudo-random cache is computed and, from
    the cache, a dataset is generated. Full clients and miners need to store this
    dataset. Miners will randomly pick a few slices of the dataset and will hash them
    together into mixHash. Each miner will continue to repeat this set of generating
    mixHashes, until the mixHash matches the nonce. When the mixHash matches the nonce,
    the nonce is considered valid and hence the block is considered valid and can
    be added to the blockchain. Transactions that are part of this block are also
    considered to be confirmed.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 通过扫描截至该时间点的区块头，为每个区块计算一个种子。从种子计算出伪随机高速缓存，并从高速缓存生成数据集。全节点和矿工需要存储这个数据集。矿工将随机选择数据集的几个片段，并将它们哈希在一起形成mixHash。每个矿工将继续重复生成mixHash的这个集合，直到mixHash匹配nonce。当mixHash匹配nonce时，nonce被视为有效，因此区块被视为有效，并且可以添加到区块链中。该区块中的交易也被视为已确认。
- en: Remember, there are many miners on the network, and they get to hear about the
    transaction at different times. Hence, each miner is mining different transactions
    (this could also be based on the transaction fee associated with each transaction),
    and so is generating its own block. Since each miner is building its own block
    with its own set of transactions in it, how does the block that gets mined and
    validated come to a common agreement? They reach a common agreement based on the
    consensus.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，网络上有许多矿工，它们在不同的时间听到交易。因此，每个矿工都在挖掘不同的交易（这也可能基于每笔交易关联的交易费用），因此生成自己的区块。由于每个矿工都在自己的区块中构建自己的一组交易，那么被挖掘和验证的区块如何达成共识呢？他们根据共识达成共同协议。
- en: Consensus algorithm
  id: totrans-307
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 共识算法
- en: It is evident that miners perform validation of the transaction and build their
    own block of transactions. Once they solve the puzzle and create a new valid block,
    they broadcast it to the blockchain network. This is where the consensus algorithm
    of the blockchain appears, which will ensure that the blockchain network reaches
    a consensus about the ordering of the transactions and about whose valid block
    needs to be added to the blockchain. Remember, the decision about *whose block
    to be considered* as the next block on the blockchain also determines the reward
    to the miner. This is taken care of by consensus algorithms such as PoW or PoS.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 很明显，矿工执行交易验证并构建自己的交易区块。一旦他们解决难题并创建一个新的有效区块，他们会将其广播到区块链网络。这就是区块链共识算法出现的地方，它将确保区块链网络就交易排序和需要将哪个有效区块添加到区块链达成共识。记住，关于*将谁的区块视为*下一个区块的决定也确定了对矿工的奖励。这由
    PoW 或 PoS 等共识算法负责处理。
- en: 'Ethereum uses PoW and will move to PoS soon. With PoS being the consensus algorithm
    for the blockchain network, any miner who solves the problem first and broadcasts
    the valid block will be considered the winner. With PoS, the creator of a new
    block is chosen in a deterministic way, depending on its wealth, which is also
    defined as its stake. Interestingly, there are no block rewards in PoS and so
    the miners will be offered transaction fees. This is the reason why miners are
    forgers in PoS and not miners. The following table lists the differences between
    PoW and PoS:'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 以太坊使用 PoW，很快将转向 PoS。使用 PoS 作为区块链网络的共识算法，任何首先解决问题并广播有效区块的矿工将被视为赢家。在 PoS 中，新区块的创建者是以确定性方式选择的，取决于其财富，也被定义为其股份。有趣的是，在
    PoS 中没有区块奖励，因此矿工将获得交易费用。这就是为什么在 PoS 中矿工是锻造者而不是矿工的原因。以下表格列出了 PoW 和 PoS 之间的区别：
- en: '| **PoW** | **PoS** |'
  id: totrans-310
  prefs: []
  type: TYPE_TB
  zh: '| **PoW** | **PoS** |'
- en: '| PoW is the original consensus algorithm in a blockchain network. | The next
    consensus algorithm for a blockchain, such as Ethereum. |'
  id: totrans-311
  prefs: []
  type: TYPE_TB
  zh: '| PoW 是区块链网络中的原始共识算法。 | 下一个区块链的共识算法，例如以太坊。 |'
- en: '| Miners compete with each other to validate and propose a valid block to be
    added to the blockchain so that the miners get rewarded. | There are no miners
    and no mining rewards. Forgers (creators of new blocks) are chosen deterministically
    and are offered transaction fees. |'
  id: totrans-312
  prefs: []
  type: TYPE_TB
  zh: '| 矿工互相竞争以验证并提出一个有效区块添加到区块链中，以便矿工获得奖励。 | 没有矿工，也没有挖矿奖励。锻造者（创建新区块的人）是确定性选择的，并且获得交易费用。
    |'
- en: '| The first miner of the valid block is rewarded. | The creator of a block
    is determined by their share, or stake, in a currency. |'
  id: totrans-313
  prefs: []
  type: TYPE_TB
  zh: '| 第一个挖到有效区块的矿工将获得奖励。 | 区块的创建者由其在货币中的份额或股份确定。 |'
- en: '| Solving difficulty by many miners is expensive and needs computation power
    and energy. | The PoS method is greener and cheaper. |'
  id: totrans-314
  prefs: []
  type: TYPE_TB
  zh: '| 许多矿工解决难题是昂贵的，需要计算能力和能源。 | PoS 方法更环保更便宜。 |'
- en: '| The main benefits are the anti-DoS attack defenses and the low impact of
    stake on mining possibilities. Mining possibilities may result in cases, where
    the holders of a high stake, can turn out to be in charge of the blockchain network.
    | With PoS Casper, there will be a validator pool and network that will select
    the forger from this pool. Forgers need to submit a deposit to participate and
    be listed as a validator in the validator pool. If they violate or misbehave,
    they will be charged economically, their deposits will be taken away, and the
    forger will be delisted. |'
  id: totrans-315
  prefs: []
  type: TYPE_TB
  zh: '| 主要优点是抗 DoS 攻击防御和股份对挖矿可能性的低影响。挖矿可能性可能导致高股份持有者掌控区块链网络的情况。 | 使用 PoS Casper，将有一个验证者池和网络，将从该池中选择锻造者。锻造者需要提交存款以参与并列入验证者池中的验证者名单。如果他们违反或行为不端，将受到经济处罚，他们的存款将被收走，并且将被取消列名。
    |'
- en: '| The main disadvantages are huge expenditures, *uselessness* of computations,
    and 51% attacks, where a 51% attack means a user or a group is in charge of the
    majority of the mining power of the network. | For a validator to perform a 51%
    attack, they need to own 51% of the overall supply of the value (currency). So,
    for someone to attack Ethereum, the dollar amount is in billions, and its occurrence
    is far from reality. |'
  id: totrans-316
  prefs: []
  type: TYPE_TB
  zh: '| 主要缺点是巨额支出、计算的*无用*性和 51% 攻击，其中 51% 攻击意味着用户或群体控制了网络中大多数的挖矿算力。 | 要进行 51% 攻击，验证者需要拥有价值（货币）总供应量的
    51%。因此，要攻击以太坊，所需的美元金额在数十亿美元，而其发生远非现实。 |'
- en: 'The following outlines some of the consensus methods in detail:'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 下面详细概述了一些共识方法：
- en: '**PoW**: This is the pioneer consensus algorithm. It is used in Bitcoin and
    other cryptocurrencies. Consensus is an algorithm that processes blocks of transactions
    and adds them to blockchain when an agreement is reached between the nodes. Hence,
    for a network that follows PoW consensus, that network is following the PoW rules
    to establish various processing blocks of transactions and add them to blockchain.
    The process of generating PoW and to allow a node to add a block to the blockchain
    is known as *mining*, and nodes that participate in mining are called *miners*.
    Before a miner adds a block to blockchain, PoW requires miners to solve a complex
    business problem (also known as a puzzle). In exchange for solving the business
    problem (puzzle), miners are rewarded. In a currency-based blockchain like Bitcoin
    or Ethereum, they are awarded with cryptocurrency. Essentially, miners compete
    with other miners to find a correct hash for each hash function. As soon as a
    miner reaches the solution and finds the correct hash, it propagates it to all
    the other nodes in the P2P network. Other nodes verify the hash before adding
    the block (set of transactions) to the blockchain. To maintain block time, the
    difficulty level of the problem (puzzle) is dynamically changed by the network.
    In the event of multiple miners solving the problem at the same time, then the
    longest chain is considered the winner, as the longest chain is the most trustworthy
    chain.'
  id: totrans-318
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PoW**：这是最早的共识算法。它被用于比特币和其他加密货币。共识是一个处理交易区块并将其添加到区块链的算法，当节点之间达成一致意见时便将其完成。因此，对于遵循PoW共识的网络，该网络会依照PoW规则来建立各种交易区块，并将其添加到区块链中。生成PoW并允许节点将区块添加到区块链的过程被称为*挖矿*，参与挖矿的节点被称为*矿工*。在矿工将一个区块添加到区块链之前，PoW要求矿工解决一个复杂的业务问题（也称之为谜题）。作为解决业务问题（谜题）的交换，矿工会获得奖励。在类似比特币或以太坊这样的货币型区块链中，他们会被授予加密货币。基本上，矿工与其他矿工竞争，以找到每个哈希函数的正确哈希。一旦一名矿工找到解决方案并找到正确的哈希，它会将其传播到P2P网络中的所有其他节点。其他节点在将区块（交易集）添加到区块链之前验证哈希。为了维持区块时间，网络会动态调整问题（谜题）的难度级别。如果多个矿工同时解决问题，那么最长的链被认为是获胜者，因为最长的链是最可信赖的链。'
- en: It solves the double spending problem, but is slow and costly from an energy
    and fee perspective, and not considered scalable.
  id: totrans-319
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这解决了双重支付问题，但从能源和费用的角度来看，它是慢且昂贵的，也不被认为是可扩展的。
- en: '**PoS**: This is an alternative to PoW, suggested in 2011, and was first implemented
    by Peercoin (2012). In PoS, the miner’s probability to mine depends on the stake
    (coins) the miners own in the system. For example, a miner with 15% of the stake
    (coins) has a 15% probability of mining the next block. It is expensive to attack
    a blockchain network based on PoS consensus, and it is energy efficient as well.
    Hence, in PoS, the probability of creating a block and being rewarded is determined
    by the stake in the network. Essentially, the probability of creating a block
    is directly proportional to the stake in the underlying cryptocurrency.'
  id: totrans-320
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PoS**：这是比特币提出的另一种共识算法，建议于2011年，并首次由Peercoin（2012年）实施。在PoS中，矿工挖掘的几率取决于矿工在系统中拥有的股权（代币）。例如，拥有15%股权（代币）的矿工有15%的几率挖掘下一个区块。基于PoS共识的区块链网络是昂贵的攻击对象，同时也是节能的。因此，在PoS中，创建区块并获得奖励的几率取决于网络中的股权。基本上，创建区块的几率与底层加密货币的股权成正比。'
- en: But doesn't this mean the rich get richer? To prevent this, PoS follows randomization,
    that is, checking centralization, which may arise when a rich node gets richer and
    finally takes over the entire network. An attacker loses its stake for every attempt
    it makes to attach the blockchain network based on PoS. The problem with PoS is
    the *nothing at stake* problem, where a block generator can vote for multiple
    blockchain(s), also known as forks, and so, they can block the system from achieving
    consensus.
  id: totrans-321
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 但这是否意味着富者越富呢？为了防止这种情况，PoS采用了随机化技术，即检查中心化，这可能会在一个富裕节点变得更富并最终接管整个网络时引起。攻击者在试图基于PoS攻击区块链网络时会失去其股权。PoS存在*无所作为*问题，即区块生成者可以为多个区块链（也称为分叉）投票，因此，他们可以阻止系统达成共识。
- en: '**Proof of Elapsed Time** (**PoET**): Introduced by Intel in 2016, the PoET
    consensus algorithm suits permissioned blockchain networks such as Hyperledger
    sawtooth. The PoET algorithm is based on wait time, where the participating nodes
    (known as validators) wait for a randomly selected period. Essentially, validators
    generate a random wait time and sleep for that time. The first one that wakes
    up (also known as the one with the shortest wake time) will get the chance to
    commit a new block to the blockchain and propagate that information to all the
    nodes in the P2P network. With this random wait time, each node has a fair and
    similar probability to add blocks to the network. The PoET algorithm needs to
    take care of two tasks—firstly, it needs to ensure that participating nodes have
    really selected a random sleep time (not the shortest sleep time), and secondly,
    that the node has reached the sleep time and not woke up in the middle of the
    sleep time. PoET is cost-effective and offers equal opportunity to all participants.
    However, it is not suited for permissionless public blockchain networks.'
  id: totrans-322
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**时间过去证明**（**PoET**）：由英特尔在2016年推出，PoET共识算法适用于许可的区块链网络，如Hyperledger sawtooth。PoET算法基于等待时间，参与节点（称为验证者）等待一段随机选择的时间。验证者生成一个随机等待时间并在此期间进入休眠。第一个醒来的人（也被称为睡眠时间最短的人）将有机会向区块链提交新的区块并向P2P网络中的所有节点传播该信息。通过这种随机等待时间，每个节点都有公平且类似的概率向网络添加区块。PoET算法需要处理两个任务——首先，它需要确保参与节点确实选择了随机的休眠时间（而不是最短的休眠时间），其次，节点已经达到了休眠时间，没有在休眠时间中醒来。PoET具有成本效益，并为所有参与者提供平等的机会。但它不适用于无许可的公共区块链网络。'
- en: PoET results in a leader selection, where leadership is randomly distributed
    to the validators in the entire network. As the cost of the participation of the
    validators is low, it enlarges the population of validators, and therefore, enhances
    the robustness of the consensus algorithm.
  id: totrans-323
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: PoET导致了领导者的选择，领导权会随机分配给整个网络中的验证者。由于验证者参与的成本较低，它扩大了验证者的人口，因此增强了共识算法的健壮性。
- en: '**Byzantine** **Fault Tolerance** (**BFT**): This is not from the family of
    *Proof *algorithms. Its name is derived from the classic Byzantine general’s problem.
    An army, along with their Byzantine generals, surrounded a fort city. Generals
    are scattered around the fort city and, for an attack to succeed, they need to
    attack in unison. If all the generals do not attack in unison, they will lose
    the war. Now, they need to communicate with each other to reach a consensus so
    that they attack at the same time.'
  id: totrans-324
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**拜占庭容错**（**BFT**）：这不是*证明*算法家族的一部分。它的名字源于古典的拜占庭将军问题。一支军队与他们的拜占庭将军包围了一座城堡。将军们散布在城堡周围，要想成功进攻，他们必须一起攻击。如果所有将军不一起攻击，他们就会输掉战争。现在，他们需要相互通信达成共识，以便同时发动攻击。'
- en: In technical terms, it needs a system with several peer nodes to reach a consensus,
    even if there are few attackers and malicious nodes trying to influence the nodes.
    The Practical Byzantine Fault Tolerance algorithm can help solve the BFT.
  id: totrans-325
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从技术角度来说，需要一个拥有多个对等节点的系统来达成共识，即使有少数攻击者和恶意节点试图影响这些节点。实用的拜占庭容错算法可以帮助解决BFT。
- en: '**Practical Byzantine** **Fault Tolerance** (**PBFT**): Hyperledger Fabric
    uses this consensus mechanism. PBFT offers a Byzantine state machine replication
    that is designed to tolerate malicious nodes (Byzantine faults). All the nodes
    are sequentially ordered, where one node is declared as the leader node (primary
    node) and other nodes are known as follower nodes (secondary/backup nodes). Any
    node will become a leader by transitioning from follower node to leader node,
    mostly via a round-robin algorithm. All nodes communicate and need to perform
    two tasks—firstly, they need to verify that the message came from a specific peer
    node, and secondly, they need to verify and ensure that the message was not modified
    during its communication. All nodes will reach a consensus, irrespective of the
    state of the network, using majority rule. The entire network is based on the
    assumption that no more than one-third of the network nodes are malicious. The
    more nodes, the more secure the network will be. It has the following phases:'
  id: totrans-326
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**拜占庭容错**实用性（**PBFT**）：Hyperledger Fabric采用这种共识机制。PBFT提供了一种设计用于容忍恶意节点（拜占庭故障）的拜占庭状态机复制。所有节点都有顺序排序，其中一个节点被宣布为领导节点（主节点），其他节点被称为追随者节点（次要/备用节点）。任何节点都可以通过从追随者节点转变为领导者节点，大多数是通过循环算法，成为领导者。所有节点需要执行两项任务，首先，他们需要验证消息来自特定对等节点，其次，他们需要验证并确保消息在传播过程中没有被修改。无论网络状态如何，所有节点都将达成共识并使用多数规则。整个网络都基于一个假设，即网络节点不会超过三分之一是恶意的。节点越多，网络就越安全。它具有以下阶段：'
- en: A client sends a request to a leader node
  id: totrans-327
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 客户端向领导节点发送请求
- en: Leader node propagates this message to all the follower (secondary) nodes
  id: totrans-328
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 领导节点将此消息传播给所有追随者（次要）节点
- en: All the nodes (leader and follower) will perform a task, as requested by the
    client, and send a response back to the client
  id: totrans-329
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 所有节点（领导者和追随者）都将执行客户端请求的任务，并向客户端发送响应
- en: The client will verify the responses and ensure that the request (attack or
    retreat) is served successfully when it receives *n + 1* replies with the same
    result, where *n* is the max number of malicious nodes
  id: totrans-330
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当客户端收到*n + 1*个相同结果的答复时（其中*n*是最大数量的恶意节点），客户端将验证响应并确保请求（攻击或撤退）成功服务
- en: This is also based on the fact that the nodes are deterministic. The final result
    is attained when all honest nodes reach an agreement on the order and collectively
    accept or reject the order.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 这也基于节点是确定性的事实。当所有诚实的节点就订单达成一致意见并集体接受或拒绝订单时，最终结果就被达成。
- en: Types of blockchain networks
  id: totrans-332
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 区块链网络的类型
- en: Broadly, there are two kinds of blockchain network—public and private. Both
    are P2P networks, where the ledger is distributed among those that can participate
    in the transaction. The ledger copy is replicated among participants, and those
    parties that can execute append-only transactions to the ledger will hold a copy
    of the ledger and will participate to reach a consensus to add a block to the
    blockchain. Along with being public or private, a blockchain can be both **permissionless**
    (such as Bitcoin or Ethereum) and **permissioned** (such as the Hyperledger blockchain
    framework)*.*
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 广义来说，有两种区块链网络——公共和私有。两者都是P2P网络，余额表分布在可以参与交易的人群之中。余额表副本在参与者之间复制，而那些可以执行只能追加在余额表上的交易的参与者会持有余额表的副本，并参与达成将一个区块添加到区块链的共识。除了公共或私有外，区块链也可以是**无需许可的**（比如比特币或以太坊）和**需许可的**（比如Hyperledger区块链框架）*.*
- en: A permissionless blockchain is also known as a public blockchain because anyone
    can join the network. Permissionless P2P systems do not require a set amount of
    peers to be online and are generally slower. Parties communicate on a permissionless
    blockchain without verifying the transacting parties' identities. Anyone can join
    a permissionless blockchain such as Ethereum and can perform read and write transactions.
    As the actors are not known, there are chances of malicious actors being in a
    network.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 无需许可的区块链也被称为公共区块链，因为任何人都可以加入网络。无需许可的P2P系统不需要设定一定数量的同行者在线并且一般较慢。在无需许可的区块链上，各方在不验证交易方身份的情况下进行通信。任何人都可以加入无需许可的区块链，比如以太坊，并进行读写交易。由于演员未知，网络中可能存在恶意演员的可能性。
- en: Permissioned networks are the blockchain networks where only pre-authorized
    users or organizations can perform write transactions. By virtue of the limited
    nodes, they are faster and inexpensive, can comply with regulations, and can easily
    be maintained. Pre-verification of the participating parties is mandatory for
    a permissioned blockchain and, hence, transacting parties are made. *Permissioned
    P2P networks have to guarantee uptime and require a high level of quality of service
    on communication links.* Permissioned blockchains such as Hyperledger Fabric ensure
    that only transacting parties are part of the transaction and that records of
    the transaction are displayed to only those participants and not to the whole
    network. Hence, capabilities such as data privacy, immutability, and security
    are the primary capabilities that Hyperledger offers to enterprises.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 有权限网络是仅允许预授权用户或组织执行写入交易的区块链网络。由于节点有限，它们更快速、更经济，可以符合监管要求，并且易于维护。必须对参与方进行预验证，因此交易双方是已知的。*有许可P2P网络必须保证正常运行，并且在通信链路上需要高水平的服务质量。*像Hyperledger
    Fabric这样的有许可区块链确保只有交易各方参与交易，并且交易记录仅向这些参与者显示，而不是向整个网络显示。因此，数据隐私、不可变性和安全性是Hyperledger为企业提供的主要功能。
- en: 'Although there are two kinds of blockchain network—public and private – on
    permissions, they can be classified as PUBLIC AND PERMISSIONLESS, PUBLIC AND PERMISSIONED,
    PRIVATE AND PERMISSIONLESS, and PRIVATE AND PERMISSIONED, as shown in the following
    diagram:'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管有两种区块链网络——公共和私有——根据权限，它们可以被分类为**公共和无许可、公共和有许可、私有和无许可以及私有和有许可**，如下图所示：
- en: '![](img/05882b5d-0343-482b-b2d8-5ae14475e27e.png)'
  id: totrans-337
  prefs: []
  type: TYPE_IMG
  zh: '![](img/05882b5d-0343-482b-b2d8-5ae14475e27e.png)'
- en: Types of blockchain
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链类型
- en: 'Blockchain networks based on permissions can be classified as follows:'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 基于权限的区块链网络可以分类如下：
- en: '**Public and permissionless blockchain**: These are open and transparent and
    offer disintermediation and anonymity. They are trustless and offer immutability.
    This means they are *open* for anybody to join the blockchain network. The user
    (on a node) can enable his/her system with the required software and join the
    blockchain network. Public blockchain removes *intermediaries*, which reduces
    the cost, reduces the time it takes for reconciliation, and offers *transparency*
    in the network. Public blockchains are *trustless*, and trust is in the consensus.
    Transactions are replicated to each participating node, and consensus takes care
    of validation and synchronizes the transactions to be added to the blockchain.
    This allows *trustless* parties to execute transactions with confidence. The more
    nodes there are, the more impossible it becomes to undo a transaction; hence,
    public blockchain is immutable. Although transactions can be read by anyone, the
    identities of users are protected, hence offering *anonymity*.'
  id: totrans-340
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**公共和无许可区块链**：这些是开放透明的，提供去中心化和匿名性。它们是无信任的，并提供不可变性。这意味着任何人都可以加入区块链网络。用户（在节点上）可以使用所需的软件启用其系统并加入区块链网络。公共区块链消除了中间人，从而降低了成本，缩短了协调所需的时间，并提供了网络的透明性。公共区块链是无信任的，信任在共识中。交易被复制到每个参与的节点，并且共识负责验证和同步要添加到区块链的交易。这使得不信任的各方可以放心地执行交易。节点越多，撤销交易就越不可能；因此，公共区块链是不可变的。尽管任何人都可以阅读交易，但用户的身份是受到保护的，因此提供了匿名性。'
- en: '**Public and permissioned blockchain**: These are scalable, cost-effective,
    transparent, and offer disintermediation and anonymity. Public and permissioned
    blockchain allows anyone to read transactions, but only a few permissioned users
    can write transactions (for example, government employees'' salaries and real-estate
    registries). Alternatively, it can allow a few to read transactions and everyone
    to write transactions (for example, voting). Public and permissioned blockchain
    is designated for such use cases where people or authorities (such as a designated
    employee or institution) sanction a transaction with data that''s viewable by
    the public. If a public and permissioned blockchain is of the type where it allows
    anyone to read it and only a few permissioned participants to write on it, then
    such a system does not need to be based on expensive consensus algorithms such
    as PoW. Such blockchain networks can be scalable. Not everyone will participate
    for validation, and a validator is chosen. Hence, it is not slow and costly compared
    to a public and permissionless network. Although there are no intermediaries,
    only a few institutes can read or write.'
  id: totrans-341
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**公共和有权限的区块链**：这些区块链是可扩展的、成本效益高、透明的，并且提供了非居间和匿名性。公共和有权限的区块链允许任何人读取交易，但只有少数有权限的用户可以编写交易（例如，政府雇员的工资和房地产登记）。另外，它可以允许少数人读取交易并让所有人编写交易（例如，投票）。公共和有权限的区块链被指定用于这样的用例，即人们或当局（例如指定的雇员或机构）用公开可见的数据批准交易。如果公共和有权限的区块链属于允许任何人读取但只有少数有权限的参与者可以编写的类型，那么这样的系统就不需要基于昂贵的共识算法，比如PoW。这样的区块链网络是可扩展的。不是每个人都会参与验证，只有一个验证者被选择。因此，与公共和无权限的网络相比，它不会慢且昂贵。虽然没有中间人，但只有少数机构能够读取或编写。'
- en: '**Private and permissionless blockchain**: Only individual or selected members
    can run a full node to transact, validate, and read transactions. A few can execute
    write transactions and validate transactions, while everyone can read. It can
    be applied to use cases that include audits and are mostly adopted by enterprises
    that want to explore blockchain within the enterprise. All of the permissions
    are central to an enterprise; hence, they are not decentralized, and they can
    just be distributed. On the positive side, it allows the enterprise to be compliant
    and meet privacy needs to implement blockchain. Moreover, it allows cryptographic
    auditing. However, the whole idea of a decentralized network is lost.'
  id: totrans-342
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**私人和无权限的区块链**：只有个人或被选中的成员可以运行全节点进行交易、验证和读取交易。少数人可以执行编写交易和验证交易，而所有人都可以读取。它可以应用于包括审计在内的用例，并且大多数被企业采用，这些企业希望在企业内部探索区块链。所有的权限都是企业的核心；因此，它们不是去中心化的，它们只能被分布。在积极的一面，它允许企业合规并满足隐私需求来实施区块链。此外，它允许加密审计。然而，整个去中心化网络的理念都丢失了。'
- en: '**Private and permissioned blockchain**: Public blockchain leads to scenarios
    where we run one full node, which means the node is performing computation for
    all of the applications for that network. This slows down the performance of the
    blockchain network. This can be a fit for some use cases; however, for enterprise
    requirements, public blockchain is not the answer. Enterprises are looking for
    a blockchain network where a node performs only those computations that are required
    for given applications. In addition, they need a blockchain network where parties
    are identifiable (not necessarily trusted) and permissions can be granted. In
    addition, the privacy of data can be guaranteed between a certain set of participants,
    even if all of the participants are on the same blockchain network. Furthermore,
    consensus is controlled by a predefined set of nodes, which leads to a faster
    and low-cost business network.'
  id: totrans-343
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**私人和有权限的区块链**：公共区块链导致我们运行一个全节点的情景，这意味着节点为该网络所有应用程序执行计算。这会降低区块链网络的性能。这可能适用于一些用例；然而，对于企业要求来说，公共区块链不是答案。企业正在寻找一个区块链网络，其中一个节点只执行给定应用程序所需的计算。此外，他们需要一个区块链网络，其中参与方是可识别的（不一定是受信任的），并且可以授予权限。此外，即使所有参与者都在同一个区块链网络上，也可以保证一定组参与者之间的数据隐私。此外，共识由预定义的节点集控制，这导致了更快速且低成本的商业网络。'
- en: The answer to enterprise needs is a private and permissioned blockchain network.
    Private and permissioned blockchain can also be termed a consortium blockchain.
    A consortia (a consortium of members) controls them. Nodes are predefined and
    access rights are defined. Examples of such blockchain networks are R3 and Hyperledger
    Fabric.
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 对企业需求的答案是私有和有权限的区块链网络。私有和有权限的区块链也可以称为联盟区块链。它们由一个联盟（成员的联盟）控制。节点是预定义的，访问权限被定义。此类区块链网络的示例包括R3和Hyperledger
    Fabric。
- en: 'Private and permissioned blockchain/consortia offer the following:'
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 私有和有权限的区块链/联盟提供以下内容：
- en: '**Better governance than public blockchain**: Public blockchain networks lack
    the governance to ensure an effective evolution of the blockchain network (for
    example, updates, changes to operational mechanisms, and consensus). As a result,
    it''s slow to rectify defects and hinders innovation. On the other hand, consortiums
    can move fast as like-minded enterprises can quickly decide on innovations and
    evolve the business network to meet the dynamic needs of businesses.'
  id: totrans-346
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**比公共区块链更好的治理**：公共区块链网络缺乏治理，无法确保区块链网络的有效演进（例如，更新、运营机制的更改和共识）。因此，纠正缺陷速度较慢，阻碍了创新。另一方面，由于志同道合的企业可以迅速决定创新并发展业务网络以满足企业的动态需求，所以联盟可以迅速行动。'
- en: '**Cost-effective**: The upfront cost for public blockchain is low; however,
    it gets expensive for nodes that are initiating transactions. Initial infrastructure
    costs might be low, but the operational cost increases over time, which is reflected
    in the increased cost of transactions. As public networks are trustless, trust
    lies in the consensus mechanism. Expensive consensus mechanisms such as PoW and
    PoS are not applicable. In a consortium, like-minded trusted parties are involved.
    Hence, costly consensus mechanisms are not required. In addition, a consortium
    does not include transaction fees. In many ways, a consortium is not only cost-effective,
    but also faster.'
  id: totrans-347
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**成本效益**：公共区块链的前期成本较低；然而，对于发起交易的节点来说，它变得昂贵。初始基础设施成本可能较低，但随着时间的推移，运营成本增加，这反映在交易成本的增加上。由于公共网络是无信任的，信任依赖于共识机制。昂贵的共识机制，如PoW和PoS，不适用。在联盟中，涉及到志同道合的信任方。因此，不需要昂贵的共识机制。此外，联盟不包括交易费用。在许多方面，联盟不仅成本效益高，而且速度更快。'
- en: '**Privacy and security**: A consortium or private and permissioned blockchain
    network is highly secure. The access control layer is a first-class citizen for
    consortiums and ensures that a defined set of people get access to the network.
    Access is defined for reading, writing, and deploying code (smart contract/chaincode)
    and validating transactions. Public blockchain are secured by *miners*—also called
    **validators**. They solve complex problems (mining) to validate the transaction
    and, in return, receive incentives and rewards. In a private and permissioned
    network, security is ensured by the predictive distribution of control over the
    creation of blocks among identifiable nodes that are highly unlikely to collude.
    Malicious colluding and 51% attacks are not applicable as such malicious activities
    can be easily detected and the parties involved will be penalized based on consortium
    governing rules. Transactions are not visible to everyone. This offers enterprises
    and businesses the ability to transact with confidence, with trust in privacy
    offered by the business network.'
  id: totrans-348
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**隐私与安全**：联盟或私有和有权限的区块链网络具有极高的安全性。访问控制层对于联盟来说是一级公民，并确保一组定义明确的人员访问网络。访问权限定义为读取、写入和部署代码（智能合约/链代码）以及验证交易。公共区块链由*矿工*（也称为**验证者**）保护。他们解决复杂问题（挖矿）以验证交易，并作为回报获得激励和奖励。在私有和有权限的网络中，安全性由可识别的节点对区块的创建具有预测性的分布来保证，这些节点极不可能串通。恶意串通和51%攻击不适用，因为这种恶意行为很容易被检测到，涉及的各方将根据联盟管理规则受到处罚。交易对所有人不可见。这为企业提供了与信任商业网络提供的隐私信任的能力进行交易。'
- en: 'The following table highlights the similarities and differences between different
    types of blockchain from the permissions perspective:'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格突出显示了从权限角度来看不同类型的区块链之间的相似性和差异：
- en: '| **Public and Permissionless** | **Public and Permissioned** | **Private and
    Permissionless** | **Private and Permissioned** |'
  id: totrans-350
  prefs: []
  type: TYPE_TB
  zh: '| **公共和无权限** | **公共和有权限** | **私有和无权限** | **私有和有权限** |'
- en: '| Open and transparent. | Open and restricted. | Restricted yet read transparent.
    | Restricted (hybrid approach). |'
  id: totrans-351
  prefs: []
  type: TYPE_TB
  zh: '| 公开且透明的。 | 公开且受限的。 | 受限但透明读取。 | 受限（混合方法）。 |'
- en: '| Write all and read all. | Write all and read restricted. | Write restricted
    and read all. | Write restricted and read restricted. |'
  id: totrans-352
  prefs: []
  type: TYPE_TB
  zh: '| 写入和读取全部。 | 写入全部，读取受限。 | 写入受限，读取全部。 | 写入受限，读取受限。 |'
- en: '| Everyone can join, transact, read, and audit. | Everyone can join and transact,
    but only permissioned users can read and audit. | Everyone can join, nobody can
    transact, and everyone can read and audit. | Nobody can join, transact, read,
    and audit. |'
  id: totrans-353
  prefs: []
  type: TYPE_TB
  zh: '| 每个人都可以加入、交易、读取和审计。 | 每个人都可以加入和交易，但只有获得许可的用户可以读取和审计。 | 每个人都可以加入，没有人可以交易，每个人都可以读取和审计。
    | 没有人可以加入、交易、读取和审计。 |'
- en: '| Anyone can download the protocol and participate with validate transactions.
    | Anyone who meets the predefined criteria can download the protocol and participate
    with validate transactions. | Anyone in the network can participate and validate
    transactions. However, this is only within the enterprise. | Only consortium members
    can validate the transaction. |'
  id: totrans-354
  prefs: []
  type: TYPE_TB
  zh: '| 任何人都可以下载协议并参与验证交易。 | 符合预定义标准的任何人都可以下载协议并参与验证交易。 | 网络中的任何人都可以参与和验证交易。但是，这仅限于企业内部。
    | 只有联盟成员可以验证交易。 |'
- en: 'The following table highlights the similarities and differences between different
    types of blockchain from a transaction and anonymity perspective:'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 下表突出了不同类型的区块链在交易和匿名性方面的相似之处和差异之处：
- en: '| **Public and Permissionless** | **Public and Permissioned** | **Private and
    Permissionless** | **Private and Permissioned** |'
  id: totrans-356
  prefs: []
  type: TYPE_TB
  zh: '| **公开且无许可** | **公开但有许可** | **私有且无许可** | **私有且有许可** |'
- en: '| Transactions are anonymous and transparent. | Transactions are anonymous
    and not read transparent. | Transactions are not anonymous and are read transparent.
    | Transactions are not anonymous and not transparent. |'
  id: totrans-357
  prefs: []
  type: TYPE_TB
  zh: '| 交易是匿名且透明的。 | 交易是匿名的，但不透明。 | 交易不是匿名的，但是透明的。 | 交易既不是匿名的，也不透明。 |'
- en: '| Write transactions can be authored or initiated by anyone; for example, I''m
    sending 10 Bitcoin to Bill. Everyone will know that 10 bitcoins were transacted.
    | Write transactions can be authored or initiated by anyone; for example, I''m
    casting my vote. However, whom I have cast my vote for can be counted by the authorized
    institution only. Another example is that a write can be performed by few and
    it can be read by all. | A write transaction is performed by few and it can be
    read by anyone. For example, an authorized party writes about the source of the
    inventory, and subsequent writes are performed by a few other intermediary parties
    or devices; however, it can be read by anyone. | A write transaction can be authored
    or initiated by authorized users; for example, I''m sending 10 USD to Bill. Authorized
    institutions will know that 10 USD was transacted. |'
  id: totrans-358
  prefs: []
  type: TYPE_TB
  zh: '| 写入交易可以由任何人撰写或发起；例如，我向比尔发送10比特币。每个人都会知道转移了10个比特币。 | 写入交易可以由任何人撰写或发起；例如，我正在投票。然而，我为谁投票可以由授权机构计数。另一个例子是，写入可以由少数人执行，但所有人都可以读取。
    | 写入交易由少数人执行，但任何人都可以读取。例如，授权方写入有关库存来源的信息，随后的写入由另外一些中间方或设备执行；但是，任何人都可以读取。 | 写入交易可以由授权用户撰写或发起；例如，我向比尔发送10美元。授权机构将知道转移了10美元。
    |'
- en: '| Everyone will participate in transaction validation, and the validators are
    not the chosen ones. | Nobody can participate in transaction validation, and the validators
    are the chosen ones. | Nobody can participate in transaction validation, and the
    validators are the chosen ones. | Nobody can participate in transaction validation,
    and the validators are the chosen ones. |'
  id: totrans-359
  prefs: []
  type: TYPE_TB
  zh: '| 每个人都将参与交易验证，验证者不是被选中的。 | 没有人可以参与交易验证，验证者是被选中的。 | 没有人可以参与交易验证，验证者是被选中的。 |
    没有人可以参与交易验证，验证者是被选中的。 |'
- en: '| Truly democratic: full equity. | Full write equity. | Full read equity. |
    Restricted. |'
  id: totrans-360
  prefs: []
  type: TYPE_TB
  zh: '| 真正的民主：完全的权益。 | 全部写入权益。 | 全部读取权益。 | 受限制的。 |'
- en: '| Transaction approval is long. It usually takes minutes. | Transaction approval
    is long. It usually takes minutes. | Transaction approval is short. | Transaction
    approval is short. |'
  id: totrans-361
  prefs: []
  type: TYPE_TB
  zh: '| 交易批准时间长。通常需要几分钟。 | 交易批准时间长。通常需要几分钟。 | 交易批准时间短。 | 交易批准时间短。 |'
- en: 'The following table shows the **consensus** and **use case** for different
    types of blockchain:'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 下表显示了不同类型区块链的**共识**和**用例**：
- en: '| **Public and Permissionless** | **Public and Permissioned** | **Private and
    Permissionless** | **Private and Permissioned** |'
  id: totrans-363
  prefs: []
  type: TYPE_TB
  zh: '| **公开和无需许可** | **公开和需要许可** | **私密和无需许可** | **私密和需要许可** |'
- en: '| Open and decentralized. | Open and controlled. | Restricted. | Closed and
    restricted. |'
  id: totrans-364
  prefs: []
  type: TYPE_TB
  zh: '| 开放和去中心化。 | 开放和可控制。 | 受限制的。 | 封闭和受限制的。 |'
- en: '| Anyone can run a full node to transact, validate, and read transactions.
    | Not just anyone can run a full node to transact, validate, and read transactions.
    Everyone can execute write transactions, while few can validate and read transactions.
    | Only individual or selected members can run a full node to transact, validate,
    and read transactions. A few can execute write transactions and validate transactions,
    while everyone can read. | Only members of the consortium can run a full node
    to transact, validate, and read transactions. In addition, only permissioned users
    can read. |'
  id: totrans-365
  prefs: []
  type: TYPE_TB
  zh: '| 任何人都可以运行全节点来交易、验证和读取交易。 | 不只是任何人都可以运行全节点来交易、验证和读取交易。所有人都可以执行写交易，而少数人可以验证和读取交易。
    | 只有个人或选定的成员可以运行全节点来交易、验证和读取交易。少数人可以执行写交易和验证交易，而所有人都可以读取。 | 只有联盟成员可以运行全节点来交易、验证和读取交易。此外，只有经许可的用户可以读取。
    |'
- en: '| For example, Bitcoin, Ethereum, and Litecoin. | For example, Ethereum. |
    For example, Hyperledger Fabric. | For example, Hyperledger Fabric, R3, and Corda.
    |'
  id: totrans-366
  prefs: []
  type: TYPE_TB
  zh: '| 例如，比特币、以太坊和莱特币。 | 例如，以太坊。 | 例如，超级账本 Fabric。 | 例如，超级账本 Fabric，R3 和 Corda。
    |'
- en: '| Consensus - PoW. | PoS, PoA. | PBFT. | PBFT and FBA. |'
  id: totrans-367
  prefs: []
  type: TYPE_TB
  zh: '| 共识 - PoW。 | PoS，PoA。 | PBFT。 | PBFT 和 FBA。 |'
- en: '| Use case—cryptocurrency, video games. | Use case—voting, poll records. |
    Use case—supply chain provenance, government record keeping, and assessor records.
    | Use case—tax returns, consortium, federations. |'
  id: totrans-368
  prefs: []
  type: TYPE_TB
  zh: '| 使用案例—加密货币，视频游戏。 | 使用案例—投票，民意调查记录。 | 使用案例—供应链溯源，政府记录保存和评估记录。 | 使用案例—纳税申报，联合体，联盟。
    |'
- en: 'The advantages of **public and permissionless** blockchain are as follows:'
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: '**公开和无需许可** 区块链的优势如下：'
- en: There's no infrastructure costs for creating and running **decentralized applications**
    (**dApps**)
  id: totrans-370
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建和运行**去中心化应用**（**dApps**）的基础设施成本为零。
- en: There's no need for a trusted party or intermediary; there is no intermediary
  id: totrans-371
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无需可信任方或中介；没有中介。
- en: The network is open and transparent and offers anonymity
  id: totrans-372
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络开放透明，提供匿名性。
- en: The network offers trustlessness and immutability
  id: totrans-373
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络提供了无需信任的和不可变的特性。
- en: 'The advantages of **public and permissioned** blockchain are as follows:'
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: '**公开和需要许可** 区块链的优势如下：'
- en: No infrastructure costs for creating and running dApps
  id: totrans-375
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建和运行 dApps 的基础设施成本为零。
- en: No need for a trusted party or intermediary; there is no intermediary
  id: totrans-376
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无需可信任方或中介；没有中介。
- en: Scalable, fast, and lower cost
  id: totrans-377
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可扩展、快速且成本较低。
- en: 'The advantages of **private and permissionless **blockchain are as follows:'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: '**私密和无需许可** 区块链的优势如下：'
- en: Cost of transaction is reduced
  id: totrans-379
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 交易成本降低。
- en: No need for reconciliations
  id: totrans-380
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无需协调。
- en: Simplified document handling
  id: totrans-381
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 简化文档处理。
- en: Reduced data redundancy
  id: totrans-382
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据冗余降低。
- en: Scales better
  id: totrans-383
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 规模扩大。
- en: Better compliance with regulations
  id: totrans-384
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更好地遵守法规。
- en: Automated compliance functionalities
  id: totrans-385
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动合规功能。
- en: Enables finality
  id: totrans-386
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现了确定性。
- en: 'The advantages of **private and permissioned** blockchain are as follows:'
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: '**私密和需要许可** 区块链的优势如下：'
- en: There's better governance than public blockchain
  id: totrans-388
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 比公共区块链拥有更好的治理。
- en: The cost of transactions is reduced. There is no need for reconciliations.
  id: totrans-389
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 交易成本降低。无需协调。
- en: Document handling is simplified and data redundancy is reduced
  id: totrans-390
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文档处理简化，数据冗余减少。
- en: As participants are preapproved and identities are known, there is better privacy
    and security
  id: totrans-391
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 参与者已预先批准且身份已知，隐私和安全性更好。
- en: Consortia is into decision-making and not using a single party
  id: totrans-392
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Consortia 专注于决策，并不使用单一方。
- en: There are no single points of failure
  id: totrans-393
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不存在单点故障。
- en: It scales better and adheres to compliance with regulations
  id: totrans-394
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它的规模更大，遵守法规合规性。
- en: It enables finality
  id: totrans-395
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它实现了确定性。
- en: 'The disadvantages of **public and permissionless** blockchain are as follows:'
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: '**公开和无需许可** 区块链的劣势如下：'
- en: '**Scalability**: There is a limitation on the number of transactions that can
    be created, which can often reach to minutes at the peak period. Hence, such decentralized
    systems are not scalable.'
  id: totrans-397
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可扩展性**：对于可以创建的交易数量有限制，通常在高峰期间可达到几分钟。因此，此类去中心化系统不具有可扩展性。'
- en: '**Slowness and higher cost**: This includes the following:'
  id: totrans-398
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**缓慢和成本更高**：具体包括以下内容：'
- en: Everyone will participate in validation, and a validator is not chosen. Consensus
    can be reached when every node executes the same task, such as executing the code
    (smart contract) or validating the transaction. This replication is slow, time-consuming,
    and costly from many perspectives, such as storage, electricity, and processing
    power.
  id: totrans-399
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个人都会参与验证，并且没有选定验证器。当每个节点执行相同任务时，如执行代码（智能合约）或验证交易时，可以达成共识。这种复制过程是缓慢、耗时且成本高昂，例如存储、电力和处理能力等多个方面。
- en: As the number of transactions increases, so does the cost of executing those
    transactions, which leads to the clogging of miners to execute high-value transactions,
    and so, the system becomes slow and costly.
  id: totrans-400
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 随着交易数量增加，执行这些交易的成本也会增加，这导致矿工拥挤执行高价值交易，因此系统变得缓慢和昂贵。
- en: '**Identity is anonymous**: Anonymous participants could be malicious.'
  id: totrans-401
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**身份是匿名的**：匿名参与者可能是恶意的。'
- en: '**Immutability is a challenge**: Although immutability of transactions and
    blocks is the major feature of public blockchain, immutability of code (smart
    contract) is a challenge for the blockchain network. Blockchain considers smart
    contract deployment as a transaction and as they are transactions, they are immutable.
    Hence, any bug or issue or a code loop cannot be corrected. This means that, smart
    contracts need to be meticulously built and tested before being deployed and should
    have operations to **KILL** (also known as **shutdown**) the invocation to stop
    further damages.'
  id: totrans-402
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**不可变性是一个挑战**：虽然事务和区块的不可变性是公共区块链的主要特征，但代码（智能合约）的不可变性对区块链网络来说是一个挑战。区块链认为智能合约部署是一个事务，因为它们是事务，所以它们是不可变的。因此，任何错误或问题或代码循环都无法纠正。这意味着智能合约在部署之前需要经过精心构建和测试，并且应具有**KILL**（也称为**关闭**）调用的操作以停止进一步的损害。'
- en: '**Finality :** There''s no finality and 51% attack (theory).'
  id: totrans-403
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**终局性：**没有终局性和 51% 攻击（理论）。'
- en: '**Can lead to centralization**: To realize the tokenized benefits of public
    blockchain, nodes operate as full nodes. A full node means the nodes carry a full
    copy of the blockchain. As the blockchain network grows in size, it becomes costly
    for smaller players and individual nodes to operate as full nodes. Only bigger
    players will then be able to operate as full nodes, and such scenarios can lead
    to centralization, which can influence the blockchain network.'
  id: totrans-404
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可能导致集中化**：要实现公共区块链的代币化优势，节点要作为完整节点运行。完整节点意味着节点携带了完整的区块链副本。随着区块链网络规模的增长，对于较小的参与者和个体节点来说，作为完整节点运行变得成本高昂。只有较大的参与者才能作为完整节点运行，这种情况可能导致集中化，从而影响区块链网络。'
- en: 'The disadvantages of **public and permissioned** blockchain are as follows:'
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: '**公共和有许可** 区块链的缺点如下：'
- en: Identity is anonymous—participants, being anonymous, can be malicious
  id: totrans-406
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 身份是匿名的，参与者匿名，可能恶意行为
- en: Immutability is a challenge
  id: totrans-407
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不可变性是一个挑战
- en: There's no finality and 51% attack (theory)
  id: totrans-408
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有终局性和 51% 攻击（理论）
- en: It can lead to centralization
  id: totrans-409
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这可能导致集中化
- en: 'The disadvantages of **private and permissionless** blockchain are as follows:'
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: '**私有和无许可** 区块链的缺点如下：'
- en: It still has an intermediary and hence it is not decentralized.
  id: totrans-411
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它仍然有中间人，因此不是去中心化的。
- en: It is centralized and hence it is not decentralized. However, it can be distributed.
  id: totrans-412
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它是中心化的，因此不是去中心化的。但是，它可以是分布式的。
- en: As participants are not preapproved, identities are not known, although malicious
    users cannot perform write transactions and can only read information.
  id: totrans-413
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 参与者未经事先批准，身份未知，尽管恶意用户不能执行写入交易，只能读取信息。
- en: 'The disadvantages of **private and permissioned** blockchain are as follows:'
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: '**私有和有许可** 区块链的缺点如下：'
- en: '**Not fully distributed**: It still has an intermediary and hence it is not
    fully distributed.'
  id: totrans-415
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**不完全分布式**：它仍然有中间人，因此不是完全分布式的。'
- en: '**Consortium formation is a challenge**: Formation of a consortium needs like-minded
    enterprises to collaborate over common business problems. Along with defining
    the structure and operation and governance model of the consortium, there are
    various questions that need to be answered for a formal setup of a consortium:'
  id: totrans-416
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**联合体形成是一个挑战**：联合体的形成需要志同道合的企业共同合作解决共同业务问题。除了定义联合体的结构、运作和治理模型外，还有许多问题需要回答以正式建立一个联合体：'
- en: How to ensure that the consortia does not lead to concentration of power?
  id: totrans-417
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何确保联合体不会导致权力集中？
- en: Who controls the consortium?
  id: totrans-418
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 谁控制了联合体？
- en: Do primary consortium members benefit more than late joiners?
  id: totrans-419
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主要财团成员是否比后来加入的成员更有利？
- en: Who benefits from the already existing infrastructure? Does this create confusion
    and infrastructure dependency or locking for new joiners or late joiners?
  id: totrans-420
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 谁受益于已经存在的基础设施？这是否给新成员或后来加入者造成混乱和基础设施依赖或锁定？
- en: Who decides on new member inclusion or any member exclusion?
  id: totrans-421
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 谁决定新成员的加入或任何成员的排除？
- en: Who decides on the inclusion/exclusion of non-core members to the consortium?
  id: totrans-422
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 谁决定财团非核心成员的加入/排除？
- en: How will the operational decisions be executed?
  id: totrans-423
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运营决策将如何执行？
- en: How will the consortium be financed?
  id: totrans-424
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 财团将如何融资？
- en: How are disputes realized?
  id: totrans-425
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 争端如何实现？
- en: '**Dispute resolution and arbitrators**: This includes the following:'
  id: totrans-426
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**争端解决和仲裁员**：包括以下内容：'
- en: As a consortium includes various enterprises and discrete parties, it has its
    own business complexities. These complexities can lead to disputes. Hence, a consortium
    must have arbitrators to settle disputes. This means there is a need for an arbitration
    function for a consortium, which takes care of participation contracts (via a
    legal document) between members of the consortia.
  id: totrans-427
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 联合企业和各方的财团具有自己的业务复杂性，这些复杂性可能导致争端。因此，一个财团必须有仲裁员来解决争端。这意味着财团需要一个仲裁功能，负责处理财团成员之间的参与合同（通过法律文件）。
- en: A consortium can also need smart contract (chaincode) auditors to verify the
    smart contracts and verify the interface and integration of the smart contract
    with external applications and data sources. Such independent auditors will offer
    assurance to the consortium and help in surfacing vulnerabilities.
  id: totrans-428
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个财团还可能需要智能合约（链代码）审计员来验证智能合约以及智能合约与外部应用程序和数据源的接口和集成。这样的独立审计员将为财团提供保证，并帮助凸显漏洞。
- en: In this section, we compared different types of blockchain and learned about
    their advantages, disadvantages, and so on. In the next section, the emphasis
    will be on the layered structure of the blockchain architecture.
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们比较了不同类型的区块链，并了解了它们的优缺点等。在下一节中，重点将放在区块链架构的分层结构上。
- en: Blockchain platform
  id: totrans-430
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 区块链平台
- en: Until now, we have explored different types of blockchain network. In this section,
    we will quickly look at two major blockchain platforms—Ethereum and Hyperledger
    Fabric.
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经探讨了不同类型的区块链网络。在本节中，我们将快速看一下两个主要的区块链平台—以太坊和超级账本Fabric。
- en: 'Following is the overview of these two platforms:'
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是这两个平台的概述：
- en: '**Ethereum**: It''s an open source, public blockchain network. It is an extension
    of the core blockchain concept and now supports applications beyond currencies.
    Developers can build decentralized applications (via smart contracts) and can
    even build **decentralized autonomous organizations **(**DAOs**). It is a generic
    platform, and transactions are validated by PoW consensus. Ethereum is used as
    an idea for **business-to-consumer** (**B2C**) use cases and applications. It''s
    a public blockchain; hence, all of the participants can access the ledger. It
    supports Solidity and has built-in currency (Ether).'
  id: totrans-433
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**以太坊**：这是一个开源的、公共的区块链网络。它是核心区块链概念的延伸，现在支持超越货币的应用。开发者可以构建去中心化应用程序（通过智能合约），甚至可以构建**去中心化自治组织**（**DAOs**）。它是一个通用平台，交易通过PoW共识验证。以太坊用作**企业对消费者**（**B2C**）用例和应用程序的想法。这是一个公共区块链，因此所有参与者都可以访问账本。它支持Solidity，并具有内置货币（以太币）。'
- en: '**Hyperledger Fabric**: It is a platform for enterprise applications. This
    platform is open source and modular and runs the BFT consensus algorithm. Hyperledger
    does not truly have a consensus mechanism. Due to its pluggable architecture,
    consensus can be plugged to it, based on the use case. Ledger is not public and
    it''s mostly suited for **business-to-business **(**B2B**) use cases or applications.
    Chaincode (also known as smart contracts) can be written in standard languages
    such as Java, Go, and Node.js. It does not have a built-in currency.'
  id: totrans-434
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**超级账本Fabric**：这是一个面向企业应用的平台。这个平台是开源和模块化的，并运行BFT共识算法。超级账本并不真正有一个共识机制。由于其可插拔的架构，共识可以根据用例插入其中。账本不是公共的，它更适用于**企业对企业**（**B2B**）的用例或应用程序。链代码（也称为智能合约）可以用标准语言编写，如Java、Go和Node.js。它没有内置货币。'
- en: '**Operations** include the following:'
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: '**运营**包括以下内容：'
- en: '**Ethereum**: It is a public blockchain, where participants (nodes) can participate
    any time'
  id: totrans-436
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**以太坊**：这是一个公共区块链，参与者（节点）可以随时参与。'
- en: '**Hyperledger Fabric**: It is a private blockchain, where participants (nodes)
    are given permission to participate'
  id: totrans-437
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**超级账本超级账本Fabric**：这是一个私有区块链，参与者（节点）被授予权利参与。'
- en: '**Consensus** is as follows:'
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: '**共识**如下：'
- en: '**Ethereum**: Roles played by each participating node are similar. All of the
    nodes need to reach consensus for a transaction to commit. Every node needs to
    participate in consensus, even if that node is participating in a transaction.
    Ethereum consensus is based on PoW algorithms or a hybrid of PoW/PoS (called Casper).'
  id: totrans-439
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**以太坊**：每个参与节点扮演的角色是相似的。所有节点都需要就一个交易达成共识才能提交。即使参与交易的节点也需要参与共识。以太坊的共识基于PoW算法或PoW/PoS的混合形式（称为Casper）。'
- en: '**Hyperledger Fabric**: Roles played by each participating node can be different.
    Some nodes are validating nodes, some are endorsing nodes, some are ordering nodes,
    and so on. Hence, during the process of establishing a consensus, different nodes
    will be performing different tasks. Nodes can opt for No consensus (No-op) or
    an agreement protocol such as PBFT. There is no third party that is forcing the
    choice of consensus mechanism. In addition to consensus, Hyperledger Fabric also
    offers identity verification during the life cycle of the transaction. It also
    supports channels and private data collection for a more private transaction between
    parties. Transactions are ordered and then added to blocks, which are then distributed
    across the channel. Channels further control the visibility of transactions to
    the business network participants.'
  id: totrans-440
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**超级账本超级账本Fabric**：每个参与节点扮演的角色可能不同。一些节点是验证节点，一些是背书节点，一些是排序节点等。因此，在建立共识的过程中，不同的节点将执行不同的任务。节点可以选择不进行共识（No-op）或者选择PBFT等协议进行协议。没有第三方强制选择共识机制。除了共识之外，超级账本超级账本Fabric在交易的生命周期内还提供身份验证。它还支持频道和私有数据收集，以便在各方之间进行更私密的交易。交易被排序然后添加到区块，然后分布到频道上。频道进一步控制交易对业务网络参与者的可见性。'
- en: '**Choice: **Depending on the use case and application, you can opt for Ethereum
    versus Hyperledger. The following are a few points to note:'
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: '**选择：**根据用例和应用程序的不同，您可以选择以太坊还是超级账本。以下是一些需要注意的点：'
- en: '**Ethereum**: Ethereum is public and permissionless and offers transparency.
    Its various advantages listed in the previous section. However, privacy and scalability
    are low in Ethereum.'
  id: totrans-442
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**以太坊**：以太坊是公开和无许可的，并提供透明性。其各种优势如前文所列。然而，以太坊的隐私性和可伸缩性较低。'
- en: '**Hyperledger Fabric**: It solves privacy and scalability issues and offers
    access control, high transaction speed, and resilience. On top of that, it is
    modular and pluggable, which can suit various B2B enterprise use cases.'
  id: totrans-443
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**超级账本超级账本Fabric**：解决了隐私和可伸缩性问题，并提供了访问控制、高交易速度和弹性。此外，它还是模块化和可插拔的，适用于各种B2B企业用例。'
- en: '**Code execution** is as follows:'
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码执行**如下：'
- en: '**Ethereum**: Code, also known as smart contracts, is executed on the EVM.
    Ethereum networks offer services to execute smart contracts and allow them to
    reach consensus. They also offer services to invoke external *oracles*. The scope
    of a smart contract is until the lifetime of the business network concludes. Hence,
    it''s good development practice to write smart contracts with KILL methods.'
  id: totrans-445
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**以太坊**：代码，也被称为智能合约，是在以太坊虚拟机（EVM）上执行的。以太坊网络提供了执行智能合约和使其达成共识的服务。它们还提供了调用外部*预言机*的服务。智能合约的范围一直持续到业务网络的生命周期结束。因此，良好的开发实践是编写具有KILL方法的智能合约。'
- en: '**Hyperledger Fabric**: Code, also known as chaincode, can be written in a
    standard programming language such as Java, Node.js, and Go. Chaincode is executed
    on the business network and validated and endorsed by business network nodes.
    Unlike Ethereum, Hyperledger Fabric supports chaincode versioning and upgrading.
    Following are some highlights of Hyperledger fabric from chaincode perspective
    -'
  id: totrans-446
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**超级账本超级账本Fabric**：代码，也被称为链码，可以用标准编程语言编写，如Java、Node.js和Go。链码在业务网络上执行，并由业务网络节点验证和背书。与以太坊不同的是，超级账本超级账本Fabric支持链码的版本控制和升级。以下是从链码角度来看超级账本超级账本Fabric的一些亮点
    -'
- en: Chaincode can be upgraded to a new version, as long as you maintain the same
    name of the chaincode; otherwise, it will be considered a different chaincode.
    Update is a transaction on the blockchain network and results in the binding of
    the new version of the chaincode to the channel. Before you update the chaincode,
    install a new version of the chaincode on the endorsers.
  id: totrans-447
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以将 chaincode 升级到新版本，只要保持相同的链码名称；否则，它将被视为不同的 chaincode。升级是区块链网络上的一项交易，会导致将新版本的
    chaincode 绑定到通道上。在更新 chaincode 之前，在背书人上安装新版本的 chaincode。
- en: What happens to the old version? All the other channels that are binding to
    the previous (old) version of the chaincode can continue to execute the older
    version. You submit the chaincode *upgrade* transaction to a channel. Hence, only
    one channel is affected, to which you have executed the upgrade transaction. All
    other channels, on which the upgrade transaction is not executed, will continue
    to run the older version.
  id: totrans-448
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 旧版本会发生什么？所有绑定到先前（旧）版本的 chaincode 的其他通道可以继续执行旧版本。您向通道提交 chaincode *升级* 交易。因此，只有执行了升级交易的通道会受到影响。所有其他通道，未执行升级交易的通道将继续运行旧版本。
- en: Chaincode can even be stopped. However, the start and stop life cycle transactions
    are *not* implemented in v1.4\. These are future enhancements. Stop transactions
    will be a logical way to stop chaincode transactions before upgrading it.
  id: totrans-449
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chaincode 甚至可以被停止。然而，在 v1.4 版本中，启动和停止生命周期事务 *未* 实现。这些是未来的增强功能。在升级之前，停止事务将是停止
    chaincode 事务的一种逻辑方式。
- en: Optionally, you can STOP a chaincode by removing the chaincode container from
    the endorsers. Practically, you can delete the chaincode's container from each
    host (VM) on which the endorsing peers are running.
  id: totrans-450
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可选地，您可以通过从背书人中删除 chaincode 容器来停止链码。实际上，您可以从运行背书者的每台主机（VM）中删除 chaincode 的容器。
- en: Hyperledger Fabric supports Ethereum. With Hyperledger Fabric version 1.3 onward,
    smart contracts written in Solidity and Vyper can now be executed on Hyperledger
    Fabric as it supports the EVM. It's a new smart contract runtime and supports
    web3.js for enhancing the development of dApps (decentralized applications). This
    further boosts the development of dApps on permissioned blockchain. Visit [https://www.hyperledger.org/](https://www.hyperledger.org/)
    for more details on this feature.
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: Hyperledger Fabric 支持以太坊。从 Hyperledger Fabric 1.3 版本开始，用 Solidity 和 Vyper 编写的智能合约现在也可以在
    Hyperledger Fabric 上执行，因为它支持 EVM。这是一个新的智能合约运行时，并支持 web3.js 以增强 dApps（去中心化应用程序）的开发。这进一步促进了权限区块链上
    dApps 的开发。访问[https://www.hyperledger.org/](https://www.hyperledger.org/)以获取有关此功能的更多详细信息。
- en: Blockchain actors
  id: totrans-452
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 区块链参与者
- en: An entity that can participate in an action or in a blockchain network is known
    as an **actor**, which is an abbreviation of *blockchain actor*. In this section,
    we will cover various actors involved in blockchain. However, before we get into
    the details, let's briefly revisit the private blockchain. The previous section
    covered various types of blockchain networks. However, in this section, we will
    focus on defining actors primarily for private blockchain networks.
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: 参与某项行动或区块链网络的实体被称为**角色**，这是*区块链角色*的缩写。在本节中，我们将介绍涉及区块链的各种角色。然而，在深入了解之前，让我们简要回顾一下私有区块链。前一部分介绍了各种类型的区块链网络。但是，在本节中，我们将主要定义私有区块链网络的角色。
- en: 'The following table lists some of the main properties of private blockchain
    networks that are essential to understanding blockchain actors:'
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格列出了私有区块链网络的一些主要属性，对于理解区块链角色至关重要：
- en: '| **Characteristics** | **Private and Permissionless** | **Private and Permissioned
    (consortium)** |'
  id: totrans-455
  prefs: []
  type: TYPE_TB
  zh: '| **特征** | **私有和无许可的** | **私有和受许可的（联合体）** |'
- en: '| Owner | Single owner | Consortia or a founder organization |'
  id: totrans-456
  prefs: []
  type: TYPE_TB
  zh: '| 所有者 | 单一所有者 | 联合体或创始组织 |'
- en: '| Consensus | Managed by single owner | Managed by a consortium (set of designated
    participants) |'
  id: totrans-457
  prefs: []
  type: TYPE_TB
  zh: '| 一致性 | 由单一所有者管理 | 由联合体（一组指定参与者）管理 |'
- en: '| Read transaction | Any node | Only permissioned nodes |'
  id: totrans-458
  prefs: []
  type: TYPE_TB
  zh: '| 读取交易 | 任何节点 | 仅受许可节点 |'
- en: '| Network | Distributed | Decentralized |'
  id: totrans-459
  prefs: []
  type: TYPE_TB
  zh: '| 网络 | 分布式 | 去中心化 |'
- en: Private blockchain is meant to solve enterprise business cases, and this evolution
    is gaining momentum. Private and permissioned is a consortium blockchain that
    works across various organizations; however, it has a controlled user group. Participants,
    although not fully trusted, are identifiable (have identities). Like-minded enterprises
    or enterprises trying to chase similar goals can form a consortium to address
    business needs, improve trust, transparency, and accountability, and enhance existing
    business processes and workflows.
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: 私有区块链旨在解决企业业务案例，并且这种演变正在获得动力。私有和有许可的是一个跨越各种组织的财团区块链，但它有一个受控的用户组。虽然参与者不是完全可信的，但可以确定（具有身份）。志同道合的企业或试图追求相似目标的企业可以组成一个财团来解决业务需求，提高信任、透明度和问责制，并增强现有的业务流程和工作流程。
- en: Private and permissionless blockchains, are not truly distributed. They are
    decentralized and are fully controlled by a single owner. As it is owned and operated
    by a single authority, consensus that's established in such a network cannot be
    trusted as the power lies with the central authority to choose users and influence
    consensus. A consortium blockchain (private and permissioned blockchain) is owned
    by a founder organization, but managed by a consortia (set of participants from
    different organizations). Consensus can be trusted as various organizations participate
    in it and they have a collective interest in the outcomes.
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: 私有和无许可的区块链并不真正分布式。它们是分散的，并且完全由单一所有者控制。由于它由单一机构拥有和运营，因此在这样的网络中建立的共识不能被信任，因为权力掌握在中央机构手中选择用户和影响共识。财团区块链（私有和有许可的区块链）由创始组织拥有，但由财团（来自不同组织的一组参与者）管理。可以信任共识，因为各个组织参与其中，并且它们对结果具有集体利益。
- en: 'A consortium offers many benefits, such as the following:'
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: 财团提供了许多好处，如下所示：
- en: Not every enterprise or organization needs to build solutions to leverage blockchain.
    They can share the business network and build it together, which is cost-effective
    and less time-consuming.
  id: totrans-463
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 并非每个企业或组织都需要构建区块链解决方案。它们可以共享业务网络并共同构建，这样既经济实惠又节省时间。
- en: Smaller organizations can join the league and join the network on a pay-per-use
    basis and yet fully scale their business on blockchain.
  id: totrans-464
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 较小的组织可以按使用量付费加入联盟，并完全将其业务扩展到区块链上。
- en: Member organizations of the consortia need to identify the use cases that reflect
    their common problems. They can then define a governing body and build solutions
    together to meet business needs.
  id: totrans-465
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 财团的成员组织需要确定反映其共同问题的用例。然后，他们可以定义一个治理机构，并共同构建解决方案以满足业务需求。
- en: The identities of the participants are known, which enhances the level of trust.
  id: totrans-466
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 参与者的身份是已知的，这增强了信任水平。
- en: Consensus cannot be influenced as consortium members manage the blockchain network.
  id: totrans-467
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一致性不能受到影响，因为财团成员管理着区块链网络。
- en: The blockchain network access control and features of the blockchain network
    can ensure the privacy of data and enhanced security.
  id: totrans-468
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 区块链网络的访问控制和区块链网络的功能可以确保数据的隐私和增强安全性。
- en: Licenses to participate are issued by regulatory authorities of the blockchain
    network.
  id: totrans-469
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 参与许可的许可由区块链网络的监管机构发放。
- en: Access to transaction data and knowledge about transactions is limited to permissioned
    participants for particular transactions.
  id: totrans-470
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 特定交易的许可参与者仅限于对交易的权限。
- en: Consortia are resilient and offer high security, performance, scalability, and
    transactional throughput.
  id: totrans-471
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 财团具有弹性，并提供高安全性、性能、可扩展性和事务吞吐量。
- en: 'So far, we''ve discussed various private blockchain networks and the benefits
    of a consortium. Now, let''s get back to the main topic of this section—actors.
    The following figure shows various actors for private blockchain network:'
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经讨论了各种私有区块链网络以及财团的好处。现在，让我们回到本节的主题——参与者。以下图显示了私有区块链网络的各种参与者：
- en: '![](img/97c4528e-31b4-4930-99e9-91a60749afe8.png)'
  id: totrans-473
  prefs: []
  type: TYPE_IMG
  zh: '![](img/97c4528e-31b4-4930-99e9-91a60749afe8.png)'
- en: Blockchain actors
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链参与者
- en: Each actor has a defined and key role to play in the development, operation,
    and maintenance of the blockchain network. However, the most challenging work
    lies with the architect.
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: 每个参与者在区块链网络的发展、运作和维护中都有一个明确定义的关键角色。然而，最具挑战性的工作在于架构师。
- en: 'The architecture of designing, building, maintaining, and using blockchain
    applications involve various actors, which are discussed as follows:'
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
  zh: 设计、构建、维护和使用区块链应用的架构涉及各种角色，如下所述：
- en: '**Process owner**:Process owners are subject matter experts on business processes.
    They are key to identifying business challenges and helping define common problems,
    which become the base to form a consortium. Process owners are key participants
    for defining use cases. They are subject matter experts on as-is processes, define
    the to-be processes from a functional standpoint, and lay the foundation for the
    blockchain business network.'
  id: totrans-477
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**流程所有者**：流程所有者是业务流程的主题专家。他们对于识别业务挑战和帮助定义共同问题至关重要，这成为了形成财团的基础。流程所有者是定义使用案例的关键参与者。他们是关于现有流程的专家，从功能角度定义应该流程，并为区块链商业网络奠定基础。'
- en: '**Blockchain regulatory authority**: They are the primary authority of the
    business network (founder organization with members from the consortium). They
    issue licenses (certificates) to participants and usually have broader access
    to the network. They define access controls, issue certificates, and so on. They
    have functional knowledge about the processes and they ensure the correct participants
    get access to the relevant parts of blockchain network. They are key in defining
    the consortium, as private and permissioned blockchain networks are based on identifiable
    participants with defined access controls. Along with architects, they are responsible
    for identifying and defining the following:'
  id: totrans-478
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**区块链监管权威**：他们是业务网络的主要当局（来自财团的创始组织成员）。他们向参与者发放许可证（证书），通常可以更广泛地访问网络。他们定义访问控制，发放证书等。他们对流程具有功能性了解，并确保正确的参与者可以访问区块链网络的相关部分。他们在定义财团中至关重要，因为私人和获准权限的区块链网络基于可识别参与者和定义的访问控制。与架构师一起，他们负责识别和定义以下内容：'
- en: Funding for the establishment, development, and operations of the consortium
    and blockchain network
  id: totrans-479
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于设立、发展和运营财团和区块链网络的资金
- en: Choosing the infrastructure for the blockchain network
  id: totrans-480
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为区块链网络选择基础设施
- en: Access control and participation of the actors and end users in the blockchain
    network
  id: totrans-481
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 区块链网络中参与者和最终用户的访问控制和参与
- en: Defining and establishing trust authorities
  id: totrans-482
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义和建立信任机构
- en: Defining governance for the programs that will lead to the development of the
    blockchain network
  id: totrans-483
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为将导致区块链网络发展的计划定义治理
- en: Establish ROI for the consortium and its members
  id: totrans-484
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为财团和其成员确立投资回报率
- en: Define tracking, tracking of the program, and so on
  id: totrans-485
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义追踪、计划追踪等程序
- en: '**Blockchain architect**: They should have a background in business analysis
    and should have an understanding of technology. A blockchain architect should
    have knowledge about their peers, consensus, security, chaincode, integration,
    ledgers, and applications. They, along with the authority, define and decide on
    the usage of consensus algorithms, standards, best practices, and so on for the
    consortium and its solutions. A blockchain architect is responsible for the following
    activities:'
  id: totrans-486
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**区块链架构师**：他们应该具备业务分析背景，并且对技术有所了解。区块链架构师应该了解他们的同行、共识、安全性、链码、集成、分类帐和应用。他们与权威一起定义并决定在财团及其解决方案中使用共识算法、标准、最佳实践等。区块链架构师负责以下活动：'
- en: Delves into identifying use cases
  id: totrans-487
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 深入挖掘识别使用案例
- en: Analyzes and chooses a specific blockchain solution for the given use case(s)
  id: totrans-488
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分析并为给定的使用案例选择特定的区块链解决方案
- en: Defines which blockchain/DLT solution fits the gaps
  id: totrans-489
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义适用于填补空白的区块链/DLT解决方案
- en: Offers estimates, plans risk, and defines milestones
  id: totrans-490
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供估计、计划风险和定义里程碑
- en: Architecting and designing the solution
  id: totrans-491
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建和设计解决方案
- en: Works in tandem with infrastructure, blockchain operator, and development teams
    for the correct realization of the blockchain solution
  id: totrans-492
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与基础设施、区块链操作者和开发团队一起正确实现区块链解决方案
- en: Defines reuse, auditability, and monitoring of the blockchain network
  id: totrans-493
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义区块链网络的复用、可审计性和监控
- en: Analyzes and quantifies the performance, resilience, security, scalability,
    and transactional throughput of the blockchain network
  id: totrans-494
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分析和量化区块链网络的性能、恢复力、安全性、可扩展性和事务吞吐量
- en: Defines the versioning strategy, governance model, and production readiness
    of the blockchain network
  id: totrans-495
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义区块链网络的版本策略、治理模型和生产准备情况
- en: '**Blockchain solution providers**: A consortium can opt for a BaaS (cloud)
    offering as blockchain business network''s infrastructure. They can also set up
    an on-premise solution. Blockchain architects, along with the blockchain authority,
    can decide on the infrastructure. Once decided, the blockchain solution provider
    (either cloud or on-premise) can take care of the setup, management, maintenance,
    and support for the infrastructure of the blockchain network. The blockchain solution
    providers are the team from the blockchain cloud service providers who are responsible
    for creating and maintaining the blockchain network, offering security solutions,
    and providing ease of deploying and maintaining smart contracts or chain codes.'
  id: totrans-496
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**区块链解决方案提供商**：一个财团可以选择作为区块链业务网络基础设施的BaaS（云）提供。他们也可以建立本地解决方案。区块链架构师和区块链管理机构可以决定基础设施。一旦决定，区块链解决方案提供商（无论是云端还是本地）可以负责设置、管理、维护和支持区块链网络的基础设施。区块链解决方案提供商是来自区块链云服务提供商的团队，负责创建和维护区块链网络，提供安全解决方案，并提供部署和维护智能合约或链代码的便利性。'
- en: '**Blockchain network operators**: They define the business network, configure
    the business network, access control, and monitor the business network. They focus
    on the operational part of the blockchain business network. They mostly care about
    peers, consensus, and security of the blockchain network and are not concerned
    about smart contract and user interface codes.'
  id: totrans-497
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**区块链网络运营商**：他们定义业务网络，配置业务网络，访问控制和监控业务网络。他们关注区块链业务网络的运萂部分。他们主要关注节点、共识和区块链网络的安全，而不关心智能合约和用户界面代码。'
- en: '**Blockchain developer**: Blockchain developers focus on code (chaincode, UI,
    and analytics). They also take care of integration of blockchain network''s chaincode
    with other applications, data sources, events, and ledgers. They are transparent
    to the working of blockchain network, consensus, security, peers, and orderers.
    However, they should understand the fundamentals of blockchain. Anyone with an
    acumen to code in any high-level programming language and who has a basic understating
    of blockchain/DLT technology can execute the following responsibilities as a blockchain
    developer:'
  id: totrans-498
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**区块链开发者**：区块链开发者关注代码（链代码、UI和分析）。他们还负责将区块链网络的链代码与其他应用程序、数据源、事件和分类账集成。他们对区块链网络的运行、共识、安全、节点和订购节点是透明的。但是，他们应该了解区块链的基本原理。任何具有在任何高级编程语言中编码的能力并且对区块链/DLT技术有基本了解的人都可以作为区块链开发者承担以下责任：'
- en: Develop smart contracts or chaincode
  id: totrans-499
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开发智能合约或链代码
- en: Deploy and test smart contracts or chaincode
  id: totrans-500
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署和测试智能合约或链代码
- en: Use APIs in code to interact with blockchain networks
  id: totrans-501
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在代码中使用API与区块链网络交互
- en: Develop, deploy, and maintain dApps and user interfaces as web applications
    for smart contracts
  id: totrans-502
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开发、部署和维护dApps和用户界面作为智能合约的Web应用程序
- en: '**Blockchain end user**: With access to dApps web applications, end users are
    capable of consuming blockchain smart contracts via a UI or web application. This
    allows the end users to execute transactions against smart contracts, and yet
    the underlying blockchain technology remains transparent to them.'
  id: totrans-503
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**区块链最终用户**：拥有dApps Web应用程序访问权限的最终用户能够通过UI或Web应用程序消费区块链智能合约。这使最终用户能够针对智能合约执行交易，而底层的区块链技术对他们来说是透明的。'
- en: '**Blockchain auditors**: As the consortium includes various enterprises and
    discrete parties, it has its own business complexities. These complexities can
    lead to disputes. Hence, a consortium must have arbitrators to settle disputes.
    This means there is a need for an arbitration function for a consortium, which
    takes care of the participation contract (via a legal document) between members
    of the consortia. For now, the CPA authorities will handle these legal documents,
    until the time they turn into smart contracts (chaincode) and act as smart arbitrators.
    A consortium can engage smart contract (chaincode) auditors to verify the smart
    contracts and verify the interface and integration of smart contracts with external
    applications and data sources. Such independent auditors will offer assurance
    to the consortium and help surface vulnerabilities. Also, it allows regulatory
    bodies such as SEC to have a read-only pull on data so that they can identify transaction
    details among *the universe of available information.*'
  id: totrans-504
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**区块链审计员**：由于联盟包括各个企业和离散方，因此具有自己的业务复杂性。这些复杂性可能导致争端。因此，联盟必须有仲裁员来解决争端。这意味着联盟需要一种仲裁功能，负责联盟成员之间的参与合同（通过法律文件）。暂时，CPA管理机构将处理这些法律文件，直到它们变成智能合同（链码）并充当智能仲裁员为止。联盟可以聘请智能合同（链码）审计员来验证智能合同，并验证智能合同与外部应用程序和数据源的接口和集成。这样的独立审计员将为联盟提供保证，并帮助发现漏洞。此外，它允许诸如SEC之类的监管机构对数据进行只读获取，以便他们可以在*可用信息宇宙*中识别交易细节。'
- en: BaaS
  id: totrans-505
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: BaaS
- en: Blockchain is a disruptive technology and is the future. However, due to technical
    complexities, lack of expertise and skills, and operational overhead, the adoption
    of blockchain is slow. These challenges were gradually addressed by cloud service
    providers who entered into blockchain solutions with the BaaS offering, which
    offered clarity on *where* we should host the solution.
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链是一种颠覆性的技术，也是未来趋势。然而，由于技术复杂性、缺乏专业知识和技能以及操作开销，区块链的采用速度较慢。这些挑战逐渐被进入区块链解决方案的云服务提供商所解决，其提供了BaaS方案，明确了我们应该在*哪里*托管解决方案。
- en: 'So far, we''ve discussed DLT, blockchain, centralized and decentralized systems,
    and ledgers. We also looked at the blockchain structure, blocks, and so on. Now,
    I want to conclude this chapter by laying the foundation for *what''s next *in
    the subsequent chapters. This section talks about the **center of gravity** (**CG**)
    of this book. Subsequent chapters will revolve around use cases and the implementation
    of a use case using Oracle''s Blockchain Cloud Platform (BaaS). At this stage,
    you might be curious about how we will implement this. Consider this section as
    a glimpse into a blockchain solution provider and where it should reside. There
    are various steps before implementing blockchain. They start with identifying
    the use case and choosing the solution providers. Some of the questions you will
    need to answer are as follows:'
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经讨论了DLT、区块链、中心化和去中心化系统以及分类账。我们还研究了区块链结构、区块等等。现在，我想通过为后续章节奠定*下一步*的基础来结束本章。这一节讨论了本书的**重心**（**CG**）。后续章节将围绕使用案例和使用Oracle的区块链云平台（BaaS）实施使用案例展开。在这个阶段，你可能会对我们如何实施此业务感到好奇。把这一节当作对区块链解决方案提供商以及其应该驻留何处的一瞥。在实施区块链之前有各种步骤。它们始于识别使用案例和选择解决方案提供商。你需要回答的一些问题如下：
- en: Why do you need blockchain and what's the rationale behind it?
  id: totrans-508
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么你需要区块链以及背后的原因是什么？
- en: Is there a strategic choice or a tactical push?
  id: totrans-509
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这是战略选择还是战术推动？
- en: What are you building and how are you building it?
  id: totrans-510
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你在构建什么，以及你是如何构建它的？
- en: Who is involved, how are they involved, who will decide, and so on?
  id: totrans-511
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 谁参与其中，他们如何参与，谁会决定，等等？
- en: Where will the solution reside-on-premises or on the cloud?
  id: totrans-512
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解决方案将在何处存储-在本地还是云上？
- en: Who will be managing it?
  id: totrans-513
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 谁将进行管理？
- en: Who will take care of resilience?
  id: totrans-514
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 谁将负责韧性？
- en: Many of the answers lie with BaaS.
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
  zh: 很多答案都隐藏在BaaS中。
- en: BaaS qualifiers
  id: totrans-516
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: BaaS资格
- en: BaaS is a blockchain platform that hosts a consumer's blockchain applications
    and solutions. The blockchain platform (BaaS) provider, for a fee, handles the
    setup, maintenance, and support of the blockchain infrastructure. It is a boost
    to businesses and entrepreneurs as it offloads a lot from customers and allows
    them to focus on identifying use cases and developing blockchain applications
    and solutions. Things such as network availability, scalability, performance,
    and so on stay with the service provider. Blockchain touches on a wide range of
    audiences, which includes architects, designers, developers, enthusiastic evangelists,
    business and process owners, IT strategists, and economists. In addition, BaaS,
    being a full-stake cloud-based solution, empowers entrepreneurs, enthusiastic
    evangelists, enterprises, and so on to grasp the potential of DLT and blockchain
    in a timely and efficient manner. BaaS is turning into a true catalyst to expand
    the adoption of DLT and blockchain.
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
  zh: BaaS是一个托管消费者区块链应用和解决方案的区块链平台。区块链平台（BaaS）提供商收费处理区块链基础设施的设置、维护和支持。对于企业和企业家来说，这是一个提升，因为它减轻了客户的很多负担，并允许他们专注于识别用例和开发区块链应用和解决方案。诸如网络可用性、可扩展性、性能等问题留给服务提供商。区块链触及了广泛的受众，包括架构师、设计师、开发人员、热情的传道者、业务和流程所有者、IT战略师和经济学家。此外，作为一种全栈云解决方案，BaaS使企业家、热情的传道者、企业等能够及时高效地把握Dlt和区块链的潜力。BaaS正在成为扩大Dlt和区块链采用的真正催化剂。
- en: 'The following are some of the qualifying factors to look at when choosing a
    BaaS provider:'
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
  zh: 在选择BaaS提供商时，以下是一些要考虑的资格因素：
- en: '**Standard**: These include the following:'
  id: totrans-519
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**标准**：这些包括以下内容：'
- en: Is it an established cloud provider?
  id: totrans-520
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它是一个已建立的云服务提供商吗？
- en: Is it based on industry standards?
  id: totrans-521
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是否基于行业标准？
- en: Is it compatible and interoperable? Is it interoperable with other ledgers too?
  id: totrans-522
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是否兼容和可互操作？它与其他账本也是可互操作的吗？
- en: '**Quick setup**: Does it allow for the quick provisioning of a blockchain network?'
  id: totrans-523
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**快速设置**：是否允许快速设置区块链网络？'
- en: '**Integration and other service offerings**: These include the following:'
  id: totrans-524
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**集成和其他服务提供**：这些包括以下内容：'
- en: Does it support REST proxies for integrating OBP with SaaS, PaaS, and other on-premises
    applications?
  id: totrans-525
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是否支持REST代理，以便将OBP与SaaS、PaaS和其他本地应用集成？
- en: Does it offer services such as data security, integration services, and object/document
    storage?
  id: totrans-526
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是否提供数据安全、集成服务和对象/文档存储等服务？
- en: Does it offer cloud services such as containers and compute and storage services?
  id: totrans-527
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是否提供容器和计算与存储服务等云服务？
- en: '**Security and privacy**: These include the following:'
  id: totrans-528
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**安全和隐私**：这些包括以下内容：'
- en: Does it offer integrated identity management and security?
  id: totrans-529
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是否提供集成的身份管理和安全性？
- en: Does it take care of privacy, data partitioning, and private channels?
  id: totrans-530
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是否关心隐私、数据分区和私有通道？
- en: '**Is it resilient**: These include the following:'
  id: totrans-531
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**是否具有弹性**：这些包括以下内容：'
- en: Does it offer high availability?
  id: totrans-532
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是否提供高可用性？
- en: Does it offer backup and disaster recovery?
  id: totrans-533
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是否提供备份和灾难恢复？
- en: Does it offer enhanced performance (both blockchain network and consensus)?
  id: totrans-534
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是否提供增强的性能（区块链网络和共识）？
- en: '**Smart contract**/**chaincode**—**deployment, versioning, standards, auditing,
    and testing**: These include the following:'
  id: totrans-535
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**智能合约/链代码**—**部署、版本控制、标准、审计和测试**：这些包括以下内容：'
- en: Does it offer the deployment of chaincode in standard languages such as Java
    and Node.js?
  id: totrans-536
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是否提供在标准语言（如Java和Node.js）中部署链代码的功能？
- en: Does it allow rollback to the previous version of chaincode?
  id: totrans-537
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是否允许回滚到链代码的上一个版本？
- en: Does it offer/support tools to test chaincode?
  id: totrans-538
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是否提供/支持测试链代码的工具？
- en: Does it have a credible development community?
  id: totrans-539
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是否有可信的开发社区？
- en: '**Eat your own pill**: Does it offer applications on the marketplace and build
    on its own BaaS?'
  id: totrans-540
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**吃自己的药丸**：是否提供市场上的应用程序，并在自己的BaaS上构建？'
- en: '**Monitoring**: Does it offer transaction monitoring and dashboards?'
  id: totrans-541
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**监控**：是否提供交易监控和仪表盘？'
- en: 'The following diagram highlights the key qualifiers for a BaaS platform:'
  id: totrans-542
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表突出了BaaS平台的关键资格要求：
- en: '![](img/34462cee-41bc-48d5-9fa9-d04ac31631dc.png)'
  id: totrans-543
  prefs: []
  type: TYPE_IMG
  zh: '![](img/34462cee-41bc-48d5-9fa9-d04ac31631dc.png)'
- en: BaaS qualifiers
  id: totrans-544
  prefs: []
  type: TYPE_NORMAL
  zh: BaaS资格审查
- en: BaaS use cases
  id: totrans-545
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: BaaS使用案例
- en: To keep it simple, BaaS solves cost, efficiency, and transparency challenges.
    It allows the business to explore, experiment, experience, and then engage in
    blockchain. It takes away the intricacies of implementation and allows the business
    to focus on the core. It's analogous to an aged whiskey. You can trust its manufacturer
    and pay for it to enjoy it. You do not need to get into the details of where it
    was manufactured, under what conditions, how it was treated, and so on. Blockchain
    enables product provenance.
  id: totrans-546
  prefs: []
  type: TYPE_NORMAL
  zh: 为了简化，BaaS 解决了成本、效率和透明度方面的挑战。它使企业能够探索、实验、体验，然后参与区块链。它消除了实施的复杂性，使企业能够专注于核心业务。这类似于陈年威士忌。你可以信任它的制造商并支付费用来享用它。你不需要深入了解它是在哪里制造的，以什么条件制造的，如何对待的等等。区块链实现了产品溯源。
- en: 'There is an explosion of ideas around use cases, which can be advantageous
    for DLT, and blockchain and BaaS will drive the wave in the adoption of DLT and
    blockchain, thereby realizing and fulfilling these ideas for enterprises, customers,
    and entrepreneurs. There are various use cases that can be addressed by leveraging
    BaaS:'
  id: totrans-547
  prefs: []
  type: TYPE_NORMAL
  zh: 在 DLT 的用例周围涌现了大量的想法，这对 DLT、区块链和 BaaS 都是有利的，并且区块链和 BaaS 将推动 DLT 和区块链的采用浪潮，从而实现和满足企业、客户和企业家的这些想法。可以通过利用
    BaaS 来解决各种用例：
- en: '**Prowess** (**education and profession**): A *ledger of prowess* can act as
    a single source of truth for certificates, assessments, skills, and so on. It
    offers prowess ownership, full authority on the asset (certificate, transcripts,
    skills, evidence, and so on), and offers a solution to fully track and trace an
    individual''s certificates, skills, and knowledge. There are various use cases
    beyond certificates. For example, while hiring someone, organizations need authentic
    and trustworthy information about the credentials of an applicant. *A ledger of
    prowess *will offer the ledger that holds the applicant''s certificates, skills,
    experience, expertise, and other relevant reports, immutably. In addition, as
    these records are immutable, even the applicants cannot fabricate it to meet specific
    job requirements. We easily calculate the risk involved in hiring an applicant
    who has fabricated his/her skills.'
  id: totrans-548
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**实力**（**教育和专业**）：*实力台账*可以作为证书、评估、技能等的真实来源。它提供实力所有权，对资产（证书、成绩单、技能、证据等）拥有完全权限，并提供全面跟踪和追踪个人的证书、技能和知识的解决方案。除了证书外，还有各种用例。例如，在招聘时，组织需要关于申请人资格的真实可信的信息。*实力台账*将提供持有申请人证书、技能、经验、专业知识和其他相关报告的台账，不可变地。此外，由于这些记录是不可变的，甚至申请人也无法伪造它以满足特定的工作要求。我们可以轻松计算雇佣伪造技能的申请人所涉及的风险。'
- en: '**Supply chain**: A *ledger of supply* can act as a single source of truth
    for asset management, procurement, product life cycle management, logistics, provenance,
    fraud detection, and so on. It can go beyond the provenance (tracking of products)
    to a full life cycle of SCM on blockchain.'
  id: totrans-549
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**供应链**：一个*供应台账*可以作为资产管理、采购、产品生命周期管理、物流、溯源、欺诈检测等的真实来源。它可以超越溯源（产品追踪）到区块链上的整个
    SCM 生命周期。'
- en: '**Government**: Government agencies hold citizen data and various other kinds
    of sensitive information. The sensitivity quotient poses security and privacy
    risks. Blockchain''s public repository, along with hashing, cryptography, and
    other proven technologies, can take care of hacking, data modifications, loss
    of information, and so on. A *l**edger of trust* can take care of citizen rights,
    votes, donations, and so on. A voting platform with *ledger of trust* can ensure
    fraud-free voting and fraud-free counting, and check vote rigging. Results are
    quick and the entire exercise of executing elections can be made cost-effective,
    timely, and trustworthy. A *ledger of ***unique identity** (**UID**) can digitize
    secure identity management.'
  id: totrans-550
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**政府**：政府机构持有公民数据和各种其他敏感信息。敏感性系数带来了安全和隐私风险。区块链的公共存储库，以及哈希、加密和其他成熟的技术，可以解决黑客攻击、数据修改、信息丢失等问题。*信任台账*可以处理公民权利、选票、捐款等。带有*信任台账*的投票平台可以确保无欺诈的投票和无欺诈的计票，并检查选票操纵。结果迅速，执行选举的整个过程可以做到具有成本效益、及时和值得信赖。*唯一身份*（**UID**）的*身份台账*可以数字化安全身份管理。'
- en: '**Real estate**: A *ledger of ownership* can act as a truth for the ownership
    of properties, ease the listing of properties, allow the transferral of ownership
    in minutes, reduce the cost of listing properties, and so on.'
  id: totrans-551
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**房地产**：*所有权账簿*可以作为财产所有权的真相，简化财产上市，允许在几分钟内转让所有权，减少上市成本等。'
- en: '**Healthcare**: A *ledger of wellness *can evolve as a truth to track patient
    and doctor information. This will take care of drug counterfeits, secured and
    controlled exchange of information such as prescriptions and medical history,
    and so on. The current system stores medical information in silos with massive
    restrictions on sharing and its usage. A *ledger of wellness* will lead to storing
    information on an immutable and secure ledger, where discrete stakeholders have
    access to it based on their privileges. Blockchain and its chaincode can automatically
    keep audit and track an individual''s health and history, and can even allow patients
    to monetize their medical records for research, which is a huge gain for humanity.'
  id: totrans-552
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**医疗保健**：*健康账簿*可以作为追踪患者和医生信息的真相。这将防止药物伪造，保障和控制诸如处方和病史等信息的安全和受控交换。目前的系统将医疗信息存储在信息孤岛中，分享和使用受到了严格限制。*健康账簿*将导致在不可变和安全的账簿上存储信息，离散的利益相关者根据其权限访问信息。区块链及其链代码可以自动进行审计和追踪个体的健康和历史，甚至允许患者将其医疗记录用于研究获得报酬，这对人类是巨大的收益。'
- en: '**Insurance**: A *ledger of assurance* can be a source of truth from policy
    sales to settlement, which includes sale of a policy, maintenance of a policy
    (renewals, terminations, adjustments, and so on), claims, evaluation and evidence,
    and settlements. This will eliminate cumbersome processes, reduce third-party
    involvement, allow for faster settlements, and so on.'
  id: totrans-553
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**保险**：*保险账簿*可以作为从保单销售到结算的真实来源，其中包括保单的销售，保单的维护（续约、终止、调整等），索赔，评估和证据，以及结算。这将消除繁琐的流程，减少第三方参与，加快结算速度等。'
- en: '**Intellectual properties**: A *ledger of IP* can be a proven source for patents
    and trademarking of IP; it reduces IP abuse, ensures IP owners receive credits
    and monetary benefits for their IP, and so on.'
  id: totrans-554
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**知识产权**：*知识产权账簿*可以成为专利和知识产权商标的真实来源；它减少了知识产权的滥用，确保知识产权所有者获得其知识产权的信用和经济利益等。'
- en: '**Fintech**: A *ledger of affluence* can be the base for cross-broader payments
    and faster B2B transactions. It eliminates reconciliations, infuses trust among
    traders, and so on. It can also be used for clearing and settlements, trade finance,
    KYC, and AML.'
  id: totrans-555
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**金融科技**：*财富账簿*可以作为跨境支付和更快的B2B交易的基础。它消除了对账，增强了交易者之间的信任等。它还可以用于清算和结算，贸易融资，KYC和AML。'
- en: '**Other industries**: These can use BaaS as well, and they are as follows:'
  id: totrans-556
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**其他行业**：这些也可以使用BaaS，具体如下：'
- en: '**Travel**: It can be used for passenger processing, travel trace and tracking,
    single source of truth for passenger identity, and so on. With critical documents
    being on the ledger, passport forging, pass-through, illegal immigration, and
    so on can be checked.'
  id: totrans-557
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**旅行**：可以用于乘客处理、旅行追踪和追踪，作为乘客身份的单一真相来源等。将关键文件存放在账簿上可以检查护照伪造、逃避检查、非法移民等。'
- en: '**Humanitarianism**: It can be used for charity, donations, and so on.'
  id: totrans-558
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**人道主义**：可用于慈善、捐赠等。'
- en: '**Transportation**: The use cases include track, trace, and so on.'
  id: totrans-559
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**交通运输**：使用案例包括追踪等。'
- en: '**Oil and gas**: It can be used for freight management, payments, shipments,
    and so on.'
  id: totrans-560
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**石油和天然气**：可用于货运管理、付款、运输等。'
- en: '**Analytics**: I''m pushing analytics as a horizontal industry here, as I believe
    in the quote: *Where there is data, there is analytics* (Vivek Acharya). Referring
    to the aforementioned example on *Healthcare*—patients trying to monetize their
    medical records also serves humanity a lot. If that happens, it needs an efficient
    analytics platform to make sense of the blockchain data. Other than that, transactional
    data on ledgers can lead to greater insights. Blockchain, along with AI, can lead
    to better forecasting, effective predications, and answers to business and end-users
    questions in real time.'
  id: totrans-561
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分析**：这里将分析推广为一个横向行业，因为我相信这句话：*有数据的地方就有分析*（Vivek Acharya）。参考前面关于*医疗保健*的例子——患者尝试将他们的医疗记录变现也对人类有很大的帮助。如果这种情况发生，就需要一个高效的分析平台来理解区块链数据。除此之外，账簿上的交易数据可以带来更大的见解。区块链和人工智能结合可以带来更好的预测、有效的预测，以及实时回答业务和最终用户的问题。'
- en: Key advantages of BaaS
  id: totrans-562
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: BaaS的主要优势
- en: BaaS is a platform with a magnitude of features on the top of a platform such
    as Hyperledger Fabric. Using BaaS offerings, customers can create networks and
    channels and build and deploy chaincode and dApps. Cloud service providers take
    care of the mundane necessary activities such as infrastructure agility, scalability,
    and operational efficiency, while customers can focus on building applications
    and chaincode. BaaS is a major boost to the adoption of blockchain, which is a
    BaaS offering in most of the major cloud solution providers.
  id: totrans-563
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链即服务（BaaS）是在诸如Hyperledger Fabric之类的平台之上拥有众多功能的平台。使用BaaS提供的服务，客户可以创建网络和通道，构建和部署链码和分布式应用程序（dApps）。云服务提供商负责处理基础设施的敏捷性、可伸缩性和运营效率等琐碎但必要的活动，而客户可以专注于构建应用程序和链码。BaaS极大地推动了区块链的采用，在大多数主要云解决方案提供商中都提供了BaaS服务。
- en: 'With a cloud platform such as Oracle''s Blockchain Cloud Service, you don''t
    need to bring your own security, identity management, container management, admin
    console management, infrastructure, HA, and recovery. It is all with the cloud
    service provider. The following are a few of the key advantages of BaaS:'
  id: totrans-564
  prefs: []
  type: TYPE_NORMAL
  zh: 使用诸如Oracle的区块链云服务等云平台，您无需自行提供安全性、身份管理、容器管理、管理控制台管理、基础设施、高可用性和恢复等方面的服务。所有这些都由云服务提供商提供。以下是BaaS的一些关键优势：
- en: Fast provisioning
  id: totrans-565
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 快速的供应能力
- en: Ease to configure
  id: totrans-566
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置简便
- en: Quick on-boarding of members
  id: totrans-567
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 成员快速入职
- en: Embedded identity management
  id: totrans-568
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内置身份管理
- en: Enhanced security and confidentiality
  id: totrans-569
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提升安全性和保密性
- en: Efficient development and testing
  id: totrans-570
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高效的开发和测试
- en: Enhanced integration with processes and applications
  id: totrans-571
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与流程和应用程序的优化集成
- en: Better performance and scalability
  id: totrans-572
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更好的性能和可伸缩性
- en: High availability and operational resilience
  id: totrans-573
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高可用性和运营弹性
- en: Excellent scalability
  id: totrans-574
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 出色的可伸缩性
- en: Decouples infrastructure from the customer's primary task of developing smart
    contracts and applications
  id: totrans-575
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将基础设施与客户开发智能合约和应用程序的主要任务解耦
- en: Allows customers to explore the magnitude of possibilities with their legacy
    applications and business processes.
  id: totrans-576
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许客户探索其传统应用程序和业务流程的众多可能性。
- en: Oracle's BaaS – OBP
  id: totrans-577
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Oracle的BaaS - OBP
- en: BaaS offers a lot on top of its base (also known as its core). Hyperledger Fabric
    (base) is not preassembled. Hence, the enterprise needs to build chaincode and
    benefit from Hyperledger Fabric; they need to set up the Hyperledger Fabric infrastructure,
    handle its prerequisites, and configure and maintain it. The enterprise needs
    to ensure the integration of the installed Hyperledger Fabric environment with
    a security stake and manage the life cycle of all of the containers. The enterprise
    needs to handle the patching and upgrades and needs to ensure the system's huge
    availability, performance, business network management, and so on. Oracle's blockchain
    platform is based on Hyperledger Fabric. With OBP, the enterprise's responsibilities
    to set up, manage, and maintain the blockchain platform will shift toward Oracle
    (BaaS provider), and the enterprise can continue to focus on building work class
    blockchain applications and solutions.
  id: totrans-578
  prefs: []
  type: TYPE_NORMAL
  zh: BaaS在其基础（也称为其核心）之上提供了许多功能。Hyperledger Fabric（基础）并未预装。因此，企业需要构建链码并从Hyperledger
    Fabric中受益；他们需要设置Hyperledger Fabric基础设施，处理其先决条件，并对其进行配置和维护。企业需要确保已安装的Hyperledger
    Fabric环境与安全利益相集成，并管理所有容器的生命周期。企业需要处理补丁和升级，并确保系统的高可用性、性能、业务网络管理等。Oracle的区块链平台基于Hyperledger
    Fabric。通过OBP，企业设置、管理和维护区块链平台的责任将转移到Oracle（BaaS提供商），企业可以继续专注于构建世界级的区块链应用程序和解决方案。
- en: Linux foundation's Hyperledger Fabric is the foundational base (core) for OBP.
    With Hyperledger Fabric being the base, any vendor (including Oracle) offering
    solutions on top of it must automatically adhere to industry standards. Blockchain
    platforms, such as Oracle's Blockchain platform, ease the creation of a network
    where participants from different organizations can participate and work together.
    Interoperability challenges such as governance, naming convention standards, and
    unified data models need to meet common consensus. For example, a consortium where
    participants mutually agree on standards, rules of participation, sharing of cost
    and profits, governance mechanism, and collective risk mitigation, along with
    the inclusion of analytics, auditing, and validation to ensure smooth blockchain
    network operations.
  id: totrans-579
  prefs: []
  type: TYPE_NORMAL
  zh: Linux 基金会的 Hyperledger Fabric 是 OBP 的基础基础（核心）。由于 Hyperledger Fabric 是基础，任何供应商（包括
    Oracle）在其上提供解决方案都必须自动遵循行业标准。区块链平台，例如 Oracle 的区块链平台，可以简化创建一个网络，不同组织的参与者可以参与并共同工作。互操作性挑战，如治理、命名约定标准和统一数据模型，需要满足共识。例如，一个由参与者相互同意的标准、参与规则、成本和利润共享、治理机制和集体风险缓解的财团，以及包括分析、审计和验证以确保顺畅的区块链网络操作。
- en: 'OBP offers a console to manage networks, channels, and users. It offers a REST
    proxy and various other infrastructure services to set up, build, and maintain
    a blockchain network. It''s built on top of Hyperledger Fabric and adds a lot
    of rich features to allow for the ease of operations, enhanced security, and high
    accessibility. Oracle OBP is a BaaS offering from Oracle, which has the potential
    to address enterprise DLT/blockchain use cases. The Oracle offering includes infrastructure
    services and various embedded resources such as compute, containers, storage,
    event streaming, and identity management. Oracle has the following features:'
  id: totrans-580
  prefs: []
  type: TYPE_NORMAL
  zh: OBP 提供一个控制台来管理网络、通道和用户。它提供了一个 REST 代理和各种其他基础设施服务来设置、构建和维护区块链网络。它是建立在 Hyperledger
    Fabric 之上的，为简化操作、增强安全性和提高可访问性增加了许多丰富的功能。Oracle OBP 是 Oracle 提供的一种 BaaS 服务，有潜力解决企业
    DLT/区块链用例。Oracle 的提供包括基础设施服务和各种嵌入式资源，如计算、容器、存储、事件流和身份管理。Oracle 具有以下特点：
- en: '**Standard-based**: Oracle BaaS''s core is Hyperledger Fabric; hence, it automatically
    adheres to industry standards. As a result, applications built on OBP are interoperable
    and compatible. This feature matches the BaaS qualifier *standard* listed in the
    previous section.'
  id: totrans-581
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基于标准**：Oracle BaaS 的核心是 Hyperledger Fabric；因此，它自动遵循行业标准。因此，构建在 OBP 上的应用程序是可互操作和兼容的。这个特性与前一节中列出的
    BaaS 限定符*标准*相匹配。'
- en: '**Preassembled**: Oracle''s blockchain platform includes a preassembled identity
    solution (Oracle''s identity management), object store (embedded archiving), and
    RESTful APIs. The Oracle offering includes an operational console to configure
    and manage the entire blockchain business network. Onboarding of B2B partners
    to the blockchain network is simplified and partners can be verified with a built-in
    identity solution. This feature resembles the BaaS qualifiers: *quick setup*,
    *security*, *privacy*, *and chaincode management and monitoring*.'
  id: totrans-582
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**预装的**：Oracle 的区块链平台包括预装的身份解决方案（Oracle 的身份管理）、对象存储（内嵌式存档）和 RESTful API。Oracle
    的提供包括一个操作控制台，用于配置和管理整个区块链业务网络。简化了将 B2B 合作伙伴引入区块链网络，并且合作伙伴可以通过内置的身份解决方案进行验证。此功能类似于
    BaaS 限定符：*快速设置*、*安全性*、*隐私*、*以及链码管理和监控*。'
- en: '**Pluggable**: It offers integration services with **Oracle Integration Cloud**
    **Service** (**OICS**), which allows for quick integration with SaaS and PaaS
    applications. This feature fits into the BaaS qualifier integration and other
    services, which are as follows*:*'
  id: totrans-583
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可插拔的**：它提供与**Oracle 集成云服务**（**OICS**）的集成服务，允许与 SaaS 和 PaaS 应用程序快速集成。这个特性符合
    BaaS 限定符集成和其他服务，如下所述：'
- en: The enterprise can leverage OICS tools in order to process cloud services to
    build and extend BPM (workflow) applications. The enterprise can extend its SaaS
    applications using SDKs or RESTful APIs.
  id: totrans-584
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 企业可以利用 OICS 工具来处理云服务，以构建和扩展 BPM（工作流）应用程序。企业可以使用 SDK 或 RESTful API 扩展其 SaaS 应用程序。
- en: Applications built on the Oracle development platform (for example, VBCS) can
    invoke operations on chaincode using various standards (Java, Node.js, and Go)
    and APIs.
  id: totrans-585
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Oracle 开发平台上构建的应用程序（例如，VBCS）可以使用各种标准（Java、Node.js 和 Go）和 API 调用链码操作。
- en: Enterprises can build applications on application container cloud services,
    Java cloud services, mobile cloud services, or application builder cloud services
    and can initiate blockchain transactions using SOA cloud services, process cloud
    services, and APIs.
  id: totrans-586
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 企业可以在应用程序容器云服务、Java云服务、移动云服务或应用程序构建器云服务上构建应用程序，并可以使用SOA云服务、流程云服务和API发起区块链交易。
- en: '**Enterprise**-**grade solution**:It is a managed service with high availability,
    enhanced security, and continuous backup of ledgers. This feature resonates with
    the BaaS qualifier—*resilience*.'
  id: totrans-587
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**企业**级解决方案：这是一个托管服务，具有高可用性、增强的安全性和分类账的持续备份。该功能符合BaaS资格标准——*弹性*。'
- en: '**Automated**: Oracle''s autonomous database anchors OBP. Hence, it leverages
    the benefits of Oracle''s autonomous database, such as self-provisioning, auto
    upgrades, enhanced security, and monitoring. It auto-applies security patches
    without a downtime, enhancing security multifold and storing data in an encrypted
    state. It offers self-repairing features, which ensures the highest availability
    and reduces planned and unplanned downtime to less than two and a half minutes.
    This feature fits into the *resilience* and *monitoring *BaaS qualifiers.'
  id: totrans-588
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自动化**：Oracle的自主数据库是OBP的支柱。因此，它利用了Oracle的自主数据库的好处，如自助提供、自动升级、增强的安全性和监控。它可以在没有停机时间的情况下自动应用安全补丁，提高多层次的安全性，并以加密状态存储数据。它提供自我修复功能，确保了最高的可用性，并将计划和非计划停机时间减少到不到两分半钟。该功能符合*BaaS资格标准*中的*弹性*和*监控*。'
- en: '**Privacy**: Hyperledger Fabric offers channels and private data collection
    (refer to [Chapter 3](6aaa9b0a-84b6-4fca-82c3-864e22d616b0.xhtml), *Delving into
    Hyperledger Fabric* for more details) to allow the enterprise to conduct confidential
    transactions. The Oracle offering allows only approved peers to join channels.
    This feature fits with the *security* and *privacy* BaaS qualifiers.'
  id: totrans-589
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**隐私**：Hyperledger Fabric提供通道和私密数据收集（详细信息请参阅[第3章](6aaa9b0a-84b6-4fca-82c3-864e22d616b0.xhtml)，*深入研究Hyperledger
    Fabric*）。Oracle的产品只允许批准的对等方加入通道。该功能符合*BaaS资格标准*中的*安全*和*隐私*。'
- en: While analyzing the blockchain solution, identifying the use cases, and choosing
    the most relevant blockchain platform, it's strategically important to look at
    the core systems, business processes, and benefits the enterprise will reap from
    the inclusion of blockchain in your ecosystem. We are in an era of *cloudifying
    (cloud)* infrastructure, applications, and processes. Blockchain cloud platform
    is an excellent addition to your cloud strategy. Cloud and blockchain strategies
    go hand in hand with a vision toward the future of autonomous organizations. This
    book contains details and practices around Hyperledger Fabric and its realization
    though Oracle's blockchain cloud platform. We will be going though this in detail
    in subsequent chapters.
  id: totrans-590
  prefs: []
  type: TYPE_NORMAL
  zh: 在分析区块链解决方案，确定使用案例并选择最相关的区块链平台时，战略性地看待核心系统、业务流程以及企业将从在生态系统中引入区块链中获得的好处是非常重要的。我们正处于*云化（云）*基础架构、应用程序和流程的时代。区块链云平台是您云策略的绝佳补充。云和区块链策略与对未来自治组织的愿景紧密相关。本书介绍了Hyperledger
    Fabric及其通过Oracle区块链云平台实现的细节和实践。我们将在后续章节详细介绍此内容。
- en: Pre–built blockchain applications
  id: totrans-591
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 预构建的区块链应用程序
- en: The previous section listed OBP and its features. It also tried to match them
    with BaaS qualifiers. Almost all of the OBP features matched the BaaS qualifiers,
    except one (*Eat your own pill*). In this section, we will expand on the OBP features
    and match them with the *Eat your own pill* qualifier. This qualifier essentially
    displays the capability and maturity of BaaS offerings from a vendor. In this
    context, Oracle offers many applications that are built on OBP.
  id: totrans-592
  prefs: []
  type: TYPE_NORMAL
  zh: 上一节列出了OBP及其特性。它还试图将它们与BaaS资格标准相匹配。除了一个（*吃自己的药丸*）之外，几乎所有OBP的特性都符合BaaS资格标准。在本节中，我们将扩展OBP的特性并将它们与*吃自己的药丸*资格标准匹配。该资格标准实际上显示了供应商的BaaS产品的能力和成熟度。在这种情况下，Oracle提供了许多构建在OBP上的应用程序。
- en: Oracle is the pioneer in creating SaaS-based blockchain applications that allow
    business applications to leverage blockchain technology for traceability, enhanced
    security, and streamlined consensus. These SaaS-based blockchain applications
    are built using OBP and run on Oracle's cloud platform. They are seamlessly integrated
    with other SaaS applications, such as **s****upply chain management** (**SCM**),
    **enterprise resource planning** (**ERP**), and other cloud-based applications.
    They are also integrated with machine learning applications and IoT and AI applications.
  id: totrans-593
  prefs: []
  type: TYPE_NORMAL
  zh: Oracle 是创建基于SaaS的区块链应用的先驱，允许业务应用程序利用区块链技术进行可追溯性、增强安全性和简化共识。这些基于SaaS的区块链应用是使用OBP构建的，并在Oracle的云平台上运行。它们与其他SaaS应用程序（例如**供应链管理**（**SCM**）、**企业资源规划**（**ERP**）和其他基于云的应用程序）无缝集成。它们还与机器学习应用程序、物联网和人工智能应用程序集成。
- en: These applications solve common challenges faced by enterprises such as tracking,
    tracing, visibility, and root cause analysis. Blockchain is a technology that
    remembers. It is a technology that removes the hurdle in the tracking, tracing,
    and visibility of products. Oracle Blockchain Applications allow the tracking,
    tracing, and analytics for products through their supply chain cycle. These applications
    also allow root cause analysis and offer recommendations in challenging situations
    such as damaged products, delayed transportation, delayed delivery, and low quality.
  id: totrans-594
  prefs: []
  type: TYPE_NORMAL
  zh: 这些应用程序解决了企业面临的常见挑战，如跟踪、追溯、可见性和根本原因分析。区块链是一种能记住的技术。它是一种消除产品跟踪、追溯和可见性障碍的技术。Oracle
    区块链应用程序允许跟踪、追溯和分析产品通过其供应链周期的情况。这些应用程序还允许根本原因分析，并在诸如产品损坏、运输延误、交付延误和质量低下等挑战性情况下提供建议。
- en: 'These blockchain applications offer the following advantages:'
  id: totrans-595
  prefs: []
  type: TYPE_NORMAL
  zh: 这些区块链应用程序提供以下优势：
- en: They offer pre-built solutions to common business challenges
  id: totrans-596
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们提供预先构建的解决方案来解决常见的业务挑战。
- en: These applications are configurable, allowing for the faster interconnection
    of applications with blockchain technology to meet business needs
  id: totrans-597
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这些应用程序是可配置的，允许更快地将应用程序与区块链技术相互连接，以满足业务需求。
- en: It's a one-stop shop to add B2B partners to blockchain business networks
  id: totrans-598
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它是将B2B合作伙伴添加到区块链业务网络的一站式商店。
- en: It allows quick solutions to business challenges and saves time for business
  id: totrans-599
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它可以快速解决业务挑战，并为企业节省时间。
- en: It leads to business agility for SaaS and on-premise applications, allowing
    them to quickly leverage the benefits of blockchain technology
  id: totrans-600
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它为SaaS和本地应用程序带来业务敏捷性，使它们能够快速利用区块链技术的好处。
- en: It seamlessly integrates IoT and AI-based applications
  id: totrans-601
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它无缝集成了物联网和基于人工智能的应用程序。
- en: It offers a pre-built analytics dashboard to enhance transparency, trust, and
    visibility among businesses, its partners, and suppliers
  id: totrans-602
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它提供了预先构建的分析仪表板，以增强企业、其合作伙伴和供应商之间的透明度、信任和可见性。
- en: 'These applications offer solutions to business problems such as recalls, disputes,
    frauds, compliance issues, and counterfeits. They offer analysis and end-to-end
    traceability across the supply chain. They offer a pre-built dashboard, which
    surfaces IoT, AI, and blockchain transactions. This allows real-time insights
    for businesses. The following are the applications offered by Oracle (at the time
    of writing this book):'
  id: totrans-603
  prefs: []
  type: TYPE_NORMAL
  zh: 这些应用程序为业务问题提供解决方案，如召回、纠纷、欺诈、合规问题和仿冒品。它们提供跨供应链的分析和端到端的追溯性。它们提供了一个预先构建的仪表板，展示物联网、人工智能和区块链交易。这使企业能够实时洞察业务情况。以下是
    Oracle 提供的应用程序（在撰写本书时）：
- en: '**Oracle Intelligent Track and Trace**: It offers end-to-end asset tracking
    and tracing. It allows a digital footprint for each step and event in the process
    of the supply chain. It offers real-time insight into these events and steps in
    the process of the supply chain, from manufacturing to transportation, to sales
    and delivery.'
  id: totrans-604
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Oracle 智能追踪和追溯**：它提供端到端的资产跟踪和追溯。它为供应链过程中的每个步骤和事件提供数字化足迹。它实时提供这些事件和供应链过程中的步骤的洞察力，从制造到运输，再到销售和交付。'
- en: '**Oracle Product Lineage and Provenance**: It allows users to verify the provenance
    of the product.'
  id: totrans-605
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Oracle 产品渊源和来源**：它允许用户验证产品的来源。'
- en: '**Oracle Intelligent Cold Chain**: It tracks the product''s state from manufacturing
    to sales and offers a full audit trail of it. It emits alterations for excursions
    and offers preventive recommendations.'
  id: totrans-606
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Oracle 智能冷链**：它跟踪产品从制造到销售的状态，并提供其完整的审计追踪。它会发出针对异常情况的变更，并提供预防建议。'
- en: '**Oracle Warranty and Usage Tracking**: It tracks high-value assets and offers
    a complete audit trail of an asset''s usage. These audit trails are verifiable
    logs and can be used for product warranty and liability claims.'
  id: totrans-607
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Oracle保修与使用跟踪**：它跟踪高价值资产，并提供资产使用的完整审计跟踪。这些审计跟踪是可验证的日志，可用于产品保修和责任索赔。'
- en: Enterprises can transform their existing business processes and attain immediate
    benefits from these business-friendly applications. These applications allow enterprises
    to develop a blockchain network that allows secure, transparent, and efficient
    transactions with their suppliers and partners. Moreover, it solves common business
    problems with tracking, tracing, visibility, and root cause analysis. This is
    indeed the future for applications. Such applications work seamlessly with existing
    on-premise and cloud applications. Businesses can use out-of-the-box blockchain
    applications, set up their blockchain business network with blockchain network
    templates, and expand and integrate with applications using pre-built integration.
    We are going to learn more about this in subsequent chapters.
  id: totrans-608
  prefs: []
  type: TYPE_NORMAL
  zh: 企业可以改变其现有业务流程，并从这些适合企业使用的应用程序中获得即时好处。这些应用程序让企业可以开发一个允许与供应商和合作伙伴进行安全、透明和高效交易的区块链网络。此外，它解决了跟踪、追踪、可见性和根本原因分析等常见业务问题。这确实是应用程序的未来。这些应用程序与现有的本地和云应用程序无缝配合。企业可以使用现成的区块链应用程序，利用区块链网络模板建立他们的区块链业务网络，并使用预构建的集成扩展和整合应用程序。我们将在后续章节中更多地了解这一点。
- en: Summary
  id: totrans-609
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we delved into ledgers, blockchain definitions, blockchain
    structure, and layers. We also glanced at blockchain structure, blocks, transactions,
    and how blocks are added to the blockchain. We have familiarized ourselves with
    actors, components, and algorithms in blockchain. We also tried to coin the term
    distributed double-entry (also known as triple-entry). [Chapter 2](66a7f3de-72ef-49e8-95fb-c65908888e2e.xhtml),
    *Construing Distributed Ledger Tech and Blockchain*, will enlist use cases on
    blockchain and Hyperledger and help us identify a possible approach for them.
    Enterprises are exploring the immense opportunities of DLT and blockchain, and
    they acknowledge the strategic and long-term benefits of this distributed technology;
    however, there are various challenges tagged with DLT and blockchain that need
    to be mitigated before it is adopted by enterprises. Although there are challenges,
    there is a wide array of opportunities available. As the trust and benefits of
    DLT and blockchain grows, businesses will explore and engage more in adopting
    DLT/blockchain. Let's delve into [Chapter 2](66a7f3de-72ef-49e8-95fb-c65908888e2e.xhtml), *Construing
    Distributed Ledger Tech and Blockchain*, and explore the plethora of opportunities
    DLT-like blockchain offers by addressing various use cases.
  id: totrans-610
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们深入研究了分类帐、区块链的定义、区块链结构和层次。我们还简单看了一下区块链结构、区块、交易以及如何将区块添加到区块链中。我们熟悉了区块链中的参与者、组件和算法。我们还尝试创造了分布式复式记账（也称为三重记账）这个术语。[第二章](66a7f3de-72ef-49e8-95fb-c65908888e2e.xhtml)，*理解分布式分类账技术和区块链*，将列举区块链和超级账本的用例，并帮助我们为其确定可能的方法。企业正在探索分布式账本技术和区块链的巨大机会，并承认这种分布式技术的战略性和长期利益；然而，企业采用这种技术之前需要解决各种与分布式账本技术和区块链相关的挑战。尽管存在挑战，但也有大量的机会。随着分布式账本技术和区块链的信任和利益增长，企业将探索并更多地参与采用分布式账本技术/区块链。让我们深入研究[第二章](66a7f3de-72ef-49e8-95fb-c65908888e2e.xhtml)，*理解分布式分类账技术和区块链*，并通过解决各种用例来探索类似区块链的分布式账本技术所提供的大量机会。
