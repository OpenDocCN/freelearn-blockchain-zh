- en: '2'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '2'
- en: Quantum Computing – Key Discussion Points
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 量子计算 - 主要讨论点
- en: At a recent event, I was asked a question on the kind of problems a quantum
    computer could solve that a classical computer cannot. The audience were also
    keen to understand why quantum computers were able to do things that classical
    computers have historically struggled with. A quantum computer could potentially
    model nature and the complexities that lie within. Classical computers are yet
    to scale to that extent as bits exist in two states. The ability of quantum systems
    to exist in superpositions allows them to deal with the problems of exponential.
    In order to understand how quantum computers can, in effect, leapfrog innovations
    in several industries, it is critical to understand the fundamental principles
    of quantum physics that underlie quantum computing.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在最近的一个活动中，有人问了我一个问题，关于量子计算机可以解决哪些经典计算机无法解决的问题。观众也很想了解为什么量子计算机能够做到历史上经典计算机难以处理的事情。量子计算机可能潜在地模拟自然及其中蕴含的复杂性。经典计算机尚未达到这种程度，因为比特存在于两种状态中。量子系统存在于叠加态的能力使它们能够处理指数问题。为了理解量子计算机如何实际上在多个行业中取得创新突破，理解量子物理学的基本原理至关重要，这些原理构成了量子计算的基础。
- en: Many of these principles of quantum physics have evolved over a century, and
    have a particular weirdness about them, as they are often counter-intuitive to
    minds that have dealt with behavior and the physics of macroscopic objects. I
    have tried to capture the core principles of quantum computing (as they are understood
    today) that can explain the behavior of subatomic elements that quantum physics
    deals with. The best way to understand them in detail would be to learn the physics
    and math underlying these concepts. However, the purpose of this book is to look
    at the practical applications of quantum computing. So, I have put together real-life
    examples, and relied upon very little math and physics to explain these concepts.
    The remainder of this chapter will discuss these concepts, starting with superposition.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 这些量子物理学原理中的许多已经演变了一个世纪，并且有着特殊的怪异之处，因为它们经常与处理宏观物体的行为和物理相悖。我尝试捕捉量子计算的核心原理（就我们今天所理解的）来解释量子物理学所涉及的亚原子元素的行为。详细了解它们的最佳方法是学习这些概念的物理和数学基础。然而，本书的目的是探讨量子计算的实际应用。因此，我提供了真实的例子，并且依赖了很少的数学和物理来解释这些概念。本章的其余部分将讨论这些概念，从叠加开始。
- en: Superposition
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 叠加
- en: Superposition is one of the properties that differentiates a quantum computer
    from a classical computer. The qubits of a quantum computer can exist in 0s and
    1s and linear combinations of both of these states. A quantum computer can achieve
    a special kind of superposition that allows for exponentially more logical states
    at once. This helps in solving problems such as factoring large numbers, which
    is typically hard for classical computers to solve. Classical computers are limited
    in terms of their ability to model the number of permutations and combinations
    that cryptography needs.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 叠加是将量子计算机与经典计算机区分开的属性之一。量子计算机的量子比特可以存在于 0 和 1 的状态以及这些状态的线性组合中。量子计算机可以实现一种特殊的叠加，允许同时具有指数级更多的逻辑状态。这有助于解决诸如分解大数之类的问题，这通常对经典计算机很难解决。在密码学需要的排列组合数量建模方面，经典计算机的能力有限。
- en: An example of the application of quantum computers in cryptography involves
    RSA encryption. RSA encryption involves two large prime numbers being multiplied to arrive
    at a larger number. The following examples should bring these challenges to life.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 应用量子计算机在密码学中的一个示例涉及 RSA 加密。RSA 加密涉及两个大素数相乘得到一个更大的数。以下示例应该能体现出这些挑战。
- en: An exponential challenge
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一个指数挑战
- en: The story of the chessboard and rice brings to life the challenges in dealing
    with the exponential. When the game of chess was presented to a Sultan, he offered
    the inventor of the game any reward he pleased. The inventor proposed to get a
    grain of rice for the first square, two grains for the second, and four for the
    third and so on. With every square, the number of grains of rice would double.
    The Sultan failed to see what he was dealing with, and agreed to pay the rice
    grains.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 关于国际象棋棋盘和大米的故事生动展现了处理指数难题的挑战。当国际象棋游戏呈现给一个苏丹时，他向游戏的发明者提供了他心满意足的任何奖励。发明者提议，第一个方格得到一粒大米，第二个得到两粒，第三个得到四粒，依此类推。每个方格，米粒的数量都会加倍。苏丹没有意识到他所面对的是什么，并同意支付这些米粒。
- en: A few days later, the inventor came back and checked with the Sultan. The Sultan's
    advisors realized that it would take a large quantity of rice to pay off the inventor.
    The 64th square of the chess board will need 2^(63) grains of rice, which is 9,223,372,036,854,775,808
    grains.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 几天后，发明家回来和苏丹核对。苏丹的顾问意识到需要大量的米来支付给发明家。棋盘上的第64个方格将需要2^(63)粒米，即9,223,372,036,854,775,808粒米。
- en: '![C:\Users\karun_000\Dropbox\Quantum Chain\Book\Chapters\shutterstock_1024490005.jpg](img/B13910_02_01.png)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![C:\Users\karun_000\Dropbox\Quantum Chain\Book\Chapters\shutterstock_1024490005.jpg](img/B13910_02_01.png)'
- en: 'Figure 1: Chess board and rice grains'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 图1：棋盘和米粒
- en: The five coins puzzle
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 五枚硬币难题
- en: Linear regression is one of the statistical modeling techniques used to arrive
    at the value of a dependent variable *x* from independent variables a and b. A
    function *f(x)* represents the relationship between *x*, *a*, and *b*.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 线性回归是用于从自变量a和b到因变量*x*的值的统计建模技术之一。一个函数*f(x)*表示*x*、*a*和*b*之间的关系。
- en: Most real-world problems are often not as simple as arriving at the dependent
    variable from a few independent variables. Often, the independent variables a
    and b are correlated. Assume a and b interact with each other and their interactions
    affect the resultant variable *x*. All possible combinations of interactions of
    a and b need to be factored into calculating *x*. Assume, instead of just two
    variables, that *x* is dependent on a larger number of variables. The possible
    interactions between these variables make the problem hard to model for traditional
    computers.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数现实世界中的问题通常不像从几个自变量到因变量的简单。通常，自变量a和b是相关的。假设a和b相互作用，并且它们的相互作用影响了结果变量*x*。需要考虑a和b的所有可能相互作用的组合来计算*x*。假设，不只是两个变量，*x*取决于更多的变量。这些变量之间的可能相互作用使传统计算机难以建模。
- en: Let's think about a game involving five coins. The aim of the game is to achieve
    either the smallest or the largest possible score after tossing them. Each coin
    has a value, which can be positive or negative, and can be heads or tails, which
    also translates to be positive or negative. The overall score in the game is calculated
    by each coin's *state* (heads or tails), multiplied by the coin's value, and adding
    the score of each coin together to derive a total.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑一个涉及五枚硬币的游戏。游戏的目标是在抛掷它们后获得最小或最大可能的得分。每枚硬币都有一个值，可以是正数或负数，并且可以是正面或反面，这也对应于正数或负数。游戏中的总得分是通过每枚硬币的*状态*（正面或反面）乘以硬币的值，然后将每枚硬币的得分相加得出的。
- en: '| **Coin Identifier** | **State (Head = +1, Tail = -1)** | **Value** | **State*
    Value** |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| **硬币标识** | **状态 (正面 = +1, 反面 = -1)** | **价值** | **状态*价值** |'
- en: '| coin1 | 1 | 4 | 4 |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| coin1 | 1 | 4 | 4 |'
- en: '| coin2 | -1 | 3 | -3 |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| coin2 | -1 | 3 | -3 |'
- en: '| coin3 | 1 | 3 | 3 |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| coin3 | 1 | 3 | 3 |'
- en: '| coin4 | 1 | 5 | 5 |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| coin4 | 1 | 5 | 5 |'
- en: '| coin5 | -1 | -1 | 1 |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| coin5 | -1 | -1 | 1 |'
- en: '|  |  | Total | 10 |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '|  |  | 总计 | 10 |'
- en: 'Table 1: Detailing the five coins puzzle'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 表1：详细描述了五枚硬币难题
- en: If we wanted to get the lowest total possible total in this set up, we would
    need heads (+1) for all coins where the values are negative, and tails (-1) for
    all coins where the values are positive.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想要在这种情况下获得最低可能的总分，我们将需要所有值为负的硬币为正面（+1），所有值为正的硬币为反面（-1）。
- en: That would give us a total of -16, as shown in *Table 2*. Using the same logic,
    if I had to get the highest total, I would need heads for all coins where the
    values are positive, and tails where the values are negative, for a total of +16.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这将给我们带来总共-16，如*表2*所示。使用同样的逻辑，如果我要得到最高的总分，我将需要所有值为正的硬币为正面，所有值为负的硬币为反面，总共+16。
- en: '| **Coin Identifier** | **State (Head = +1, Tail = -1)** | **Value** | **State*
    Value** |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| **硬币标识** | **状态 (正面 = +1, 反面 = -1)** | **价值** | **状态*价值** |'
- en: '| coin1 | -1 | 4 | -4 |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| coin1 | -1 | 4 | -4 |'
- en: '| coin2 | -1 | 3 | -3 |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| coin2 | -1 | 3 | -3 |'
- en: '| coin3 | -1 | 3 | -3 |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| coin3 | -1 | 3 | -3 |'
- en: '| coin4 | -1 | 5 | -5 |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| coin4 | -1 | 5 | -5 |'
- en: '| coin5 | -1 | 1 | -1 |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| coin5 | -1 | 1 | -1 |'
- en: '|  |  | Total | -16 |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '|  |  | 总计 | -16 |'
- en: 'Table 2: Getting the lowest possible score in the five coins puzzle'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 表2：在五枚硬币难题中得到最低可能分数
- en: Now, let's add one more variable to the mix. Let us call it the correlation
    variable. The correlation between coin1 and coin2 can be represented by C(1,2).
    We have to consider the coins as pairs as well as individual coins. We will have
    far more variables to deal with in this scenario.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们将另一个变量加入到混合中。我们称之为相关变量。硬币1和硬币2之间的相关性可以用C(1,2)来表示。我们还必须考虑硬币作为成对出现，以及作为单个硬币。在这种情况下，我们将有更多的变量需要处理。
- en: 'For simplicity, if we have to find a total with just the first two coins:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 简单起见，如果我们只需找到前两个硬币的总计：
- en: Total = S1W1 + S2W2 + (C(1,2)*S1*S2)
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 总计 = S1W1 + S2W2 + (C(1,2)*S1*S2)
- en: However, if we wanted to identify the lowest total with just the two coins,
    we will need to trial it with both head and tail states for both the coins to
    get the minimal value for the total. That would be four states (HH, HT, TH, TT)
    for two coins. If we added yet another coin to the mix, the number of states would
    increase to eight states (HHH, HHT, HTH, THH, HTT, TTH, THT, TTT). The number
    of states to consider would be 2^N , where *N* will be the number of coins used
    to calculate the total. As we saw in the Chess example, this will quickly become
    a problem that is hard for conventional computers to solve. In a quantum computing
    world, the information of states could be stored more efficiently using superpositions.
    Qubits can be in both head and tail states at the same time.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，如果我们想要仅使用两枚硬币确定最低总计，我们将需要用两枚硬币的正面和反面状态进行试验，以获得总计的最小值。对于两枚硬币，将会有四种状态（正正，正反，反正，反反）。如果我们再加入另一枚硬币，状态的数量将增加到八种（正正正，正正反，正反正，反正正，正反反，反正反，反反正，反反反）。所要考虑的状态数量将是2^N，其中*N*将是用于计算总计的硬币数量。正如我们在国际象棋的例子中看到的那样，这很快就会成为传统计算机难以解决的问题。在量子计算世界中，状态的信息可以更有效地使用超定态进行存储。量子比特可以同时处于正面和反面状态。
- en: A quantum computer addresses a quantum representation such as this and identifies
    the states of the coins to arrive at the lowest value. The process involves starting
    the system with the qubits in superposition, and adjusting the states to turn
    off the superposition effect. As the correlation variable is fed into the system
    simultaneously, the superposition states will be turned off, and classical states
    for each of the coins will be chosen (heads or tails).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 量子计算机处理这种量子表示，并确定硬币的状态以得到最低值。该过程涉及在超定态中启动系统，并调整状态以关闭超定态效应。随着相关变量同时输入系统，超定态将被关闭，并且为每个硬币选择经典状态（正面或反面）。
- en: Addressing the need for exponential computing power is a considerable difference
    that quantum computing brings to the world of problem solving. In real-world scenarios
    like simulating cancer cell behavior to radio therapy, modeling stock price actions
    to market risk factors, or finding the shortest and quickest flight route from
    source to destination, quantum computing can provide several answers with varying degrees
    of confidence.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 满足指数级计算能力的需求是量子计算带给问题解决世界的一个显著区别。在现实世界场景中，例如模拟癌细胞对放疗的行为，模拟股价行为对市场风险因素的影响，或者寻找从起点到目的地的最短最快飞行路线，量子计算可以提供多个具有不同置信度的答案。
- en: As we discussed in *Chapter 14*, *Interview with Dinesh Nagarajan, Partner,
    IBM*, quantum gates act as operators that help qubits transition from one state
    to another. A quantum gate, in its basic form, is a 2 x 2 unitary matrix that
    is reversible, and preserves norms and probability amplitudes. Probability amplitude
    is a complex number that provides a relationship between the wave function of
    a quantum system and the results of observations of that system.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在*第14章*中讨论的，*与IBM合伙人Dinesh Nagarajan的采访*中所述，量子门充当操作符，帮助量子比特从一种状态过渡到另一种状态。一个量子门，在其基本形式中，是一个2
    x 2的酉矩阵，是可逆的，保留范数和概率振幅。概率振幅是一个复数，它提供了量子系统的波函数与系统观测结果之间的关系。
- en: In simplistic terms, a qubit in a base state of 0 or 1 can be put into superposition
    or an excited state when it goes through a gate. An algorithm that uses quantum
    gates to interact with qubits and provide results is called a quantum algorithm.
    When a quantum computer is represented in a circuit diagram, the wires represent
    the flow of electrons through the circuit, and each gate represents a change in
    the pattern of movement of the electron. Therefore, quantum gates are effectively
    used to drive the system to produce a result. Unlike a classical computing algorithm,
    quantum algorithms often provide probabilistic results.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 简单来说，当量子比特处于基态0或1时，通过门可以将其置于叠加态或激发态。使用量子门与量子比特进行交互并提供结果的算法称为量子算法。当量子计算机在电路图中表示时，导线代表电子通过电路的流动，每个门代表电子运动模式的变化。因此，量子门被有效地用于推动系统产生结果。与经典计算算法不同，量子算法通常提供概率性结果。
- en: '**Takeaway**: There are real-world problems that are currently unsolved, or
    are solved through approximations. Once quantum computers become mainstream, some
    of these complex problems can be addressed more effectively and with greater precision.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**要点**：目前存在一些现实世界中尚未解决的问题，或者是通过近似方法解决的。一旦量子计算机变得主流，其中一些复杂问题可以更有效地和更精确地解决。'
- en: Let us now move on to the next quantum concept of entanglement.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们转向下一个量子概念：纠缠。
- en: Entanglement – spooky action at a distance
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 纠缠 - 远程的神秘行为
- en: The quantum property of entanglement was referred to by Einstein as *Spooky
    action at a distance*. Two particles in a system are entangled if one particle
    in a system cannot be described without taking the other part into consideration.
    In a quantum computer, qubits demonstrate this property. So, the probability of
    observing the configuration of one qubit will depend on the probability of observing the
    configuration of its entangled other half. This property of qubits exists in a
    quantum system, even when the entangled pair are separated by a good distance.
    This means, if one qubit spins in a clockwise direction, its entangled pair could
    spin in a counter-clockwise direction, even when miles apart.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 爱因斯坦称量子纠缠性质为*远程的神秘行为*。如果一个系统中的两个粒子纠缠在一起，那么如果不考虑另一部分，就无法描述系统中的一个粒子。在量子计算机中，量子比特展示了这一特性。因此，观察一个量子比特的配置的概率将取决于观察其纠缠的另一半配置的概率。即使纠缠的一对比特被分开了很远，这种量子系统的特性仍然存在。这意味着，如果一个量子比特顺时针旋转，那么它的纠缠对可能会在数英里之外逆时针旋转。
- en: 'Recently, scientists in China have demonstrated entanglement at a distance
    of up to 1,200 kilometres. Source: [https://phys.org/news/2018-01-real-world-intercontinental-quantum-enabled-micius.html](https://phys.org/news/2018-01-real-world-intercontinental-quantum-enabled-micius.html)'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 最近，中国的科学家们展示了长达1200公里的距离上的纠缠。来源：[https://phys.org/news/2018-01-real-world-intercontinental-quantum-enabled-micius.html](https://phys.org/news/2018-01-real-world-intercontinental-quantum-enabled-micius.html)
- en: This experiment was conducted between a satellite and earth, where entangled
    particles were used to communicate instantaneously. The challenge in making entanglement
    happen over long distances is that the particles often get lost when transmitted
    through fiber optic networks. However, scientists have recently used laser beams
    on the world's first quantum-enabled satellite called Micius, to communicate using
    entangled photons across three different earth stations in China. Previous attempts
    at quantum communication were limited to a few hundred kilometres; this was primarily
    due to data channel losses that occurred in optical fibers.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这个实验是在卫星和地球之间进行的，其中使用纠缠粒子进行即时通信。在使纠缠发生在长距离上的挑战在于，粒子经过光纤网络传输时经常会丢失。然而，科学家们最近在世界上第一颗量子卫星“墨子”上使用激光束进行了通信，利用纠缠的光子在中国的三个不同地面站之间进行通信。之前的量子通信尝试局限于几百公里；这主要是由于光纤中发生的数据通道损失。
- en: Apart from long distance communication, quantum teleportation (which is based
    on entanglement) is an important concept in cryptography. Quantum teleportation
    is the process of transmitting information between two entangled qubits that could
    be separated by a long distance. In contrast to traditional means of secure data
    transmission, this method relies on entanglement of qubits and not on complex
    encryption functions. Quantum teleportation could be significant as it could soon
    be the foundational element of a secure internet or any communication network.
    In the next section, we discuss a Bloch sphere, which helps visualize the states
    of qubits.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 量子纠缠（基于量子纠缠）除了长距离通信外，在密码学中也是一个重要的概念。量子传送是在两个被纠缠的量子比特之间传输信息的过程，这两个比特可能被分隔很远。与传统的安全数据传输方式相比，这种方法依赖于量子比特的纠缠而不是复杂的加密函数。量子传送可能很重要，因为它很快可能成为安全互联网或任何通信网络的基础元素。在下一节中，我们将讨论布洛赫球，它有助于可视化量子比特的状态。
- en: Bloch sphere
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 布洛赫球
- en: A Bloch sphere, named after Felix Bloch, is a three dimensional, geometric representation
    of a qubit's states as points on the surface of the sphere. It also helps us understand
    how a qubit's state changes when put through a gate (operations). As it represents
    one qubit, it is not meant to demonstrate the entanglement property, where interactions
    between multiple qubits need to be considered. This section is mathematical by
    necessity, but it will be the only section in the book that uses math to this
    extent.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 布洛赫球，以菲利克斯·布洛赫命名，是一个三维几何表示量子比特状态的球体表面上的点。它还帮助我们理解当量子比特经过门（操作）时其状态如何变化。由于它代表一个量子比特，因此不适用于演示纠缠属性，其中需要考虑多个量子比特之间的相互作用。本节出于必要性而使用数学，但这将是本书中唯一使用数学到这种程度的部分。
- en: 'The poles of the Bloch sphere represent the classical states of a bit: ![](img/B13910_02_001.png)
    and ![](img/B13910_02_002.png).'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 布洛赫球的极点代表比特的经典状态：![](img/B13910_02_001.png)和![](img/B13910_02_002.png)。
- en: '![](img/B13910_02_02.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B13910_02_02.png)'
- en: 'Figure 2: A Bloch sphere'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 图2：布洛赫球
- en: 'The state of the qubit, ![](img/B13910_02_003.png), diagrammatically represented
    by a Bloch sphere, can be given as:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 由布洛赫球图示表示的量子比特状态![](img/B13910_02_003.png)，可以表示为：
- en: '![](img/B13910_02_004.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B13910_02_004.png)'
- en: 'Equation 1: Quantum computing for computer scientists, N. Yanofsky and M. Mannucci,
    Cambridge Press, 2008.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 方程式1：计算机科学家的量子计算，N. Yanofsky 和 M. Mannucci，剑桥出版社，2008年。
- en: In this representation, ![](img/B13910_02_005.png) corresponds to the latitude
    and ![](img/B13910_02_006.png) corresponds to the longitude of the qubit. Any
    point in the Bloch sphere can be represented by the range of values that ![](img/B13910_02_007.png)
    and ![](img/B13910_02_008.png) can take, given by ![](img/B13910_02_009.png) and
    ![](img/B13910_02_010.png).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个表示中，![](img/B13910_02_005.png)对应于纬度，![](img/B13910_02_006.png)对应于量子比特的经度。布洛赫球中的任何点都可以用![](img/B13910_02_007.png)和![](img/B13910_02_008.png)的取值范围来表示，由![](img/B13910_02_009.png)和![](img/B13910_02_010.png)给出。
- en: 'This means that:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着：
- en: When ![](img/B13910_02_011.png), and that represents the state of the classical
    bit.
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当![](img/B13910_02_011.png)，那代表经典比特的状态。
- en: When ![](img/B13910_02_012.png), and that represents another state of the classical
    bit. This is because φ represents the longitude, and it is meaningless at the
    pole.
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当![](img/B13910_02_012.png)，那代表另一个经典比特状态。这是因为φ代表经度，在极点处没有意义。
- en: If ![](img/B13910_02_013.png) took other values between 0 and ![](img/B13910_02_014.png),
    this would lead to a superposition state of the qubit. So, while the poles of
    the Bloch sphere derived from the equation represent the states of a classical
    bit, the state of a qubit can be given by any point in the sphere.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如果![](img/B13910_02_013.png)取0和![](img/B13910_02_014.png)之间的其他值，这将导致量子比特的叠加状态。因此，虽然从方程式导出的布洛赫球的极点代表了经典比特的状态，但量子比特的状态可以由球体中的任何点给出。
- en: How does the Bloch sphere represent the possible changes in states of a qubit,
    especially when they are observed? Continuing from the discussion in *Chapter
    14*, *Interview with Dinesh Nagarajan, Partner, IBM*, we know that the state of
    the qubit collapses to the classical states under observation. The angle ![](img/B13910_02_015.png)
    represents the probability with which the state of the qubit will collapse to
    either of the two states. If the arrow that represents the Bloch sphere is closer
    to the North Pole of the sphere, the state collapses to ![](img/B13910_02_016.png)
    and vice versa. In the next section, we look at one of the most impactful algorithms
    in the history of quantum computing.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 布洛赫球如何表示量子位的可能状态变化，特别是当它们被观察时？继续讨论 *第 14 章*，*与 IBM 合作伙伴 Dinesh Nagarajan 的采访*，我们知道量子位的状态会在观察下坍缩到经典状态。角度
    ![](img/B13910_02_015.png) 表示量子位的状态将坍缩到两种状态中的任意一种的概率。如果表示布洛赫球的箭头更接近球的北极，状态就会坍缩为
    ![](img/B13910_02_016.png)，反之亦然。在下一节中，我们将看看量子计算历史上最有影响力的算法之一。
- en: Shor's algorithm
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Shor's algorithm
- en: Peter Shor and his work have perhaps had the most impact on the evolution of
    quantum computing. In 1994, he proposed a polynomial time quantum algorithm for identifying
    prime factors. Richard Feynman [1982, 1986] had already proposed the idea of quantum
    computing to be more powerful than classical computers. However, Shor was the
    first to bring to light a practical application of quantum computers. Using his
    algorithm that demonstrates identification of prime factors of a large number,
    he inspired a generation of scientist to focus on the algorithmic acceleration
    possible using quantum computers.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 彼得·肖尔和他的工作可能对量子计算的演变产生了最大的影响。1994 年，他提出了一种用于识别素因数的多项式时间量子算法。理查德·费曼[1982, 1986]已经提出了量子计算比经典计算机更强大的想法。然而，肖尔是第一个揭示量子计算机实际应用的人。利用他的算法，可以演示识别大数的素因数，他激励了一代科学家致力于利用量子计算机进行算法加速。
- en: 'Factoring has been a mathematical challenge for a long period of time. Think
    about the number 35\. It has two prime factors: 5 and 7\. Similarly, the number
    142 has two prime factors: 11 and 13\. If there was a large odd number *N* whose
    prime factors have to be identified, we will need to divide *N* by all prime numbers
    up to ![](img/B13910_02_017.png) to identify the factors. This is a brute force
    method and is computationally intensive. Modern-day RSA cryptography relies on
    prime factoring to encrypt all our data. Passwords for our logins, credit card
    details, and other sensitive information rely on the computational difficulties
    of factoring to be safe from hackers.'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 因式分解长期以来一直是一个数学挑战。想想数字 35。它有两个素因数：5 和 7。同样，数字 142 有两个素因数：11 和 13。如果有一个大的奇数 *N*，需要确定其素因数，我们将需要将
    *N* 除以所有小于 ![](img/B13910_02_017.png) 的素数来确定因数。这是一种蛮力方法，计算密集型。现代 RSA 加密依赖于素因数分解来加密所有数据。我们登录的密码、信用卡详细信息以及其他敏感信息都依赖于因式分解的计算困难来防止黑客入侵。
- en: As it stands today, RSA 2048 has numbers going up to 617 decimal digits. While
    the factorization process has gone up through the RSA bit ranking, cracking an
    RSA 2048 number is a few years away. The Shor's algorithm provides a theoretical
    model to simplify factorization.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 截至目前，RSA 2048 的数字已经达到 617 位十进制数字。虽然因式分解过程已经通过 RSA 位排序，但破解 RSA 2048 数字还需要几年的时间。肖尔的算法提供了一个理论模型来简化因式分解。
- en: Factorization of a number can be simplified if the period of the modular exponential
    function is calculated. Let us take an example to understand the modular operation
    and the concept of period. That will help us go through the factoring algorithm.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 如果计算模幂函数的周期，则可以简化数的因式分解。让我们举一个例子来理解模运算和周期的概念。这将帮助我们了解因式分解算法。
- en: 'The result of *a (mod b)* is the remainder when a is divided by b. A few examples
    are as follows:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '*a (mod b)* 的结果是当 a 被 b 除时的余数。以下是一些示例：'
- en: 12 (mod 5) = 2
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 12 (mod 5) = 2
- en: 21 (mod 7) = 0
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 21 (mod 7) = 0
- en: 18 (mod 7) = 4
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 18 (mod 7) = 4
- en: 'The next step is to understand the concept of period. Say *N* is the number
    we need to find the factors of, and x is a co-prime to *N*. We use the following
    power function:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是理解周期的概念。假设 *N* 是我们需要找到因子的数字，而 x 是 *N* 的互质数。我们使用以下幂函数：
- en: x^a Mod (N)
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: x^a Mod (N)
- en: Now, to go through the factoring algorithm, let us take an example.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们通过一个例子来了解因式分解算法。
- en: 'Say *N* = 91 and x = 3 (co-prime to *N*). When two numbers are co-primed, their
    **greatest common divisor** (**gcd**) is 1, applying the above power function
    to derive the period:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 假设 *N* = 91，x = 3（与 *N* 互质）。当两个数字互质时，它们的**最大公约数**（**gcd**）为1，将上述幂函数应用于导出周期：
- en: 3⁰ Mod (91) = 1
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 3⁰ Mod (91) = 1
- en: 3¹ Mod (91) = 3
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 3¹ Mod (91) = 3
- en: 3² Mod (91) = 9
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 3² Mod (91) = 9
- en: 3¹ Mod (91) = 27
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 3¹ Mod (91) = 27
- en: 3⁴ Mod (91) = 81
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 3⁴ Mod (91) = 81
- en: 3⁵ Mod (91) = 61
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 3⁵ Mod (91) = 61
- en: 3⁶ Mod (91) = 1
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 3⁶ Mod (91) = 1
- en: 3⁷ Mod (91) = 3
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 3⁷ Mod (91) = 3
- en: 'As you can see, the sequence starts repeating itself after six increments of
    a. This is the period, which in this case is "6". Identifying the period is a
    hard problem to solve in factorization. However, once that is done, the factors
    can be arrived at using the following methods:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，序列在增量为a的情况下重复出现，这就是周期，本例中为"6"。确定周期是一个在因数分解中难以解决的问题。但是，一旦完成了这一步，就可以使用以下方法得到因数：
- en: '![](img/B13910_02_018.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B13910_02_018.png)'
- en: 'As r = 6, *N* =91, and x = 3 in this example, we can arrive at:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，r = 6，*N* = 91，x = 3，我们可以得到：
- en: '![](img/B13910_02_019.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B13910_02_019.png)'
- en: 'According to the factoring algorithm:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 根据因式分解算法：
- en: gcd(28,91) or gcd(26,91) will be a non-trivial factor of 91, where gcd stands
    for *greatest common divisor*. And in this case, gcd(26,91) = 13\. Once that has
    been identified, the other factor can be identified as 7.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: gcd(28,91) 或 gcd(26,91) 将是91的非平凡因子，其中gcd代表*最大公约数*。在这种情况下，gcd(26,91) = 13。一旦确定了这一点，另一个因子可以确定为7。
- en: 'That is a simple example of how the factoring algorithm works. Shor proposed
    that some of the steps in this factoring algorithm happen in a quantum computer,
    while the pre-processing and the post-processing took place in a classical computer.
    These are the steps that describe the algorithm:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因式分解算法的一个简单示例。Shor提出，该因式分解算法的部分步骤在量子计算机上执行，而预处理和后处理在经典计算机上执行。以下是描述该算法的步骤：
- en: '**Step 1**: In the above example, pick 3 as the co-prime to 91 using a classical
    computer.'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '**第一步**：在上述示例中，使用经典计算机选择3作为与91互质的数。'
- en: '**Step 2**: Create two quantum registers. Register 1 will h store the increments
    of a, in x^a Mod (N). Register 2 will store the results of x^a Mod (N).'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '**第二步**：创建两个量子寄存器。寄存器1将存储a的增量，即 x^a Mod (N)。寄存器2将存储 x^a Mod (N) 的结果。'
- en: '**Step 3**: Apply Quantum Fourier transforms to register 1 and compute the
    period r = 6 in parallel.'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '**第三步**：对寄存器1应用量子傅里叶变换，并在并行计算中计算周期r = 6。'
- en: '**Step 4**: Once the period is identified, find the gcd and arrive at the non-trivial
    factor of 91 using classical computers.'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '**第四步**：一旦确定了周期，使用经典计算机找到最大公约数，并得到91的非平凡因数。'
- en: Shor's algorithm provided a way to do the modular exponentiation and identify
    the period using quantum computing. Every element in the sequence x^a Mod (N)
    contributes to the amplitude of the period of the sequence. For all periods calculated,
    other than the right one, the spin of these contributions is in different directions,
    and hence cancel one another out. The true period, the contribution from the sequence,
    points in the same direction and gets chosen as the right value with a high probability.
    We will now look at Grover's algorithm, which offers an increase in search performance
    on unstructured data.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: Shor的算法提供了一种通过量子计算进行模指数运算并确定周期的方法。序列 x^a Mod (N) 中的每个元素都对序列的周期幅度有所贡献。对于计算得到的除正确周期之外的所有周期，这些贡献的自旋方向都不同，因此彼此抵消。真正的周期，序列的贡献指向相同的方向，并以高概率选择为正确值。现在我们将看看Grover的算法，它提供了对非结构化数据的搜索性能的提高。
- en: Grover's algorithm
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Grover的算法
- en: Lov Grover published a paper in 1996 describing Grover's algorithm. The application of
    Grover's algorithm to unstructured searches provides a quadratic speed up. If
    you want to find an item in a database and if the data is not sorted, using Grover's
    algorithm implemented using quantum computers can provide better performance than
    classical computers.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: Lov Grover在1996年发表了一篇描述Grover算法的论文。将Grover算法应用于非结构化搜索提供了二次速度提升。如果您想在数据库中找到一个项目，并且数据没有排序，使用量子计算机实现的Grover算法可以提供比经典计算机更好的性能。
- en: When a name had to be identified from *N* names within a database, and if the
    names were sorted, a classical computer could perform a binary search to find
    the name in logarithmic time. If the names were not sorted, then the search would
    involve scanning up to the *N*-1 name to find the right one.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 当需要在数据库中的 *N* 个名称中识别一个名称时，如果名称已排序，则经典计算机可以执行二进制搜索以在对数时间内找到名称。如果名称未排序，则搜索将涉及扫描多达
    *N*-1 个名称以找到正确的名称。
- en: 'If S[a] is the element we are trying to find from the database of *N* elements,
    using Grover''s algorithm can help solve the problem with ![](img/B13910_02_017.png)
    attempts. Qubits are prepared so that all numbers are in a uniform superposition
    using a Hadamard gate. Measuring the qubits at this stage would show that all
    results were equally likely:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '如果 S[a] 是我们试图从 *N* 个元素的数据库中找到的元素，则使用 Grover 算法可以帮助解决问题，尝试次数为 ![](img/B13910_02_017.png)。通过使用
    Hadamard 门准备量子比特，使所有数字处于统一的叠加状态。在这个阶段测量量子比特将显示所有结果同等可能： '
- en: '![](img/B13910_02_03.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B13910_02_03.png)'
- en: 'Figure 3: Achieving uniform amplitudes'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3：实现统一振幅
- en: 'The following equation represents the uniform magnitude of all strings:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 以下方程表示所有字符串的统一大小：
- en: '![](img/B13910_02_021.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B13910_02_021.png)'
- en: 'Now, an oracle gate is applied to flip the amplitude of s[a] and leaves the
    rest unchanged:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，对s[a]的振幅施加了一个 Oracle 门，将其翻转，而其他部分保持不变：
- en: '![](img/B13910_02_022.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B13910_02_022.png)'
- en: 'The graph can now be represented as:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 现在图表可以表示为：
- en: '![](img/B13910_02_04.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B13910_02_04.png)'
- en: 'Figure 4: Flipping the amplitude string that matches'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4：翻转匹配的振幅字符串
- en: Now the amplitude of the desired element S[a] has been flipped (to negative).
    Hence, the mean of the amplitudes ![](img/B13910_02_023.png) would have been reduced.
    This is where the Grover diffusion operator is introduced to increase the amplitude
    of S[a] absolutely.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 现在所需元素 S[a] 的振幅已经翻转（为负）。因此，振幅的平均值 ![](img/B13910_02_023.png) 将会减小。这就是引入 Grover
    扩散算子的地方，以绝对增加 S[a] 的振幅。
- en: 'All this operator does is to flip the amplitudes at the average. This results
    in the amplitude of S[a]increasing to about ![](img/B13910_02_024.png) in magnitude.
    The amplitudes looks like the following diagram:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这个算子所做的就是翻转平均振幅。这导致 S[a] 的振幅增加到约为 ![](img/B13910_02_024.png) 的大小。振幅看起来如下图所示：
- en: '![](img/B13910_02_05.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B13910_02_05.png)'
- en: 'Figure 5: Flipping amplitudes at the mean'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5：翻转平均振幅
- en: This process of applying the oracle gate and the Grover diffusion gate is repeated
    until the amplitude is significant enough. Care must also be taken that the amplitude
    of S[a] is not too large that the mean amplitude turns negative, which in turn
    will start reducing the amplitude of S[a]. At the point when the amplitude is
    almost one, the measurement of the qubits will provide the right answer. It can
    be demonstrated that this process, when repeated for about ![](img/B13910_02_025.png),
    provides accurate results.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 重复应用 Oracle 门和 Grover 扩散门的过程直到振幅足够显著。还必须注意，S[a] 的振幅不要太大，以至于平均振幅变为负数，这将导致 S[a]
    的振幅减小。当振幅几乎为一时，测量量子比特将提供正确的答案。可以证明，当重复约为 ![](img/B13910_02_025.png) 次时，此过程提供准确的结果。
- en: '**Takeaway**: The Shor and Grover algorithms laid the foundations for quantum
    computing and identified practical use cases that these algorithms can help solve.'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '**要点**：Shor 和 Grover 算法奠定了量子计算的基础，并确定了这些算法可以帮助解决的实际用例。'
- en: We will now move on to quantum annealing, which is a technique used to address
    optimization problems.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将转向量子退火，这是一种用于解决优化问题的技术。
- en: Quantum annealing
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 量子退火
- en: We have seen how superposition of qubits achieved by operations using gates
    can solve real-world problems. There are other methods to arrive at an optimized
    solution. Quantum annealing is the process of arriving at global minima using
    quantum fluctuations. The quantum tunneling effect can help with transition between states
    in a quantum annealer.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到使用门操作实现的量子比特的叠加是如何解决实际问题的。还有其他方法可以得到优化的解决方案。量子退火是利用量子波动到达全局最小值的过程。量子隧道效应可以帮助在量子退火器中的状态之间进行转换。
- en: During the quantum annealing process, the information required for optimization
    is modeled into a physical system. This process involves codifying an optimization
    problem of several correlated variables into a physical system (represented by
    qubits in superposition).
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在量子退火过程中，为了优化所需的信息被建模为一个物理系统。该过程涉及将一个涉及多个相关变量的优化问题编码为一个物理系统（由叠加态中的量子比特表示）。
- en: The solution to the problem is represented by the minimal energy state of the
    system, and the simplest function used to achieve this is called Hamiltonian.
    Quantum annealing powered by the quantum tunneling effect can address problems
    in logistics for example.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 问题的解决方案被表示为系统的最小能量状态，用来实现这一点的最简单功能称为哈密顿量。量子隧道效应驱动的量子退火可以解决物流问题，例如。
- en: Quantum tunneling
  id: totrans-120
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 量子隧道
- en: Quantum tunneling is a quantum property where particles pass through high energy
    systems. In classical physics, when an electron encounters an electric field,
    it gets repelled if the electric field is stronger than that of the electron.
    Problems that are solved using quantum annealing rely on the quantum tunneling
    property of particles.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 量子隧道是粒子穿越高能系统的量子特性。在经典物理学中，当电子遇到电场时，如果电场比电子的电场强，电子就会被排斥。使用量子退火解决的问题依赖于粒子的量子隧道性质。
- en: '![](img/B13910_02_06.png)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B13910_02_06.png)'
- en: 'Figure 6: An electron approaching an electric field'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6：电子接近电场
- en: '![](img/B13910_02_07.png)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B13910_02_07.png)'
- en: 'Figure 7: An electron repelled by the electric field'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7：电子受电场排斥
- en: '![](img/B13910_02_08.png)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B13910_02_08.png)'
- en: 'Figure 8: An electron wave moving toward an electric field'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8：电子波向电场移动
- en: '![](img/B13910_02_09.png)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B13910_02_09.png)'
- en: 'Figure 9: An electron wave tunneling through an electric field'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9：电子波穿隧通过电场
- en: Tunneling is a property that was observed by Friedrich Hund in 1927\. If an
    electron, that is traveling as a wave encounters an electric field that repels
    it, there is still a probability that it will pass through the electric field
    and find itself on the other side of the field (*Figure 9*). subatomic particles
    display tunneling properties during a radioactive decay, when particles escape
    an unstable nuclei.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 隧道效应是由弗里德里希·亨德在1927年观察到的性质。如果一颗以波的形式传播的电子遇到排斥它的电场，它仍然有概率穿过电场并出现在电场的另一侧（*图 9*）。在放射性衰变过程中，亚原子粒子表现出隧道效应，当粒子逃离不稳定的原子核时。
- en: Quantum annealing is a process that depends on the tunneling properties of particles. Let
    us look at a practical example where quantum annealing can be used.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 量子退火是依赖于粒子的隧道特性的过程。让我们看一个实际例子，量子退火可以被应用的地方。
- en: The traveling salesman
  id: totrans-132
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 旅行推销员
- en: 'The traveling salesman problem is a well-documented application of quantum
    tunneling. Say we have a salesman selling goods across a country. The optimal
    route for him to go through the country would depend on the number of cities in the country.
    If the country has three cities (A, B, and C), the optimal route could be A ->
    B -> C or A -> C -> B or B -> A -> C or B -> C -> A or C -> A-> B or C -> B ->
    A. The number of possible routes (6) is dependent on the number of cities here
    (3). The number of possible routes can be given by the factorial of the number
    of cities as:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 旅行推销员问题是量子隧道的一个广为人知的应用。假设有一个推销员在全国范围内销售货物。他穿越国家的最佳路径将取决于该国的城市数量。如果国家有三个城市（A，B和C），最佳路线可能是A
    -> B -> C或A -> C -> B或B -> A -> C或B -> C -> A或C -> A -> B或C -> B -> A。可能的路线数量（6）取决于这里的城市数量（3）。可能的路径数量可以表示为城市数量的阶乘：
- en: 3! = 3 * 2 * 1 = 6
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 3！= 3 * 2 * 1 = 6
- en: When the number of cities doubles to 6, the number of possible routes would
    be 6! = 720, which is a drastic increase. Apart from the increase in the number
    of cities, there could be other issues such as traffic jams at a point in time,
    or a road that is particularly bad. The optimal route, therefore, may not necessarily
    be the shortest route. We first need to set up the system to identify the optimal
    solution.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 当城市数量翻倍至6个时，可能的路线数量将变为6! = 720，这是一个急剧的增加。除了城市数量的增加，还可能会出现其他问题，比如某一时间点发生交通拥堵，或者有一条非常糟糕的道路。因此，最佳路线未必是最短的路线。我们首先需要建立系统来确定最佳解决方案。
- en: Let's prepare the system in a quantum superposition of many possible solutions
    of the problem. The system can be now viewed as a landscape of peaks and valleys.
    Peaks are high energy states and are expensive. Valleys, on the other hand, represent
    low energy states. As we transition between one valley and another, the probability
    of each solution evolves. The lower energy options become the more likely solution,
    until the highest probability solution is identified as the optimal solution.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将系统准备在问题的许多可能解决方案的量子叠加态中。现在系统可以被看作是一个峰谷景观。峰值是高能态，是昂贵的。另一方面，山谷代表低能态。在我们在一个山谷和另一个之间过渡时，每个解决方案的概率会演化。能量更低的选项成为更可能的解决方案，直到最高概率的解决方案被确定为最佳解决方案。
- en: In simulated annealing, heat is used to go over peaks and transition between
    valleys. With quantum annealers, the quantum tunneling effect allows us to *pass*
    the high energy *peaks* through tunnels instead of climbing them, as in simulated
    annealing.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在模拟退火中，热量被用来越过峰值并在山谷之间过渡。使用量子退火器，量子隧道效应使我们能够*穿过*高能量*峰值*而不是爬上它们，就像在模拟退火中一样。
- en: 'Quantum annealing is driven by an external magnetic field that plays the role
    of the temperature in simulated annealing: the quantum annealing starts with a
    high magnetic field (high temperature) and ends up with a low magnetic field (low
    temperature).'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 量子退火是由外部磁场驱动的，起到了模拟退火中温度的作用：量子退火从高磁场（高温度）开始，并以低磁场（低温度）结束。
- en: Quantum annealing is the process of feeding the information required for optimization
    into a physical system. The solution to the problem will be defined by the ground
    state (lowest energy state) of the system. The function used for this process
    is called the Hamiltonian function, which manages information on the energy levels
    of the system.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 量子退火是将优化所需的信息输入到物理系统的过程。问题的解决方案将由系统的基态（最低能态）定义。用于此过程的函数称为哈密顿函数，它管理系统的能级信息。
- en: We can use the Hamiltonian to manage the energy levels of the system based on
    a framework of constraints. In the traveling salesman problem, we can have higher
    energy levels assigned to longer distances, bad roads, traffic jams, and road
    closures. The optimal route would be the one with the lowest energy level. Considering
    this, how do we identify the lowest energy solution?
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用哈密尔顿量来根据一系列约束条件管理系统的能级。在旅行推销员问题中，我们可以将更高的能级分配给更长的距离、糟糕的道路、交通堵塞和道路关闭。最佳路径将是能级最低的路径。考虑到这一点，我们如何确定能量最低的解决方案？
- en: The Hamiltonian function, and the terms we add to it to increase the energy
    levels, would create peaks and troughs in the energy space. We need to find the
    troughs without having to climb the peak energy levels. This can be achieved by
    quantum tunneling, as described above. While this allows us to move from one trough
    to the other, how can we identify the lowest trough? A quantum technique called
    adiabatic quantum computation can be used for the purpose.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 哈密尔顿函数，以及我们添加以增加能级的项，会在能量空间中创建峰和谷。我们需要找到谷，而不必爬上高峰能级。如上所述，这可以通过量子隧道实现。虽然这使我们能够从一个谷到另一个谷移动，但我们如何确定最低的谷？一种称为绝热量子计算的量子技术可以用于此目的。
- en: The term *adiabatic* comes from the theory of thermodynamics and means *without
    changing the amount of heat*. In this process, the system is initialized at the
    ground state, and then slowly evolved into more complex Hamiltonians whose ground
    states encode the solution.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 术语*绝热*来自于热力学理论，意味着*不改变热量的数量*。在这个过程中，系统被初始化到基态，然后缓慢演化为更复杂的哈密顿量，其基态编码了解决方案。
- en: 'Each Hamiltonian encodes the correct assignment of variables by assigning an
    *energy penalty* to all of the incorrect configurations. The peaks in the landscape
    have a higher penalty and the valleys have a lower penalty. The optimal solution
    with the lowest energy level generally has an eigenvalue of 0\. We can time evolve
    the system to:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '每个哈密顿都通过向所有不正确的配置分配*能量惩罚*来编码变量的正确分配。景观中的峰值有更高的惩罚，而山谷有较低的惩罚。通常，最低能级的最佳解决方案具有
    0 的特征值。 我们可以时间演化系统为:'
- en: H(s) = (1 − s) H[0] + sH[1]
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: H(s) = (1 − s) H[0] + sH[1]
- en: At time s = 1, the Hamiltonian is H(1) = H[s], and the system will be in its
    ground state if the evolution has been slow. Eigenvalues and Eigenvectors are
    used across several real-world algorithms. They are used in modeling the physics
    of rotating bodies, oscillations of vibrating systems, and in risk modeling in
    investment banks.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 当时间 s = 1 时，哈密顿量为 H(1) = H[s]，如果演变缓慢，系统将处于其基态。本征值和本征矢量被用于多种现实世界的算法中。它们被用于建模旋转体的物理学、振动系统的振动以及投资银行的风险建模。
- en: 'Eigenvalues are defined below by Hoffman and Kunze (1971):'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 本征值由 Hoffman 和 Kunze（1971）以下定义：
- en: Eigenvalues are a special set of scalars associated with a linear system of
    equations (in other words, a matrix equation) that are sometimes also known as
    characteristic roots, characteristic values (Hoffman and Kunze 1971), proper values,
    or latent roots (Marcus and Minc 1988, p. 144).
  id: totrans-147
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 本征值是与线性方程组（也就是矩阵方程）相关的一组特殊标量，有时也称为特征根、特征值（Hoffman and Kunze 1971）、特征数或者潜在根（Marcus
    and Minc 1988, p. 144）。
- en: 'Reference: [http://mathworld.wolfram.com/Eigenvalue.html](http://mathworld.wolfram.com/Eigenvalue.html)'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 参考：[http://mathworld.wolfram.com/Eigenvalue.html](http://mathworld.wolfram.com/Eigenvalue.html)
- en: Quantum annealing can be used to solve optimization problems. However, we may
    not have to wait for quantum computers to use the principles of quantum annealing
    and quantum tunneling to achieve results. Fujitsu have already created a "*Quantum
    inspired digital annealer*" to solve challenging optimization problems in financial
    risk management and financial portfolio rebalancing.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 量子退火可以用于解决优化问题。然而，我们可能不需要等待量子计算机来使用量子退火和量子隧道原理来取得结果。富士通已经创建了一个“*受量子启发的数字退相干器*”来解决金融风险管理和金融投资组合再平衡中的具有挑战性的优化问题。
- en: '**Takeaway**: Quantum annealing can be used in optimizing problems across several
    industries. Finance, logistics, healthcare, and smart cities are all areas where
    this technique can be used to optimize complex problems.'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '**要点**：量子退火可以用于优化多个行业中的问题。金融、物流、医疗保健和智能城市都是可以使用这种技术来优化复杂问题的领域。'
- en: Despite all these amazing possibilities with Quantum techniques, decoherence
    is a major challenge. Let's look at that next.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管量子技术有着所有这些惊人的可能性，退相干是一个重大挑战。让我们接下来看一看。
- en: Decoherence
  id: totrans-152
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 量子退相干
- en: We discussed the Quantum Slit experiment in *Chapter 1*, *Introduction to Quantum
    Computing and Blockchain*, where we saw that photons moved through the slits and
    behaved like waves (interfering with themselves), even though they were sent one
    at a time. When a particle exhibits properties of a wave, where it interferes
    with itself, it is said to be coherent. Decoherence is the loss or the suppression
    of coherence in a system.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在*第 1 章*，*量子计算与区块链导论*中讨论了量子狭缝实验，看到光子穿过狭缝时表现出波的特性（干涉自身），即使它们是逐个发送的。当粒子表现出自身干涉的特性时，即使它们是逐个发送的。当粒子表现出自身干涉的特性时，即使它们是逐个发送的。当一个粒子表现出波的特性，即干涉自身时，就被称为相干。退相干是系统中相干性的丧失或抑制。
- en: The wave function that explains the behavior of the particle collapses when
    the state of the particle is observed. This process of decoherence, in which the
    particle that was in a superposition of states collapses to one of the two classical
    states when observed, is considered a bridge between quantum and classical physics.
    The experiment could be on an electron in superposition, and if the observer is
    measuring the z-component of the spin, the experiment will output a definite value of
    the z-component of the spin. The x-component could still remain in superposition.
    This aligns with Bohr's interpretation that properties in the quantum world come
    into existence when observed.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 当粒子的状态被观测时，解释其行为的波函数会坍缩。这个解缠现象的过程，使原本处于多重状态的粒子在被观测时坍缩为两个经典状态之一，被认为是量子和经典物理之间的桥梁。实验可能是关于处于超定态的电子，如果观察者正在测量自旋的
    z 分量，实验将输出自旋 z 分量的确定值。x 分量仍可能保持在超定态。这符合玻尔的解释，即在观测时，量子世界的性质才会出现。
- en: We know that macroscopic objects, such as human beings, do not exhibit this
    property – adopting a given state only when observed. Of course, we all exhibit
    virtuous characteristics when we know we are observed, and sometimes vice versa,
    but this is not the case with inherent attributes such as *alive* or *dead*! On
    a more serious note, how can things in the quantum world exist in multiple states
    at the same time until they are observed?
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 我们知道，宏观物体，比如人类，不表现出这种属性——只有在被观察时才采取某一状态。当然，当我们知道被观察时，我们都表现出高尚品质，有时相反，但这对于*活着*或*死去*等固有属性却不是这样！更严肃地说，量子世界中的事物如何在被观察之前处于多种状态？
- en: 'Erwin Schrodinger devised a thought experiment to illustrate the counter-intuitive
    nature, and seeming absurdity, of this concept:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 厄温·薛定谔（Erwin Schrodinger）设计了一个思想实验来说明这个概念的反直觉性质和看似荒谬的性质：
- en: A cat, radioactive material, and poison gas were placed in a box. If radioactivity
    is detected, the flask containing the poison gas would be broken and the cat would
    die. The radioactive material was small enough that radioactivity may not be detected
    for some time. Thus, at any given time, those outside of the box would be unable
    to determine whether the cat was alive or dead. Thus, by quantum logic, the cat
    could be considered to be both alive and dead!
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 一只猫、放射性物质和毒气被放置在一个箱子里。如果探测到放射性，盛放毒气的瓶子将被打破，猫会死。放射性物质足够小，以至于有时无法检测到放射性。因此，在任何时候，箱子外的人都无法确定猫是活着还是死了。因此，按照量子逻辑，可以认为猫既活着又死了！
- en: Schrodinger questioned how this could possibly be the case within the quantum
    world, when it is clearly not the case in the macroscopic world. All quantum experiments
    thus far, however, have affirmed the theory that quantum objects do indeed appear
    capable of existing in two states until observed.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 薛定谔质疑在量子世界中这可能如何发生，而在宏观世界中显然不是这样。迄今为止，所有的量子实验都肯定了量子物体确实似乎能够存在于两种状态，直到被观测到。
- en: Quantum Error Correction
  id: totrans-159
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 量子纠错
- en: '**Quantum Error Correction** (**QEC**) is a critical process that makes the
    results of the quantum system reliable. In the initial days of quantum computing,
    correcting a quantum computer efficiently without triggering decoherence of the
    computation was considered highly non-intuitive. A lack of reliable error correction
    in a quantum system was a major roadblock because quantum algorithms use interference,
    which is fragile. This interference made quantum algorithms sensitive to imprecision
    in the system and to the coupling between the system and the rest of the world.'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '**量子纠错**（**QEC**）是一个关键的过程，使量子系统的结果变得可靠。在量子计算的初期阶段，高效地纠正量子计算机，同时又不触发计算的失真，被认为是极其不直观的。量子系统中缺乏可靠的纠错是一个主要的障碍，因为量子算法使用的是干涉，而干涉是脆弱的。这种干涉使量子算法对系统的不精确性和系统与世界其他部分之间的耦合敏感。'
- en: 'Some of the common reasons for errors include:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 一些常见错误的原因包括：
- en: Preparation of the initial state of the system
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 系统初态的准备
- en: Decoherence of qubits can occur due to interactions with the environment
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 量子比特由于与环境的相互作用而发生失真
- en: Inaccuracies in gates
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 门上的不准确
- en: Imperfections in the measurement process
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测量过程中的缺陷
- en: Peter Shor and Andrew Steane developed the first set of quantum error correcting
    codes. While Peter Shor identified that 9 qubits could be put together to perform
    error correction on one qubit, Steane discovered a 7-qubit error correction methodology.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 彼得·肖尔（Peter Shor）和安德鲁·斯蒂恩（Andrew Steane）开发了第一套量子纠错码。肖尔发现可以将 9 个量子比特组合在一起对一个量子比特进行纠错，而斯蒂恩则发现了一种由
    7 个量子比特组成的纠错方法。
- en: Loss in quantum information due to interference with the environment can be
    addressed using the distribution of information. If the information is distributed
    across several qubits instead of one qubit, the information is safer. In classical
    computing, error correction using repetition code uses three bits to store copies
    of information from one bit. So, unless two of the copies are error prone, the
    information is intact. While this is a simple process in classical computers,
    with quantum computers, copying information from one qubit to another is more
    complicated.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 由于与环境的干涉而导致的量子信息丢失可以通过信息的分布来处理。如果信息分布在多个量子比特而不是一个量子比特上，信息将更加安全。在经典计算中，使用重复码进行纠错需要用三位来存储来自一位的信息的副本。因此，除非两份副本有错误，否则信息将完好无损。虽然这在经典计算中是一个简单的过程，但对于量子计算机来说，从一个量子比特复制信息到另一个量子比特更加复杂。
- en: It was Shor who proposed a method to generalize the repetition code method for
    quantum computers. The solution he proposed was to encode a qubit with the repetition
    code on the basis states.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 将重复码方法推广到量子计算机的方法是由Shor提出的。他提出的解决方案是在基态上使用重复码对量子位进行编码。
- en: Post-selected quantum computation was developed by Emanuel Knill, and demonstrated
    that quantum computing at scale could be achieved through error detection rather
    than error correction. The quantum computer would have error detecting circuits
    and if errors (noise) are detected to have breached a threshold, the relevant
    subroutine of the algorithm is reset and re-run. This addresses high levels of
    error tolerance but has high resource requirements.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 通过Emanuel Knill开发的后选择量子计算表明，通过错误检测而不是错误校正可以实现量子计算的规模化。量子计算机将具有错误检测电路，如果检测到错误（噪声）已经突破了阈值，则将算法的相关子程序重置并重新运行。这解决了高级别的错误容忍度，但具有高资源需求。
- en: Another useful method for dealing with quantum errors is to use quantum error
    correcting codes called stabilizers. These are quite useful tools for developers
    of quantum systems. The stabilizer code specification has numerous applications,
    including the design of preparation circuits, correction circuits, and fault-tolerant
    logical gates. Using stabilizers to define quantum error correction codes helps
    apply logical operations on encoded data using correction circuits. The 7-qubit
    method developed by Andrew Steane, which constructs a logical qubit using seven
    physical qubits, has the ability to correct single X or Z errors.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 处理量子错误的另一种有用方法是使用称为稳定器的量子纠错码。对于量子系统的开发者来说，这些是相当有用的工具。稳定器代码规范有许多应用，包括准备电路、校正电路和容错逻辑门的设计。使用稳定器来定义量子纠错码有助于使用校正电路在编码数据上应用逻辑操作。由安德鲁·斯坦（Andrew
    Steane）开发的7量子位方法构建了一个使用七个物理量子位的逻辑量子位，具有校正单个X或Z错误的能力。
- en: '**Takeaway**: The key takeaway is that error correction in quantum computing
    is a non-trivial exercise. The complexities in QEC and the various options available
    to address them are worthy of a whole book. It is a critical aspect of quantum
    computing that has helped transform quantum computing from theories to a practical
    possibility.'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '**要点**：量子计算中的错误校正是一个非平凡的练习。QEC的复杂性以及解决它们的各种选项值得一本书来详细讨论。这是量子计算的一个关键方面，它已经帮助将量子计算从理论转变为实际可能性。'
- en: Conclusion
  id: totrans-172
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: In order to understand the interviews in this book, and the key inferences from
    them, it is essential that this chapter is well understood by the reader. For
    the same reason, I have described the concepts of quantum computing using practical
    examples, with comparisons to classical computing equivalents. There are a few
    concepts of quantum computing that are hard to grasp without delving into the
    underlying physics (if not the math). In such cases, the simplification of the
    underlying concepts of physics in this chapter would help understand the weirdness in
    the behavior of microscopic elements that make up a quantum system. The simplified
    version may make a quantum scientist cringe, but I firmly believe that simplifying
    the narrative is critical for any technology to go mainstream.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 为了理解本书中的访谈以及从中得出的关键推论，读者充分理解本章是必不可少的。出于同样的原因，我使用实际示例描述了量子计算的概念，并将其与经典计算等价物进行了比较。有一些量子计算的概念，如果不深入研究底层物理（如果不是数学的话），就很难理解。在这种情况下，本章对物理基础概念的简化将有助于理解组成量子系统的微观元素行为中的怪异之处。简化的版本可能会让量子科学家感到不舒服，但我坚信简化叙述对于任何技术走向主流都是至关重要的。
- en: References
  id: totrans-174
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[https://www2.physics.ox.ac.uk/sites/default/files/ErrorCorrectionSteane06.pdf](https://www2.physics.ox.ac.uk/sites/default/files/ErrorCorrectionSteane06.pdf)'
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://www2.physics.ox.ac.uk/sites/default/files/ErrorCorrectionSteane06.pdf](https://www2.physics.ox.ac.uk/sites/default/files/ErrorCorrectionSteane06.pdf)'
- en: '[https://journals.jps.jp/doi/full/10.7566/JPSJ.88.061009](https://journals.jps.jp/doi/full/10.7566/JPSJ.88.061009)'
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://journals.jps.jp/doi/full/10.7566/JPSJ.88.061009](https://journals.jps.jp/doi/full/10.7566/JPSJ.88.061009)'
- en: '[https://arxiv.org/pdf/quant-ph/9508027.pdf](https://arxiv.org/pdf/quant-ph/9508027.pdf)'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://arxiv.org/pdf/quant-ph/9508027.pdf](https://arxiv.org/pdf/quant-ph/9508027.pdf)'
- en: '[http://science.sciencemag.org/content/356/6343/1140](http://science.sciencemag.org/content/356/6343/1140)'
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[http://science.sciencemag.org/content/356/6343/1140](http://science.sciencemag.org/content/356/6343/1140)'
- en: '[https://people.cs.umass.edu/~strubell/doc/quantum_tutorial.pdf](https://people.cs.umass.edu/~strubell/doc/quantum_tutorial.pdf)'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://people.cs.umass.edu/~strubell/doc/quantum_tutorial.pdf](https://people.cs.umass.edu/~strubell/doc/quantum_tutorial.pdf)'
- en: '[https://cs.uwaterloo.ca/~watrous/LectureNotes/CPSC519.Winter2006/05.pdf](https://cs.uwaterloo.ca/~watrous/LectureNotes/CPSC519.Winter2006/05.pdf)'
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://cs.uwaterloo.ca/~watrous/LectureNotes/CPSC519.Winter2006/05.pdf](https://cs.uwaterloo.ca/~watrous/LectureNotes/CPSC519.Winter2006/05.pdf)'
- en: '[https://grove-docs.readthedocs.io/en/latest/vqe.html](https://grove-docs.readthedocs.io/en/latest/vqe.html)'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://grove-docs.readthedocs.io/en/latest/vqe.html](https://grove-docs.readthedocs.io/en/latest/vqe.html)'
- en: '[https://quantumexperience.ng.bluemix.net/qx/tutorial?sectionId=beginners-guide&page=004-The_Weird_and_Wonderful_World_of_the_Qubit~2F001-The_Weird_and_Wonderful_World_of_the_Qubit](https://quantumexperience.ng.bluemix.net/qx/tutorial?sectionId=beginners-guide&page=004-The_Weird_and_Wonderful_World_of_the_Qubit~2F001-The_Weird_and_Wonderful_World_of_the_Qubit)'
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://quantumexperience.ng.bluemix.net/qx/tutorial?sectionId=beginners-guide&page=004-The_Weird_and_Wonderful_World_of_the_Qubit~2F001-The_Weird_and_Wonderful_World_of_the_Qubit](https://quantumexperience.ng.bluemix.net/qx/tutorial?sectionId=beginners-guide&page=004-The_Weird_and_Wonderful_World_of_the_Qubit~2F001-The_Weird_and_Wonderful_World_of_the_Qubit)'
- en: '[https://medium.com/@jonathan_hui/qc-cracking-rsa-with-shors-algorithm-bc22cb7b7767](mailto:https://medium.com/@jonathan_hui/qc-cracking-rsa-with-shors-algorithm-bc22cb7b7767)'
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://medium.com/@jonathan_hui/qc-cracking-rsa-with-shors-algorithm-bc22cb7b7767](mailto:https://medium.com/@jonathan_hui/qc-cracking-rsa-with-shors-algorithm-bc22cb7b7767)'
- en: '[https://www.scottaaronson.com/blog/?p=208](https://www.scottaaronson.com/blog/?p=208)'
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://www.scottaaronson.com/blog/?p=208](https://www.scottaaronson.com/blog/?p=208)'
- en: '[https://quantumexperience.ng.bluemix.net/proxy/tutorial/full-user-guide/004-Quantum_Algorithms/070-Grover''s_Algorithm.html](https://quantumexperience.ng.bluemix.net/proxy/tutorial/full-user-guide/004-Quantum_Algorithms/070-Grover''s_Algorithm.html)'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://quantumexperience.ng.bluemix.net/proxy/tutorial/full-user-guide/004-Quantum_Algorithms/070-Grover''s_Algorithm.html](https://quantumexperience.ng.bluemix.net/proxy/tutorial/full-user-guide/004-Quantum_Algorithms/070-Grover''s_Algorithm.html)'
- en: '[https://www.cs.cmu.edu/~odonnell/quantum15/lecture04.pdf](https://www.cs.cmu.edu/~odonnell/quantum15/lecture04.pdf)'
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://www.cs.cmu.edu/~odonnell/quantum15/lecture04.pdf](https://www.cs.cmu.edu/~odonnell/quantum15/lecture04.pdf)'
- en: '[https://medium.com/@quantum_wa/quantum-annealing-cdb129e96601](mailto:https://medium.com/@quantum_wa/quantum-annealing-cdb129e96601)'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://medium.com/@quantum_wa/quantum-annealing-cdb129e96601](mailto:https://medium.com/@quantum_wa/quantum-annealing-cdb129e96601)'
