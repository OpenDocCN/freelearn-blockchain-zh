- en: Blockchain - Outside of Currencies
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 区块链 - 货币之外
- en: Digital currencies were the first-ever application of blockchain technology,
    arguably without realizing its real potential. With the invention of Bitcoin,
    the concept of blockchain was introduced for the very first time, but it was not
    until 2013 that the true potential of blockchain technology was realized with
    its possible application in many different industries, other than cryptocurrencies.
    Since then many use cases of blockchain technology in various industries have
    been proposed, including but not limited to finance, the Internet of Things, digital
    rights management, government, and law.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 数字货币是区块链技术的首次应用，可以说并没有意识到其真正的潜力。随着比特币的发明，区块链的概念首次被引入，但直到2013年才意识到了区块链技术在许多不同行业中的真正潜力，而不仅仅是加密货币。从那时起，人们提出了区块链技术在各个行业的许多用例，包括但不限于金融、物联网、数字版权管理、政府和法律。
- en: In this chapter, four main industries namely the Internet of Things, government,
    health, and finance, have been selected, with the aid of use cases, for discussion.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，通过使用案例，选择了四个主要行业，即物联网、政府、卫生和金融，进行讨论。
- en: In 2010, discussion started regarding BitDNS, a decentralized naming system
    for domains on the internet. Then Namecoin ([https://wiki.namecoin.org/index.php?title=History](https://wiki.namecoin.org/index.php?title=History))
    started in April 2011 with a different vision as compared to Bitcoin whose sole
    purpose is to provision electronic cash. This can be considered first example
    of blockchain usage other than purely cryptocurrencies.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 2010年，开始讨论BitDNS，一个互联网域名的分散命名系统。然后，Namecoin ([https://wiki.namecoin.org/index.php?title=History](https://wiki.namecoin.org/index.php?title=History))于2011年4月开始，其愿景与比特币不同，比特币的唯一目的是提供电子现金。这可以被认为是除了纯粹的加密货币之外第一个区块链用途的例子。
- en: After this by 2013, many ideas emerged. Since 2013 this trend is growing exponentially.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 从2013年开始，许多想法涌现出来。自2013年以来，这一趋势呈指数级增长。
- en: Internet of Things
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 物联网
- en: The **Internet of Things** (**IoT**) for short has recently gained much traction
    due to its potential for transforming business applications and everyday life.
    IoT can be defined as a network of computationally intelligent physical objects
    (any object such as cars, fridges, industrial sensors, and so on) that are capable
    of connecting to the internet, sensing real-world events or environments, reacting
    to those events, collecting relevant data, and communicating it over the internet.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**物联网**（**IoT**）简称最近因其改变商业应用和日常生活的潜力而受到了很多关注。物联网可以被定义为一个由计算智能物理对象（如汽车、冰箱、工业传感器等任何物体）组成的网络，这些对象能够连接到互联网，感知现实世界的事件或环境，对这些事件做出反应，收集相关数据，并通过互联网进行通信。'
- en: This simple definition has enormous implications and has led to exciting concepts,
    such as wearables, smart homes, smart grids, smart connected cars, and smart cities,
    that are all based on this basic concept of an IoT device. After dissecting the
    definition of IoT, four functions come to light as being performed by an IoT device.
    These include **sensing**, **reacting**, **collecting**, and **communicating**.
    All these functions are performed by using various components on the IoT device.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 这个简单的定义具有巨大的影响，并引发了令人兴奋的概念，如可穿戴设备、智能家居、智能电网、智能联网汽车和智能城市，这些概念都基于物联网设备的这一基本概念。在剖析物联网的定义之后，四个功能浮出水面，这些功能由物联网设备执行。这些功能包括**感知**、**反应**、**收集**和**通信**。所有这些功能都是通过物联网设备上的各种组件执行的。
- en: Sensing is performed by sensors. Reacting or controlling is performed by actuators,
    the collection is a function of various sensors, and communication is performed
    by chips that provide network connectivity. One thing to note is that all these
    components are accessible and controllable via the internet in the IoT. An IoT
    device on its own is perhaps useful to some extent, but if it is part of a broader
    IoT ecosystem, it is more valuable.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 感知由传感器执行。反应或控制由执行器执行，收集是各种传感器的功能，通信是由提供网络连接的芯片执行的。值得注意的是，物联网中所有这些组件都可以通过互联网访问和控制。物联网设备本身可能在某种程度上有用，但如果它是更广泛的物联网生态系统的一部分，则更有价值。
- en: 'A typical IoT can consist of many physical objects connecting with each other
    and to a centralized cloud server. This is shown in the following diagram:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 典型的物联网可以由许多物理对象相互连接和连接到集中的云服务器组成。如下图所示：
- en: '![](img/e6f1262b-4c86-4d17-a817-e1d438db8f7a.jpg)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e6f1262b-4c86-4d17-a817-e1d438db8f7a.jpg)'
- en: A typical IoT network
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 典型的物联网网络
- en: 'Source: IBM'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 出处：IBM
- en: 'Elements of IoT are spread across multiple layers, and various reference architectures
    exist that can be used to develop IoT systems. A five-layer model can be used
    to describe IoT, which contains a physical object layer, device layer, network
    layer, services layer, and application layer. Each layer or level is responsible
    for various functions and includes multiple components. These are shown in the
    following diagram:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 物联网的元素分布在多个层中，且存在可用于开发物联网系统的各种参考架构。可使用五层模型来描述物联网，其中包含物理对象层，设备层，网络层，服务层和应用层。每个层级负责各种功能，并包含多个组件。这些显示在以下图中：
- en: '![](img/879e7509-93b0-49e8-8336-49d6cbfeaf26.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](img/879e7509-93b0-49e8-8336-49d6cbfeaf26.png)'
- en: IoT five-layer model
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 物联网五层模型
- en: Now we will examine each layer in detail.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将详细检查每个层。
- en: Physical object layer
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 物理对象层
- en: These include any real-world physical objects. It includes people, animals,
    cars, trees, fridges, trains, factories, homes, and in fact anything that is required
    to be monitored and controlled can be connected to the IoT.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这些对象包括任何现实世界中的物体。包括人、动物、汽车、树木、冰箱、火车、工厂、家庭，实际上任何需要监控和控制的东西都可以连接到物联网。
- en: Device layer
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设备层
- en: This layer contains things that make up the IoT such as sensors, transducers,
    actuators, smartphones, smart devices, and **Radio-Frequency Identification**
    (**RFID**) tags. There can be many categories of sensors such as body sensors,
    home sensors, and environmental sensors based on the type of work they perform.
    This layer is the core of an IoT ecosystem where various sensors are used to sense
    real-world environments. This layer includes sensors that can monitor temperature,
    humidity, liquid flow, chemicals, air, pressure, and much more. Usually, an **Analog
    to Digital Converter** (**ADC**) is required on a device to turn the real-world
    analog signal into a digital signal that a microprocessor can understand.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 此层包含构成物联网的东西，如传感器、传感器、执行器、智能手机、智能设备和**射频识别**（**RFID**）标签。传感器可以有许多类别，如体感传感器、家庭传感器和基于其执行的工作类型的环境传感器。该层是物联网生态系统的核心，各种传感器用于感知现实环境。该层包括可以监测温度、湿度、液体流动、化学物质、空气、压力等的传感器。通常，设备上需要**模拟至数字转换器**（**ADC**）将现实世界的模拟信号转换为微处理器可以理解的数字信号。
- en: Actuators in this layer provide the means to enable control of external environments,
    for example, starting a motor or opening a door. These components also require
    digital to analog converters to convert a digital signal into analog. This method
    is especially relevant when control of a mechanical component is required by the
    IoT device.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 此层的执行器提供了启用对外部环境进行控制的手段，例如启动电机或打开门。这些组件还需要数字模拟转换器，以将数字信号转换为模拟信号。当物联网设备需要控制机械部件时，这种方法尤其重要。
- en: Network layer
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网络层
- en: This layer is composed of various network devices that are used to provide Internet
    connectivity between devices and to the cloud or servers that are part of the
    IoT ecosystem. These devices can include gateways, routers, hubs, and switches.
    This layer can include two types of communication.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 该层由用于在物联网生态系统中设备之间和与云端或服务器之间提供互联网连接的各种网络设备组成。这些设备可以包括网关、路由器、集线器和交换机。该层可以包括两种通信类型。
- en: First there is the horizontal means of communication, which includes radio,
    Bluetooth, Wi-Fi, Ethernet, LAN, Zigbee, and PAN and can be used to provide communication
    between IoT devices. Second, we have communication to the next layer, which is
    usually through the internet and provides communication between machines and people
    or other upper layers. The first layer can optionally be included in the device
    layer as it physically is residing on the device layer where devices can communicate
    with each other at the same layer.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 首先是水平通信手段，包括无线电，蓝牙，Wi-Fi，以太网，局域网，Zigbee 和个人局域网(PAN)，可用于提供物联网设备之间的通信。其次，我们有与下一层的通信，通常是通过互联网，提供机器与人或其他上层之间的通信。第一层可以选择性地包含在设备层，因为它实际上是位于设备层上的，设备可以在同一层相互通信。
- en: Management layer
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理层
- en: This layer provides the management layer for the IoT ecosystem. This includes
    platforms that enable processing of data gathered from the IoT devices and turn
    that into meaningful insights. Also, device management, security management, and
    data flow management are included in this layer. It also manages communication
    between the device and application layers.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 该层为物联网生态系统提供管理层。这包括能够处理从物联网设备收集的数据并将其转化为有意义的洞见的平台。此外，设备管理、安全管理和数据流管理也包括在此层中。它还管理设备与应用层之间的通信。
- en: Application layer
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应用层
- en: This layer includes applications running on top of the IoT network. This layer
    can consist of many applications depending on the requirements such as transportation,
    healthcare, financial, insurance, or supply chain management. This list, of course,
    is not an exhaustive list by any stretch of the imagination; there is a myriad
    of IoT applications that can fall into this layer.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 此层包括在物联网网络顶部运行的应用程序。根据需求，此层可以包含许多应用程序，如交通运输、医疗保健、金融、保险或供应链管理。当然，这个列表并不是任何想象力的完整列表；有许多物联网应用可以归入此层。
- en: With the availability of cheap sensors, hardware, and bandwidth, IoT has gained
    popularity in recent years and currently has applications in many different areas
    including healthcare, insurance, supply chain management, home automation, industrial
    automation, and infrastructure management. Moreover, advancements in technology
    such as the availability of IPv6, smaller and powerful processors, and better
    internet access have also played a vital role in the popularity of IoT.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 随着廉价传感器、硬件和带宽的可用性，物联网近年来在各个领域获得了广泛的应用，目前在许多不同领域都有应用，包括医疗保健、保险、供应链管理、家庭自动化、工业自动化和基础设施管理。此外，技术的进步，如IPv6的可用性、更小更强大的处理器和更好的互联网接入，也在物联网的普及中发挥了关键作用。
- en: The benefits of IoT range from cost saving to enabling businesses to make vital
    decisions and thus improve performance based on the data provided by the IoT devices.
    Even in domestic usage IoT equipped home appliances can provide valuable data
    for cost saving. For example, smart meters for energy monitoring can provide valuable
    information on how the energy is being used and can convey that back to the service
    provider. Raw data from millions of things (IoT devices) is analyzed and provides
    meaningful insights that help in making timely and efficient business decisions.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 物联网的好处从节省成本到使企业能够根据物联网设备提供的数据做出关键决策并因此提高绩效。即使在家庭使用中，物联网设备配备的家用电器也可以提供有价值的节能数据。例如，用于能源监测的智能电表可以提供有关能源使用情况的宝贵信息，并将其传达回服务提供商。来自数百万物品（物联网设备）的原始数据被分析并提供有意义的见解，有助于及时和有效地做出业务决策。
- en: The usual IoT model is based on a centralized paradigm where IoT devices usually
    connect to a cloud infrastructure or central servers to report and process the
    relevant data back. This centralization poses certain possibilities of exploitation
    including hacking and data theft. Moreover, not having control of personal data
    on a single, centralized service provider also increases the possibility of security
    and privacy issues. While there are methods and techniques to build a highly secure
    IoT ecosystem based on the normal IoT model, there are specific much more desirable
    benefits that blockchain can bring to IoT. A blockchain-based IoT model differs
    from the traditional IoT network paradigm.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 通常的物联网模型基于中心化范式，物联网设备通常连接到云基础设施或中央服务器以报告和处理相关数据。这种集中化带来了某些利用可能性，包括黑客攻击和数据盗窃。此外，对个人数据在单一中心化服务提供商上缺乏控制也增加了安全和隐私问题的可能性。虽然有方法和技术可以构建基于普通物联网模型的高度安全的物联网生态系统，但区块链对物联网可以带来特定且更加可取的好处。基于区块链的物联网模型不同于传统的物联网网络范式。
- en: According to IBM, blockchain for IoT can help to build trust, reduce costs,
    and accelerate transactions. Additionally, decentralization, which is at the very
    core of blockchain technology, can eliminate single points of failure in an IoT
    network. For example, a central server perhaps is not able to cope with the amount
    of data that billions of IoT devices (things) are producing at high frequency.
    Also, the peer-to-peer communication model provided by blockchain can help to
    reduce costs because there is no need to build high-cost centralized data centers
    or implementation of complex public key infrastructure for security. Devices can
    communicate with each other directly or via routers.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 根据IBM的说法，区块链对物联网的作用在于帮助建立信任、降低成本并加速交易。此外，区块链技术的核心——去中心化，可以消除物联网网络中的单点故障。例如，一个中央服务器可能无法应对数十亿个物联网设备（物）以高频率产生的数据量。此外，区块链提供的点对点通信模型可以帮助降低成本，因为无需建立高成本的集中式数据中心或实施复杂的公钥基础设施来保障安全。设备可以直接或通过路由器相互通信。
- en: As an estimate of various researchers and companies, by 2020 there will be roughly
    22 billion devices connected to the internet. With this explosion of billions
    of devices connecting to the internet, it is hard to imagine that centralized
    infrastructures will be able to cope with the high demands of bandwidth, services,
    and availability without incurring excessive expenditure. Blockchain-based IoT
    will be able to solve scalability, privacy, and reliability issues in the current
    IoT model.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 据各种研究机构和公司的估计，到2020年，将有大约220亿台设备连接到互联网。随着数十亿台设备连接到互联网，很难想象集中式基础设施将能够满足对带宽、服务和可用性的高需求而不会产生过多的支出。基于区块链的物联网将能够解决当前物联网模型中的可扩展性、隐私性和可靠性问题。
- en: Blockchain enables *things* to communicate and transact with each other directly
    and with the availability of smart contracts, negotiation, and financial transactions
    can also occur directly between the devices instead of requiring an intermediary,
    authority, or human intervention. For example, if a room in a hotel is vacant,
    it can rent itself out, negotiate the rent, and can open the door lock for a human
    who has paid the right amount of funds. Another example could be that if a washing
    machine runs out of detergent, it could order it online after finding the best
    price and value based on the logic programmed in its smart contract.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链使“物”能够直接通信和交易，而且在智能合约的可用性下，谈判和金融交易也可以直接在设备之间进行，而无需中间商、权威或人工干预。例如，如果酒店中的一个房间空置，它可以出租自己，谈判租金，并为支付了足够资金的人打开门锁。另一个例子可能是，如果洗衣机用完了洗涤剂，它可以在智能合约中编程的逻辑基础上找到最优价格和价值后在线订购洗涤剂。
- en: 'The aforementioned five-layer IoT model can be adapted to a blockchain-based
    model by adding a blockchain layer on top of the network layer. This layer will
    run smart contracts, and provide security, privacy, integrity, autonomy, scalability,
    and decentralization services to the IoT ecosystem. The management layer, in this
    case, can consist of only software related to analytics and processing, and security
    and control can be moved to the blockchain layer. This model can be visualized
    in the following diagram:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 上述的五层物联网模型可以通过在网络层之上添加一个区块链层来适应基于区块链的模型。该层将运行智能合约，并为物联网生态系统提供安全性、隐私性、完整性、自主性、可扩展性和去中心化服务。在这种情况下，管理层可以仅由与分析和处理相关的软件组成，而安全性和控制可以移至区块链层。该模型可以在以下图表中可视化：
- en: '![](img/e6c6713c-9066-4482-bd29-9085e6562700.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e6c6713c-9066-4482-bd29-9085e6562700.png)'
- en: Blockchain-based IoT model
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 基于区块链的物联网模型
- en: In this model, other layers would perhaps remain the same, but an additional
    blockchain layer will be introduced as a middleware between all participants of
    the IoT network.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个模型中，其他层可能保持不变，但会引入一个额外的区块链层作为物联网网络所有参与者之间的中间件。
- en: 'It can also be visualized as a peer-to-peer IoT network after abstracting away
    all the layers mentioned earlier. This model is shown in the following diagram
    where all devices are communicating and negotiating with each other without a
    central command and control entity:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在摘除了前面提到的所有层之后，它也可以被视为点对点的物联网网络。在这个模型中，所有设备都在没有中央指挥和控制实体的情况下相互通信和协商，如下图所示：
- en: '![](img/289f1c70-ba87-429f-aab2-9aa473b57dce.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](img/289f1c70-ba87-429f-aab2-9aa473b57dce.jpg)'
- en: 'Blockchain-based direct communication model, source: IBM'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 基于区块链的直接通信模型，来源：IBM
- en: It can also result in cost saving which is due to easier device management by
    using a blockchain based decentralized approach. The IoT network can be optimized
    for performance by using blockchain. In this case, there will be no need to store
    IoT data centrally for millions of devices because storage and processing requirements
    can be distributed to all IoT devices on the blockchain. This can result in completely
    removing the need for large data centers for processing and storing the IoT data.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 采用基于区块链的去中心化方法，还可以实现成本节约。通过区块链，设备管理变得更容易。可以通过使用区块链优化物联网网络的性能。在这种情况下，不需要为数百万台设备集中存储物联网数据，因为存储和处理要求可以分布到区块链上的所有物联网设备上。这可以完全消除处理和存储物联网数据的大型数据中心的需求。
- en: Blockchain-based IoT can also thwart denial of service attacks where hackers
    can target a centralized server or data center more efficiently, but with blockchain's
    distributed and decentralized nature, such attacks are no longer possible. Additionally,
    if as estimated there will be billions of devices connected to the internet soon,
    it will become almost impossible to manage security and updates of all those devices
    from traditional centrally-owned servers. Blockchain can provide a solution to
    this problem by allowing devices to communicate with each other directly in a
    secure manner and even request firmware and security updates from each other.
    On a blockchain network, these communications can be recorded immutably and securely
    which will provide auditability, integrity, and transparency to the system. This
    mechanism is not possible with traditional peer-to-peer systems.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 基于区块链的物联网还可以防止服务拒绝攻击，黑客可以更有效地针对集中服务器或数据中心，但使用区块链的分布式和去中心化性质，此类攻击不再可能。此外，如果按估计，很快将有数十亿台设备连接到互联网，从传统的集中式服务器管理所有这些设备的安全性和更新几乎是不可能的。区块链可以通过允许设备以安全的方式直接相互通信，甚至从彼此请求固件和安全更新来解决此问题。在区块链网络上，这些通信可以被记录下来，保证不可变性和安全性，从而为系统提供了可审计性、完整性和透明度。这种机制在传统的点对点系统中是不可能的。
- en: In summary, there are clear benefits that can be reaped with the convergence
    of IoT and blockchain and a lot of research and work in academia and industry
    are already in progress. There are various projects already proposed providing
    blockchain-based IoT solutions. For example, IBM Blue Horizon and IBM Bluemix
    are IoT platforms supporting blockchain IoT platforms. Various start-ups such
    as Filament have already proposed novel ideas on how to build a decentralized
    network that enables devices on IoT to transact with each other directly and autonomously
    driven by smart contracts.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，物联网和区块链的融合可以带来明显的好处，学术界和工业界已经在进行大量的研究和工作。已经提出了各种提供基于区块链的物联网解决方案的项目。例如，IBM蓝色地平线和IBM
    Bluemix是支持区块链物联网平台的物联网平台。各种初创公司如Filament已经提出了关于如何构建使物联网设备能够直接和自主地通过智能合约进行交易的分散网络的新颖想法。
- en: In the following section, a practical example is provided on how to build a
    simple IoT device and connect it to the Ethereum blockchain. This IoT device is
    connected to the Ethereum blockchain and is used to open a door (in this case
    the door lock is represented by an LED) when the appropriate amount of funds is
    sent by a user on the blockchain. This is a simple example and requires a more
    rigorously-tested version to implement it in production, but it demonstrates how
    an IoT device can be connected, controlled, and responded to in response to certain
    events on an Ethereum blockchain.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分，提供了一个实际的例子，说明了如何构建一个简单的物联网设备并将其连接到以太坊区块链。这个物联网设备连接到以太坊区块链，当区块链上的用户发送了适当数量的资金时，用于打开一扇门（在本例中，门锁由LED表示）。这只是一个简单的例子，需要一个更严格测试的版本才能将其投入生产，但它演示了如何将物联网设备连接、控制和响应于以太坊区块链上的某些事件。
- en: IoT blockchain experiment
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 物联网区块链实验
- en: 'This example makes use of a Raspberry Pi device which is a **Single Board Computer**
    (**SBC**). The Raspberry Pi is a SBC developed as a low-cost computer to promote
    computer education but has also gained much more popularity as a tool of choice
    for building IoT platforms. A Raspberry Pi 3 Model B is shown in the following
    picture. You may be able to use earlier models too, but those have not been tested:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 本示例使用了树莓派设备，树莓派是一种**单板计算机**（**SBC**）。树莓派是一种低成本的计算机，旨在促进计算机教育，但也因其作为构建物联网平台的首选工具而广受欢迎。以下图片显示了树莓派3型B型。您也可以使用早期型号，但尚未经过测试：
- en: '![](img/af1cf9b3-1737-49a0-b108-e764782a4dfe.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](img/af1cf9b3-1737-49a0-b108-e764782a4dfe.jpg)'
- en: Raspberry Pi Model B
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派 Model B
- en: In the following section, an example will be discussed where a Raspberry Pi
    will be used as an IoT device connected to the Ethereum blockchain and will act
    in response to a smart contract invocation.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分中，将讨论一个例子，其中树莓派将作为连接到以太坊区块链的IoT设备，并响应智能合约调用的示例。
- en: First, the Raspberry Pi needs to be set up. This can be done by using NOOBS
    which provides an easy method of installing Raspbian or any other operating system.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，需要设置树莓派。这可以通过使用NOOBS来完成，NOOBS提供了一个安装Raspbian或其他操作系统的简单方法。
- en: This can be downloaded and installed from the link [https://www.raspberrypi.org/downloads/noobs/](https://www.raspberrypi.org/downloads/noobs/).
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 可以从链接[https://www.raspberrypi.org/downloads/noobs/](https://www.raspberrypi.org/downloads/noobs/)下载并安装。
- en: Alternatively, only Raspbian can be installed from the link [https://www.raspberrypi.org/downloads/raspbian/](https://www.raspberrypi.org/downloads/raspbian/).
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，你可以从链接[https://www.raspberrypi.org/downloads/raspbian/](https://www.raspberrypi.org/downloads/raspbian/)安装Raspbian。
- en: Another alternative available at [https://github.com/debian-pi/raspbian-ua-netinst](https://github.com/debian-pi/raspbian-ua-netinst)
    can also be used to install a minimal non-GUI version of Raspbian OS.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个可用的选择在[https://github.com/debian-pi/raspbian-ua-netinst](https://github.com/debian-pi/raspbian-ua-netinst)也可以用来安装Raspbian
    OS的最小非GUI版本。
- en: For this example, NOOBS has been used to install Raspbian, as such the rest
    of the exercise assumes Raspbian is installed on the SD memory card of the Raspberry
    Pi. The command output in the following screenshot shows that which architecture
    the operating system is running on. In this case, it is `armv71`; therefore ARM-compatible
    binary for Geth will be downloaded.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本例，已经使用NOOBS来安装Raspbian，因此，其余的操作假设Raspbian已经安装在树莓派的SD存储卡上。下面截图中的命令输出显示了操作系统正在运行的架构。在这种情况下，它是`armv71`；因此，将下载适用于ARM的Geth二进制文件。
- en: The platform can be confirmed by running the command `uname -a` in a terminal
    window in Raspberry Pi Raspbian operating system.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过在Raspberry Pi Raspbian操作系统的终端窗口中运行命令`uname -a`来确认平台。
- en: '![](img/f785964f-ac2c-4e68-bbe6-242a54b3f0f0.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f785964f-ac2c-4e68-bbe6-242a54b3f0f0.png)'
- en: Raspberry Pi architecture
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派架构
- en: Once the Raspbian operating system is installed, the next step is to download
    the appropriate Geth binary for the Raspberry Pi ARM platform.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 安装了Raspbian操作系统后，下一步是为树莓派ARM平台下载适当的Geth二进制文件。
- en: 'The download and installation steps are described in detail:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 下载和安装步骤详细描述如下：
- en: Geth download. Note that in the following example a specific version is downloaded
    however other versions are available which can be downloaded from [https://geth.ethereum.org/downloads/](https://geth.ethereum.org/downloads/).
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Geth 下载。请注意，在下面的示例中下载了特定版本，但也有其他可下载的版本，可以从[https://geth.ethereum.org/downloads/](https://geth.ethereum.org/downloads/)下载。
- en: 'We can use `wget`, to download the `geth` client images:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`wget`来下载`geth`客户端映像：
- en: '[PRE0]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Other versions are also available, but it's recommended that you download this
    version, as this is the one that has been used in examples in this chapter.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以使用其他版本，但建议你下载此版本，因为这是本章示例中使用的版本。
- en: 'Unzip and extract into a directory. The directory named `geth-linux-arm7-1.5.6-2a609af5`
    will be created automatically with the `tar` command shown next:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解压缩并提取到一个目录。使用下面显示的`tar`命令将自动创建名为`geth-linux-arm7-1.5.6-2a609af5`的目录：
- en: '[PRE1]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This command will create a directory named `geth-linux-arm7-1.5.6-2a609af5`
    and will extract the Geth binary and related files into that directory.  The Geth
    binary can be copied into `/usr/bin` or the appropriate path on Raspbian to make
    it available from anywhere in the operating system. When the download is finished,
    the next step is to create the genesis block.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令将创建一个名为`geth-linux-arm7-1.5.6-2a609af5`的目录，并将Geth二进制文件和相关文件解压缩到该目录中。Geth二进制文件可以复制到`/usr/bin`或Raspbian上的适当路径中，以便在操作系统中的任何地方都可用。下载完成后，下一步是创建创世区块。
- en: A genesis block needs to be used . The genesis file can be copied from the other
    node on the network. This is shown in the following screenshot. Alternatively,
    an entirely new genesis block can be generated.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 需要使用创世区块。可以从网络上的其他节点复制创世文件。下图显示了这一点。或者，也可以生成一个全新的创世区块。
- en: '[PRE2]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Once the `genesis.json` file is copied onto the Raspberry Pi; the following
    command can be run to generate the genesis block. It is important that the same
    genesis block is used that was generated previously otherwise the nodes will effectively
    be running on separate networks:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`genesis.json`文件复制到树莓派后，可以运行以下命令来生成起源块。重要的是使用先前生成的相同起源块，否则节点将实际上在不同的网络上运行：
- en: '[PRE3]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This will show the output similar to the one shown in the following screenshot:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 将显示类似于以下截图中所示的输出：
- en: '![](img/f5af344b-1558-4731-94ae-f39dcb6ac953.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f5af344b-1558-4731-94ae-f39dcb6ac953.jpg)'
- en: Initialize genesis ﬁle
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 初始化起源文件
- en: 'After genesis block creation, there is a need to add peers to the network.
    This can be achieved by creating a file named `static-nodes.json`, which contains
    the enode ID of the peer that `geth` on the Raspberry Pi will connect for syncing:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建起源块后，有必要向网络中添加对等节点。可以通过创建一个名为`static-nodes.json`的文件来实现，其中包含供树莓派上的`geth`用于同步连接的对等方的enode
    ID：
- en: '![](img/a909c009-a5d2-4a30-abc2-b2dfc76d6b25.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a909c009-a5d2-4a30-abc2-b2dfc76d6b25.png)'
- en: Static nodes conﬁguration
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 静态节点配置
- en: 'This information can be obtained from the Geth JavaScript console by running
    the following command, and this command should be run on the peer to which Raspberry
    Pi is going to connect:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过在Geth JavaScript控制台上运行以下命令来获取此信息，此命令应该在树莓派要连接的对等方上运行：
- en: '[PRE4]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'This will show the output similar to the one shown in the following screenshot:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这将显示类似于以下截图中所示的输出：
- en: '![](img/9e8f8557-ed16-47c7-8012-3c2dc11fd9ba.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9e8f8557-ed16-47c7-8012-3c2dc11fd9ba.png)'
- en: geth nodeInfo
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: geth nodeInfo
- en: After this step, further instructions presented in the following sections can
    be followed to connect Raspberry Pi to the other node on the private network.
    In the example, the Raspberry Pi will be connected to the network ID `786` *.*
    The key is to use the same genesis file created previously and different port
    numbers. Same genesis file will ensure that clients connect to the same network
    in which the genesis file originated from.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 完成这一步之后，可以按照以下部分中提供的进一步说明来连接树莓派到私有网络上的其他节点。在本示例中，树莓派将连接到网络 ID `786` *.* 关键是使用先前创建的相同起源文件和不同的端口号。相同的起源文件将确保客户端连接到与起源文件相同的网络。
- en: Different ports are not a strict requirement, however, if the two nodes are
    running under a private network and access from an environment external to the
    network is required then a combination of DMZ, router and port forwarding will
    be used. Therefore, it is recommended to use different TCP ports to allow port
    forwarding to work correctly. The `--identity` switch shown in the following command
    for first node set up, which hasn't been introduced previously, allows for an
    identifying name to be specified for the node.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 不同的端口不是严格要求的，但是，如果两个节点在私有网络下运行，并且需要从网络外部访问，则将使用DMZ、路由器和端口转发的组合。因此，建议使用不同的TCP端口以确保端口转发工作正常。第一次节点设置中显示的`--identity`开关在以前并未介绍过，它允许为节点指定一个标识名称。
- en: First node setup
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第一个节点设置
- en: 'First, the `geth` client needs to be started on the first node using the following
    command:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，需要使用以下命令在第一个节点上启动`geth`客户端：
- en: '[PRE5]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'This will give the output similar to the following:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 这将产生类似于以下内容的输出：
- en: '![](img/edcc6dee-38c2-484d-90ee-23baa19dc291.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![](img/edcc6dee-38c2-484d-90ee-23baa19dc291.png)'
- en: geth on first node
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个节点上的geth
- en: Once this is started up, it should be kept running, and another `geth` instance
    should be started from the Raspberry Pi node.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 启动后，应保持其运行，并应从树莓派节点上启动另一个`geth`实例。
- en: Raspberry Pi node setup
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 树莓派节点设置
- en: 'On Raspberry Pi, the following command is required to be run to start `geth`
    and to sync it with other nodes (in this case only one node). The following is
    the command:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在树莓派上，需要运行以下命令来启动`geth`并将其与其他节点进行同步（在本例中仅一个节点）。以下是命令：
- en: '[PRE6]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: This should produce the output similar to the one shown in the following screenshot.
    When the output contains the row displaying `Block synchronisation started` it
    means that the node has connected successfully to its peer.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 这应产生类似于以下屏幕截图中显示的输出。当输出中包含显示`区块同步已启动`的行时，这意味着节点已成功连接到其对等节点。
- en: '![](img/a027b48b-9a5b-404a-bc16-03d2c82eb8c1.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a027b48b-9a5b-404a-bc16-03d2c82eb8c1.png)'
- en: geth on the Raspberry Pi.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派上的geth。
- en: 'This can be further verified by running commands in the `geth` console on both
    nodes as shown in the following screenshot. The `geth` client can be attached
    by simply running the following command on the Raspberry Pi:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以通过在两个节点上的 `geth` 控制台中运行命令来进一步验证，如下面的截图所示。只需在树莓派上运行以下命令即可连接到 `geth` 客户端：
- en: '[PRE7]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'This will open the JavaScript `geth` console for interacting with the `geth`
    node. We can use `admin.peers` command to see the connected peers:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 这将打开用于与 `geth` 节点交互的 JavaScript `geth` 控制台。我们可以使用 `admin.peers` 命令来查看连接的对等节点：
- en: '![](img/84ff77e5-98e8-4ff8-ad04-0e13394245ea.png)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![](img/84ff77e5-98e8-4ff8-ad04-0e13394245ea.png)'
- en: geth console admin peers command running on Raspberry Pi
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在树莓派上运行的 geth 控制台 admin peers 命令
- en: 'Similarly, we can attach to the `geth` instance by running the following command
    on the first node:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，可以通过在第一个节点上运行以下命令来连接到 `geth` 实例：
- en: '[PRE8]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Once the console is available `admin.peers` can be run to reveal the details
    about other connected nodes as shown in the following screenshot:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦控制台可用，可以运行 `admin.peers` 命令来显示其他连接节点的详细信息，如下面的截图所示：
- en: '![](img/3fcb4ee4-3d0b-4899-ac97-5831b605bcc3.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3fcb4ee4-3d0b-4899-ac97-5831b605bcc3.jpg)'
- en: geth console admin peers command running on the other peer
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在其他对等节点上运行的 geth 控制台 admin peers 命令
- en: Once both nodes are up-and-running further prerequisites can be installed to
    set up the experiment. Installation of Node.js and the relevant JavaScript libraries
    is required.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦两个节点都启动，可以安装进一步的先决条件来设置实验。需要安装 Node.js 和相关的 JavaScript 库。
- en: Installing Node.js
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 Node.js
- en: 'The required libraries and dependencies are listed here. First Node.js and
    npm need to be updated on the Raspberry Pi Raspbian operating system. For this
    the following steps can be followed:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 这里列出了所需的库和依赖项。首先需要在树莓派 Raspbian 操作系统上更新 Node.js 和 npm。为此，可以按照以下步骤进行操作：
- en: 'Install latest Node.js on the Raspberry Pi using the following command:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令在树莓派上安装最新的 Node.js：
- en: '[PRE9]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'This should display output similar to the following. The output is quite large
    therefore only the top part of the output is shown in the following screenshot:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该显示类似以下的输出。输出内容相当多，因此以下截图仅显示了输出的顶部部分：
- en: '![](img/40c0f85b-884f-44a3-9d05-cd7793488e25.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![](img/40c0f85b-884f-44a3-9d05-cd7793488e25.png)'
- en: Node.js installation
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 Node.js
- en: 'Run the update via `apt-get`:'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过 `apt-get` 运行更新：
- en: '[PRE10]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Verification can be performed by running the following command to ensure that
    the correct versions of Node.js and npm are installed, as shown in the following
    screenshot:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 可通过运行以下命令执行验证，以确保正确安装了 Node.js 和 npm 的正确版本，如下面的截图所示：
- en: '![](img/48190d0c-42aa-4600-aa25-bf3b50a23cf4.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![](img/48190d0c-42aa-4600-aa25-bf3b50a23cf4.png)'
- en: npm and node installation veriﬁcation
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: npm 和 node 安装验证
- en: It should be noted that these versions are not a necessity; any of the latest
    version of npm and Node.js should work. However, the examples in this chapter
    make use of npm 4.0.5 and node v7.4.0, so it is recommended that readers use the
    same version in order to avoid any compatibility issues.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，这些版本并非必须；最新版本的 npm 和 Node.js 中的任何版本都应该可以使用。但是，本章的示例使用 npm 4.0.5 和 node
    v7.4.0，因此建议读者使用相同版本，以避免任何兼容性问题。
- en: 'Install Ethereum `web3` npm, which is required to enable JavaScript code to
    access the Ethereum blockchain:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装以启用 JavaScript 代码访问以太坊区块链的 Ethereum `web3` npm：
- en: Make sure that specific version of `web3` shown in the screenshot is installed
    or a version similar to this for example 0.20.2\. This is important because by
    default version 1.0.0-beta.26 (at the time of writing) will be installed which
    is beta and is under development. Therefore `web3` 0.20.2 or 0.18.0 stable version
    should be used for this example. Readers can install this version by using `$
    npm install web3@0.20.2`.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 确保安装了截图中显示的特定版本的 `web3` 或类似版本，例如 0.20.2。这很重要，因为默认情况下将安装 1.0.0-beta.26 版本（写作时的版本），该版本为
    beta 版本，正在开发中。因此，本例应使用 `web3` 0.20.2 或 0.18.0 稳定版本。读者可以通过 `$ npm install web3@0.20.2`
    命令安装此版本。
- en: '![](img/c09cca9c-bff3-40e4-a538-1886207c3d44.png)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c09cca9c-bff3-40e4-a538-1886207c3d44.png)'
- en: npm install web3
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: npm install web3
- en: 'Similarly, npm `onoff` can be installed, which is required to communicate with
    the Raspberry Pi and control GPIO:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 类似地，可以安装 npm `onoff`，以与树莓派进行通信并控制 GPIO：
- en: '[PRE11]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![](img/3bf03b0a-0405-470b-b4a8-06a99cee3758.png)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3bf03b0a-0405-470b-b4a8-06a99cee3758.png)'
- en: Onoff installation
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 Onoff
- en: When all the prerequisites are installed, hardware setup can be performed. For
    this purpose, a simple circuit is built using a breadboard and a few electronic
    components.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 安装了所有先决条件之后，可以进行硬件设置。为此，可以使用面包板和一些电子元件构建一个简单的电路。
- en: 'The hardware components are listed as follows:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 硬件组件列示如下：
- en: '**LED**: The abbreviation of **Light Emitting Diode**, this can be used as
    a visual indication for an event.'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**LED**: 轻发光二极管的缩写，可以用作事件的视觉指示。'
- en: '**Resistor**: A 330 ohm component is required which provides resistance to
    passing current based on its rating. It is not necessary to understand the theory
    behind it for this experiment; any standard electronics engineering text covers
    all these topics in detail.'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**电阻**: 需要一个330欧姆的元件，根据其额定值对通过的电流提供阻力。对于本实验无需了解其背后的理论；任何标准的电子工程文本都详细介绍了所有这些主题。'
- en: '**Breadboard**: This provides a means of building an electronic circuit without
    requiring soldering.'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**面包板**: 这提供了一种不需要焊接就可以建立电子电路的方法。'
- en: '**T-Shaped cobbler**: This is inserted on the breadboard as shown in the following
    photo and provides a labeled view of all **General Purpose I/O** (**GPIO**) pins
    for the Raspberry Pi.'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**T形导线**: 此导线如下图所示插入到面包板上，并提供了树莓派的**通用输入/输出**（**GPIO**）管脚的标记视图。'
- en: '**Ribbon cable connector**: This is simply used to provide connectivity between
    the Raspberry Pi and the breadboard via GPIO. All these components are shown in
    the following picture:'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**排线连接器**: 这只是用于通过GPIO在树莓派和面包板之间提供连通性。所有这些组件如下图所示：'
- en: '![](img/5757c049-56cb-4de1-a214-489b8a11952b.jpg)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5757c049-56cb-4de1-a214-489b8a11952b.jpg)'
- en: Required components
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 所需组件
- en: Circuit
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 电路
- en: As shown in the following picture, the positive leg (long leg) of the LED is
    connected to pin number **21** of the GPIO, and the negative (short leg) is connected
    to the resistor, which is then connected to the **ground** (**GND**) pin of the
    GPIO. Once the connections are set up the ribbon cable can be used to connect
    to the GPIO connector on the Raspberry Pi simply.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 如下图所示，LED的正腿（长腿）连接到GPIO的**21**管脚，负腿（短腿）连接到电阻，然后连接到GPIO的**地**（**GND**）管脚。一旦连接设置好，可以简单地使用排线连接到树莓派的GPIO连接器。
- en: '![](img/96b739e1-6385-46bf-ae13-296f2d1f3c3b.png)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![](img/96b739e1-6385-46bf-ae13-296f2d1f3c3b.png)'
- en: Connections for components on the breadboard
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 面包板上的组件连接
- en: Once the connections are set up correctly, and the Raspberry Pi has been updated
    with the appropriate libraries and Geth, the next step is to develop a simple,
    smart contract that expects a value. If the value provided to it is not what it
    expects it does not trigger an event; otherwise if the value passed matches the
    correct value, the event triggers which can be read by the client JavaScript program
    running via Node.js. Of course, the Solidity contract can be very complicated
    and can also deal with the Ether sent to it, and if the amount of Ether is equal
    to the required amount, then the event can trigger. However, in this example,
    the aim is to demonstrate the usage of smart contracts to trigger events that
    can then be read by JavaScript program running on Node.js, which then, in turn,
    can trigger actions on IoT devices using various libraries.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦连接正确设置，并且树莓派已经更新了适当的库和Geth，下一步就是开发一个简单的智能合同，该合同期望一个值。如果提供给它的值不是它期望的，它就不会触发一个事件。然而，如果传递的值与正确的值匹配，事件就会触发，这个事件可以被在通过Node.js运行的客户端JavaScript程序读取。当然，Solidity合同可能非常复杂，也可以处理发送到它的以太，如果以太的数量等于所需数量，那么事件就能触发。然而，在这个例子中，目标是展示使用智能合同来触发事件，然后通过Node.js上运行的JavaScript程序读取这些事件，然后借此可以使用各种库来触发物联网设备上的操作。
- en: 'The smart contract source code is shown as follows:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 智能合同源代码如下：
- en: '![](img/ca16bbd7-4a9c-418b-bb4e-a1392972e1ed.png)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ca16bbd7-4a9c-418b-bb4e-a1392972e1ed.png)'
- en: Solidity code for simple IOT
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 简单IOT的Solidity代码
- en: 'The online Solidity compiler (Remix IDE) can be used to run and test this contract.
    The **Application Binary Interface** (**ABI**) required for interacting with the
    contract is also available in the Details section as shown in the following screenshot:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用在线Solidity编译器（Remix IDE）来运行和测试本合同。与该合同交互所需的**应用二进制接口**（**ABI**）也可在详情部分找到，如下截图所示：
- en: '![](img/399e4c20-260d-405f-83cc-da4e91a1ffe6.png)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![](img/399e4c20-260d-405f-83cc-da4e91a1ffe6.png)'
- en: ABI from Remix IDE
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 来自Remix IDE的ABI
- en: 'The following is the ABI of the contract:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是合同的ABI：
- en: '[PRE12]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: There are two methods by which the Raspberry Pi node can connect to the private
    blockchain via the `web3` interface. The first is where the Raspberry Pi device
    is running its own `geth` client locally and maintains its ledger, but with resource-constrained
    devices, it is not possible to run a full `geth` node or even a light node in
    a few circumstances. In that case, the second method, which uses `web3` provider
    can be used to connect to the appropriate RPC channel. This will be shown later
    in the client JavaScript Node.js program.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派节点可以通过`web3`接口连接到私有区块链有两种方法。第一种是树莓派设备在本地运行自己的`geth`客户端并维护其分类账，但对于资源受限的设备，在某些情况下，不可能运行完整的`geth`节点甚至是轻节点。在这种情况下，可以使用第二种方法，该方法使用`web3`提供程序连接到适当的
    RPC 通道。这将在客户端 JavaScript Node.js 程序中稍后显示。
- en: 'A comparison of both of these approaches is shown in the following diagram:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 这两种方法的比较如下图所示：
- en: '![](img/4d969160-4874-4689-a9cc-8d7115a95612.png)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4d969160-4874-4689-a9cc-8d7115a95612.png)'
- en: Application architecture of room rent IoT application (IoT device with local
    ledger)
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 房屋租赁物联网应用程序的应用架构（带本地分类账的物联网设备）
- en: '![](img/a8e6fb7d-5ea8-41ad-8805-620b4cd5e63e.jpg)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a8e6fb7d-5ea8-41ad-8805-620b4cd5e63e.jpg)'
- en: Application architecture of room rent IoT application (IoT device without local
    ledger)
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 房屋租赁物联网应用程序的应用架构（不带本地分类账的物联网设备）
- en: There are obvious security concerns which arise from exposing RPC interfaces
    publicly; therefore, it is recommended that this option is used only on private
    networks and if required to be used on public networks appropriate security measures
    are put in place, such as allowing only the known IP addresses to connect to the
    `geth` RPC interface. This can be achieved by a combination of disabling peer
    discovery mechanisms and HTTP-RPC server listening interfaces.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 公开 RPC 接口会引发明显的安全问题；因此，建议仅在私有网络上使用此选项，如果需要在公共网络上使用，则应采取适当的安全措施，例如仅允许已知 IP 地址连接到`geth`
    RPC 接口。可以通过禁用对等发现机制和 HTTP-RPC 服务器监听接口的组合来实现这一点。
- en: More information about this can be found using `geth help`. The traditional
    network security measures such as firewalls, **Transport Layer Security** (**TLS**)
    and certificates can also be used but have not been discussed in this example.
    Now Truffle can be used to deploy the contract on the private network ID `786`
    to which at this point the Raspberry Pi is connected. Truffle deploy can be performed
    simply by using the following shown command;
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用`geth help`获取有关此的更多信息。传统的网络安全措施，如防火墙、**传输层安全性**（**TLS**）和证书也可以使用，但在本示例中未讨论。现在，Truffle
    可以用于将合同部署到私有网络 ID `786`，此时树莓派连接到该网络。可以通过使用以下显示的命令简单执行 Truffle 部署；
- en: '[PRE13]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'It should produce the output similar to the following screenshot:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 应该产生类似以下截图的输出：
- en: '![](img/0c907b6d-9abe-4f4d-9295-53d92bd73681.png)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0c907b6d-9abe-4f4d-9295-53d92bd73681.png)'
- en: Truffle deploy
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: Truffle 部署
- en: 'Once the contract is deployed correctly, JavaScript code can be developed that
    will connect to the blockchain via `web3`, listen for the events from the smart
    contract in the blockchain, and turn the LED on via the Raspberry Pi. The JavaScript
    code of the `index.js` file is shown as follows:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦合同正确部署，可以开发 JavaScript 代码，该代码将通过`web3`连接到区块链，监听区块链中智能合同的事件，并通过树莓派点亮 LED。`index.js`文件的
    JavaScript 代码如下所示：
- en: '[PRE14]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Note that in the preceding example the contract address `'0x975881c44fbef4573fef33cccec1777a8f76669c'`
    for variable `var ContractAddress` is specific to the deployment and it will be
    different when readers run this example. Simply change the address in the file
    to what you see after deploying the contract.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在上面的示例中，变量`var ContractAddress`的合同地址`'0x975881c44fbef4573fef33cccec1777a8f76669c'`是特定于部署的，当读者运行此示例时将会不同。只需在文件中将地址更改为部署合同后看到的内容即可。
- en: 'Also, note that the HTTP-RPC server listening port on which Geth has been started
    on Raspberry Pi. By default, it is TCP port `8545`. Remember to change this according
    to your Raspberry Pi setup and Geth configuration. It is set to `9002` in the
    preceding example code because Geth running on Raspberry Pi is listening on `9002`
    in the example. If it''s listening to a different port on your Raspberry Pi, then
    change it to that port:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 还要注意树莓派上启动的 Geth 的 HTTP-RPC 服务器监听端口。默认情况下，它是 TCP 端口`8545`。记得根据您的树莓派设置和 Geth
    配置更改此端口。在上面的示例代码中，它设置为`9002`，因为树莓派上运行的 Geth 在该示例中正在监听`9002`。如果您的树莓派上的监听端口不同，请将其更改为该端口：
- en: '[PRE15]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: When Geth starts up it shown which port it has HTTP endpoint listening on. This
    is also configurable with `--rpcport` in `geth` by specifying the port number
    value as a parameter to the flag.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 当 Geth 启动时，它会显示它正在监听的 HTTP 端口。这也可以通过在 `geth` 中使用 `--rpcport` 并将端口号值作为标志的参数来配置。
- en: 'This JavaScript code can be placed in a file on the Raspberry Pi, for example,
    `index.js`. It can be run by using the following command:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 这段 JavaScript 代码可以放在树莓派上的一个文件中，例如 `index.js`。它可以通过以下命令运行：
- en: '[PRE16]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: This will start the program, which will run on Node.js and listen for events
    from the smart contract. Once the program is running correctly, the smart contract
    can be invoked by using the Truffle console as shown in the following screenshot.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 这将启动程序，该程序将在 Node.js 上运行，并监听来自智能合约的事件。一旦程序正确运行，就可以使用 Truffle 控制台调用智能合约，如下图所示。
- en: 'In this case, the `getRent` function is called with parameter `10`, which is
    the expected value:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，将调用 `getRent` 函数，并传入参数 `10`，这是预期的值：
- en: '![](img/19a77308-ecbd-4be7-aa4f-e3b3ad8b3f80.png)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![](img/19a77308-ecbd-4be7-aa4f-e3b3ad8b3f80.png)'
- en: Interaction with the contract
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 与合约的交互
- en: After the contract is mined, `roomRented` will be triggered, which will turn
    on the LED.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 合约被挖出后，将触发 `roomRented`，从而打开 LED 灯。
- en: 'In this example, it is a simple LED, but it can be any physical device such
    as a room lock that can be controlled via an actuator. If all works well, the
    LED will be turned on as a result of the smart contract function invocation as
    shown in the following picture:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，它是一个简单的 LED 灯，但它可以是任何可以通过执行器控制的物理设备，比如房间锁。如果一切顺利，LED 将在智能合约函数调用的结果下打开，如下图所示：
- en: '![](img/6ff8a349-8303-4257-8726-4dc3b6737d1e.png)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6ff8a349-8303-4257-8726-4dc3b6737d1e.png)'
- en: Raspberry Pi with LED control
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 带有 LED 控制的 Raspberry Pi
- en: 'Also, on node side it will display output similar to the one shown here:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，在节点端，它会显示类似于下图的输出：
- en: '[PRE17]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: As demonstrated in the preceding example, a private network of IoT devices can
    be built that runs a `geth` client on each of the nodes and can listen for events
    from smart contracts and trigger an action accordingly. The example shown is simple
    on purpose but demonstrates the underlying principles of an Ethereum network that
    can be built using IoT devices along with smart contract-driven control of the
    physical devices.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 正如前面的例子所示，可以建立一个私有网络的物联网设备，每个节点上运行一个 `geth` 客户端，并可以监听来自智能合约的事件，并相应地触发一个动作。所示的例子故意简单，但演示了使用物联网设备以及智能合约驱动的物理设备控制来构建以太坊网络的基本原理。
- en: In the next section, other applications of the blockchain technology in government,
    finance, and health will be discussed.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，将讨论区块链技术在政府、金融和卫生等领域的其他应用。
- en: Government
  id: totrans-184
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 政府
- en: There are various applications of blockchain being researched currently that
    can support government functions and take the current model of e-government to
    the next level. First, in this section, some background for e-government will
    be provided, and then a few use cases such as e-voting, homeland security (border
    control), and electronic IDs (citizen ID cards) will be discussed.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 目前正在研究区块链的各种应用，可以支持政府职能，并将当前的电子政府模式提升到一个新的水平。首先，在本节中，将提供一些电子政府的背景信息，然后将讨论一些用例，如电子投票、国土安全（边境控制）和电子身份证（公民身份证）等。
- en: Government or electronic government is a paradigm where information and communication
    technology are used to deliver public services to citizens. The concept is not
    new and has been implemented in various countries around the world, but with blockchain,
    a new avenue of exploration has opened up. Many governments are researching the
    possibility of using blockchain technology for managing and delivering public
    services including but not limited to identity cards, driving licenses, secure
    data sharing among various government departments and contract management. Transparency,
    auditability, and integrity are attributes of blockchain that can go a long way
    in effectively managing various government functions.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 政府或电子政府是一种利用信息和通信技术向公民提供公共服务的范例。这个概念并不新鲜，并已在世界各国实施，但是随着区块链的出现，一条新的探索途径已经打开。许多政府正在研究利用区块链技术管理和提供公共服务的可能性，包括但不限于身份证、驾驶证、各个政府部门之间的安全数据共享和合同管理。区块链的透明度、可审计性和完整性是可以有效管理各种政府职能的属性。
- en: Border control
  id: totrans-187
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 边境控制
- en: Automated border control systems have been in use for decades now to thwart
    illegal entry into countries and prevent terrorism and human trafficking.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 自动边境管制系统已经使用了几十年，以阻止非法入境并防止恐怖主义和人口贩卖。
- en: Machine-readable travel documents and specifically biometric passports have
    paved the way for automated border control; however current systems are limited
    to a certain extent and blockchain technology can provide solutions. A **Machine
    Readable Travel Document** (**MRTD**) standard is defined in document ICAO 9303
    ([https://www.icao.int/publications/pages/publication.aspx?docnum=9303](https://www.icao.int/publications/pages/publication.aspx?docnum=9303))
    by the **International Civil Aviation Organization** (**ICAO**) and has been implemented
    by many countries around the world.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 机读旅行证件，特别是生物识别护照，为自动边境管制铺平了道路；但是当前系统在某种程度上受到限制，区块链技术可以提供解决方案。**国际民航组织**（**ICAO**）在文件ICAO
    9303（[https://www.icao.int/publications/pages/publication.aspx?docnum=9303](https://www.icao.int/publications/pages/publication.aspx?docnum=9303)）中定义了**机读旅行证件**（**MRTD**）标准，并已被世界上许多国家实施。
- en: Each passport contains various security and identity attributes that can be
    used to identify the owner of the passport and also circumvent attempts at tampering
    with the passports. These include biometric features such as retina scan, fingerprints,
    facial recognition, and standard ICAO specified features including **Machine Readable
    Zone** (**MRZ**) and other text attributes that are visible on the first page
    of the passport.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 每个护照都包含各种安全和身份属性，可用于识别护照持有人，并且可以防止篡改护照的尝试。这些包括生物特征，如视网膜扫描、指纹、面部识别，以及标准的国际民航组织指定的特征，包括**机读区**（**MRZ**）和其他可在护照第一页看到的文本属性。
- en: One key issue with current border control systems is data sharing whereby the
    systems are controlled by a single entity and data is not readily shared among
    law enforcement agencies. This lack of the ability to share data makes it challenging
    to track suspected travel documents or individuals. Another issue is related to
    the immediate implementation of blacklisting of a travel document, for example,
    when there is an immediate need to track and control suspected travel documents.
    Currently, there is no mechanism available to blacklist or revoke a suspected
    passport immediately and broadcast it to the border control ports worldwide.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 当前边境管制系统的一个关键问题是数据共享，其中系统由单一实体控制，数据不会被立即共享给执法机构。这种无法共享数据的能力使得跟踪疑似旅行文件或个人变得具有挑战性。另一个问题与立即实施旅行文件黑名单相关，例如，当有必要立即跟踪和控制疑似旅行文件时。目前，没有可用的机制立即将疑似护照列入黑名单或撤销，并将其广播到全球边境管制口岸。
- en: Blockchain can provide a solution to this problem by maintaining a blacklist
    in a smart contract which can be updated as required and any changes will be immediately
    visible to all agencies and border control points thus enabling immediate control
    over the movement of a suspected travel document. It could be argued that traditional
    mechanisms like PKIs and peer-to-peer networks can also be used for this purpose,
    but they do not provide the benefits that a blockchain can provide. With blockchain,
    the whole system can be simplified without the requirement of complex networks
    and PKI setups which will also result in cost reduction. Moreover, blockchain
    based systems will provide cryptographically guaranteed immutability which helps
    with auditing and discourages any fraudulent activity.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链可以通过在智能合约中维护黑名单来解决这个问题，该黑名单可以根据需要进行更新，并且任何更改都将立即对所有机构和边境管制点可见，从而实现对疑似旅行文件移动的即时控制。可以说，传统的机制，如公钥基础设施（PKIs）和点对点网络，也可以用于此目的，但它们不能提供区块链可以提供的好处。使用区块链，整个系统可以简化，而不需要复杂的网络和PKI设置，这也将导致成本降低。此外，基于区块链的系统将提供加密保证的不可变性，有助于审计并遏制任何欺诈行为。
- en: The full database of all travel documents perhaps cannot be stored on the blockchain
    currently due to scalability issues, but a backend distributed database such as
    BigchainDB, IPFS, or Swarm can be used for that purpose. In this case, a hash
    of the travel document with the biometric ID of an individual can be stored in
    a simple smart contract, and a hash of the document can then be used to refer
    to the detailed data available on the distributed filesystem such as IPFS. This
    way, when a travel document is blacklisted anywhere on the network, that information
    will be available immediately with the cryptographic guarantee of its authenticity
    and integrity throughout the distributed ledger. This functionality can also provide
    adequate support in anti-terrorism activities, thus playing a vital role in the
    homeland security function of a government.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 由于可扩展性问题，目前可能无法将所有旅行文件的完整数据库存储在区块链上，但可以使用后端分布式数据库，如 BigchainDB、IPFS 或 Swarm。在这种情况下，可以在简单的智能合约中存储一个旅行文件的哈希，其中包含个人的生物特征
    ID 的哈希，然后可以使用文件系统（如 IPFS）中可用的详细数据的文件哈希来引用文档的哈希。这样，当网络中的任何地方将旅行文件列入黑名单时，该信息将立即可用，并具有整个分布式分类帐的真实性和完整性的密码保证。这种功能也可以在反恐活动中提供足够的支持，从而在政府的国土安全职能中发挥重要作用。
- en: A simple contract in Solidity can have an array defined for storing identities
    and associated biometric records. This array can be used to store the identifying
    information about a passport. The identity can be a hash of MRZ of the passport
    or travel document concatenated with the biometric record from the RFID chip.
    A simple Boolean field can be used to identify blacklisted passports. Once this
    initial check passes, further detailed biometric verification can be performed
    by traditional systems and eventually when a decision is made regarding the entry
    of the passport holder that decision can be propagated back to the blockchain,
    thus enabling all participants on the network to immediately share the outcome
    of the decision.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: Solidity 中的一个简单合约可以定义一个用于存储身份和相关生物识别记录的数组。这个数组可以用来存储关于护照的识别信息。身份可以是护照或旅行文件的
    MRZ 的哈希，与 RFID 芯片的生物识别记录连接起来。一个简单的布尔字段可以用来识别被列入黑名单的护照。一旦这个初始检查通过，传统系统可以执行进一步详细的生物识别验证，最终当对护照持有人的入境决定做出时，该决定可以传播回区块链，从而使网络上的所有参与者可以立即分享决定的结果。
- en: A high-level approach to building a blockchain-based border control system can
    be visualized as shown in the following diagram. In this scenario, the passport
    is presented for scanning to an RFID and page scanner which reads the data page
    and extracts machine-readable information along with a hash of the biometric data
    stored in the RFID chip. At this stage, a live photo and retina scan of the passport
    holder is also taken. This information is then passed on to the blockchain where
    a smart contract is responsible for verifying the legitimacy of the travel document
    by first checking its list of blacklisted passports and then requesting more data
    from the backend IPFS database for comparison. Note that the biometric data such
    as photo or retina scan is not stored on the blockchain, instead only a reference
    to this data in the backend (IPFS or BigchainDB) is stored in the blockchain.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 建立基于区块链的边境控制系统的高级方法可以可视化如下图所示。在这种情况下，护照被提供给 RFID 和页面扫描仪进行扫描，后者读取数据页面并提取机器可读信息以及存储在
    RFID 芯片中的生物识别数据的哈希值。在这个阶段，还会拍摄护照持有者的实时照片和视网膜扫描。然后，将此信息传递给区块链，其中一个智能合约负责通过首先检查其黑名单护照列表来验证旅行文件的合法性，然后从后端
    IPFS 数据库请求更多数据进行比较。请注意，诸如照片或视网膜扫描之类的生物识别数据不存储在区块链上，而是只在后端（IPFS 或 BigchainDB）存储对此数据的引用。
- en: If the data from the presented passport matches with what is held in the IPFS
    as files or in BigchainDB and also pass the smart contract logical check, then
    the border gate can be opened.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 如果所呈现的护照数据与 IPFS 中的文件或 BigchainDB 中持有的数据匹配，并且通过智能合约的逻辑检查，则可以打开边境闸门。
- en: '![](img/b30e46cd-22d0-4dab-a1c2-93a6bb6e24e0.png)'
  id: totrans-197
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b30e46cd-22d0-4dab-a1c2-93a6bb6e24e0.png)'
- en: Automated border control using blockchain
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 使用区块链的自动边境控制
- en: After verification, this information is propagated throughout the blockchain
    and is instantly available to all participants on the border control blockchain.
    These participants can be a worldwide consortium of homeland security departments
    of various nations.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 经过验证，此信息在整个区块链上传播，并立即对边境控制区块链上的所有参与者可用。这些参与者可以是各国国土安全部门的全球联盟。
- en: Voting
  id: totrans-200
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 投票
- en: Voting in any government is a key function and allows citizens to participate
    in the democratic election process. While voting has evolved into a much more
    mature and secure process, it still has limitations that need to be addressed
    to achieve a desired level of maturity. Usually, the limitations in current voting
    systems revolve around fraud, weaknesses in operational processes, and especially
    transparency. Over the years, secure voting mechanisms (machines) have been built
    which make use of specialized voting machines that promised security and privacy,
    but they still had vulnerabilities that could be exploited to subvert the security
    mechanisms of those machines. These vulnerabilities can lead to serious implications
    for the whole voting process and can result in mistrust in the government by the
    public.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何政府中投票是一个关键功能，允许公民参与民主选举过程。尽管投票已经发展成为一个更加成熟和安全的过程，但它仍然存在需要解决的限制以达到期望的成熟水平。通常，当前投票系统的限制围绕欺诈、运营流程的弱点以及尤其是透明度展开。多年来，已经建立了安全投票机制（机器），使用了承诺安全和隐私的专用投票机，但它们仍然存在可以被利用来颠覆这些机器安全机制的漏洞。这些漏洞可能对整个投票过程产生严重影响，并导致公众对政府的不信任。
- en: Blockchain-based voting systems can resolve these issues by introducing end-to-end
    security and transparency in the process. Security is provided in the form of
    integrity and authenticity of votes by using public key cryptography which comes
    as standard in a blockchain. Moreover, immutability guaranteed by blockchain ensures
    that votes cast once cannot be cast again. This can be achieved through a combination
    of biometric features and a smart contract maintaining a list of votes already
    cast. For example, a smart contract can maintain a list of already casted votes
    with the biometric ID (for example a fingerprint) and can use that to detect and
    prevent double casting. Secondly, **Zero-Knowledge Proofs** (**ZKPs**) can also
    be used on the blockchain to protect voters' privacy on the blockchain.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 基于区块链的投票系统可以通过引入端到端的安全性和透明度来解决这些问题。安全性以公钥加密的形式提供，这是区块链的标准。此外，区块链保证的不可变性确保了一旦投票就不能再次投票。这可以通过使用生物特征和智能合约维护已经投票列表来实现。例如，智能合约可以维护一个已经投票的列表，其中包含生物特征ID（例如指纹），并可以使用该列表来检测和阻止重复投票。其次，**零知识证明**（**ZKPs**）也可以在区块链上用于保护选民的隐私。
- en: Some companies are already providing such services, one example is [https://polys.me/blockchain/online-voting-system](https://polys.me/blockchain/online-voting-system).
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 一些公司已经提供了这样的服务，一个例子是 [https://polys.me/blockchain/online-voting-system](https://polys.me/blockchain/online-voting-system)。
- en: Recently, presidential elections were held in Sierra Leone using blockchain
    technology, making it the first country to use blockchain technology for elections
    ([https://www.coindesk.com/sierra-leone-secretly-holds-first-blockchain-powered-presidential-vote/](https://www.coindesk.com/sierra-leone-secretly-holds-first-blockchain-powered-presidential-vote/)).
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 最近，塞拉利昂通过区块链技术举行了总统选举，使其成为第一个使用区块链技术进行选举的国家（[https://www.coindesk.com/sierra-leone-secretly-holds-first-blockchain-powered-presidential-vote/](https://www.coindesk.com/sierra-leone-secretly-holds-first-blockchain-powered-presidential-vote/)）。
- en: Citizen identification (ID cards)
  id: totrans-205
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 公民身份识别（身份证）
- en: Electronic IDs or national ID cards are issued by various countries around the
    world at present. These cards are secure and possess many security features that
    thwart duplication or tampering attempts. However, with the advent of blockchain
    technology, several improvements can be made to this process.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 当前，各国发行电子身份证或国民身份证。这些卡片安全，并具有许多安全功能，可防止复制或篡改企图。然而，随着区块链技术的出现，可以对此过程进行多项改进。
- en: Digital identity is not only limited to just government-issued ID cards; it
    is a concept that applies to online social networks and forums too. There can
    be multiple identities used for different purposes. A blockchain-based online
    digital identity allows control over personal information sharing. Users can see
    who used their data and for what purpose and can control access to it. This is
    not possible with the current infrastructures which are centrally controlled.
    The key benefit is that a single identity issued by the government can be used
    easily and in a transparent manner for multiple services via a single government
    blockchain. In this case, the blockchain serves as a platform where a government
    is providing various services such as pensions, taxation, or benefits and a single
    ID is being used for accessing all these services. Blockchain, in this case, provides
    a permanent record of every change and transaction made by a digital ID, thus
    ensuring integrity and transparency of the system. Also, citizens can notarize
    birth certificates, marriages, deeds, and many other documents on the blockchain
    tied with their digital ID as a proof of existence.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 数字身份不仅限于政府发行的身份证，它也适用于在线社交网络和论坛。可以为不同目的使用多个身份。基于区块链的在线数字身份允许控制个人信息的分享。用户可以看到谁使用了他们的数据以及出于什么目的，并可以控制对其访问。这是目前由中心控制的基础设施无法实现的。关键好处在于政府发放的单一身份可以通过单一政府区块链轻松、透明地用于多项服务。在这种情况下，区块链充当平台，政府为多项服务，如养老金、税收或福利，提供了永久的记录。通过数字身份进行的每一次更改和交易都有永久记录，从而确保了系统的完整性和透明性。此外，公民可以在区块链上公证出生证明、结婚证书、契约等许多其他文件，并将其与数字身份关联作为存在的证明。
- en: Currently, there are successful implementations of identity schemes in various
    countries that work well, and there is an argument that perhaps blockchain is
    not required in identity management systems. Although there are several benefits
    such as privacy and control over the usage of identity information due to the
    current immaturity of blockchain technology, perhaps it is not ready for use in
    real-world identity systems. However, research is being carried out by various
    governments to explore the usage of blockchain for identity management.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，各个国家都有成功实施的身份计划，运作良好，有人认为也许身份管理系统并不需要区块链。尽管目前区块链技术还不够成熟，但可能并未准备好用于现实世界的身份系统。然而，各国政府正在进行研究，探索区块链在身份管理方面的应用。
- en: Moreover, laws such as the right to be forgotten can be quite difficult to incorporate
    into blockchain due to its immutable nature.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，像被遗忘权这样的法律可能因为区块链的不可变特性而很难整合。
- en: Miscellaneous
  id: totrans-210
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 其他杂项
- en: Other government functions where blockchain technology can be implemented to
    improve cost and efficiency include the collection of taxes, benefits management
    and disbursement, land ownership record management, life event registration (marriages,
    births), motor vehicle registration, and licenses. This is not an exhaustive list,
    and over time many functions and processes of a government can be adapted to a
    blockchain-based model. The key benefits of blockchain such as immutability, transparency,
    and decentralization can help to bring improvements to most of the traditional
    government systems.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链技术可以用于改善各种政府功能的成本和效率，包括税收征收、福利管理和发放、土地所有权记录管理、生活事件登记（婚姻、出生）、机动车登记和许可证等。这并不是一个详尽的清单，随着时间的推移，政府的许多功能和流程都可以适应基于区块链的模式。区块链的关键好处，比如不可变性、透明性和去中心化，有助于改善大多数传统政府系统。
- en: Health
  id: totrans-212
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 健康
- en: The health industry has also been identified as another major industry that
    can benefit by adapting blockchain technology. Blockchain provides an immutable,
    auditable, and transparent system that traditional peer-to-peer networks cannot.
    Also, blockchain provides a cost-effective, simpler infrastructure as compared
    to traditional complex PKI networks. In healthcare, major issues such as privacy
    compromises, data breaches, high costs, and fraud can arise from lack of interoperability,
    overly complex processes, transparency, auditability, and control. Another burning
    issue is counterfeit medicines; especially in developing countries, this is a
    major cause of concern.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 医疗行业也被确定为另一个可以通过采用区块链技术获益的主要行业。区块链提供了一个传统点对点网络无法提供的不可变、可审计和透明的系统。此外，与传统的复杂 PKI
    网络相比，区块链提供了一种成本效益高、基础设施更简单的基础设施。在医疗保健领域，主要问题包括隐私泄露、数据泄露、高成本和欺诈，这些问题都是由于互操作性、过度复杂的流程、透明度、可审计性和控制不足而引起的。另一个迫切的问题是假药；尤其是在发展中国家，这是一个主要的关注点。
- en: With the adaptability of blockchain in the health sector, several benefits can
    be realized, ranging from cost saving, increased trust, faster processing of claims,
    high availability, no operational errors due to complexity in the operational
    procedures, and preventing the distribution of counterfeit medicines.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 随着区块链在医疗领域的适应性，可以实现多种好处，从节约成本、增加信任、理赔处理速度更快、高可用性、由于操作程序复杂性而导致的没有操作错误，到预防假药的分发。
- en: From another angle, blockchains that are providing a digital currency as an
    incentive for mining can be used to provide processing power to solve scientific
    problems that can help to find cures for certain diseases. Examples include FoldingCoin,
    which rewards its miners with FLDC tokens for sharing their computer's processing
    power for solving scientific problems that require unusually large calculations.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 从另一个角度来看，提供数字货币作为挖矿激励的区块链可以用来提供处理能力以解决可以帮助找到某些疾病治愈方法的科学问题。例如，FoldingCoin 就是一个例子，它通过奖励其挖矿者
    FLDC 代币来共享其计算机的处理能力，以解决需要异常大计算量的科学问题。
- en: FoldingCoin is available at [http://foldingcoin.net/](http://foldingcoin.net/).
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: FoldingCoin 的网址为 [http://foldingcoin.net/](http://foldingcoin.net/)。
- en: Another similar project is called CureCoin which is available at [https://www.curecoin.net/](https://www.curecoin.net/).
    It is yet to be seen that how successful these projects will be in achieving their
    goals but the idea is very promising.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个类似的项目叫做 CureCoin，网址为 [https://www.curecoin.net/](https://www.curecoin.net/)。目前还不清楚这些项目在实现其目标方面将会有多成功，但这个想法非常有前途。
- en: Finance
  id: totrans-218
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 金融
- en: Blockchain has many applications in the finance industry. Blockchain in finance
    is the hottest topic in the industry currently, and major banks and financial
    organizations are researching to find ways to adapt blockchain technology primarily
    due to its highly-desired potential to cost-save.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链在金融行业有许多应用。区块链在金融领域是目前行业内最热门的话题，主要银行和金融组织正在研究如何适应区块链技术，主要是因为它具有极具潜力的节省成本的潜力。
- en: Insurance
  id: totrans-220
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保险
- en: In the insurance industry, blockchain technology can help to stop fraudulent
    claims, increase the speed of claim processing, and enable transparency. Imagine
    a shared ledger between all insurers that can provide a quick and efficient mechanism
    for handling intercompany claims. Also, with the convergence of IoT and blockchain,
    an ecosystem of smart devices can be imagined where all these things can negotiate
    and manage their insurance policies controlled by smart contracts on the blockchain.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 在保险行业，区块链技术可以帮助阻止欺诈性索赔，提高理赔处理速度，并实现透明度。想象一下，所有保险公司之间共享的账本可以提供一个快速高效的机制来处理公司间的索赔。此外，随着物联网和区块链的融合，可以想象到一个智能设备生态系统，在这个生态系统中，所有这些设备可以通过区块链上的智能合约进行协商和管理其保险政策。
- en: Blockchain can reduce the overall cost and effort required to process claims.
    Claims can be automatically verified and paid via smart contracts and the associated
    identity of the insurance policyholder. For example, a smart contract with the
    help of Oracle and possibly IoT can make sure that when the accident occurred,
    it can record related telemetry data and based on this information can release
    payment. It can also withhold payment if the smart contract after evaluating conditions
    of payment concludes that payment should not be released. For example, in a scenario
    where an authorized workshop did not repair the vehicle or was used outside a
    designated area and so on and so forth. There can be many conditions that a smart
    contract can evaluate to process claims and choice of these rules depend on the
    insurer, but the general idea is that smart contracts in combination with IoT
    and Oracle can automate the entire vehicle insurance industry.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链可以减少处理索赔所需的总体成本和工作量。索赔可以通过智能合约自动验证和支付，以及与保险投保人的身份相关联。例如，借助 Oracle 和可能的物联网，智能合约可以确保在发生事故时记录相关遥测数据，并根据这些信息释放付款。如果智能合约在评估付款条件后得出结论认为不应释放付款，则还可以暂停付款。例如，在授权修车厂未修复车辆或在指定区域外使用等情况下等等。智能合约可以评估多种条件来处理索赔，选择这些规则取决于保险人，但总体想法是智能合约与物联网和
    Oracle 结合起来可以自动化整个车辆保险行业。
- en: Several start-ups such as Dynamis have proposed smart contract-based peer-to-peer
    insurance platforms that run on Ethereum blockchain. This is initially proposed
    to be used for unemployment insurance and does not require underwriters in the
    model.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 几家初创公司，如 Dynamis，已提出基于以太坊区块链运行的智能合约的点对点保险平台。最初，这被建议用于失业保险，并不需要在模型中有承保人。
- en: It is available at [http://dynamisapp.com/](http://dynamisapp.com/).
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 它可在 [http://dynamisapp.com/](http://dynamisapp.com/) 上获取。
- en: Post-trade settlement
  id: totrans-225
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 交易后结算
- en: This is the most sought-after application of blockchain technology. Currently,
    many financial institutions are exploring the possibility of using blockchain
    technology to simplify, automate, and speed up the costly and time-consuming post-trade
    settlement process.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 这是区块链技术最受追捧的应用。目前，许多金融机构正在探索使用区块链技术简化、自动化和加速昂贵而耗时的交易后结算流程的可能性。
- en: 'To understand the problem better, the trade life cycle is described briefly.
    A trade life cycle contains three steps: execution, clearing, and settlement.
    Execution is concerned with the commitment of trading between two parties and
    can be entered into the system via front office order management terminals or
    exchanges. Clearing is the next step whereby the trade is matched between the
    seller and buyer based on certain attributes such as price and quantity. At this
    stage, accounts that are involved in payment are also identified. Finally, the
    settlement is where eventually the security is exchanged for payment between the
    buyer and seller.'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地理解问题，简要描述了交易生命周期。交易生命周期包括三个步骤：执行、清算和结算。执行涉及两个当事方之间的交易承诺，并可通过前台订单管理终端或交易所输入到系统中。清算是下一步，根据价格和数量等某些属性，将交易匹配给卖方和买方。在这个阶段，还会确定涉及付款的帐户。最后，结算是买方和卖方最终交换证券以换取付款的地方。
- en: In the traditional trade life cycle model, a central clearinghouse is required
    to facilitate trading between parties which bears the credit risk of both parties.
    The current scheme is somewhat complicated, whereby a seller and buyer have to
    take a complicated route to trade with each other. This comprises of various firms,
    brokers, clearing houses, and custodians but with blockchain, a single distributed
    ledger with appropriate smart contracts can simplify this whole process and can
    enable buyers and sellers to talk directly to each other.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 在传统的交易生命周期模型中，需要中央清算所来促进各方之间的交易，它承担了双方的信用风险。当前方案有些复杂，卖方和买方必须采取复杂的路径来进行交易。这包括各种公司、经纪人、结算所和托管人，但通过区块链，一个具有适当智能合约的单一分布式账本可以简化整个过程，并使买卖双方可以直接交流。
- en: Notably, the post-trade settlement process usually takes two to three days and
    has a dependency on central clearing houses and reconciliation systems. With the
    shared ledger approach, all participants on the blockchain can immediately see
    a single version of truth regarding the state of the trade. Moreover, the peer-to-peer
    settlement is possible, which results in the reduction of complexity, cost, risk,
    and the time it takes to settle the trade. Finally, intermediaries can be eliminated
    by making use of appropriate smart contracts on the blockchain. Also, regulators
    can also see view the blockchain for auditing and regulatory requirements.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，交易后结算流程通常需要两到三天，并且依赖于中央清算机构和对账系统。通过共享账本的方法，区块链上的所有参与者可以立即看到有关交易状态的一个真实版本。此外，点对点结算是可能的，这将减少交易结算所需的复杂性、成本、风险和时间。最后，通过在区块链上使用适当的智能合同，可以消除中间人。此外，监管机构还可以查看区块链以进行审计和监管要求。
- en: This can be very useful in implementing MIFID-II regulation requirements ([https://www.fca.org.uk/markets/mifid-ii](https://www.fca.org.uk/markets/mifid-ii)).
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 这在实施MIFID-II监管要求时可能非常有用（[https://www.fca.org.uk/markets/mifid-ii](https://www.fca.org.uk/markets/mifid-ii)）。
- en: Financial crime prevention
  id: totrans-231
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 金融犯罪预防
- en: '**Know Your Customer** (**KYC**), and **Anti Money Laundering** (**AML**) are
    the key enablers for the prevention of financial crime. In the case of KYC, currently,
    each institution maintains their own copy of customer data and performs verification
    via centralized data providers. This can be a time-consuming process and can result
    in delays in onboarding a new client.'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: '**了解您的客户**（**KYC**）和**反洗钱**（**AML**）是防范金融犯罪的关键因素。在KYC的情况下，目前，每个机构维护着自己的客户数据副本，并通过中心化数据提供商进行验证。这可能是一个耗时的过程，并可能导致新客户入职过程延迟。'
- en: Blockchain can provide a solution to this problem by securely sharing a distributed
    ledger between all financial institutions that contain verified and true identities
    of customers. This distributed ledger can only be updated by consensus between
    the participants thus providing transparency and auditability. This can not only
    reduce costs but also enable meeting regulatory and compliance requirements in
    a better and consistent manner.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链可以通过在所有金融机构之间安全地共享包含客户已验证和真实身份的分布式分类账来解决这一问题。只有通过参与者之间的共识才能更新这个分布式账本，从而提供透明性和可审计性。这不仅可以降低成本，还可以更好地、更一致地满足监管和合规要求。
- en: In the case of AML, due to the immutable, shared, and transparent nature of
    blockchain, regulators, can easily be granted access to a private blockchain where
    they can fetch data for relevant regulatory reporting. This will also result in
    reducing complexity and costs related to the current regulatory reporting paradigm
    where data is fetched from various legacy and disparate systems and aggregated
    and formatted together for reporting purposes. Blockchain can provide a single
    shared view of all financial transactions in the system that are cryptographically
    secure, authentic, and auditable, thus reducing the costs and complexity associated
    with the currently employed regulatory reporting methods.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 在AML的情况下，由于区块链的不可变、共享和透明特性，监管机构可以轻松获准访问私有区块链，从中获取相关监管报告的数据。这还将减少与从各种传统和不同系统获取数据并将其聚合和格式化用于报告目的相关的成本和复杂性。区块链可以提供加密安全、真实验证、可审计的系统中所有金融交易的单一共享视图，从而降低当前采用的监管报告方法所带来的成本和复杂性。
- en: Media
  id: totrans-235
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 媒体
- en: Critical issues in the media industry revolve around content distribution, rights
    management, and royalty payments to artists. For example, digital music can be
    copied many times without any restriction and any attempts to apply copy protection
    have been hacked in some way or other. There is no control over the distribution
    of the content that a musician or songwriter produces; it can be copied as many
    times as needed without any restriction and consequently has an impact on the
    royalty payments. Also, payments are not always guaranteed and are based on traditional
    airtime figures. All these issues revolving around copy protection and royalty
    payments can be resolved by connecting consumers, artists, and all players in
    the industry, allowing transparency and control over the process. Blockchain can
    provide a network where digital music is cryptographically guaranteed to be owned
    only by the consumers who pay for it. This payment mechanism is controlled by
    a smart contract instead of a centralized media agency or authority. The payments
    will be automatically made based on the logic embedded within the smart contract
    and number of downloads.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 媒体行业的关键问题围绕着内容分发、权利管理和向艺术家支付版税。例如，数字音乐可以无限制地复制，任何尝试应用复制保护的努力都以某种方式被破解。没有对音乐人或词曲作者制作的内容的分发进行控制；可以无限制地复制所需次数，并且对版税支付产生影响。此外，支付并不总是有保证的，并且是基于传统的播放时长数据。围绕复制保护和版税支付的所有这些问题可以通过将消费者、艺术家和行业中的所有参与者连接起来解决，从而实现透明和对流程的控制。区块链可以提供一个网络，数字音乐在密码学上被保证只由付费的消费者拥有。这种支付机制由智能合约而不是集中式媒体机构或管理机构控制。支付将根据嵌入在智能合约中的逻辑和下载次数自动进行。
- en: A recent example of such an initiative is Musicoin ([https://musicoin.org](https://musicoin.org)).
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 最近的一个这样的倡议的例子是Musicoin ([https://musicoin.org](https://musicoin.org))。
- en: Moreover, illegal copying of digital music files can be stopped altogether because
    everything is recorded and owned immutably in a transparent manner on the blockchain.
    A music file, for example, can be stored with owner information and timestamp
    which can be traced throughout the blockchain network. Furthermore, the consumers
    who own a legal copy of some content are cryptographically tied to the content
    they have, and it cannot be moved to another owner unless permissioned by the
    owner. Copyrights and transfers can be managed easily via blockchain once all
    digital content is immutably recorded on the blockchain. Smart contracts can then
    control the distribution and payment to all concerned parties.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，数字音乐文件的非法复制可以完全停止，因为一切都以透明的方式记录和不可变地拥有在区块链上。例如，音乐文件可以存储有所有者信息和时间戳，可以在整个区块链网络中进行跟踪。此外，拥有某些内容的合法副本的消费者与其所拥有的内容在密码学上是绑定的，除非得到所有者的许可，否则不能转移到另一个所有者名下。一旦所有数字内容都被不可变地记录在区块链上，版权和转移就可以通过区块链轻松管理。智能合约可以控制对所有相关方的分发和支付。
- en: Summary
  id: totrans-239
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: There are many applications of blockchain technology, and as discussed in the
    chapter they can be implemented in various industries to bring about multiple
    benefits to existing solutions. In this chapter, five main industries that can
    benefit from blockchain have been discussed. First IoT was discussed, which is
    another revolutionary technology on its own; and by combining it with the blockchain,
    several fundamental limitations can be addressed, which brings about tremendous
    benefits to the IoT industry. More focus has been given to IoT as it is the most
    prominent and most ready candidate for adapting blockchain technology.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链技术有许多应用，正如在本章中讨论的那样，它们可以在各个行业中实施，为现有解决方案带来多重好处。本章讨论了可以从区块链中受益的五个主要行业。首先讨论了物联网（IoT），这是另一种革命性的技术；通过将其与区块链相结合，可以解决一些基本限制，为物联网行业带来巨大的好处。物联网受到更多关注，因为它是最突出、最准备好的适应区块链技术的候选者。
- en: Already, practical use cases and platforms have emerged in the form of **Platform
    as a Service** (**PaaS**) for blockchain-based IoT such as the IBM Watson IoT
    blockchain. IBM Blue Horizon is also now available for experimentation, which
    is a decentralized blockchain-based IoT network. Second, applications in the government
    sector were discussed whereby various government processes such as homeland security,
    identification cards, and benefit disbursements can be made transparent, secure,
    and more robust.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 已经出现了实际的使用案例和平台，以**平台即服务**（**PaaS**）的形式出现，用于基于区块链的物联网，例如 IBM Watson IoT 区块链。IBM
    Blue Horizon 现在也可供实验使用，这是一个分散的基于区块链的物联网网络。其次，讨论了政府部门的应用，各种政府流程，如国土安全、身份证和福利发放可以变得更加透明、安全和强大。
- en: Furthermore, issues in the finance sector were discussed with possible solutions
    that blockchain technology could provide. Although the finance sector is exploring
    the possibilities of using blockchain with high energy and enthusiasm, it is still
    far away from production-ready blockchain-based systems. Finally, some aspects
    of the health sector and music industry were also discussed. All these use cases
    and much more in the industry stand on pillars provided by core attributes of
    blockchain technology such as decentralization, transparency, reliability, and
    security. However, certain challenges need to be addressed before blockchain technology
    can be adapted fully; these will be discussed in the next chapter.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，还讨论了金融领域的问题，以及区块链技术可能提供的解决方案。尽管金融行业正在充满热情和活力地探索使用区块链的可能性，但离生产就绪的基于区块链的系统还有很长的路要走。最后，还讨论了健康领域和音乐产业的某些方面。所有这些用例以及行业中更多的内容都依赖于区块链技术的核心属性，例如去中心化、透明度、可靠性和安全性。然而，在区块链技术完全适应之前，需要解决一些挑战；这些将在下一章中讨论。
